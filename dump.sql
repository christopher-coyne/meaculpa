--
-- PostgreSQL database dump
--

-- Dumped from database version 12.8
-- Dumped by pg_dump version 14.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: course_in_dept; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.course_in_dept (
    course_id text NOT NULL,
    dept_id text NOT NULL
);


ALTER TABLE public.course_in_dept OWNER TO postgres;

--
-- Name: courses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.courses (
    course_id text NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.courses OWNER TO postgres;

--
-- Name: departments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.departments (
    dept_id text NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.departments OWNER TO postgres;

--
-- Name: prof_teaches_in; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.prof_teaches_in (
    dept_id text NOT NULL,
    prof_id text NOT NULL
);


ALTER TABLE public.prof_teaches_in OWNER TO postgres;

--
-- Name: professors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.professors (
    prof_id text NOT NULL,
    name text NOT NULL,
    nugget text NOT NULL
);


ALTER TABLE public.professors OWNER TO postgres;

--
-- Name: reacts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reacts (
    email text NOT NULL,
    review_id text NOT NULL,
    reaction text NOT NULL
);


ALTER TABLE public.reacts OWNER TO postgres;

--
-- Name: reviews; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reviews (
    review_id text NOT NULL,
    date text NOT NULL,
    content text NOT NULL,
    workload text NOT NULL,
    agree integer NOT NULL,
    disagree integer NOT NULL,
    prof_id text NOT NULL,
    course_id text NOT NULL
);


ALTER TABLE public.reviews OWNER TO postgres;

--
-- Name: teaches_course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.teaches_course (
    prof_id text NOT NULL,
    course_id text NOT NULL
);


ALTER TABLE public.teaches_course OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    email text NOT NULL,
    name text
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Data for Name: course_in_dept; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.course_in_dept (course_id, dept_id) FROM stdin;
\.


--
-- Data for Name: courses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.courses (course_id, name) FROM stdin;
4	data structures in java
22	introduction to computer programming (fortran)
26	artificial intelligence
27	fundamentals of computer organization
234	computer science theory: computability - models - computation
238	digital logic
256	combinatorial theory
397	discrete mathematics
462	introduction to computational complexity
605	introduction to software engineering
639	sequential logic circuit
663	user interface design
664	introduction to databases
861	scientific computation i
885	programming languages: c++
995	honors introduction to computer science (java)
1138	introduction to computers
1335	midi music production
1616	advanced software engineering
1622	data structures and algorithms
1654	java
1748	programming languages: c#
1921	machine learning
1967	computational genomics
2006	honors data structures and algorithms
2008	data structures in c
2287	introduction to computational learning theory
2384	operating systems i
2386	computer vision
2387	programming & problem solving
2401	network security
2403	computational aspects of robotics
2485	advanced internet services
2598	intro to computer science- programming in c
2634	computer graphics
2746	advanced topics in image-based rendering
2767	topics in computer science: computational aspects of geometric design
2830	information theory
2867	advanced cryptography
2869	web-enhanced information management
2906	object-oriented programming and design in java
2943	introduction to biomedical informatics
2970	introduction to cryptography
3105	programming languages and translators
3807	intro to computer science- programming in java
3992	computational linear algebra
4027	programming languages: java
4079	analysis of algorithms i
4251	fundamentals of computer systems
4758	advanced programming
4899	topics in computer science: video game design and production
4900	compilers
4901	graph theory
4902	computer networks
4903	natural language processing
4907	security architecture & engineering
4956	advanced database systems
4957	intro to computer science- programming in matlab
5002	programming languages: matlab
5041	spoken language processing
5150	biometrics
5167	topics in computer science: voip security
5366	c++prog for derviatives pricing
5392	computer architecture
5519	programming languages: python
5544	combinatorial theory
5638	programming languages: java scripting languages
5794	topics in computer science: machine translation
5890	topics in computer science: intro to the semantic web
5902	topics in computer science: machine learning for nlp
5922	introduction to quantum computing
6026	principles and practices of parallel programming
6038	advanced logic design
6079	intro to information science
6152	topics in computer science: computational approaches to emotional speech
6362	ruby on rails
6511	cloud computing
6676	computer animation
6706	introduction to computer applications in health care
6718	search engine technology
6719	topics in computer science: search engine technology
6732	introduction to computer science for engineers/applied scientists - python
6779	computer vision and machine learning for mobile platforms
6810	topics in computer science: social networks
6811	algorithms for data science
6815	numerical algorithms and complexity
6844	distributed systems fundamentals
6857	projects in computer science
6869	essential data structures
6879	language library design
6886	analysis of algorithms ii
6944	topics in computer science: storytelling with streaming data
6973	database system implementation
6996	advanced machine learning
7002	introduction to computer science in java
7022	cloud computing and big data
7062	malware reverse engineering
7068	computing in context
7097	principles of innovation and entrepreneurship
7099	topics in computer science: intro to social networks
7102	serverless cloud computing
7140	yuan jochen kang
7145	topics in computer science: advanced topics in computational complexity
7177	advanced algorithms
7200	deep learning
7201	intro to agile project management
7246	information theory in tcs
7247	topics in learning theory
7255	system on chip
7300	introduction to agile project management using scrum
7329	emerging scholars program
7330	applied machine learning
7406	internet technology, economics, and policy
7407	internet technology, economics, and policy
7415	security i
7450	honors data structures
7468	3d ui and augmented reality
7656	computational sound
7704	introduction to computational thinking and data science
7741	public interest technology
7765	introdction to quantum computing
NA	0
\.


--
-- Data for Name: departments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.departments (dept_id, name) FROM stdin;
7	computer science
\.


--
-- Data for Name: prof_teaches_in; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.prof_teaches_in (dept_id, prof_id) FROM stdin;
\.


--
-- Data for Name: professors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.professors (prof_id, name, nugget) FROM stdin;
37	peter allen	none
39	steven feiner	none
40	jonathan gross	silver
42	john kender	silver
44	michael mauel	silver
45	jason nieh	silver
46	steven nowick	none
47	ken ross	none
50	stephen unger	none
51	yechiam yemini	none
178	eugene galanter	none
350	henning schulzrinne	none
375	luis gravano	silver
515	adam cannon	silver
595	christina leslie	silver
802	philip gross	none
856	david sidorsky	none
1028	joseph traub	none
1261	james fei	none
1342	clifford stein	none
1442	alexandros biliris	none
1472	angelos keromytis	none
1474	gail kaiser	none
1586	terence pender	silver
1588	ravi ramamoorthi	none
1621	tal malkin	silver
1636	tony jebara	none
1637	stephen edwards	silver
1671	shlomo hershkop	none
1724	rocco servedio	gold
1749	henryk wozniakowski	none
1777	peter belhumeur	none
1812	shree nayar	silver
1891	alfred aho	none
1957	julia hirschberg	silver
1972	gregory whalen	none
2060	michael reed	silver
2089	vishal misra	none
2140	edward shortliffe	none
2142	kathleen mckeown	none
2427	daniel rubenstein	none
2480	eitan grinspun	silver
2508	alexander pasik	none
2550	jon feldman	none
2762	anargyros papageorgiou	silver
2911	matthew burnside	none
2941	mihalis yannakakis	silver
3184	knarig arabshian	none
3332	david elson	silver
3355	bernard yee	none
3366	steven bellovin	silver
3409	paul blaer	silver
3429	simha sethumadhavan	none
3448	erich nahum	none
3451	blake shaw	none
3453	salman baset	none
3509	jae lee	silver
4057	itshack pe&#x27;er	none
4205	german creamer	none
4206	bert huang	none
4207	ramana isukapalli	none
4210	gil zussman	silver
4212	luca carloni	none
4213	salvatore stolfo	none
4214	junfeng yang	none
4221	martha kim	none
4226	dragomir radev	none
4227	claire monteleoni	none
4996	maria chudnovsky	none
6653	donald ferguson	none
9471	david vawdrey	none
9496	john zhang	none
9497	vijay saraswat	none
10192	abishek madduri	none
10197	nizar habash	none
10198	sambit sahu	none
10722	mitchell morris	none
10725	swapneel sheth	none
10729	michael collins	silver
11132	ang cui	none
11572	daniel bauer	silver
11574	emily stolfo	none
11575	dawn strickland	silver
11579	augustin chaintreau	silver
11580	roxana geambasu	none
12599	apoorv agarwal	none
12619	seung choi	none
12727	jonathan voris	none
12932	xi chen	silver
12959	robert holliday	silver
13004	allison lewko	none
13070	eleni drinea	none
13076	ansaf salleb-aouissi	none
13116	daniel hsu	silver
13292	eugene wu	none
13298	jessica ouyang	none
13348	william reinisch	none
13463	tristan boutros	none
13496	nakul verma	silver
13519	omri weinstein	none
13549	lydia chilton	none
13610	timothy paine	none
13639	tony dear	silver
13703	christos papadimitriou	none
13791	baishakhi ray	none
13801	carl vondrick	none
13810	yassine benajiba	none
13953	brian smith	none
13968	mark santolucito	none
14008	jonathan reeve	none
14026	shuran song	none
14137	henry yuen	none
\.


--
-- Data for Name: reacts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reacts (email, review_id, reaction) FROM stdin;
\.


--
-- Data for Name: reviews; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reviews (review_id, date, content, workload, agree, disagree, prof_id, course_id) FROM stdin;
1019	April 11, 2001	Thank god they opened up an introductory computer science course for the non computer science major. If you're not planning on majoring in comp sci, I advise taking this introductory course as opposed to CS1007. At the beginning of the course I thought Prof. Leslie was the worst teacher on the face of the earth, but then I realized that Comp Sci is just the worst subject on the face of the earth and that she is actually a pretty good teacher. She clearly presents ideas that are very complicated to understand. Her lessons are very structured and she makes the material as simple to understand as it can possibly be. Don't be alarmed if your a bit confused for the first 2 or 3 weeks, because if you've had no comp sci background (much like I had none when taking this course) it takes a little while to get used to the concepts. Prof. Leslie is an excellent teacher, although she is a bit nervous up there (i.e.: she laughs a lot when she talks and she writes EVERYTHING she says on the board!!!!! (in other words, if she says, "It's sunny today" you better believe it'll be up on the blackboard")). She is also very approachable and extremely understanding. So besides needing to relax a little, she is a great teacher, and she made comp sci bareable for someone (aka: me) who HATES comp sci with a passion.	6 homeworks: 1 due every 2 weeks. (they are long, but doable, so start early) COUNTS AS 50% OF YOUR GRADE SO TAKE THE TIME TO DO THEM WELL!!!! One midterm: 15% of grade and the final: 35% of grade. Fair tests.	0	0	595	3807
1117	May 10, 2001	If you have a hard time to follow in his class don't waste you time going to Ross' office hour. He is going to tell you to do the odd exercises in the book. After he will wait for you to leave. He is not very helpful and he does not make the class interesting. Too bad that some of us have to take his class.	6 pretty easy homework but do not think that because you do well in your homework you will do well in your exams.	0	0	47	397
1486	December 04, 2001	I don't like the fact that he uses his own text book for the course. The book is too condensed. You MUST go to his lectures...a lot of things that are not really explained well in the text he likes to cover in class. Plus, he teaches too slow in the beginning, and then in the end of the sem. he rushes things... overall he's a good teacher though, kinda tough on grades.	decent amount.	0	0	50	238
1487	December 04, 2001	She 's really good, i like her alot. She put alot of effort into teaching... Perfect professor. In office hours, she always try to help you, really patience... A++ =]	crazy... that's a given.	0	0	595	1622
1529	December 09, 2001	Run don't walk away from the hell that is Computer Science!!!!!!! If you don't want to sleep, don't want to see friends at all, go ahead. Lots of work. Teacher unrealiable. If you insist don't take SoftE, you lucky people have a choice now.	Hell! A huge project, group work, tons of reading which no one ever did. Not too much fun.	0	2	802	605
1631	December 18, 2001	After taking twenty plus computer science classes, Prof. Unger is definitely one of the better lecturers in the CS department. If you have taken digital logic CS3823, this class won't be hard. First of all, the class meets once a week, and they are only 2 hrs long instead of the usual 3 hrs long classes. The course is basically a continuation of digital logic. He only teaches one chapter from the book that he wrote. Completing the homework sets will definitely prepare you for the tests. This class is relatively easier than digital logic and the grading is slightly better. Besides, it's a 6000 level class!	Every week there is a problem set. One mid-term and a final.	0	0	50	639
1681	December 30, 2001	Sidorsky is funny as hell although he doesn't look it. In Social and Political Philosophy he told the class about his argument with an officer who was trying to give me a ticket for parking at an unauthorized time. I didn't think it was true at first, but then I saw him debating with a RANDOM PERSON outside Tom's. I didn't see how it begin but I stuck around a bit and listened. From what I gathered that guy said something about some politician and (unfortunately for him) Sidorsky happened to have heard him. Not surprisingly Sidorsky was much smarter and more articulant than the random guy and the guy was like apologizing and saying stuff like "okay, okay, okay, sir, I'm sorry." Also Sidorsky is ALWAYS at Tom's.	NA	2	1	856	NA
1704	January 03, 2002	This Prof. loves to give exams that include much material never seen in the hws. DONT listen to the TA's when they tell you that if you understand the hws you will do fine on the exams. Also, the Prof. doesn't really curve or if he does he curves to a C, which is the average grade in the class. Avoid this class if you can!	homeworks are assigned every week, some of it is challanging, but no more than 4 to 5 hours each.	1	0	50	238
1706	January 03, 2002	Why does this Prof. even bother to teach, it's so obvious that he hates it and has contempt for students. There is too much reading for the class, as in addition to the textbook (not bad) he assigns copious amounts of PHD disertations that are total BS. The subject is interesting, but he berates his TAs and they then grade the projects harshly.	3 2 week programming assignment, 1 3 week final programming projcet, midterm,final	1	0	39	663
1707	January 03, 2002	Really nice Prof. Really good in office hours if you need a concept explained further. Interesting first project, second project in C++ is boring, takes it right out of textbook. The material is reasonably mixed with real world examples and theory. Grading is fair, although midterm and final are overly weighted towards theory.	5 homeworks 1 group project in Java 1 individual project in C++, midterm, final	1	1	375	664
1708	January 03, 2002	Interesting material but presented in a very confusing manner. Will someone explain to Feiner how to use Visio and Powerpoint so that no other student has to put up with his badly drawn overhead slides, he does also teach User Interface Design. Very confusing and extremly poorly written programming assignments that the majority of students have no idea how to tackle. TAs are swamped with questions. Makes disparaging remarks in class about those who do poorly in midterm.	3 programming assignments (poorly written) 1 final project (very difficult and is based on one's perfect solution or lack of a solution on third project) midterm and final are both 75 minutes.	1	0	39	2634
1853	January 21, 2002	Cracks the worst jokes imaginable. This guy has a really strange sense of humor. He's nice though, and his class isn't too boring. His lecture notes are avaiable from copyquick or something, but you need the book to do homework.	Problem Set every other week, 2 midterms and a final. All open notes and book.	1	2	40	397
1873	January 21, 2002	Can anyone say "ZZZZZZZ"? He manages to present what should be easy material in a way that makes it so difficult it is impossible to get through. He curves, so pray that your classmates are dumber than you. He is not very clear at times, and seems to think that you are a moron if you don't understand something. He keeps you late sometimes. Try to distract him into telling you anecdotes, they're far more interesting than the lectures.	Six problem sets, VERY LONG, two midterms, and a final.	3	3	40	397
2029	February 03, 2002	Adam Cannon is the best teacher I have had at Columbia. He is a really cool guy and an awesome person. He has a great sense of humor..his jokes are funny and he is so cool. All the people I've talked to about him think hes a great teacher. His lectures are really good...he's great at explaining complex ideas. He is always willing to help. He sincerely cares about his students and how they do in his class. He's a great teacher and I've also heard that many of his female students have had crushes on him.	It's a CS course so there is alot of work, but he's always willing to help.	1	1	515	2906
2083	February 20, 2002	His teaching is reasonable, but made fun by his jokes regarding we, the not-science-inclined humanities students. He's young, and definitely played soccer in high school. You feel sorry for him because somehow you have to worry about a teacher whose mother calls him during class (yes, this happened), and who lives (alone?) with a cat named Mickey Mouse (yes, that is his cat's name). If you email him with questions and concerns, he writes back promptly. I feel that he tries to relate to students almost too much, however, since he basically tells us we don't have to show up for lectures and that it's okay to fall asleep. Of course he asked for it, right? Many of us take these two aforementioned suggestions regarding physical and mental non-attendance to heart. Fun on the days I made it to class.	Supposedly bi-weekly homeworks. Straightforward problems and themes. Goes by the book, and syllabus is online. Beware, some homework requires we lowly humanities students to remember calculus concepts from high school.	0	0	515	1138
2229	April 12, 2002	This class is supposed to replace Softe, and from the initial looks of the syllabus, it seems very worthy. This is the first time it was given, so expect some changes, but it covers a bunch of real tools in the marketplace, such as BASH, C, XML, SOAP, RPM, TKL, among many others. Its also apparently looked at as a precursor to Operating Systems for students who like to focus on coding instead of the theories behind it. What happens as the semester goes on, however, is that the usefullness of the subjects as they're taught varies inversely with their actual importance in the "real world". The class ends up wandering aimlessly as Schulzrinne simply presents bits and pieces of each subject through his powerpoint presentations. Then when homeworks come around, they're often on subjects hardly covered in class, and you're expected to google your way to tutorials provided elsewhere. This is especially the case with XML/Java (an very active & useful topic), where a few scant lecture slides leave you with nothing useful for the homework, and you end up learning it as though you're not even in a class that's supposed to teach it! Oreilly books to the rescue! When Schulzrinne ventures into talking about the marketplace of OpenSource vs PeopleSoft vs Proprietary and the like its like reading a weeks worth of slashdot. It occured to me that the people that are the most interesting to listen to on those subjects are out in the industry actually shaping their fates, not in the classroom. The bottom line is that, common to other Schulzrinne reviews on CULPA, he expects you to learn it based largely on unspecified non-class materials. And common to most all CS classes I've taken, the HWs serve as a good lesson in doing the HW, not necessarily in learning the subject (to be fair, the C assignments were a bit better as we spent about 5 weeks with it). I finish each one thinking about how next time I have to use whatever tool I'm going to have to learn the syntax mostly from the beginning anyway. The syllabus will probably improve after it gets reviewed a couple times, but the core experience is not much more educational than getting a linux machine and playing with these technologies on your own time. The only difference is that here you'll get a grade and 3 credits for it. I don't know if its better than softe, but from conversations I've had with friends it sure sounds like there's significantly less work and stress.	The 10 homeworks vary from 2 hours to 20 hours. Unfocused just like the class; some theory, some coding, a lot of google-searching. Be sure to buy the Ritchie C Programming Language book even though its not listed. Exams are fairly tough. One question on the midterm was to write out a syntactically correct malloc() function in C by hand in ~20 minutes. Yikes!	0	0	350	4758
2279	April 21, 2002	This guy should teach more! Since you have to take Sci Comp anyway, you may as well take it with Prof. Traub, because you will enjoy it. He learns the names of students in the class, and he encourages participation without belittling students -- every comment is valid, even the wrong answers. His jokes are actually funny, and for a CS prof that's saying something. Likes to plug his research in quantum computing, so if you're into that this is your guy.	About 30 or so SHORT, usually easy problem sets, with a couple due each class. Lots of extra credit opportunities as well. One easy midterm and final.	5	1	1028	861
2328	April 23, 2002	Bad but not bad enough. i've seen worse. at least he brings some programs to the class athough he does not care about explaining them.	a lot it will kill you	1	1	802	885
2422	April 30, 2002	Prof. Allen's lectures are clear, concise, and informative. He is a wonderful professor, and gives off a tough attitude but is really a good guy when push comes to shove. He had a lot of pity on my class by making the homeworks easier when he realized we messed up the first two. Highly recommended class.	Six homeworks with programming and non-programming, midterm, final.	1	1	37	1622
2454	May 02, 2002	Despite the grumbling from other people in the class, I found this class very valuable. As a graduating senior heading out into the computer science workforce, I found the presentation of a broad range of topics very helpful. Though Prof. Shulzrinne didn't have time to go into great depth about any one topic (except maybe C programming), I felt that the overviews given (along with references to website where we could get more info) gave me a much better understanding of the tools & languages that are out there and what can be done with them. Other people in the class hated how we had to go searching for documentation around the web to find how to do certain things, but I thought it was actually very good preparation for the "real world" of software development jobs, where research of this kind is an essential part of the job. The class was taught exclusively with PowerPoint slides, which at times were the same as reading "man" pages, but Prof. Schulzrinne did provide a lot more related information in class (i.e. go to class). I don't know if the class really should be a replacement for softe, because (having taken that prior to this course), I found they were both useful, and that students will probably get more out of AP if it is taken after softe. Finally, and maybe most importantly, I need to commend Prof. Schulzrinne on his accessiblity (via e-mail). He answered all of the [many] questions that came to the e-mail mailing list, and always seemed to reply to e-mails very quickly. How many other professors do you know who would write back to you within an hour when you send an e-mail to him at 12:05 AM on a Saturday morning??	9 Homework, with approximately 2 weeks to do each (each one overlaps the previous by one week) Midterm and final.	0	0	350	4758
2540	May 08, 2002	John Kender is a very good teacher who makes every lecture interesting and worthwhile. I definitely recommend taking a class with him if possible. His only fault is that he will speak more and more softly as a sentence progresses, making it impossible to understand what he is saying.	Problem Sets every other week which will require several hours of continuous work	1	0	42	995
2724	May 18, 2002	Although he may seem unfriendly sometimes he's really not. At least when I went to his office hours, he was really nice. I asked for an extension because I was sick and he didn't even ask for a reason but only ask me to email him to remind him about it. I don't really remember him being mean to any students except a time when a couple of students were standing right in front of him when he was lecturing so he asked them to walk away so he could teach. I don't think that was undeserved. Otherwise I think it's just his lecture style to sometimes be sarcastic and blunt. He doesn't bullshit and he doesn't direct his attitude to students. Therefore so far as I'm concerned he's a great teacher. The TAs, though, were somewhat irresponsive. They generally did a really fine job answering questions about the materials. But with administrative stuff like grading policies and grade statistics, they always told us to ask another TA who would tell us to ask another one, or simply ignore our questions altogether.	I personally didn't find Data Structures so hard. The data structures themselves aren't hard to understand. As for coding if you're not confident then obviously don't procrastinate and start soon and ask questions. Then you should be fine. Exams, as with most other CS programming courses, aren't hard if you know how to do the HWs.	0	0	37	1622
23544	December 20, 2009	This class is billed as "practical methods in linear algebra for computer science". It is, without question, the least practical course I have ever taken.\nWe've all taken Calc III, so we've all seen a class without content before (and let's be honest -- unless you plan to pursue a graduate degree in vision or graphics, all the linear algebra you need for a CS degree fits on the front and back of a sheet of paper). So Prof. Wozniakowski does what any reasonable theoretical mathematician would do, and turns this into a class about theory instead.\nThis is not the problem. The problem is that his "theoretical" approach to linear algebra essentially consists of stumbling into class, drawing an arbitrary matrix on the board, and proving its special properties. Do not expect any discussion of the usefulness, significance or relationship of any of the topics you cover. Everything turns out to have very important practical implications, but Wozniakowski will not teach you about them.\nUnfortunately, you also wind up without the tools to do theory yourself. So when his exams ask you to prove new, different things about special matrices, you, and the rest of the class, will fail. The average on the midterm was below 50%.\nYou will come out of this class knowing more things than you ever cared to know about Householder matrices and eigenvalues and the infinity norm and the spectral radius, but you will be able to do exactly nothing with that knowledge.\nAdvice:\n-- Don't buy the book. Gilbert Strang's canonical linear algebra textbook is generally not very good, and it is absolutely useless for this course (every time you go to look up something we discussed in class, Strang simply says "we won't bother proving this right now"). One of my classmates remarked that his still has that new-textbook smell because he hasn't opened it.\n-- The TAs were atrocious. Whoever it is next semester, make sure to interrogate them about every homework assignment (this will entail 10 visits to office hours) or your grade will suffer. Over the course of the semester, I was deducted points for such offenses as writing my answer in the middle of the page where the TA couldn't see it, providing a python script that ran normally under CUNIX but not with the TA's fucked-up $PATH, and having the same first name as another student in the class. Be vigilant.\nAt the end of the day, I don't feel like my time was completely wasted, simply because the material we're actually supposed to cover doesn't merit its own class. I feel like things make more sense now that I'm connecting the dots on my own (protip: your enjoyment will be greatly increased if you wiki every word that comes out of his mouth), but I can think of many less painful ways of learning this material, and in the end I'm not sure I really needed it in the first place.	Biweekly problem sets, two written problems (one random number-crunching, one a random proof about a random matrix) and one programming problem. DO THE EXTRA CREDIT.	8	0	1749	3992
51	December 31, 1999	If you're an Applied Physics hopeful or another student willing to learn a programming language being phased out by the minute, step right up. Welcome to what will probably be your first class in computer programming. For a senior member of the Applied Physics department, Professor Mauel handles his computer science teaching impressively. Fair and friendly - ask him to talk about his research.	Not too difficult, but make sure you do all the assignments. Grading is fair.	0	0	44	22
2797	May 24, 2002	Prof Cannon is one of the rare teachers who truly wants to involve the students in the class. This class is taugh purely for us non-science people in the college. While it does not fulfill any requirement, Prof Cannon does all he can to get you involved in the class and interested in computers and computer-science in general. His light attitude and wonderful sense of humor makes the class fun and very enjoyable. Prof. Cannon is also incredibly accessible, responding incredibly quickly to e-mails and doing all he can to ensure that every student of his enjoys the class. While some parts of various lectures are rather boring, Prof Cannon always tries to lighten the mood by telling a few, jokes, making fun of himself, or just going onto a more interesting topic when he notices students starting to drift off. The class covers everything from a history of computer science, to a very little bit of programming. A great class for someone who thinks s/he might want to do Comp-Sci but doesn't know what it really is. This class was one of the best I have taken here at Columbia. Prof. Cannon is definitely one to look for.	5-8 Problem sets, very easy midterm and in class final. Problem sets were essentially book questions, where merely searching the chapter would give answers. Midterm and final both had list of terms to identify and fairly easy longer type questions. Grades very easily. Curves class to a B+ or so, and a 74 on the midterm was a B+. Easy A if you do the problem sets and identify the terms posted on his website for the exams.	1	3	515	1138
2804	May 26, 2002	Take any class with this man!! Absolutely great. One of the nicest ppl you will ever find and he does anything to help his students. He is a dynamic prof. who even makes smthing dry like cs funny! A rare gem in the otherwise mediocre cs dept. Why can't every prof at Columbia be like him??	Really fair workload. Generous grader.	0	1	515	2906
2902	June 18, 2002	His teaching style opened a subject that I never imagined myself being interested in. I highly recommend him as an instructor. One caveat is don't let him convince you that the tests will be easy. Do the reading!	NA	2	0	515	1138
5813	May 19, 2003	Ravi has an Indian accent, but nothing "freakish" or unbearable (nor are there that many international people in the CS faculty anyway, so I don't know what the phuck the other reviewer was talking about). I didn't do well in this class *at all*, but objectively and honestly I feel that Ravi is definitely one of the better teachers in the CS department. (I'm sorry, but definitely better than Feiner.) First, he really, really knows his stuff; thus he was never unsure about anything and knew exactly what he was going to talk about. He even had review sessions in which over things he knew we would be confused about. Second, he is responsible. The clarity of his lecture notes reflect the effort and time he spent in preparation, as well as the very well-designed homework assignments. Third, although he is strict about extensions and the like, he is crystal- clear about rules and requirements; you have noone to blame but yourself for not doing well. He also made it clear in the first day of class that Graphics would not be easy. It turned out to be challenging but not that difficult in terms of grading, and fun as well. (Off-topic: don't you hate seeing reviews that say "I got a B and I don't know why. He's a bad professor"? I've read a lot on CULPA recently. Those aren't really reviews, just bad students blaming their teachers.)	OpenGL wasn't that hard for me (but I procrastinated a lot) and I imagine it wouldn't be hard for other people. It has a pretty steep learning curve but once you get the basics it'll be fine. And, again, it's really fun (you get to make your own game for god's sake; what else can you ask for?). First two homeworks (lines and curves) need you to think hard. Last 2 homeworks need you to work hard. Overall, workload is not bad if you START EARLY. For your own good, *START EARLY*	2	1	1588	2634
5825	May 20, 2003	Unlike the previous reviews, I did not like this professor.  Before the first midterm, we learned two chapters, then afterwards we sped through about 6 chapters, learning a little from each.  He is very disorganized and doesn't know how to use his time properly.  Coming to class was not helpful since everything he taught was in the textbook.  Most of the time the text explained things much more clearer.  Going to class will not help at all with the homeworks and don't expect to get them back in a timely manner.  If you take this class with him, be prepared to do a lot of proofs.  This man loves to do proofs..he thinks they're fun.	Heavy.  Problem sets biweekly but each set takes a LONG time.  The earlier you start the better.	3	0	515	397
82367	September 15, 2020	tl;dr don't take his class unless you're very very good at math and/or have a REALLY good support group of friends to help you with his insanely difficult problem/programming sets.\nThis guy is the definition of "let's make this class harder than what it actually needs to be because this is Columbia and you're all in the Ivy League so you all need to be severely challenged". Don't get me wrong, he's a very nice, sweet, caring guy who is incredibly smart and always willing to help you during office hours, but his homework problem sets are absolutely insane. Most of the time, the TA's have no idea how he got the correct solution because he writes his homework questions in such a confusing, complex, convoluted way it will take you a full day just to understand what he's asking in the question, then another day just to solve the problem (if you can solve it in the first place). His programming labs are essentially the same way. They are brain crushingly hard and will leave you asking yourself, "What is this problem even asking me to do?"\nProblem sets are about 4 or 5 questions, but they have many, many, MANY sub-parts, making each assignment like 16 or so questions. The book and lectures help, but he mainly repeats the same material as in the book, with almost the same exact example problems. I get it, linear algebra is a very dry topic, and it's hard to make it enjoyable to learn, but I could have basically tried to read the book or watched youtube videos in place of his lectures, as they are just the same problems as in the book. After the whole coronavirus debacle, he uploaded short 10 minute videos for each topic, telling you exactly what you needed to know for that particular section. Those videos were incredibly helpful, honestly, it was a bit of an embarrassment to the university system as a whole because you could simply condense each class to a few minutes, (I wish they would have cut the classes short and paid me back my tuition money!). \nExams are challenging, but doable. You REALLY have to understand the material inside and out to get anything higher than a C. I'm OK at math, and did OK on his exams, but I had such high problem set grades that I didn't quite care what I got on his final. Luckily, I had a really good team of "battle buddies" who helped me work through his brutal weekly problem sets. A few of them were VERY good at math, and his problem sets didn't intimidate them the same way it did to me.\nI hate to leave such a nasty review like this, as he's a very nice, caring guy who is very polite, but his class is sooo much more difficult than what it needs to be, but then again, that's like 99% of the classes at Columbia. This silly school would make "relaxation and stress relief" one of the hardest things you've ever done. go figure.	Two exams\n4 programming labs\n10 problem sets.\nTake this course with a very lite load, or learn and get really good at linear algebra before you take the class, or dig your grave. You've been warned.	8	4	13639	3992
5431	May 04, 2003	Very competent and very organized. Young, friendly, and approachable. Clear lecturer. The course is fairly difficult, but fun and interesting (and, as it turned out, graded on a generous curve). First two assignments required some mathematical sophisication and stressed understanding more than brute force. Last two assignments required learning OpenGL. That for me was overwhelming in the beginning, but once I learnt the basics (they're plenty of sample programs online), it started to be really fun and creative. Overall, I highly recommend this class.	Workload is highly dependent on the student. The final project was a video game; you could go overboard and make something that resembled Quake 3 (which was written in OpenGL). Due to the huge flexibility, if you have no moral difficulty with doing the bare minimum to satisfy the requirements, the overall workload should be slightly below average for an upper-level CS class.	1	1	1588	2634
5439	May 04, 2003	this class was awful!  class was rough since there's SO much to write, there are no electronic notes available and although professor kender tells an anecdote about writing and speaking clearly during lecture, he quickly started writing incredibly small on the board.  the homeworks are killers and the midterm was really hard.  LISP is touted as the language of choice for AI, but having it thrown at us in a couple of weeks was just not helpful.  i can recognize LISP code, but i can't tell what it means.  apparently professor kender is trying to get a LISP course organized that you can take before AI which would probably fix this huge problem.	5 very very difficult programming assignments (first four homeworks are about half theory half programming, thankfully), after the first 2 in LISP you can program in any language you want, one in class midterm and a final	0	2	42	26
5653	May 13, 2003	Great professor who really, really knows her stuff. Lectures well and does not use slides (as Grunschlag does) so going to class is important. Friendly and helpful during office hours. Funny and very likable! Subject material itself is very interesting and creative, but can also confuse and/or frustrate (especially people who are not very mathematical) because it is all proofs and the problems are extremely interrelated and similar. Reading ahead a bit before lecture would definitely help tremendously.	About 10 problem sets, midterm, final. Quite manageable.	5	3	1621	234
5752	May 17, 2003	Prof. Nieh is a good professor.  His lectures, although boring at times, are informative.  My main quibble with this professor is the manner in which he interacts with his students.  He has a real disdain for them.  Be careful not to get on his bad side, or you will be subject to some of the most twisted, Gestapo-esque student-teacher interactions you have ever witnessed.  Trust him less than he trusts you and you will do fine in the course.	Craziness. 5 out of 6 assignments, midterm and a final.	0	2	45	2384
5768	May 18, 2003	One word: run.  Despite Feiner's poor reviews I would have much rather had him teach this class than Ravi.  Granted, this was his first time, but that doesn't excuse his accent, which seems like some freakish combination of every unintellegible voice in the CS dept (and trust me there are many).  He supposedly knows a great deal about computer graphics, but you wouldn't know it from his lectures.  The TA had to constantly remind him that the students in the class might not know as much as he did - need I say more?  And don't even bother going to office hours.  Still, he is a helluva lot more lenient about everything (i.e., extensions) than the TA seemed to be.	Unbearable if this isn't your only class, unless you happen to know OpenGL going in.  Two "concept" homeworks, a final video game project in OpenGL, an in-class midterm and a take-home final.	1	1	1588	2634
5769	May 18, 2003	Allegedly Columbia's resident machine learning guru, Jebara is an extremely mediocre professor.  The lecture slides were unhelpful at best, and he basically just reads off of them during lecture with some supplementary doodling on the blackboard.  Still, he's a nice guy who will be happy to explain stuff in office hours, but I found the books to be the most helpful, especially for the homeworks.  As for the course, be ready for A LOT of stat and linear algebra before you get to the good stuff.	Four cookbook homework assignments using MATLAB (start early), a moderately difficult midterm, a virtually impossible final, and an open-ended project/paper.	16	13	1636	1921
5870	May 22, 2003	First and last impression of Sidorsky: the man is exceptionally brilliant and very well read. It is not often that your professor has the ability to lecture and provide the insight that can only be provided given that they were present during the time frame of what they were teaching. His lectures got repetitive as he took a long time to get through material bc he was constantly reviewing and rehashing. His eyesight is less than stellar as he will ask for questions and miss the raised hand that is in the front row. He definately knows his material well and delivers it well. as the last reviewer stated, show up to class, some part of the grade is attendance and exams are entirely lecture note based.	1 midterm, 1 final. lenient grader, everyone basically makes a B or higher.	2	0	856	2384
5871	May 23, 2003	Compare to other 4000 level classes such as OS and PLT, this class is an easy technical elective. Christina Leslie is a very caring teacher, even though her lectures can be boring and involve a lot of materials. She writes a lot on the board and you'll have to go to class in order to do the exams. The textbook is virtually useless. The tests are open book and based on the class notes, so, GO TO CLASS AND YOU'LL GET an A.\nYou'll need substantial biology background to truely enjoy this class, though biology is not needed to ace this class.	3 Homework assignments, midterm, final and a project (it doesn't sound as much as it is)	0	0	595	1967
15161	June 23, 2006	This class was one of the best I've ever taken. The lectures were always fun, as Dr. Gross has a great teaching methodology and quirky sense of humor. Class generally consisted of working through the pre-distributed course notes (the majority of the time) and solving several problems (the last 10-15 minutes). He also threw in historical notes and occasionally a crazy story or two about some of the more famous graph theorists/algebraic topologists (many of whom he has worked with directly). The course notes basically re-packaged the material from the book (excellent, by the way, and co-authored by Gross himself) into a lecture-friendly format. My advice would be to read the relevant chapters in the book before class.\nThe six problem sets were generally difficult and time-consuming, but they will drill the material into your head. Perhaps more importantly, the problems will teach you how to think like a computer scientist. Some of the topics in graph theory have few real-world applications, but they train you how to attack and solve complex problems in mathematically rigourous ways (which is much more important than any application). In any case, Dr. Gross and the TAs (Josh Reich and Lawrence Hon) held plenty of office hours and were always very helpful. The tests were difficult, but he said they were designed to have mean of about 60 and were curved accordingly. Also, the tests were open book/note/whatever.\nMy only caveat is that graph theory is a somewhat fragmented subject with its own peculiar dialect. Dr. Gross has an amazing command of the material (and the dialect), so, while his explanations are always excellent, you must undertstand his language or it'll sound like gibberish. Don't slack off in the first few weeks; if you master the early material, you'll be in good shape when the more advanced subjects come in.\nOverall, I highly recommend this class.	Six problem sets, usually of six questions, of which two were "gimmies", two were of average difficulty, and two required significant insight/intelligence/work. Two midterms (above average difficulty); non-cum final (slightly easier than midterms). All exams are open book/notes.	3	0	40	4901
2984	July 31, 2002	This was perhaps the perfect course for someone like me. Kender is an excellent teacher. He adds a lot to the class that you would not get from the (atrocious) textbook, and covers topics with a surprising amount of depth for an intro course. But be warned, while the class is called an intro, everyone in the room has been programming for years, and it's basically expected that you'll have similar experience. As for the workload, don't try to pull all-nighters before the assignment is due. It's possible, but you'll hate your life. You have two weeks to work on them, and it's a smart idea to spread things out over that time. This course convinced me that computer science was not for me. Kender is a great professor, so the only reason that I didn't like the course was the material. I did the work, and was happy with my grade, but the other students in the class would make crazy additions to the assignments for no extra credits, and I'm just not willing to study a subject where the other students care that much more than me.	Bi-Weekly assignments. I was allready an experienced coder, and the projects typically took me around 12 hours each. I found the written midterm and final to be easier than the assignments, but definitely required significant studying. The grading policy is fair, and takes into consideration that any student in there could have taken 1007 for an easy A.	1	0	42	995
3020	August 13, 2002	Professor Allen will not hold your hand, he will not take any shit, and he will teach you data structures. His lectures are clear, concise, and will prepare you for the homeworks. At times, he practically walked us through how to do a given assignment. He is also apparently a huge fan of GUIs, which while will be a wonderful skill to have in the future, will likely be a royal pain in your ass and has little to so with the subject matter. As with most CS programming courses, the difficulty of this class will vary with your skill in coding coming into the course. Prof Allen does not really curve, and if he did it didn't affect my grade much. He did drop the lowest HW, which was predictable as he repeatedly mentioned that you could afford to mess up one HW. Allen has little patience for BS, so don't ask him stupid questions, don't stand in front of the room, even to grab a handout, when he's lecturing, and don't tell him he isn't teaching the material we need to do the HW -- he practically tore one student apart when he was asked for techniques used for hasing. The student felt we weren't given enough options to meet his desired # of collisions, and Prof. Allen practically walked him through all the examples in the book. Come to find an email in all our mailboxes later that his required max number of collisions was off by a factor of 3. Oops. Basically, if you start early on the assignments, this class will be very rewarding and will help you progress greatly as a coder. Allen makes learning the material incredibly easy, as his lectures are so easy to listen to. But if 1007 was difficult for you and you're really not getting Java, start every assignment the day you get it and hope it all starts clicking soon. Or try a department that's a little less sink or swim	Midterm, final and 6 Homeworks. Except many, many hours in the lab unless you're fluent in writing GUIs already. Reasonable if you start early, but most likely will dominate your semester.	2	0	37	1622
3235	September 11, 2002	Wow! If I had to take a class with him again I would shoot myself in the head first. I did enjoy it thoroughly, however; at least as well as I would enjoy sitting in a room with a bunch of crazy people. At first, it's amusing, but after a semester, you're clawing at the door.	Not bad, really. Just one of those exotic classes.	1	3	40	397
3475	November 17, 2002	James Fei is the real genius behind MIDI production. He's not just a mad scientist, but he's funny as hell and really, really knows his shit on the computer. He might get stuck in class trying to debug some wierd aspect of the sequencer, but he can show you how to do musical tricks you had no idea existed. Plus he could make you sound like Mariah Carey but then he would have to quit for moral reasons. MIDI class is the bomb, here's a fat A, but only if you play with really cool and expensive musical toys, and push your creativity. Again, don't believe the hype, Garton may be the tenured prof, but Fei is the one with the modern computer abilities.	easy, two projects, no limits	0	0	1261	1335
5770	May 18, 2003	I'll say this for Prof. Edwards: he made PLT way more interesting than it should have been.  He is definitely one of the wittier professors in the CS department, so the lectures were engaging.  But if you're planning on printing out slides before lecture, be warned: there are a lot of them (about 40 per class, on average).  Plus, he really integrates his own research into the lectures, as opposed to just plugging it like other profs.  Central to PLT is a group project in which you get together with three other people and implement a programming language of your own devising, which is possibly the most challenging and rewarding thing I have done as a CS major.	Group language project, worth 40% of your grade - very manageable if you plan everything out from day one.  Also, two throwaway problem sets and a cheet-sheet friendly midterm and final.	6	1	1637	3105
579	December 31, 1999	The other review of this guy says it all: Galanter is a source of fun, but not enough to make up for his tedium.	NA	0	0	178	NA
13330	December 18, 2005	Horrible. If you are looking to flunk out of Columbia, you're more than welcome to take this course. I signed up for the course with an interest in psychology, and now I regret it more than anything. Did not think it was going to be an easy class by any means, but wasn't expecting to be a bomb either. I repeat, DO NOT TAKE THIS CLASS unless you're a psych major!!!!!! Can't give you any more warning than this.	Massive amounts of reading, and nothing else. It seemed like heaven at first, since you don't have to worry about papers or even a final. But the exams do NOT test your knowledge of the material.	29	0	178	NA
557	December 31, 1999	One of the kindest souls in the Comp Sci dept. There aren't that many profs that post on the web board as often as he does. His lectures may not be the greatest (in fact, you could do most of the learning by using the textbook and the lecture notes he posts online), but his homeworks and tests are pretty well designed. Has a tendancy to delay assigning homeworks until he has covered the material in class.	5-6 homeworks with 3 grace days, 1-2 projects (in groups of 2), midterm, final.	4	2	375	664
3970	December 14, 2002	When I first went to Galanter's class I thought he would drop dead every class. I went to every class until the first test got a B-, then didn't go to a single class, got a C- on the second test, and was able to get an A on the third test. I don't know how, but I got an A- in the class. You may think you're having a hard time, but it's so easy, and you don't have to go to the classes unless you want to see a hilarious old man. I have a long list of Galanter quotes, go to at least a few of the classes so you can hear crazy ravings of an old man. Just suck it up, don't miss any test and walk away with your A or B.	Depends on how much you really care. Some do all the reading, and others do none of it. Try to find a happy medium.	0	0	178	1138
4053	December 16, 2002	This course covers a wide array of material, and you're expected to know it like the back of your hand by the time the exams are given. If you work hard and don't slack the problem sets or practice exams, you'll be good to go. Otherwise.. well, I think half the class had dropped out towards the end of the semester. Overall, he's a nice professor who delivers his lectures with an offbeat sense of humor. Although he has course notes at the beginning of the semester that  cover the entire class, it's worth going to the lectures because you can ask him questions, and no question is too stupid for him. He's not one of those professors that thinks he's too busy for his students and is quite approachable. Also, pray that he has knowledgeable TAs when you're taking the class. If you want to learn a thing or two about math, take his course -- you won't regret it. Look elsewhere if you want something less challenging/rewarding.	6 long problem sets, 2 midterms, final. Exam medians are ~50-60 out of 100. His exams are not for the faint of heart. His exam problems tend to build on each other, i.e. the answer to one problem is used to prove the result of another. Best advice -- always always *always* try to understand as much as possible through his practice exams before taking his actual exams.	6	0	40	397
4089	December 18, 2002	Never in my life have I seen a professor hold so much contempt and disdain for his students.  Feiner's lectures are flat out boring and .  He has you read one or two of around 25 long research papers, and then just stands in a corner and writes sloppily on an overhead projector while discussing it.  He is impossible to approach, because he seems to believe that students (and their questions) are below him.  The three homework assignments here were not hard (about 15 hours each, roughly), but the final project was tough only because of the demo.  Doing a demo with Feiner is basically him apathetically saying "mm hm" every two seconds to your explanation, and then bringing up every bad aspect of your program to you that he can find in the 5 minute span and grilling you on it.  Tests are tough, too.  Feiner holds you responsible for those research papers on his tests, which are entirely essay form.  The bottom line: unless you enjoy reading insane amounts of research papers, steer clear of Feiner.	Three homework projects (not hard), one final project with demo (hard only because of Feiner's demo practices), midterm and final, based on an unbelievable amount of REQUIRED reading	2	1	39	663
4132	December 23, 2002	I took the class with James and Brad, but I think James is the one who'll be teaching the classes in the future...He's the man. He knows anything and everything about computer music, and he'll show you how to do weird-ass things that you never thought were possible. And he will only get better in the future. He made the pain-in-the-ass walk to 125th St. (the class is in Prentis) well worth it. TAKE THIS CLASS. It should be required.	work at your own pace, do your own thing. midterm project and final project.	1	0	1261	1335
4368	January 14, 2003	Kender made my first comp sci class ever a pretty good experience.  His dorky computer jokes were a constant source of amusement.  He was very organized, everyday going over announcements, assignments, review of the last class, and new material.  Asked for feedback regarding the projects and exams so he could try to improve them for future classes.  Fell behind every now and then, but shortened the projects if necessary.  The course got harder as time went on, but I always found it interesting.	5 projects, ranging from simple to ennnnndless (you need to start working on the projects ahead of time - they will take longer than you think.  1 midterm and 1 final, both of average difficulty (the term definitions on the final surprised me).  But the best news of the entire review: the curve (a.k.a. grade inflation) is enormous.  My average came out to a 77.  My final grade was an A.	5	0	42	995
4410	January 17, 2003	I have to put in my two cents here, because the only review on this guy is very misleading. Everyone I spoke to that took the AI class with this guy, hated life. He acts like he has better things to be doing that teachign the class, and at one point he said "Life is not fair, tough"\nHe started off great but his quality just went downhil very fast as the semester went on.	NA	5	6	4213	26
4411	January 17, 2003	I will admit that his lecturing style is pretty bad. But he does make time for his students in office hours, and looks like he genuinly wants to talk to you. You meet with him once, and he will remember your name. So that is one good part of this professor that shoudl be remembered. Workload in the class is not that bad.	NA	2	0	39	663
4423	January 18, 2003	Since you really have to take Feiner if you want to ever take UID, you need to just ignore his poor ability as an instructor; just use this opportunity to read a lot of textbook material and research papers in this field. It is a field that is completely ignored in ALL other classes, and it is quite important. Unlike most courses in the department  it actually practical and applicable to anything you'll ever program. I do agree with all previous (bad) reviews. However, the problem with the allegedly harsh grading of the homework is that most of the grade is not based on functionality. Your program may follow all specs, but still get a C. It is the USER INTERFACE that gets you most of the credit. And you can only start thinking of user interface AFTER you completed all specs, which is usually around 5am the night before it is due. And that is truely a big problem with this class. But as you know from the previous reviews, you get some penalty-free late days to use on any combination of the first 3 (!!!)assignments. Another major problem is that there is a lot of reading, and it is all asked about in the midterm and final. As a rule of thumb, if there is a formula of some sort in any of the papers, it will appear eventually on a test. You will probably have to state it and explain it. Nothing too fancy, but you do need to memorize a bunch of them like it's a high-school history test. Not the end of the world, though. \nIt is true, this class feels more like a Humanities class that a regular CS class. You have to read a lot papers, and there are never problem sets (only programming projects with minor explanations of "why did you choose the interface that you did"). It is, though, not the hardest class you have taken or will take in the department, and it opens a window to a very neglected (and again, practical) area of compters. Lets face it, in the real world, your boss/client is much more likely  to care about the interface of your program. And like in this class, they are going to take the functionality as a given.	Never in groups . 3 programming assignments, a final programming projet + a demo (ALL graded for user iterface rather than for functionality), a midterm, and a comprehensive final. Also, A LOT of reading. While the book can be somewhat skimmed, you do need to know the major concepts of every chapter. As a rule of thumb, after reading every chapter ask yourself 5 feasible questions he can ask. It's pretty obvious. There is no way around reading all research papers, and don't fool yourself you will have enough time to read even a quarter of them during finals.  However, like in every class like this, nobody has time to do all the reading and there's a curve. The midterm and final consist only of essay questions. The trick is that if you understand the general theory (mostly from the book) and use "the UID language," you can totally b/s and get some partial credit on occasion. Finer travels a lot, so there are many occasions that there is a gust lecture, some of them really cool.	2	0	39	663
43	December 31, 1999	He's generally an interesting lecturer, but outside of class he can come across as quite pompous. On ocassions he makes students feel unwelcome in his office hours.	NA	0	0	37	NA
45	December 31, 1999	User Interfaces contains useful, if somewhat obvious, material. He basically follows the book without adding a huge amount. He has a fair lateness policy, but seems unable to deviate from it when student's circumstances require it (i.e. sickness).	NA	0	0	39	663
46	December 31, 1999	Loved by all. Another great CS teacher.	NA	1	7	40	NA
48	December 31, 1999	He makes lectures very interesting and fun. You'll definitely enjoy the class even though the subject matter is rather difficult. I had a great time in this class and I believe that he is one of the best professors in the Computer Science department. The class can be really difficult or moderately difficult, depending on who you have as your Professor.	NA	0	0	42	1622
4424	January 18, 2003	This was his first semester, and it showed. He just presented the lecture slides that came with the book, and read them outloud. Going to class was simply useless, if you had some other time to read it yourself. The first part of the class is  easy and straighforward. There's a big project in 3-stages to build your own database application (duh). The second part of the course reminded me of the good old days at Unger's comp org. However, even though Biliris is as boring and mistake-prone as Unger, he is really a cool guy. He even uses the break to go out and smoke. The second project had nothing to do with database. It could have been given to anyone who had taken statistics and data structures. Everything is graded by the TA.	5 problem sets taken mostly from the book, 2 programming projects in Java or C++ in groups of two, a midterm, and a NON-cumulative final. Don't be surprised to find something in the homework that was never mentioned in class. If you ask him in class, he will explain it, but he expects you to just read the book. In that sense, this class reminded me a lot of comp org; the book was almost as thick, but the details were just as disgusting. His tests are short and to the point. Even the final was only an hour and a half with 4-5 questions.	7	1	1442	664
4556	January 21, 2003	Professor Keromytis has excellent background in BSD security research.  That is well and good, and I'm certain he could simply make a class to teach everyone about the work he has done and the publications he has somehow managed to get his name scribbled on.  However, he isn't really an Operating Systems professor.  That is to say that he speaks from the book, and like other CS classes, you never have to show up and can read the material on your own if you so desire.  Just work on the project and present it well at the demo and you'll land yourself an A.  Also, he's really not such a people person.  Interactions with students and the professor ranged from mild politeness to blatant rudeness, both in person and via email.	Midterm, final, 3-4 homework assignments, huge project (45% of grade)	5	4	1472	2384
4560	January 21, 2003	Professor Kaiser is interested in her material and works hard at getting it across to her students.  The only thing is that she isn't the best at instructing students how to code within the complex component frameworks introduced in this course.  However, teams of students have freedom to choose a project of their liking, which is definitely preferred over a forced project such as Robot Wars or some ridiculous role playing game with clients, servers, and bots.  With the freedom to choose a project comes the desire to code the project.  Gail follows up with the teams throughout the semester, giving feedback and ensuring that the students pick up on the material, and I've been more enthusiastic about this class than I had been with others within the CompSci department.  Don't be afraid of her first class when she tries to scare you off; you'll learn a lot, you'll learn how to document the software-development process, and if you work at your project, you'll walk out of the class knowing a great deal.	Team project with three iterations, as well as a take home midterm and take home final, both about the project's development and concepts discussed in class (and mentioned in the book)	8	6	1474	1616
4566	January 21, 2003	Professor Ross has a cool Australian accent.  That's pretty much what kept me going to the classes, though he does teach mostly out of the book.  Either you go to the lectures and understand the material, or you read the book.  You can take your pick.  Also, the first half of the semester covers the more interesting stuff, while the second half can get way over your head.  Make sure not to slack off mid-semester.  You're probably better slacking off for the first month or so.	2 projects to be done with partners (with various parts due every two weeks), midterm, final	2	1	47	664
4604	January 22, 2003	Good teacher.  I enjoyed her class and felt she really strove to help us understand everything.  She frequently stayed significant time after class to answer all remaining questions and did so happily.  I would recommend her class if you have the option.	Pleasant.	0	0	595	1622
4716	February 03, 2003	Prof. Stolfo is a wonderful and knowledgeable teacher, although his wry teaching style can be off-putting at times.  He also has a pretty good sense of humor for a CS prof - he ended the first lecture with the comment "Intelligence is like pornography; you know it when you see it."  It helps that he co-created the course, so he not only knows the material inside and out but he is also passionate about it.  On top of that, he is incredibly friendly and easy to talk to.  He is also the only professor I've had who gives you buggy code on purpose (this can be good or bad depending on what kind of CS student you are).	4 programming projects, including 3 in LISP (take the 1-point course first if they still offer it) and an intelligent checkers program in the language of your choice. Moderately difficult midterm and final.	4	1	4213	26
4782	February 24, 2003	He is definitely one of the better professors in the CS dept.  He has a good sense of humor (a lot of jokes about his mother-in-law), and he's wonderfully friendly.  His tests are mad hard, and but his programming projects are okay.  You'll probably get lost in some of his lectures, but glancing through the text should clarify a lot of things that he talks about in class.  He tries to get the students to get involved during class, asking questions and trying to match faces with names.  Overall, his class is worth taking!	4 programming projects (3 in LISP, 1 in whatever language you choose), 1 midterm, 1 final	8	3	4213	26
4783	February 24, 2003	He is definitely one of the best professors I have had!  His laid back style of teaching is really something that none of the other professors possess.  He is very approachable and friendly, and tries to get some participation during class.  The material is somewhat dull, but since many of the CS majors have to take SciComp anyway, might as well take it with him.  The workload isn't bad at all, and the tests are rather easy, since he asks straight forward questions.	A few problems sets, two or three EASY programming assignments, 1 EASY midterm, 1 EVEN EASIER final	0	1	515	861
4861	March 11, 2003	Professor Cannon was one of my favorite instructors at Columbia. He's really nice, and he makes learning about what some consider to be a difficult subject much more easy. During his first lecture, Professor Cannon said that students shouldn't be intimidated by the fact that he works at Los Almos because he "isn't creating Terminator." Definitely an interesting class, I learned a lot to prepare me for 1004	about 7 homework assignments, text reading, midterm, final	0	1	515	2906
5405	May 01, 2003	He can be a little dry, but this guy is one of the nicest professors I have come across. If you go to his office hours, he's really interested in helping you, and listens to your feedback. The workload is manageable.	NA	0	1	51	4902
1787	January 17, 2002	Prof. Sidorsky did a fantastic job with this class. Despite the trend of many professors, Sidorsky didn't just reproduce the readings, with his lectures, he complemented the text with his own analysis and examples. Sidorsky is approachable, funny, and willing to answer questions. This has been my favorite class at Columbia and I'm a physics major.	Weekly readings, midterm, final. Sidorsky is extremely reasonable with his grades. Attendance is recommended.	3	1	856	NA
52	December 31, 1999	A good lecturer who, unfortunately, seems to hold students in genuine contempt; it irritates him that we tend to insist on quality of education. No complaints on the lectures, and problem sets are ok, since they're book-based; it's the programming assignments that ruin the class.  They're a true mass-nightmare, since students are given literally no preparation for them, and lectures have nothing to do with them. Honestly, with no way to learn how to do the project on your own, can he really be surprised that so many of his students cheat? The plus side is that if you work your ass off (and I mean work your *ass* off) and pay close attention, OS I will teach you two semesters worth of Linux and Unix OS mechanics.  Unfortunately, if you have to take OS, there is really no other choice than Nieh.  Either hold your breath and scrap together a B, or split up with your boyfriend/girlfriend and move into the lab... just be glad that not all teachers care so little about coddling you as Nieh does. Hopefully, you'll actually learn something in the process, as he knows the material inside-out. And if Linux is old Hat for you, you might possible find yourself enjoying the class.  But not likely -- Nieh, like so many other cs profs, confuses a ridiculous 'sink-or-swim' approach for academic rigor.  He should wake up and face teaching like an adult; you should avoid him.	NA	5	4	45	2384
53	December 31, 1999	Not the most dynamic teacher, but he will explain a topic to a class until he is sure that students comprehend the material. Very willing sit down with students and go over numerous examples outside of class.	NA	10	2	46	NA
54	December 31, 1999	The information is useful, but the class is boring. Professor Ross tends to give way too much homework much of which isn't necessary for understanding the material.	NA	1	0	47	664
58	December 31, 1999	Stolfo is probably one of the best professors in the CS department. His lectures are entertaining, informative, and funny. He enjoys teaching and loves giving amusing assignments. He occassionally makes fun of students in class, but is also willing to allow his students to poke fun at him. The workload is medium, and the professor is very easy to talk with.	NA	2	1	4213	26
59	December 31, 1999	Old-school and hard-core. Wrote the digital logic textbook. Expect a knowledgeable and sometimes-enthusiastic presentation of the material. He sneaks in a few jokes, aimed mostly at the tech-nerds crowd. He is from the days before grade inflation, so watch out for stingy final marks.	NA	1	0	50	27
60	December 31, 1999	Another hard grader, who is moderately fair; though everyone gawked at the test mean of 45 on the midterm, in the end he gave out as many A's as C's. The material is interesting, but his delivery is like counting sheep. He sure understands this stuff, though, and he is great at explaining things step by step. Oh, and he looks like a Binkley from Bloom County.	not that much, but you have to work hard on it to get a good grade. Regular problem sets, Midterm and Final exams.	0	0	50	27
61	December 31, 1999	Yemini has been at Columbia for a while and it shows -- boring lectures. Most people are used to his accent by the sixth week of classes, or so. It looks like he's ready to burst into full mid-life crisis any day now, so buyer beware. About the texts: they're about $300 total, but only the Stevens Unix text is essential, the others are mostly helpful for exams. Programming assignments are challenging but do-able. Programming teams are formed at random, so start scheming, or bring your rabbit's feet.	NA	0	0	51	4902
236	December 31, 1999	As a senior member of the department, Galanter asserts his right to lecture in a vague disconnected manner. The main focus of the material -- whatever comes to his mind. So, classes may not relate to each other, or even to psychology in general. They can still be interesting, but often not. He's not really boring, so much as bored. If you're looking for a professor with an unending supply of yellow socks, he'll never let you down. You'll be kept on the edge of the seat when he stops to gather his thoughts, as pregnant pauses begin to seem more and more like possible strokes. Exams begin at the level of barely possible and get harder from there, but the king size curve should keep the grades reasonable.	3-4 multiple choice tests.	0	0	178	NA
516	December 31, 1999	Another reminder that this is a research university, not a teaching center. Schulzrinne means well, and he is into his work, but lectures are no more than powerpoint versions (no joke) of the mediocre book, and the material is poorly organized, poorly presented, and unfairly tested. The assignments are unrealistic, support from the book is nonexistant, and a lot of students realized too late in the course that this was one they should have dropped. On the other hand, the subject is a fascinating one, and the few assignments that students are able to finish are cool things to be able to tell people you did. Just be forwarned: it's a cool subject, but you're on your own to explore it, and there is no helpful book to fall back on.	Several medium-sized programming projects (some are very hard), monthly problem sets, Midterm, Final.	0	0	350	2401
523	December 31, 1999	Like asking questions in class? Better be prepared to withstand a barrage of embarrasment from Peter Allen. I've witnessed unbelievable acts of contempt from him in class, in which he dressed down students whose questions he apparently did not feel were good ones. If you're forced to take his class, do yourself a favor: stay home and learn from the textbook. You'll learn more and the book doesn't try to embarass you.	3139 is a bit of work (which CS class isn't? :), and grading isn't that perfect, so you have to work to stay on top.	0	0	37	1622
524	December 31, 1999	His tone in class is so boring that I'd rather be listening to an emergency broadcast test. The langauge he uses on his tests and in his book is so cryptic that an interpreter is sometimes needed. He is a very stingy grader, and generally unyielding to students suggestions and complaints.	Heavy. Lots of repition of problems that are not difficult, but very time consuming and annoyingly tedious. Tests are difficult.	1	0	50	238
528	December 31, 1999	The guy is old! He wrote the textbook, and has a webpage full of errata for it. Teaching style can be dull, and he mostly follows the text, which is good, because it's not always clear. Hearsay says he grades on a 'C' curve, so be prepared to work and still only get a B.	Problem sets every week, totally do-able. Midterm and final.	1	0	50	238
554	December 31, 1999	Prof. Gross teaches 3 sequential courses - Discrete Math, Graph Theory, and Combinatorial Theory - and teaches them all in the same fashion. It helps to go to class, but since a complete lecture notes booklet is available and covers everything from the beginning to the end of the semester, you could potentially learn the material yourself. His tests are open book, but are by no means easy - they are often referred to as "the learning experience." Overall, he's a great teacher, and makes the courses bearable even for a math-illiterate like myself.	No homework. Open-book tests. Lectures conducted according to a lecture-notes booklet.	3	1	40	397
559	December 31, 1999	A relative new-comer to Columbia, Nieh is a VERY smart guy, and when it comes to OS, he is THE specialist. His lectures are one of the better ones here at Columbia, and you'll actually learn a lot - BUT, you really need to be awake and ready to participate, as he likes to shoot off questions, and expects you to be able to answer them. He is willing to help outside of class, but make sure you have your questions ready, as he tends to get frustrated if you go to him and don't have a clue about what you need/want to know. As far as homework goes, the theory part is fine, but the programming part is NOT. When I took Data Structures with him, only 3 of 50 or so students was able to finish one of the later homeworks... he really expects you to know how to code (god knows where you're supposed to have learned!). Thankfully, his tests are more manageable (mostly due to the fact you don't have to code!).	Increasingly difficult homeworks, midterm, final.	0	1	45	1622
719	December 31, 1999	I've been both a student and ta in prof. allen's class. 1) He has a dry and cutting sense of humor, but certainly does not target or seek to silence students. It's more on the order of tough love. 2) The grading is fair. I've ta'd a number of classes where profs have some nebulous grading standard. Prof. Allen lays it out for the ta's: this is how it's to be done. period. I wasn't one of his best students, certainly, but improved with age. His is one of the most memorable classes and important classes I ever took. Perhaps, the best I took at columbia. This is why I specifically asked to ta for him. Be prepared to work. however, the more you put in, the more you'll take from it. (this goes for ta'ing for him as well).	demanding, but fair.	0	0	37	2006
720	December 31, 1999	one of the most important and well tought courses in the computer science department. yemini blends a tremendous body of knowledge and experience with a visiion that is always looking at whats ahead. he's going to make you work. however, unlike the typical theoretical only courses within the c.s. department, what you learn is going to be re-usable for a good time to come. in various positions, i've had to troubleshoot tcp/ip issues and create entire fault tolerant network protocols. this course was the basis of a career	first project is heavy duty. project complexity wanes over time.	0	0	51	4902
820	December 31, 1999	Professor Cannon is your classic young, nice guy professor, who just wants to get in good with his students. Despite having over 200 students, if you reach out to him, he'll never turn the cold shoulder. He is willing to stay in his office until all hours of the night, waiting until every single student has received attention. Bearing a bit of a resemblance to Dave Matthews, he does happen to be a really cool guy. He also exudes a real enthusiasm for the subject, which is a bit of a breath of fresh air. Unfortunately, this comes at the expense of really knowing the material very well. He forgot the JAVA syntax frequently, and occasionaly was at a loss for an answer to a student's question. For people without any programming experience at all, expect to be really lost for the first month or so - Professor Cannon has a hard time getting fundamental concepts across in a coherent manner. Luckily, if you're willing to go to his office hours, and if you attend recitation, these things really do get cleared up, and by the end you really do have a strong grasp of JAVA. I would absolutely recommend him to anyone considering taking computer science.	Bi-weekly assignments which can be killer if you leave them for the night before. From what I'm told, his assignments are actually easier than the ones previous 1007 professors have assigned. LONG midterm, and a relatively easy final.	0	0	515	2906
905	December 31, 1999	He starts the semester by saying something like: there are two options, you either have "it" or you "don't". If you have it, you don't need to come to class, you have the book and my class notes to study from. If you don't, I cannot help you anyway. So I am just going to talk about stuff that is unrelated to the title to the class. And he does exactly that. There are 3 seperate materials that one learns: the stuff that he takes about in class, the actual material from the book, and the stuff that he puts on exams (which is basically, mathematical riddles). About the exams, he says that they are intentionally difficult to have a wider distribution: "I'd rather have a range of A's from the 70s and above so that I can distinguish between the very good students and the exceptional ones." The truth is that if you've got "it," he is an enjoyable professor. Since the class is curved, the median is a B anyway, even if it is 50/100 or lower.	6 Problem sets (the lowest one is discarded), 2 midterms, one final.	4	0	40	397
941	December 31, 1999	A mediocre lecturer who takes a lot of time to confuse you, instead of doing it quickly like other comp sci profs. At least, that was my impression until I stopped going to class. His lateness policy is a breath of very cool fresh air -- thank god, because the assignments themselves are poorly designed and students are ill-prepared for them. Like in some other comp sci courses (ahem, OS), you get the feeling that the professor and TAs started out with very ambitious assignments that they were going to prepare students for -- until they forgot to do the preparation part. But even that may be being overly generous, because the net result is inexcusable: students have no clue how to approach the programming, and TA office hours (again, so much like OS and other high-level CS classes) turn into unofficial cheating sessions where beleagured TAs have no choice but to disseminate crucial information (that the rest of the class doesn't get). I don't know if Feiner and his TAs even realize how much potential for learning gets thrown out in the process. And while there may be worse professors in the department, that doesn't make Feiner good.  The bottom line?  Steer clear.	About 5 large programming assignments (large in frustration and time-consumption, not in excessive educational value). Midterm and final that (are we used to this yet?) evaluate primarily whether or not you take tests well, and secondarily whether or not you watched the course videos on fast-forward the night before.	0	0	39	2634
972	April 05, 2001	Amazing! Has a wonderful sense of humor and keeps the class flowing and interesting -- keeping in mind that this is a CS class, that's unbelievable. He actually incorporates such devices as comedy, wit, and humanity into an intro to CS class. A CS class! He is absolutely a must take for CS. Cannon is fabulous! Any class he teaches is worth taking. Any professor whose computer's DOS command line reads: is a must take! While first time CS students may struggle at the beginning, it's largely due to the sheer bombardment of new material that has to be absorbed when learning to program for the first time (many students don't take Cannon's studying suggestions seriously -- as he says he expects since he wouldn't have listened to himself when he was an undergrad). The workload is very do-able though, especially compared to what Data Structures is alleged to laden you with.	Biweekly assignments. Every other one is a "hard" assignment. Fairly easy midterm if you know what you're doing.	0	0	515	2906
8869	May 18, 2004	Great teacher!  Makes the material bearable, very very helpful in office hours and through e-mail, gives fair exams, and is also a very fair grader.  Makes this hellish class not so bad.  You'll learn quite a bit.	3 theory hw's, 3 programming assignments, midterm and a final.  All manageable.	2	0	1671	1622
5872	May 23, 2003	Great teacher, definitely one of the best lecturers in Columbia CS department. This is a rough class, but any class that involes with operating systems is rough, there's no way out. Hacking the linux kernel will be the most frustrating thing you''ll have ever done... but you'll get a lot out from this class, in terms of programming skills and systems knowledge in general. This class will also definitely help you to get a job if you are interested in doing IT as a lot of big firms are now hacking the linux kernel for their own benefit.\nOne warning: WATCH OUT FOR CHEATING FOR THIS CLASS, this class is notorious for cheating and THEY'LL CATCH YOU!!!\nBut this is definitely a fruitful class, definitely one of the best CS classes i took at Columbia	6 Homework Assignments (Written and Programming)- The lowest grade assignment will be dropped.\nMidterm and Final	6	0	45	2384
5873	May 23, 2003	Great teacher, good lecturer and cares about the students a lot. \nHe knows a lot about discrete math and he's very enthusiastic about it. Even though he covers number theory which other teachers who teach discrete math don't, this class is still very vaulable and u'll learn a lot from him. His tests aren't bad at all.	9 problem sets, midterm and final	0	0	515	397
5875	May 23, 2003	It is true he grades very easily, gives very easy exams, and doesn't give much work, and many students seem to like him for that. However, as a teacher, he is either incompetent or apathetic. Usually without notes or any sort of reference, his lectures consist of mumble-jumble and untidy, all-over-the-blackboard scriblings that are more often confusing than not. I could hardly focus in class and, when I did, I had no idea what he was talking about. I would not dare to say this with many other professors, but with Traub, the ineffectiveness of lectures is as least as much his fault as mine. In addition, as one of the senior faculty members, Traub seems to be very into research and to have a lot of administrative duties, which may explain the quality of his teaching. On the plus side, he is a very friendly and relaxed, even somewhat fatherly to us little undergrads. Also, I imagine that, if you are a very dedicated student who reads ahead of class, knows what the lectures will be about, and makes every painstaking effort to stay awake for all 75 minutes, you should be able to understand him. (But then, given that most normal students study from the book on their own, the question will be: if you are so good, why do you have to go to class at all?) So, yes, he is your man for your A's and A+'s, but little else.	On average, a few easy HW questions per week. Midterm and final were both very easy (in particular, they was nothing tricky or any harder than the HWs). A lot of extra-credit opportunities.	10	3	1028	861
638	December 31, 1999	At first, I really thought this would be a great class--Professor Galanter seemed like a funny guy. But as time passed, I realized that his funniness was the exception, not the rule. Most of the time, he is incredibly boring. Many people hardly ever bother going to class. Also, it doesnt help that the material is not in the least bit interesting. The texts are too long, and seem to be books that he authored or co-authored, or that were authored by authors with whom he co-authored other books. No doubt, Professor Galanter is incredibly talented in this field. I am often impressed that he is able to lecture in great detail mostly without referring to notes. But the class seems not to be about psychology, but about topics that he is interested in, which are mostly dry, incredibly boring statistical analyses of basic psychological processes. I can't remember the last time that I went through a whole class period without falling asleep once. Usually the only thing that keeps me awake is my metaphysical ponderings on why exactly I am sitting in that gigantic surreal lecture hall--the information that Im hearing isn't useful for anything, and by God it certainly isn't interesting. So why am I there? And of course, there isn't any good answer to that question. So I usually just give up on thinking about it and go back to sleep.	3 quizzes (generous curve), participation in three hours worth of psychological experiments. Insane amount of reading that basically no one ever does.	0	1	178	NA
739	December 31, 1999	Professor Gallanter's ability to lecture is unrivaled in my experiences here at Columbia. He did what I had initially thought of as unthinkable: he took psychology and almost made me believe it's a science. It's a good thing the class ended when it did, otherwise he might have had me fooled. Professor took dry, almost unintelligable material and made it interesting - even to an engineering student. Some people in the class considered Professor a "dinosaur" or "relic of the past"; I'd heard more than one or two frustrated mumbles during the course of any lecture, leading me to think that psychology students had begun to feel hostility towards a man who tried his damnedest to have the course live up to its name. So, if you are willing to read a few pages a week, attend lectures that inspire awe in whoever remains awake throughout them, and are willing to deal with 3 multiple choice quizzes in which even simply crossing out two wrong answers per question can get you a decent grade (and it takes little more to do really well), then this class is definitely worth your time.	3 quizzes, no final exam	2	0	178	NA
788	December 31, 1999	If you're interested only in satisfying your science requirement, this is a great class to do it in. The reading is relatively light and if your TAs are good the three "quizzes" that are given are fairly easy. If you want to learn about psychology, however, you had better look elsewhere. Galanter isn't interested in teaching the class - his lectures are often a collection of personal anecdotes and name dropping that take up only two thirds of the alotted lecture time. He has no plan for teaching the class and chooses to lecture on whatever happens to strike his fancy. He does not cover a lot of the things a tradition psych class might and spends a disproportianate amount of time on some extremely boring areas that are the focus of his research. Although one shouldn't expect to learn a whole lot about psychology, on the whole the class is a reasonably pleasant experience.	Three relatively easy "quizzes" with a gentle curve in the B to B+ range. The last quiz is given on the last day of classes, so its one less thing to worry about during finals.	2	0	178	NA
998	April 09, 2001	Eugene may be a little nutty sometimes, but his charm and wit make his class worth tolerating all of his idiosyncrasies. He firmly asserts that for $38,000 per annum, one ought to get more from a class than a reiteration of the text. Indeed, Galanter will give you great stories, bad jokes, and some insights into the science of psychology. In the end, if you need an intro psych class or a science credit, this is the way to go. Galanter is, at the very least, a fun old fart.	The quizzes (3) are cake. If you bomb this stuff, you're either incredibly lazy (in which case it's your own damn fault) or an idiot (in which case I humbly ask that you leave CU).	2	0	178	NA
1000	April 09, 2001	Galanter is insightful, the class is amusing, and watching an ass-clown get humiliated is priceless. (see this definition of "ass-clown.") If you're into political theory and like psych, the class is fun and easy. Galanter sits back, lets the students do most of the teaching, and makes frequent comments from the peanut-gallery. But if you require an organized syllabus, forget about this one. Galanter lets the course wander where he and the students want it to go. My only objection was to some of the other members of the class. A few morons can really ruin a small class, though Galanter occasionally enjoys putting an ass-clown in his place. Rolling eyes, scrunched noses, and sarcastic retorts were commonplace. A word to the wise: take this after you have taken his intro psych class and completed CC (unless you have a prior experience with most of the works).	Midterm, 10 page paper, "technical exam"	1	0	178	NA
1148	July 07, 2001	Okay, so you've read all the other Galanter reviews--so you get the picture. If you do choose to take his class, follow these rules: 1.) Go to the first class, sign the role sheet, find out the "quiz" days. 2.) come to class on the days of the "quizzes". 3.) pick a method for taking the incoherently difficult multiple choice quizzes (I personlly recommend "eenie-meenie-minie-moe") 4.) in a Zen-like manner, accept your B+ or A- at the end of the semester.	works written by Galanter or works written by people with whom he has co-authored. trust me, do none of reading--you'll get the same grade regardless.	0	0	178	NA
1224	August 14, 2001	I wanted to like this class. Yet I found Professor Galanter's explanations indecipherable and when I looked around the other students seemed stunned by the rambling lectures, like deer caught in headlights -- uncertain which way to turn or whom to ask. The day before tests, teaching assistants would come and, at the last minute, explain what Galanter really meant, to prepare us for the multiple choice tests. Assistants explained that in general students tested below the C level and to compensate the tests were curved upwards. With that bit of information, I dropped the class. I found it absurd to spend a semester attempting to learn that which Galanter seemed either unwilling or unable to teach effectively. Also, his requirements that his own books be used as textbooks and that we memorize pages of forumulae seemed pointless.	If you want to do well, you must have someone else explain it to you, creating more work than one would do if the class were taught more efficiently. A great deal of time must be spent memorizing.	0	2	178	NA
1391	November 12, 2001	I like his lectures, and they have prepared me well for the quizzes, on which i've gotten As. This guy is NOT so bad.	3 quizzes at 30, 30, and 40 percents of your grade. No final.	0	0	178	NA
1662	December 23, 2001	I loved the class. I sat in on it just to check it out the first day and loved it. Sidorsky is a very sweet men, he is what I imagined college professors being.	Not too much at all, very interesting reading that the prof goes over very well. He chews it up over and over again. He is supposed to be an easy grader, but this is his hardest class. I heard other classes are easier.	3	1	856	NA
1823	January 19, 2002	His philosophy is that if you're not able to to argue with him in the middle of the street after the course then he's not doing a good job. He really really really goes over the concepts - rather than trying to get through a long reading list. Some found his style repetitive and complained that we didn't read a lot, I didn't mind all - he places the readings in the context of a "paradigm" and draws in all these anecdotes and arguments that he could talk about the first paragraph from politics for the whole semester and make it fascinating. Plus, you'll actually remember some of the stuff , and for the exams there's really no cramming needed, just understanding the main ideas. I really recommend this class - as an intro. Or later course... but you might find other philosophy professors hurried and shallow after taking it.	Very light. 2 ungraded short papers, 2 exams. He says it himself that he's an easy grader.	2	0	856	NA
1870	January 21, 2002	I don't understand what the other reviewers didn't like about Galanter. His lectures were extremely interesting, and he explained them in great detail. His stories always related to the subject. I never missed his class because I didn't want to. He makes you read from four books, three of which were boring, but if you do the reading and study your notes you'll ace each exam. By ace I mean A+, because he gives those out. His system of letting you mark the incorrect answers is fabulous, you can get a lot of credit even if you don't know all the answers. Take his class if you can, his lectures are enthralling if you care at all about psychology.	3 quizzes (the last one is cumulative and in lieu of the final), a decent amount of reading.	1	0	178	NA
1985	January 29, 2002	Sidorksy is one of my favorite professors in the department. His course is excellent, and after taking it, I still remember the key philosophers and concepts. Basically, he is interested in providing a structure for understanding moral philosiphical thought by studying in depth 4 key philosophers. He is a brilliant and sweet man, and his course is excellent. I highly recommend it.	Very light.	2	0	856	NA
1990	January 29, 2002	Sidorsky is a kind old man who cannot see very well so attendance isn't necessary unless he knows who you are and may randomly call out your name in class. But he does pass a sign in sheet, and he might threaten to compare signatures to see if your friends sign you in, but he won't. He tells funny stories about the legacy of Columbia. He knows his philosophy very well, but he sticks with his own opinions. When he makes fun of people in class it is hilarious. He is softspoken and a good lecturer although he repeats stuff alot, which is good, because it instills the fact into your brain. Go to class, buy the little book. Don't read it, listen to the man, and you will do fine for exams.	There is one small reader, which you don't really have to read. There is a midterm and final. he is a very easy grader. If you don't get an A you don't deserve to go to Columbia	1	0	856	NA
2005	January 30, 2002	Famous quote to a student: "Do you realize how stupid you sound?" You must go to class, and you will want to because you will love the way he teaches. He may seem disorganized to some but he is actually extraordinarily eloquent and knowledgeable. He will drill certain points about the books into your brain. You will leave the class remembering these points. He gives a lecture class more than a discussion. Who wants a class discussion anyway? I'd rather listen to his sage insight than that of the obnoxious girl down the hall. How many CC professors can say they've read Plato's Republic 60-70 times? Remember, little sophomore student, always choose a professor over a graduate students - the older the better - the more knowledgeable.	Sidorsky is the greatest!. Fair grader. The best! Midterm, final. No papers unless you choose a paper instead of a midterm.	2	0	856	NA
2109	March 04, 2002	I am taking this class in this semester (spring 2002), so I can't say anything about the final, etc., but I can say a lot about his teaching style. He sucks. He rehashes the same things over and over again until you want to shoot yourself. We move so slowly that it is unncecessary to stay after you've signed the attendance sheet, so long as you know someone in the class who will give you the dates of the assignments. I learned far more about each of the subjects from two CC classes than he addresses in the entire course. Worst of all, there are like three people in the class who raise inane questions that he misinterprets and debates with himself for 20 minutes at a time. The only plus is that it is total cake.	None to speak of. 3 pages (yes, only three!) of reading per class from this really simple textbook, two ungraded one page papers, a midterm, and some sort of final (you vote).	0	3	856	NA
2656	May 13, 2002	This was one of the most un-Columbia-ish class I've ever taken. The entire workload is 3 multiple-choice quizzes, and the curve is so huge that you'll think you're a Harvard student. Galanter takes a very history-based approach, so this is great for the non-science-type person who needs the class for the Core. Lectures are somewhat interesting and peppered with Galanter's crude sex jokes and anecdotes, but they often get boring when he goes off onto tangents. Few people bother showing up, anyway.	3 moderately hard multiple-choice tests. Don't worry about doing well on them, since the curve is massive. There's also opportunity for extra credit, and you have to go to 3 hours of experiments, but this is actually somewhat fun (you get to participate in weird mind and memory games and stuff). Only a little reading, but you're so not gonig to open the books even once, so it doesn't even matter than the reading (most of which is written by Galanter himself) is way above the head of a student taking his or her first psych class.	1	0	178	NA
2681	May 14, 2002	Professor Sidorsky is awesome. He is an old-time Columbia professor who teaches class the way a philosophy class should be taught. He is a fantastic lecturer. He repeats himself A LOT, but this is his pedagogical style. He is extremely effective at communicating the material, though it is easy to drift in class. Particularly when he talks about 20th C. philosophy, he has fascinating anecdotes (mostly because he was friends with these philosophers personally). For a taste of what college philosophy should be like, take this class!	2 ungraded papers, midterm, final. Generous grading	6	0	856	NA
2934	July 08, 2002	People say all kinds of bad things about this guy, but I haven't seen a more entertaining lecturer in this school. Yeah he's arrogant. He's curt and rude with students who ask questions. But thats why his lectures are so hilarious! The workload is a joke, he tells funny stories, his tests are graded on a great curve, he covers the material so you really learn psych with a critical viewpoint, and he makes fun of that guy you always wanted to choke for asking stupid questions. What more could you want?	Three multiple choice tests of equal weight along with pretty simple reading	2	1	178	NA
8871	May 18, 2004	Completely miserable teacher, you will learn absolutely nothing in the class.  He's not even coherent during lecture (which really doesn't matter, considering the few people who actually show up to lecture aren't even conscious).	NA	6	3	1028	861
2977	July 29, 2002	There's hardly any reading for the class, so Prof. Sidorsky tries to back up the material by making allusions to history, literature and music (he even sang in class once). While he's a walking encyclodpedia, he can be pretty repetetive and sometimes his allusions work better than others. As a result, if you're not feeling his reference of the day, you're going to pass out from boredom as you hear him mention it for the twentieth time. Worse, if you don't understand what he's saying, it's hard to steer him away from his theme. Still, some of his tricks work really well, even if he doesn't go into much depth (which none of his lectures really do). My main difficulty with the class was staying attentive, as his old man's voice and repetition makes it pretty easy to space out. This ordinarily wouldn't be that much of a problem, but because the class is so lecture oriented, it's important to pick up on whatever he says.	really light. maybe 5-10 pages of wordy writing a class. midterm and a final. take (good) notes because when you look back on the twenty pages you read, you'll be glad to have whatever extra material you can.	1	0	856	NA
3265	September 23, 2002	Yes, he looks and acts like an old, kindly grandfather. However, like your grandfather, he repeats things to death, as you finally understand what it was like to suffer through torture during one of the great wars. In those rare instances when someone actually asks a meaningful question, he unfailingly misunderstands his/her point, instead turning his answer back into that same, boring drivel he's been saying for the past hour. He may be considered an easy grader, but how can anyone do well when s/he doesn't care at all about the class? If able, you deserve an A for just having the stamina to sit through all his classes. Bring a taperecorder and play it back 5-6 times. Repeat every few weeks.	2 ungraded 1-page papers, midterm, final	1	2	856	NA
3795	December 11, 2002	On the first day of class, Galanter said "This is not a basic psychology course. If you want a normal psychology course I suggest you transfer to NYU or Staten Island Community College." Galanter was right - it wasn't a basic psychology course. He spent the first 3/4 of the semester talking about "Psychophysics" and thresholds, and while he likes to crack jokes every so often, he can get extremely boring. There were 200 people registered for the class - 100 people on any given day, and half of those people were sleeping in their chairs... another 25 either writing down his quotable quotes (such as: "Trees are just big weeds") or drawing pictures of him. Galanter's knowledgeable in psychology - especially in educational psychology & educational testing, but he presents his information in such a boring fashion that you can't appreciate his knowledge. Guest lecturers were a nice break from the banal lectures. Galanters test are "mark incorrect", which means that you can get partial credit if you can only identify 2 of the 3 incorrect answers. However, if you mark the correct answers as incorrect, you can wind up with a negative score. The curves on the quizzes are huge, and the final course grades are curved even more, so that the lowest grade given was a C, and there were A+s... Though I do not recommend this course, as I feel as if I learned no psychology from it, if you do take the class, I suggest that you attend his lectures, even if you sleep through them... many questions on the quizzes come right out of the babble that he says... Also, don't expect him to be very approachable - as far as I know he doesn't even have office hours. The TAs, however, proved to be somewhat helpful at least as far as telling us what was on the quizzes (don't study according to the syllabus). And while this course is extremely boring, it knocks off one of the science requirements.	NA	1	0	178	NA
3965	December 13, 2002	he is a nice professor who makes funny, some times sarcastic jokes in class. always smiles when explaining. he is quite cool in general. the course isnt that bad in general but the prob is that it gets quite difficult quite fast. you probably wont have a choice to pick this course or prof as you got to take this course in this dept. and there is usually only one section offered. the key to do good at this section is that you got to do all the homework by urself!! group work is encouraged/allowed by the prof. but make sure you dont start the night before and end up copying from your frriend. go to all his classes. he gives stuff on the finals and midterms from his lectures. he also gave us this "secret code" to students who go to his classes regularly. needless to ask, he gave that in the midterm as one of the questions. u got to be very regular if u wanna do good in this class. read weekly materials at home before doing Psets.	3 quizzes, will drop the lowest. they are quite easy if you are just barely following the class. weekly PS which are not that bad although can be long and tedious. read the book/his notes before doing the PS. midterms are a bit hard but the final was OK if you have been regular in this course. he also tests how deep your knowledge is in this course, so dont just limit urself to understadning formulas or simple examples. try to dig in...	3	7	1342	NA
4149	December 24, 2002	If thereÃ‚â€™s a moral to this course, itÃ‚â€™s probably post-final regret for having taken this course in the first place. \nMany people take this course because they think itÃ‚â€™s an easy grade. Some of these self-congratulatory pseudo-philosophers sit religiously in the front row to desperately attempt to probe SidorskyÃ‚â€™s infinite wisdom about moral philosophy with equally self-congratulatory questions. I also met a couple people who wanted to learn something more about moral philosophy besides Aristotle, Kant, and Hume from CC. Nevertheless, itÃ‚â€™s an easy grade if (1) you attend class on a daily basis (2) manage to pay attention to each nuance of his circumlocutive lectures (3) repeat everything he says in class and regurgitate it on the midterm and final. However, if youÃ‚â€™re looking to understand post-Kantian moral philosophy, take a rain check.\nIf you manage to satisfy the first three criteria, keep in mind, he also has an annoying predilection for handing out class attendance sheets, writing extremely long midterms and finals, as well as pulling out nine students from taking the midterm because of lack of class attendance. His course is seriously lacking substance, depth, and coherence, but makes up for it by being a nice guy. After all, you have to give him credit for pushing seventy and still teaching.	One extremely long midterm and one extremely long final, in addition to two short 1-2 page (nongraded) papers before the midterm. Plus, if youÃ‚â€™re one of those people who likes to sit in the first 2 rows, you can do the extra 6-10 page paper to bump up your grade or score some extra brownie points with him. He might even remember your name.	0	3	856	NA
4254	January 02, 2003	This was a great class. Galanter is a very funny lecturer. Sometimes you may not have a clue what hes talking about, but that just adds to the fun. The workload is minimal. There are three multiple choice quizzes... and that's it.	Reading, helps on the quizzes, but theres a huge curve anyway.	1	3	178	NA
15167	June 25, 2006	One of the worst professors at Columbia.  Not a mean guy, by any means, probably a genius in his field, yet not a very effective lecturer.  Be sure to know your linear algebra and calculus cold because this is what this course is all about.  If you're a statistics major, all the better, the course will be a breeze for you.  All the rest, keep out.	Not too bad, if you understand the material.	9	13	1636	1921
4374	January 15, 2003	Galanter is one of the most amusing professors at Columbia.  I attribute this to his obvious descent into senility.  Once he couldnt derive his own equations on the board, despite the TAs calling out the answer to him.  In his defense, im sure he couldnt hear them all the way in the front row.  He also says global warming is ok, since Columbia is on a hill and should survive a rise in ocean levels.  That said, his lectures were cures for insomnia.  I have never seen more people openly sleeping and drooling before.  But his personal anecdotes are really funny and disturbing.  Evidently, the army considered using pidgeons to guide the controls for missiles in the 50s.  But if the class is too boring for you, its ok.  Galanter encourages people to not attend.  He also makes his quizzes open book, which helps alot (except for the poor delinquents who missed the class where the open book thing was announced).  The grading is cake, with probably the most generous curve i have ever seen.  It didnt seem like a curve,  more like him bumping up everyones grade by a letter.  All in all, definitely worth it for the science requirement.	What work?  Three open book multiple choice quizzes with the possibility of partial credit.	2	2	178	NA
4519	January 20, 2003	"Let me reiterate - this class is a joke."  "I will love you just as much, regardless of the grade you get on my quiz."  "I mean, who cares what you get in this course?  It's stupid!"  - Eugene Galanter\nGalanter's class, half self depreciating comments and rediculus stories, half aimless rambles about quasi-psychophysics, is more like visiting hours with a semi-senile great uncle at the old age home than a class that fulfills the college science requirement.  Rest assured that you will learn something about psychology - mostly from the paragraph or two you read from the textbook in the middle of an open book test - but lectures consist of dead time between amusing and just plain bizarre comments.  Galater is senior faculty in his department, and he knows it.  He no more wants to be teaching an intro course than anyone in the class wants to be there.  Though it's more than obvious that he knows his stuff, he has a bit of trouble transmitting his knowledge, whether it's because he can't hear a question shouted out from the second row, can't remember how to derive a formula ("Look in my book," he advised us, "it's all there, written when I was a lot younger, a lot more coherent, and, if I'm remembering correctly, sober.") . . . lectures aren't too necessary, but miss one and you risk missing one of his gems.  Overall, a class worth taking for the science requirement.  You'll walk in confused, stay confused throughout, and be even more confused, though pleased, when you receive your A.	Three open book quizzes, given in the most annoying style possible - mastering the "cross off the right answer" method might be the most difficult part of this course.	5	3	178	NA
4530	January 20, 2003	This class was one of the most enjoyable classes I've taken at Columbia.  Galanter is old and quirky, true, but he's a great professor. He really knows his stuff, and he loves to share it.  He's really opinionated and full of weird facts and stories.  His lectures are really entertaining.  If you're looking for a teacher that'll know your name and discuss your problems, he's not the one.  If you're looking to meet a real individual who has alot to offer if you're open to it, you've struck gold.	A breeze! Attend the lectures (you're guaranteed to learn something new) and scan the readings before the 3 exam.  If you're even only slightly intelligent, you'll do fine.	1	4	178	NA
4825	March 05, 2003	Abandon all hope!\nI have never been more uninspired by a professor in my three years at Columbia.  Yes, Sidorsky is a walking encyclopedia... but like an encyclopedia, he should be but on the shelf and rarely used.  Class lectures are not only repetitious... you may actually find that they go backwards.  There's nothing quite like the feeling when you're in the 5th week of a class, and you're rehearing material from the 3rd week... and then the 2nd.  \nMoreover, the readings are useless and have little to do with anything Sidorsky says in class, which is the crux of all graded material.\nThe tangents get out of control -- so much so, that the class should be titled "20th Century Philosophy  -or- Oh, I Digress"\nAs it is not a required Philosophy course for majors, I advise you to avoid it at all cost.  Pursue Kitcher, Vogt, Varzi, or Collins for your electives... at the very least, you'll get a cohesive introduction to the material.	Midterm and Final -- completely based on lectures, so DO NOT miss class (good luck with that)!	0	3	856	NA
5358	April 26, 2003	well, you already know...Sidorsky is OLD...he has a watch that talks to him so that he can tell time; he writes chicken scratch on the board that he randomly points to during class, and he REPEATS, REPEATS, REPEATS to the point where sometimes you feel like shooting yourseld. Nonetheless, at the end of the class, you come away with a REAL understanding of what these philosophers said...something I can't say about CC. Take the class if the subject mattter interets you; feel free to skip a few classes (But not too many) and you'll be fine.	2 one pages response papers (not graded, absolute cake) midterm, final (i think the class voted on this, but it's pretty much what sidorsky promotes unless someone comes up with another method). Midterm and final are EXTREMELY time-pressured, but grading's not too bad.	4	0	856	NA
5421	May 03, 2003	Terry is a sweet and brilliant man who should be chair of the music department but is instead relegated to being technical director of the Computer Music Center.  It's a testament to how screwed up Columbia's teaching priorities are that Terry is only an adjunct and draws his main paycheck from fixing speakers and mixing boards, especially since the man has a doctorate in composition from Cincinnati Conservatory and is one of the best performing mandolin players in the country.  The class is based on learning Pro Tools and recording music yourself in a studio up on 125th Street.  Along the way you learn about music production and things like microphone technique.  Terry is also a fountain of information about music history (both pop music and classical) and you might find that you learn more about music in this class that you did in Music Hum.  He's also always available to help and will gladly spend an hour (or more) hanging out with you and talking about your creative ideas.  The class is incredibly hard to get in to (like everything at the CMC) and you run the risk of getting bumped by a grad student, so get on the waiting list now.	You spend the entire semester working on a creative music project of your own.  Along the way the class does team recordings of Beatles songs in class, which are used as a foil for Terry to talk about the day's topic.  As with all the CMC classes, you will get an A if you show up and are interested.	0	0	1586	NA
5510	May 07, 2003	This guy is a living legend.  Columbia should interview him to get his oral history of the whole place.  He's a great professor who knows everything about everything, period.  His lectures are well-organized and easy to understand.  His weakness is a tendency to repeat himself, sometimes repeating whole lectures to drive home a point.  He always answers questions in a lengthy format.  He's aware of this tendency and makes fun of himself but still does it.  I still recommend him, just be patient.	Weekly readings, midterm, and final.  Readings were on the short side.	6	1	856	NA
5621	May 12, 2003	Well, I still learned a lot, but this wasn't the semester to take it, since Terry spent much of it in the hospital. As a result, the class didn't cover nearly as much ground as in past years, since he and his sub Graeme White overlapped a lot. None of this is Terry's fault, though, and as long as he stays in good health, this will go back to being an awesome course. The nice thing about Terry being only an adjunct, as a previous reviewer was complaining about, is that he's available to help you out all day, every day. And he will, too. He's such a nice guy, knows everything, and is excellent at imparting what he knows. This class is a great resource, and a must for songwriters and composers. (Plus you get use of the Prentis studio till you graduate!) Get on the waiting list now.	Just showing up is enough to get an A, but you'll want to give it your all because you're working on your own music.	0	0	1586	NA
5929	May 28, 2003	Very interesting professor with well-delivered lectures.  He presents the material well, though there is a lot of it to cover.  A good elective if you're interested in scheduling because it covers many topics and the lectures won't put you to sleep.	Weekly problem sets, midterm, project	6	11	1342	NA
5987	June 04, 2003	Don't take this class if you're not willing to do work or put the effort in or aren't very competent.  I found it great, but others may dislike it due to the high level of understanding it requires.  the other reviewers basically said everything else, but the accent is not bad, the lectures are online, and if you need any extra help, it's available.  you'll know if you can handle the class after the first homework.	Very nicely spaced out programming assignments - don't wait till the last minute.  the later assignments are less constricting as well.  the midterm required a lot of mathematical understanding, but the final was take home and rather straight forward.	0	0	1588	2634
5996	June 06, 2003	Great teacher, though somewhat boring at times. Teaches you many advanced things, but never tests you on the advanced topics. Flexible and caring, very nice during office hours.	HW's take a while to write, so start early on them. Easy midterm and final	2	0	1671	2008
6062	June 25, 2003	Shlomo was very fair in the workload he provided us over the course of the summer.  Instead of standing firm on his decision to provide five assignments, half of which consisted of programming, which was the most time-\nconsuming portion of each assignment, he eliminated the final programming project and replaced it with more theory questions.  All this at the request of the class.  He's very responsive, both in the classroom and via e-mail, and is helpful during office hours.  My only complaint is that his handwriting is a bit untidy, making it difficult to read from the board.	Five homework assignments, a midterm, and a final.	3	0	1671	1622
6180	August 06, 2003	Prof. Malkin is one of the is the best professors I have had in the CS department.  She's brilliant, but can explain topics clearly and doesn't make you feel like a moron.\nGo to class because the homework and test questions are based on her lectures.  She's very friendly and approachable.  However, don't even try to BS her.  She will not give out last minute extensions (unless you have an emergency) and collects homework at the beginning of class or it's considered late.\nTake the time and do the problem sets yourself.  This is one of those classes where you cannot cram the night before the test and expect to do well.  You have to really understand the concepts.	Problem set every week, reasonable midterm and final.	7	2	1621	234
6245	August 23, 2003	I agree with almost everything that has been said already here: The man is brilliant, he has an exceptional memory, he will repeat himself, his eyesight is terrible (I'm sure he's legally blind) and he is very very boring.\nThe eyesight didn't seem like it would be a problem until you see how he writes on the blackboard.  If you're like me, and generally lose track of things once in a while and need to refer to the board to get caught up you're in trouble.  Almost all of it is unintelligible.  It is chicken scratch.\nHis memory can be great because he can talk about anything, and his memory can be terrible, because he can talk about anything.  After spending 30 mins on a subject completely off topic he will return to almost exactly where he left off in the discussion.  I personally found it rather hard to follow though I am sure some people would be fine with it.\nThere was a lot of quite difficult reading in the class, and because of lectures being rather boring and the chicken scratch on the board, it was essential.  \nI personally regret taking this course though I can understand how others would disagree.	Dense, though not terribly long, weekly readings.  Mid-term and final.	0	0	856	NA
6314	September 01, 2003	Professor Allen is an extremely lucid and straightforward lecturer, and the material he teaches is extremely valuable. I had no problems understanding material after going to classes. He taught the class for CVN students as well, and even viewing his lectures on video was pretty useful. He does berate students a little bit, but usually if they are acting irresponsibly stupid.	Six homework assignments, roughly half pencil-and-paper problems and half programming problems, usually one extra credit programming problem involving GUIs, reasonable midterm and final. I think the biggest problem for students in the class is writing the Java programs. There's a lot of GUI stuff, and the head TA did a reasonable job preparing you for it. I'd done Java for a couple years and the programming assignments took quite a bit of time -- I can't imagine how long it would have taken for others who had much less experience with Java.	0	2	37	1622
6322	September 01, 2003	Some of you think that only the "bad students" wrote bad reviews for Prof. \nRamamoorthi. The fact is, first day of class there were people in the hallway because the class was so overcrowded. By the end of the semester, about ten people showed up to lecture. I guess most of the class consisted of students who were doing badly.	NA	4	0	1588	2634
6367	September 03, 2003	BY FAR the best professor I have had at Columbia. His lectures are very ogranized and he really makes an attempt to explain everything. He is a sincerely nice guy and actually cares whether or not his students understand the material.  Some of the stuff covered in this course is really complex, but he is able to break it down to make it more understandable.  He likes when students ask questions in class and he really tries to make sure he answers them sufficiently. He tries to get to know the names of all his students.  His office hours are really helpful...they were always packed when I took this class.  In a nutshell...this guy is awesome.	Pretty crazy. 6 problem sets. They were all pretty hard but the last one was insane. Take home final which was relatively easy.	8	1	1724	462
6451	September 24, 2003	Terry Pender proves that there is life after majoring in music!  He has a huge understanding of recorded music and the recording process, and you'll learn alot of the history behind recording, as well as MIDI production.	Final project (anything goes).  Don't take the class if you don't want to schlep up to 125th.	4	0	1586	1335
15340	August 28, 2006	This class became my favorite of the semester in no small part due to Prof. Mauel. He is an excellent teacher. I had not seen that level of enthusiasm in a teacher before. Sometimes he'll even exclame: "Isn't that cool?!" I sincerely hope that I can take another course of his before I graduate.\nI had no real programming experience before this class. I had worked a little with computer algebra systems before, but not extensively. This course gives a broad introduction to the world of computational science. It makes use of Mathematica, which is installed in all the computer labs. The topics vary from year to year, but expect to see some of the following:\n* Orbital dynamics\n* Chaos theory\n* Fractals\n* Digital signal processing, e.g. image/audio compression, filtering\n* Protein folding\n* Quantum mechanics\nEvery week, Mauel gives an assignment that incorporates much of what was discussed in the last class. All the files are available for reference and often all that is necessary to complete the assignment is to copy and paste the code from the class notebook into the homework notebook and modify the code a little. You don't need to be a programmer: just pay attention in class and don't be afraid to ask Mauel for help. He is extremely helpful and understanding. Mathematica has detailed help built-in for every function. Information can be looked up very quickly.\nIn addition to homework assignments, the class has 4 projects to be completed through the term. There is no final exam. The projects are like harder homework assignments. If you satisfy all the basics, he'll give you an A. If you really put in the effort and do something original, he's happy to give you extra credit.\nOf all the pre-professional courses, this one may be the trickiest, but you'll learn a lot of really cool stuff and Prof. Mauel is a fantastic teacher.	Moderate: 1-3 hours for a homework assignment\nWorkload can increase substantially if you complete original projects.	2	0	44	NA
6467	October 02, 2003	No one sums up the CS department's mediocrity more than Peter Allen.  Tough, challenging, and rewarding?  PLEASE...  He may not take any bullshit, but he hands it out in huge buckets by making his students write Swing interfaces for every assignment.  So when do you write the actual *data structures and algorithms*?  You don't -- you copy the textbook's code, then stay up 'till 5am writing 5000 lines of JFrames and JOptionPanes.\nI've tutored literally dozens of Allen's 3137 students, and the only thing they seem to have learned from him was bad coding style.  It's not all his fault -- if the CS dep't is going to use Java, then 1007 has to teach the basics of OOP.  Yet almost no students come into 3137 understanding the basic concepts of abstraction, and Allen goes out of his way to make the situation worse.\nFor example, here's one absolute law: Keep the data structures and the GUI in different classes!  If Allen were really a no-BS kinda guy, he'd give zero credit for anyone who put Swing code in their Stack, BST, etc. classes.  As it is, his 3137 is a lesson in producing awful hacks.  Laying your code out in a clean, maintainable way is a THOUSAND TIMES more important than blindly adding Swing objects to an ADT class until something appears on the screen.  But Allen requires none of the former and oodles of the latter.\nThis the kind of class that makes people hate CS.  Compare it to a really successful and challenging course, like MIT's 6.001 or even Gross's Discrete Math here, and you see how we're shortchanging our students and turning potentially talented programmers away from CS for life.  This course is worse than useless.  Yes, Allen is a contemptuous waste of time, but he's just a symptom of the stale status quo in Columbia's CS department.	Infamously tedious.	7	1	37	1622
6559	October 30, 2003	Whether coincidentally or not, Sci Comp II bears a strong resemblance to Sci Comp I with Traub. This is basically a linear algebra class, except Wozniakowski teaches the material completely differently from how the book (which he doesn't order himself, he just says to get it at the bookstore since its the same book that linear algebra uses) shows the material. His classes are hit and miss. Sometimes he'll teach all new material, provide interesting history behind certain things, and generally make the material engaging. Other classes, however, are boring and drawn out reviews of previous classes. Beware that to do some homeworks, you need the book to understand what is going on. Otherwise, they are pretty easy.	Biweekly homework assignments (usually one program, one problem), open-note midterm, final.	2	0	1749	3992
6602	November 07, 2003	A very affable old man and a decent lecturer. However I feel that he makes this class harder than it is supposed to be by covering topics not in the book or by going in deeper Math than appropriate and necessary for the Computer Science major. Of course, this can a great thing if you're interested in CS theory, Quantum Computing in particular, which is his field. The average student though may find his class to be reasonable and clear, before he suddenly veers into something nobody understands. Sidenote: this class is at 9:10 so a lot of people don't show up. I missed some classes myself--the apparent confusion is partly our responsibility.	Biweekly homework problems that take an hour or two if you understand his lectures (there's little need to read the book if you do). Many of the HWs have extra credit questions, but everyone seems to finish those so I'm not sure how they'll help in the end.	2	0	1749	861
6609	November 08, 2003	Like the other review says...Keromytis definitely know his security stuff...however, in his teaching approach, he assumes students know just about as much as he does. His lectures are interesting, however they do not correspond to the programming assignments at all. The assignments are a lot of work, and he just dumps it on you with no help whatsoever. He is somewhat snobby, and not at all approachable...but if you love security, and think you can handle programming it, than the class is for you.	5 homeworks, 50% of grade (includes programming & theory) midterm (not too hard, 25%), final 25%	3	10	1472	2401
6695	November 15, 2003	The class seemed like it could be interesting and while the subject wasn't too bad, the workload was miserable. You cannot miss a class, nor can you skip any of the tons of reading and worst of all, hes a terribly difficult grader.	HARD	0	9	856	NA
6697	November 16, 2003	He is awesome.  Great guy.  Actually talks to the class and engages us in conversation.  Midterm was easy and he posts sample solutions for problems very similar to the homework problems.  You'll want to take any class with this guy.	1 midterm/1 finalweekly homeworks	0	0	1777	238
6699	November 16, 2003	Professor Belhumeur is a really nice guy, but unfortunately it seems like he doesn't put much preparation into his classes.  His lectures are straight from the book, which doesn't help since the book examples are over-simplified.  It seems like he doesn't really look over the class material all that much... he just teaches from his notes.  I bet he would take a long time to solve those homework problems, because only the TA's see/grade them and he directs all homework related questions to the TA's.  Not surprised though, since Digital Logic is no where near his field of expertise.\nAll that aside, he still makes sure that students in the class understand the material, and he listens to student's demands (homeworks too long, etc.)  He'll even make the TA's do more work (post practice problems) if the students demand it.  He's approachable, and buys drinks for students during exams!\nOh, one more thing... Belhumeur is about as punctual as a college student... don't be surprised if he walks in 10-15 minutes late and doesn't start class for another 10 minutes after that.  It's fun betting on when class actually DOES start...	Weekly problem sets straight from the book, but seems like little thought went into selection of problems.  Relatively easy midterm, final yet to be taken.	0	0	1777	238
6757	November 17, 2003	Truly, one of the VERY BEST professors I've had at Columbia (I'm a CS senior)--the whole school, not just the department. Both super intelligent and very capable of transmitting his knowledge to students (I heard he won a lot of accolades for teaching back at Harvard.) His lectures are very well-organized, and he recaps key concepts every time to ensure students follow. Rocco is also a very nice and approachable guy, always encouraging and answering questions in or out of class.\nThe subject material is very, very interesting. It is also very abstract and may be difficult for those who are not well-versed in CS theory and math. All the HW questions are proofs.\nHis problem sets are challenging and take a lot of time. But I think it is worth it. If you care about learning (he certainly cares about teaching) and are willing to work hard and think a lot, you will definitely enjoy this class.	6 difficult biweekly problem sets (I'm rather weak in math/theory, and each HW takes me a good few days of on-and-off thinking and writing plus TA help. Bottomline: don't start the night before.) Also a final implementation project.	10	1	1724	2287
82368	September 15, 2020	This is the most disorganized course I've taken so far. Homework instructions are unclear, piazza management is a mess, lectures are so slow and boring. He is probably the worst professor I've taken class with. Just avoid him.	I'll say if by clearly seeing the requirement instead of having to search in piazza posts to see what is wanted, the workload is not so big.	21	5	6653	664
6861	November 23, 2003	Excellent course taught by an excellent professor! The course revolves around the idea of teaching a computer to extract information from visual images, such as the position of an object, the position of edges, shape/depth of a scene from multiple images. Some of it will make you rethink the many things we as humans take for granted, and Shree likes to insert pertinent biological/philosophical/tech-biz tidbits that encourage an appreciation for the material beyond a purely CS perspective. The underlying theory could potentially get very mathematical, but Shree avoids that and focuses instead on the general ideas and principles. In sum, the subject material is interesting, challenging at times but rarely impossible.  As a teacher, Shree is one of the best out there. He is entertaining, funny, and very dedicated to making sure we learn. He is also a very effective lecturer with excellent presentation. So, although he is quite a busy man (a lot of conferences to attend) and had the TAs teach a couple of classes, I feel that we learnt more in his classes than usual.  All in all, a great experience and highly recommended.	5 HW assignments, each of which involves both writting exercises and 3-5 programs. Programs can be challenging, but again there's nothing impossible. Shree and the TAs are very helpful. If you keep up with the class and don't procrastinate, you will be fine.	10	0	1812	2386
6898	November 30, 2003	In my opinion, Prof Nieh lives in the unrealistic world where a day has 48 hours or more for a student. The work load is way too much and his lectures are absolutely useless when it comes to doing the programming assignments. He might be an intelligent guy but anybody can handle an operating systems course by repeating what is in the text book.  I dont understand how this course has become so popular over the years. The regrading procedure is bureacratic crap and it makes life more miserable for the students who dont have the time to write down lengthy explanation as to why they require a regrading, as they are otherwise busy trying to complete the programming assignments. I believe there are easier more effective ways to learn Linux than trying to cramp it all in 2 and half months.  I would never recommend this course to anyone.	5 best out of the 6 programming assignments, midterm and final	6	8	45	2384
6900	November 30, 2003	Professor Stein could just be a massive relief: after so many classes with professors who barely speak english, or who simply should never have entered the teaching profession, Stein is the kind of professor you would expect.  Not spectacular, but certainly competent.  Stein is quite prepared, and treats the teaching of the class seriously with extensive examples and preparation.  \nStein personally seems to be annoyed with students.  But you get the feeling that if you needed his help on a real academic question, he would answer; he did not take well to the usual bullshit students give professors, such as showing up late, homework nonsense and the like.\nAs for the course itself, mathematical programming is the study of optimization: you have an objective such as profit, subject to sets of constraints.  Certain topics, such as the simplex method, are quite useful, but the course is about as immediately useful as the undergrad IEOR major in general (read, not). get a phd.	Weekly problem sets, which can be long if you haven't done the reading.  Weekly recitation sections are supposedly mandatory, but nonetheless completely useless.  The exams are very much class-based.	9	11	1342	NA
6906	December 01, 2003	Teaches verbatim from the book, which is not a very good book. The examples he uses in classs are simply a regurgitation of the book's examples, except that he often makes errors in presenting them (which is usually fairly understandable -- but since he did not design the examples, he has trouble finding his errors.) Lectures are boring, though he does have moments of personality.	It's a programming class. You write programs. They get tougher as they go along, and some of them build on earlier programs. The real problem here is not the programs themselves, but rather the amount of time you get. He designs them as two-week projects, but he *always* forgets to post them until after the weekend, which means that they become 10-day programs (with only one weekend to devote to them.) Homeworks consist of a theory part and a programming part. Not too bad, but the TA's are of absolutely no help, and the seminar sessions are a waste of time.	0	1	1442	1622
6999	December 07, 2003	Went to five classes. All were interminable. Three tests - none easy. Open book, true, but doesn't really help; Galanter's questions are at once ridiculous and circuitous. No one I spoke to actually enjoyed the class.	Three open book tests. Not easy.	4	1	178	NA
7019	December 07, 2003	Out of the 25+ professors I have had, Professor Cannon is probably one of the WORST professors I have ever had.  He's a very nice person but he is awful at instructing and clearly explaining the course material.  He does not provide a syllabus, which I feel is helpful when reviewing for the course.  This course is an INTRODUCTION course which means NOT EVERYONE enrolled in the course has has prior experience with Computer Science.  He quickly covers each topic providing a few very easy examples and then excepts you to be a professional programmer on the projects and exams.  Stay away from this class unless you have to take it for a requirement . . . I did the mistake of taking this class because I thought it would be "interesting."  I haven't learned anything!	Five HW assignments -- pretty difficult and you don't feel prepared for any of them . . . unless of course you have had experience with Computer Science before.  One midterm exam and one final exam (comprehensive), again , difficult if you have no background.  He does curve grades.	4	13	515	3807
7035	December 08, 2003	Ok, I went into this class thinking (like the other 200+people) that would be an easy A as well as covering fairly interesting subject matter. I can honestly say that I was not satisfied in either respect. I only skipped two lectures, but in retrospect, there really is no point in going to class becuase he is very boring (albeit he does make some funny jokes, if that's what you're into) and unnecessarily concentrates on his own field of psychophysics. Overall a very dry class with way too much reader assigned that I don't think anyone ever did.	Yes, the three quizzes are open book, but before you shout for joy realize that this will not help you at all. Questions (which are supposed to be answered by a mysterious "mark incorrect" method") are extremely tricky, confusing and 90% of the time rely on material that wasn't adequately discussed in class, and that reading would need to be done for. Also, you have to go to 3 hrs of psych experiments, which at the end turned out to be a sort of extra credit thing. I honestly don't know how many people will get an A in the class (after seeing my quiz scores, I wisely decided to play it safe and take the class p/f) but it is most certainly NOT an easy A. You've been warned.	6	1	178	NA
13339	December 18, 2005	I would not recommend this class for students who want a true introduction to psychology.  It seems that Galanter, who is old but still quick and funny, is more interested in sharing what he thinks is important in psychology than giving a true introduction to the discipline.	there is much required reading, however you can completely pace yourself as the lectures are wholly unnecessary and do not correspond to the readings. 3 non-cumulative exams with a curve.	1	0	178	NA
7038	December 08, 2003	Here's the bottom line on the prof and the class. The class is more than a standard db offering in terms of workload: you got to do two projects, a web based db app and another theory-type number cruncher (most db classes make you do that one big app as a term project). There's also homeworks, mostly easy, with an occasional twist. If you go to class, do the projects/homework and score above avg in the exams, you're guaranteed a B+. One caution sign I'd post is: don't ignore the prereqs. You *need* to know how to code, and you *need* to know some data structure stuff. Don't screw around on this one, or you'll run into trouble in the projects. Gravano is basically a good guy. He does his best to help you out (even tho he appears touchy in class when cellphones ring, laptops ping etc, and you got to get used to the self-deprecating humor bit.) He's cool in office hours and email too (he gave several important hints on the second project ... this was a *huge* help after I spent like a whole weekend going blind on the numbers.) Overall, low stress class and he's a decent guy.	2 projects, 5 homeworks, midterm, final	4	3	375	664
7040	December 08, 2003	My opinion: the course is not hard, the prof is good.\nCourse covers all the basic db stuff. Most of the material is from the textbook. If you don't know programming you'll have a tough time so make sure you have the prereqs. The first project is a standard web/db app (what most db classes make you do). The second one is a number-cruncher type deal, it sounds kind of complex, but really is easy once you figure out the concepts.\nGravano is approachable and easy. Great in office hours, explained the 2nd project very clearly, I had no trouble running right into the lab and finishing it up. He also responds promptly to email. All in all, a kind soul like the other review said, tries to help you out as much as possible.	5 homeworks, 2 projects, midterm, final	3	1	375	664
7049	December 09, 2003	Ok, here's a simple test to determine how you'd do in Nieh's OS class. Rate yourself on a scale of (1=low to 10=high) on each of the following: C/UNIX programming; low-level debugging (i.e. pointers, memory traces, locking/serialization); Linux kernel. Now take the average. If greater than 25, you'll do ok. If greater than 15, expect to spend at least 10 hours a week in the CLIC lab. If less than 15 then **don't bother**. For real. If you are not an expert (or at least very very good) in C and UNIX, then *don't bother*. Now about the class itself. It runs at 200 miles per hour. If you can't keep up with the homework, then you are basically screwed. The programming part is **all Linux kernel hacking** and it is *not* covered in class. Don't expect the TA's to debug your problems and don't expect the prof to give much help except conceptual stuff. Of course, if you have munched Linux kernel code already, then this course will be a breeze. BTW, the cheating policy is outrageous (if the TA suspects you in the least, you are screwed.) Like the other review said, trust the prof/staff less than they trust you and you'll be fine. Prof is okay at office hours, but doesn't have time to give you detailed explanations and stuff -- either you go *very well prepared* or get thrown out in less than 5 mins. But if you can keep up with it, you'll get something out of it.	6 homeworks (theory + heavy duty Linux kernel hacking) with lowest hw grade dropped, midterm, final. No extra credit.	5	4	45	2384
7054	December 09, 2003	I loved this course.  Professor Nayar is an excellent lecturer.  He provides the class with handouts containing almost every slide he uses (yes, he uses slides on a projector, which is usually a bad sign, but he pulls it off well)... over 400 pages per student across the term.  This minimizes how much you have to take down in terms of notes, and allows you to spend more of the lecture making sure you understand, rather than copying down diagrams.\nI have to agree with the previous review: Professor Nayar's digressions are always interesting, and regardless of whether they help understand the material, they help understand the motivations, or how vision works in humans.\nIt's not an easy class, but if you come to lecture all the time and pay attention, you shouldn't have trouble with the homeworks... \nthe midterm and final may be a different matter though.  However, the professor and TAs are very helpful in office hours.	The homeworks aren't so bad... 5 or 6 of them, and I found that the programming actually got easier as the term went on (after the third homework).  However, the midterm and final were... insane, I thought.  The best study advice I can give is:  If you think there's no way it'll be asked, memorize it.	5	2	1812	2386
7055	December 09, 2003	This is a spectacular class!\nIt's officially limited to 30, and there's a chance you'll have to compete somewhat for a spot in the class, but that's rare - my class had 23 or so people at the beginning, and ended up at 21 for the bulk of the term.\nUnlike most CS classes, Programming & Problem Solving is a discussion-based class.  There are four projects across the term (each covering about 3 weeks).  There are 5 discussion classes per problem (in which the class demos their latest solutions and discusses their approaches), and one class where each group presents their report.\nGroups are randomly determined, but you can request to work with particular students (but you can only work with each person on ONE project).  The groundwork for the problem-solving has been done for you - the TA provides the class with a simulator program and the interface for your code to use, so you can dive in and typically write a simple/naive solution to the problem in twenty minutes or so, leaving you most of the project time to create and implement more complex solutions - there is almost no setup work.\nThe class works on full disclosure and full sharing - you can take any code you find online and use it, as long as you say you did, and you can rip off your classmates as much as you want, as long as you credit them for what you ripped off.\nOne of the great things about this class is that it brings you into a group of some of the best minds currently studying at the school.  It will have you thinking differently about all sorts of problems.  The other great thing about the class is how I always left the discussions wanting to work on the project - unlike most classes where the assignments are fairly arbitrary, you have a great deal of leeway in the deliverable, and typically you have something you want to try.\nI would recomend this class to anybody who feels comfortable with a discussion-\noriented problem-solving case study.\nAlso, I would reccomend Professor Ross' databases course - he is an excellent professor.	It really varies by both your group and how much work you want to put into the class.  However, the more you put in, the more you get out.  And you'll probably find you want to work more for this class than your other classes.	0	0	47	2387
7117	December 14, 2003	The lectures are straight from the book - the prof reads right off the pages. This *sucks* big time coz the assignments are harder and you get *no idea* from the lectures. (Example. You need to do this RSA encryption project. You get the math background from a book somewhere. But to actually *implement* it using those hideous Java BigNums or the grungy GnuMP libs is a whole other story - try computing an inverse mod using GnuMP...)\nYou get little-to-no-help from the prof for debugging etc. The exams are not particularly hard, basically regurg the stuff you saw in class. Overall, if you did the programming then you got something, otherwise don't take this class. Ok, maybe the prof really knows his stuff, but he sure doesn't know how to deliver it. Overall, potential to be a great class, but sucky prof. rating is ** out of five stars.	5 *hard* programming homeworks, midterm, final.	3	8	1472	2401
21272	May 20, 2008	Entertaining and fun, cares about the material and seems genuinely excited to teach people.\nReally, really likes Lisp and Recursion.\nDoesn't use a textbook for data structures. My only complaint is that given the time (one full semester) he could have gone into a bit more detail about various, more exotic, data structures. But what he does cover, he does very well.\nSo I recommend him.	6 assignments, Midterm and Final in 3137. 4 Assignments, Midterm and Final in 4701.	3	1	2508	1622
7122	December 14, 2003	First off, I took Data Structures with the guy too.  Everyone who wrote a bad review of this guy is rather stupid.  Swing interfaces are key parts of every assignment involving Java after Data Structures.  Furthermore, copying code to create the data structures is fine - it's a matter of using them - why do you think the class is considered a difficult one for many?  Because they don't know how to copy properly?\nBut I digress.  Robotics is Allen's specialty, and he clearly shows he knows what he's talking about.  The class has some rather cool aspects about it, including the use of a robot simulator.  You actually apply concepts from linear algebra to something.  Furthermore, it gives a solid background to what kinds of projects are going on in robotics.  Some of it is basic at first, but it gets better as it progresses.	The workload is fair and requires a bit of time, but most written assignments can be done in a night.  Programming assignments take a bit longer, but they're pretty cool after finishing them, unlike many CS classes that offer useless programming assignments.	2	4	37	2403
7129	December 14, 2003	As you can read on CULPA and the SEAS Oracle, students who have taken this course generally have lots of positive things to say about it, most of which are absolutely true.\nHowever, because the course places such a huge emphasis on collaboration and the interchange of ideas,  what you get out of it varies greatly with the competence and creativity of your fellow classmates.  For some reason, Prof. Ross seems convinced that the course "self-selects" smart people, that those enrolled in it are naturally highly critical/creative thinkers.  This may have been true for past offerings of this course, but I did not find it to be the case when I took it.\nOut of 22 students, maybe 8 regularly produced creative, original ideas and could competently implement them.  Most of the others were pretty average, while a few people were just plain dumb, lazy, or both.  This may sound harsh, but when you find yourself teamed up with one or (gasp) two of these people and have to think through an inventive problem solution, code it, and write the final report all by yourself, you *will* feel your urge to kill rising.  Also bear in mind that all members of a group receive the same grade, and there is no formal peer review process.\nI still recommend this course; it has several important merits that others have mentioned, and what you learn in it will stay relevant long after you forget the intricate details of distributed transactions or lambda calculus.  If you put in the work, you will walk away content unless, like me, you don't suffer fools gladly.  If you don't put in the work, you will still do relatively well at the expense of those who do.	Up to you.  You are, of course, encouraged to put in an equitable amount of work, but there do not seem to be any serious repercussions for those who do not.	11	0	47	2387
7252	December 18, 2003	Do not take this class. I repeat DO NOT take this class. It is not an easy A. I got 5 points under the mean on every test and I ended up with a C+ in the class. Professor Galanter has no idea how to convey information to the class. Yes he is brilliant but like the pitfall of so many other professors on campus he can't teach. He babbles on about psychophysics this and psychophysics that so much you actually need another indtroductory course to figure out what he is saying. Yeah the quizzes are open book and open note and for some people open computer which I didn't think was fair when they pulled me aside and told me I was cheating. All in all, this class is awful. It may have been an easy A in the past but not anymore. This class royally sucks.	As much as you want to do. There is a lot of reading but its really not required since the quizzes are impossible anyway.	6	2	178	NA
7258	December 18, 2003	After reading the reviews on this class I figured it would be an easy way to knock off the science requirement. Boy was I wrong. This class ended up being one of the worst experiences of my life. The tests were open book but it didn't help much. I remeber finding the part of the book for the question and stil couldn't answer it right because of the way Galanter worded his questions and answers. There is no such thing as a huge curve either. Maybe in the past but not anymore. Galanter's lectures themselves are way to scientific for the typical undergrad to understand. Overall, I highly don't recommend taking this class unless you feel like getting f***ed	Three quizes, all open book and open note and for some open computer (this i didn't understand because they would accuse people of cheating while the person next to them was using google to find the answer to the test) Reading is useless because even if you do do it, you won't be able understand the questions he asks come exam time	6	1	178	NA
7276	December 19, 2003	No exaggeration, this was the absolutely worst class I have taken at Columbia.  The course itself is very interesting.  I am a math major and only took the class because of the material covered in the class.  However, Prof. Gross is completely inept.  He has this attitude that he is a math genious and if students are naturally inclined in math they will understand his lectures, if not, tough on the student.  I agree that this course covers a huge array of topics and the class is very time pressured, but Gross makes minimal attempt to lecture well.  His notes that accompany the book are absolutely horrible and worthless (I learned the material from the book which is actually a very well written text).  Half of Gross' lectures are anecdotes from his life: he has told us numerous stories when he was a kid and how brilliant he was in math and other information about his life.  Also, he never writes on the blackboard (I have never seen this done especially since this is a MATH course...).  He explains the concepts poorly and rushes through topics that are very important (I guess I can't totally blame him for this since the syllabus is very dense).  However, he expects the students to understand all material as if we spent days on each topic.  For example, in my 4000 level math class it took us 40 minutes to go over Cantor's proof for the uncountability of real numbers, but somehow Gross showed us the same proof in the last 2 minutes of class.  All I know is that if I didn't previously see a lot of the material taught in this class I would be completely lost.  A lot of the material seen in this class is covered in a lot of the higher level math classes and I find it hard to believe Gross expects the students to understand the material at this level.  Now, onto his tests.  I have never taken a test that is so off topic with the material covered in class.  His tests only test you on your natural grasp of math and minimally tests you on the information covered in class.  I learned after the 2 midterms that I could have studied for another 30 more hours and not have received a higer grade.  For example, his problems seem at first glance a straight forward easy problem.  However, there usually involves one tricky step that has nothing to do with discrete math (it usually has to do with "seeing" a shortcut or something like that).  Each question is similar to that: you either see the trick or you don't.  If you don't see it, you will probably will not be able to start the problem and receive 0 points on it (and this hurts since the test consists of only 5 or 6 problems).  Overall, (and I really do hate writing negative comments for a professor) I would say run as fast as you can from this class.  If you do not need to take this class as a requirement then don't.  I found this out the hard way.	The workload is very light.  6 problem sets which are not long at all (especially since we get over 2 weeks to complete each one) and 2 midterms and 1 final.  For the midterms look over the sample midterms on the website.  These are the best ways to study for the tests since the tests he gives every year are very similar in style.	7	9	40	397
7365	December 23, 2003	DO NOT TAKE THIS CLASS!!! This was the first semester of Prof Aho's experiment in teaching programming and computer science concepts at the same time. Classes were very confusing and tried to teach you material that encompasses complex computer science matter, the book sucks, and whatever you learn in class doesn't help in any way with the programming assignment. Thank god the TAs were awesome, that's how I can say I walked out of this class feeling that I can actually write a program. Their assignment were very interesting and they (the TAs) were available to help virtually 24/7. I am very disappointed with the theoretical part of the class however, and the theory problem sets (aside from the programming assignments!) were not only ridiculous but impossible and unmanageable.	Very, very time-consuming. Weekly programming assignments but the really bad part were the written homeworks. Grading is fairly good though. Professor Aho's curve was such that 30% of the class got A's in the end, even though the midterm mean was 60 and the homework mean was like 65.	4	0	1891	3807
7366	December 23, 2003	no text book , many google things,need to read lots of RFC and papers. most topic base on sildes, anyway, it is  a difficult course.	10 medium-sized programming projects (some are very hard), plus written questions, Midterm, Final.	0	0	350	2485
8908	May 19, 2004	This course is definitely a heavy theory course. The lectures were fairly long, but definitely well done; Professor Malkin is an excellent lecturer. She doesn't use PowerPoint, which I personally consider a plus, though it means that you can't skip lectures if you expect to learn something from them.	The workload ended up consisting of writing a research paper. It couldn't just be a literature survey; it had to include original work, or analysis of a research field, or somesuch. I thought this was good -- it allowed us to take concepts introduced in the lectures and use them (or not use them) in our own work as we saw fit.	3	1	1621	2867
8913	May 19, 2004	I liked Professor Yemini a lot, and I feel like I learned a lot in his class. He clearly has a great depth of knowledge in the field, his digressions are good, and he's very personable and approachable.\nSome things to be prepared for, though:\n* His lecturing style is very dry, delivered in a low rumble. I was really interested in the material and was able to look past this to some extent, but it was sometimes hard to keep my mind from wandering. It also meant that much of the class wasn't all that strongly engaged, which de-energized the room.\n* The lectures were fairly applicable to the exams, but weren't all that helpful for the homework assignments. This, in combination with their dryness, plus the online availibility of lecture notes, is probably what caused most of the class to stop going to lecture starting about 1/3 of the way through the semester. This de-energized the classroom further.\n* Professor Yemini tries to make the initial assignments harder and the assignments later in the semester easier; his feeling is most C.S. classes operate in the opposite manner, and it's nice to counterbalance that. This isn't a bad philosophy.\n* There's a definite effort to make the homework assignments and the exam questions non-cliched and interesting. The results of this are a bit hit-and-miss, though. In the first programming assignment, for example, it was very difficult to divine what the project was supposed to do based on the specification. Others in the class spent hours upon hours spinning their wheels until they understood; I settled for a lower grade on that assignment. The second programming assignment, an RMI MUD server (with a reasonably constrained world-state to keep track of), in contrast, was a lot more fun.	2 programming assignments, 3-4 non-programming assignments, an open-book, open-notes midterm, and a similarly open final. The midterm in particular it's best to study for as if the exam isn't open-book, though, as you won't have much time to look things up.	2	0	51	4902
7377	December 23, 2003	This man is utterly incompetent. Going to class consists of you sitting there and staring while he copies code for data structures such as linked list or disjoint sets on the blackboard VERBATIM from the text. He doesn't even bother to change variable names. He basically stands there and reads the textbook to you in a somewhat difficult to understand accent. Sometimes he makes fun of people (especially people who leave) but that's the high point of class. Personally, I didn't go to any of his classes at all except the midterm and final.\nWhat ends up actually is that the four or five TAs for the class are the real teachers. Laziness overtakes the average student and most of them do the learning from the homework assignments. Usually people ask questions via the bulletin board which sometimes complicates things (for example, the second homework turned into a swing nightmare once a few students started asking about implementing scroll bars and other gui components to a simple tree application). Don't worry though. The curve is spectacular. I'm not even a CS major and I did the minimum but still scored an A+.	5 programming projects which take anywhere from 1 hr to 10 hrs. the homeworks also consist of a theory portion - several questions which ask you to act like a computer and perform some algorithms on data structures that they set up. very easy midterm and final (if you are careful and study from the book).	1	0	1442	1622
7378	December 23, 2003	This course is da bomb!! The easiest material ever if you are good at algebra/precalculus/logic/drawing pictures. The course consists of some select topics which Gross does not like to go into depth in. The course itself covers a large number of topics, but none extremely deeply. Going to class is a waste of time except for his jokes, as he basically reads his notes (you can do this in the comfort of your dorm room). The homeworks are a joke as the solution manuals solve similar problems (only the numbers are changed around). The exams are also pretty easy as they are open book and open notes. An overly dumb SEAS contingency lowers the median so as long as you score about 95 or so on each midterm and the final, you are set for an A+.\nGross himself doesn't care if you learn the material, as he is not too available, but the TA's are somewhat better (they are like his bodyguards).	6 homework assignments (lowest dropped), two midterms (easy), and 1 final (easy).	2	14	40	397
7448	December 28, 2003	On the first day of class Cannon said that this course required hours of frustration in front of the computer, and he was telling the truth.  Projects are difficult and long, but they do a good job of teaching java.  If you do the projects and attend lecture, exams aren't too painful, and he will look over poor exam grades if you do well on the projects (get them to work).  The curve is very generous reflecting the heavy workload.  Overall, this course can be hell while you are in it, but in the end your knowledge of computer science is extensive.	NA	3	1	515	2906
7456	December 28, 2003	This class was a major disappointment. I took a years worth of psychology in high school and after reading reviews about this class i figured it wouldn't be that bad. Boy was I wrong. Galanter is a very boring lecturer and his tests are extremely unfair actually impossible. I have no idea how some people managed to score 105 on them. I did a fair amount of reading and attended almost all the lectures but once it came time to take the test I was lost. I knew everything there was to know about classical conditioning but I couldn't answer the questions on the test about it. This class is definately not an easy A or B. I highly suggest not taking it.	Don't do anything just show up to the three tests and hope to get lucky by just picking.	5	1	178	1138
7520	January 03, 2004	Professor Cannon was great. He was very approachable. If office hours didn't work out for you or if he felt you needed extra help, he would make time for you outside of his normal Office Hours. He is also extremely witty (even obscene and completely politically incorrect at times). However, the content of the course was too difficult. I am not a ComSci major, but this was even tough for someone majoring in the topic. He warned us that we should consider switching into 1004 if we didn't feel up to the challenge. I took 1007 because I wanted to study with Professor Cannon. I took his 1001 class and loved it. I should have swallowed my pride and took the easier class. If you are looking for an easy-A, this is not the class for you, but if you are looking for a challenge and struggle, have fun. His wit and humor could be worth the trouble.	5-6 programming projects, every other one is considered "difficult" (but they were all difficult). Plan on spending many hours in TA Office Hours trying to figure out what to do. If you do not complete all of the assignments, Professor Cannon warns you that you cannot pass.	13	1	515	2906
7673	January 11, 2004	All the reviews you've heard about Sidorsky ring true.  He is old, can't see worth a damn and tends to repeat himself to the point where you want to shoot yourself-- that is if you are even awake to hear what the lectures.  With that said, it's probably a blessing he's so repetitive.  Given that you attend class, you are to sure to retain some of the main points he expounds upon.  He covers six concepts in total and said concepts will be ingrained in your head for good.  An easy A if you have the willpower to attend most of the lectures (see, you don't even have to attend all).  I do like him quite a bit as a professor.  He knows his material and if you read his articles, you'll find that he's extremely intelligent and articulate.  He also makes subtle jokes that are quite hilarious-- once again, you must be awake to hear and take note of said jokes.	Midterm and Final.  Listen to him and rewrite them on the exams.  You'll do fine.	6	2	856	NA
7712	January 13, 2004	I got in the habit of showing up 10-20 minutes late for every class and was hardly ever late.  Additionally, it was not uncommon for class to get out rather early.  While Professor Belhumeur is occasionally  remarkable in his nonchalance, he is one of the friendliest CS professors I've had and actually does, somehow, manage to get through all the material in a concise manner.  He does put effort into insuring that students understand the material and getting student feedback about homework difficulty and other concerns.	The problem sets could be irritatingly time consuming, but generally not terribly difficult.	0	0	1777	238
9209	July 19, 2004	(Note: my opinion is from the perspective of a CS major, not a premed / BME / BINF student.)\nThis course is a valid CS technical elective, but it's about as "technical" as Music Hum. The only use of a computer for this course is to type the weekly homework assignments, which are all essay questions. The course introduces you the various applications of IT to medicine, especially the hospital environment. Topics include electronic patient record systems, biomedical imaging, electronic order form, and disease classification standards. Each topic is covered by a different professor from Columbia's uptown campus; Shortliffe himself handles 5 lectures or so.\nThe material is quite interesting in a hands-on way--you get to see how the CS stuff you learn gets applied. As such, it often involves brief, simplifying revisits the traditional CS classes, e.g. Database and NLP and Computability. On the other hand, it also involves a lot of medical jargon unknown to CS students, which make up half the class. Although Shortliffe said that the course does not assume any prior exposure to medicine, the lecturers (again, med school profs) tend to forget that. But perhaps this is only fair, since the medicine people tend to find the CS stuff hard to grasp.\nThe class also touches upon social and political issues like privacy issues and Medicare, as well as the theory and history behind Biomedical Informatics as a distinct academic field. Overall, a palatable salad of things and a nice escape from programming.	Weekly written HWs, about 2/3 pages each, check or no check. A comprehensive OPEN BOOK written final. Not terribly difficult, but the CS student may find giving opinions (as opposed to right/wrong answers) and the whole medical nomenclature vague and unfamiliar. Also, the BINF graduate students take the class very seriously, thereby screwing up the curve. You need to work towards a good grade, but this class is suitable if you like writing, if you like to see some real-life applications of your CS knowledge, or if you don't care about your grades (this is the only CS class in which you can b.s. your way to a pass).	6	0	2140	2943
22619	April 24, 2009	Discrete Mathematics, as taught by Professor Grinspun, is a CS prerequisite I am very happy to be taking.  Professor Grinspun's computer graphics research is really cool, but that is outside the scope of this review.  The main strength of COMS W3203 is clarity.  Professor Grinspun's lectures are so understandable that I have not usually needed to read the textbook in depth.  If anything, they are too basic and move too slowly, although there is plenty of time to ruminate on the materials in class.  The textbook (by Kenneth Rosen) is also excellent, being both engaging and informative.  The difficulty and pacing of the course changed relatively little as the semester progressed, a teaching accomplishment in itself.    \nThe curriculum focuses roughly equally on proof-writing and problem-solving--a fair division, although I wish there had been more discussion of how Discrete Math can be applied.\nThe homework was where most of my learning took place, and it would have been a mistake not to do it as thoroughly as possible even if each assignment is only 4 percent of the grade.  (Not everyone does their homework thoroughly.)  Homework is ABSOLUTELY ESSENTIAL for preparing for the three exams, which are long and complicated exercises in problem-solving and proof-writing speed.  As a warning, almost no one could finish the second midterm exam.  This includes some of the best remaining students.  Fortunately, the exams' open-book nature and the grading curve meant they were actually easier than exams in many other classes.  The 6 homework assignments were 9 to 20 handwritten pages each, and each one usually took me 10-20 hours to finish.  Many questions were difficult, and office hours often saved me.  \nThis course has a high attrition rate--perhaps one-third to more than half of the original students choose to drop it after the first lecture, including some of Columbia's best and brightest.  There might be several reasons for this.  Professor Grinspun calls on students unannounced and does not hesitate to embarrass them (although I never saw him embarrassing anyone unprovoked).  Homework 1 was as difficult as the other assignments, which may have led some students to believe the course would be more demanding than it actually was.  The heavily proof-oriented nature of Discrete Math may also have scared off some.  In my opinion, DROPPING THIS COURSE INSTEAD OF PRESSING THROUGH IS A TERRIBLE MISTAKE.  My experience was that around week 4 of the course, proofs suddenly became less intimidating and around week 5 or 6, Professor Grinspun mellowed out.  What students contend with is a not especially time-consuming commitment, as CS courses go, and possibly one of the 5 best undergraduate courses in the CS department.  I enjoy it, and would strongly recommend it to students with the appropriate background (some introduction to programming such as COMS W1004; pre-calculus or, better yet, calculus; and, if you're really concerned about writing proofs, the supposedly well-taught Introduction to Higher Mathematics).	Not too bad for a CS course, even though when I began I had almost no experience writing proofs.  Homework 1 was certainly an adjustment, but the workload remains on a more or less even keel from that point onward and actually became easier in the second half.  Basically, nothing to be too worried about.	1	5	2480	397
7763	January 16, 2004	If you're going to look for a job in I.T. after graduating with whatever degree you're working towards, this class is a must. The fact that Linux is used as a case study throughout this course is *immensely* useful, if only that OS courses at other universities are taught with merely pedagogical operating systems such as Minix or Nachos. That said, the programming part of the homeworks was arduous and time-consuming (yet rewarding once you gradually grokked a solution, which ended up being less than 50 lines of code for most of the assignments). An able CS undergrad would spend anywhere between 10 to 20 hours a week on the homeworks (written + programming parts combined). Nieh's lectures are very straightforward, and they are very much worth attending. The class is all about *detail* -- for those in systems, there is mounds of it to drum into your head, and this class gives you good practice. The worst part of the class is not the homework, but the morons that you can be potentially be paired up with for doing the programming assignments.  Your partner may contribute nothing, yet s/he can get all of the credit for your hard work. Luckily, you get to submit reviews of your partners and they swap around the programming partners based on those reviews after the first two assignments.	6 homework assignments. Each assignment has a written component and a programming component. The worst homework grade is dropped (i.e. your worst written score and your worst programming score is dropped, so if you did badly in the written part in homework #3 and the programming part of homework #5, those scores are dropped.) Midterm was easier than the final.	9	0	45	2384
7812	January 18, 2004	Julia is, in a word, amazing.  She is a really sweet, nice lady who is also extremely knowledgeable about her field and seems to really LOVE teaching.  Her melodic speaking voice makes her sound like she's talking down to the class, but don't be fooled; once you get used to her you realize that she truly respects her students.  The classes are a mix of lecture and discussion, but tend toward discussion most of the time.  Julia really encourages the class to get involved (there is a class participation grade), and usually there are many great insights into the material.  She will learn your name, and you are always welcome to chat with her after class or in office hours.  If you are at all interested in NLP, or you think you might be, do not miss this class.	Assigned readings (textbook and papers - definitely NOT optional, but the book is quite good), 3 homework assignments (VERY INVOLVED, so start early), and a closed-book midterm and final.	4	7	1957	4903
7896	January 20, 2004	DO NOT TAKE THIS CLASS!! The only explanation for why there are some positive reviews of this class is because Galanter USED TO curve each individual quiz grade, and then curve at the end.  Now he ONLY curves the grades at the end of the semester, but it isn't very much help since the quizzes are IMPOSSIBLE. I went to every single class, took copious notes, and did a fair amount of reading. However, NONE of that helps you out on what I've decided are prank quizzes.  Guessing does not help you on the quizzes either, so there's no way out. I do not know ANYONE who received a good grade in this course.  I ended up Pass/Failing as a senior (who needed to knock off the sciecne requirement) b/c of the grades I got on the first two quizzes. Galanter actually had bravado to offer to sign off on LATE DROPS because he realized how may people were going to fail the class!!! What a nice guy right! My roomate(who did more readings than I did), stuck it out and got a C! This class is an embaressment, and MUST be taken off the list for non-science majors.	Three IMPOSSIBLE quizzes.....the mean on most is less than HALF. Enjoy	9	2	178	NA
7913	January 21, 2004	PLT is a very dry subject, especially when taught using reams of slides.  However, Prof. Edwards is very funny and made the class very interesting.  He has a warped sense of humor and would spice up the lecture notes with hilarious pictures.  Here are some of his famous lines: "hangs like a criminal", "a lazy approach gets you out of infinite work", "Things are always in the last place you look.  Of course they are!  You always stop looking once you've found it.", "Union is like a structure except its schizophrenic", "Symbol table is like a roach motel, you can checkin but you can never leave", "computer scientists are smart asses", "if thy arc offends thee", etc. etc.\nOh, to my great delight Prof. Edwards would often preface a topic with "this would make a great exam question...".  Take heed this advice!	Homeworks aren't too bad, exams are difficult (study!), and the group project is massive!  For the project, get started early, meet weekly at least, use cvs, get the language design right, don't bite off more than you can chew!  For the exam, make sure you know the basics, know the HW cold, pay attention to good test questions.	8	1	1637	3105
7919	January 21, 2004	This instructor is your typical cs nerd.  He speaks with a dry wit, and he trails off the end of sentences, but you quickly learn that anything he says under his breath is not important.\nPersonal quirks aside, he taught competently; I don't have any complaints.  He explained information clearly and covered everything he said he would.  He gave good answers to the many, many questions I asked in class, clarifying a lot of confusing aspects of the language and never making me feel stupid for asking a "dumb" question.	Disclaimer: I am not a cs person, and this was a summer course, so I have no idea what a "reasonable" workload is.  I thought it was reasonable though: We had four time-consuming homework assignments spaced throughout the semester, so about one per week, as well as a final, which wasn't too hard and probably raised my average.  He had a very fair system of three "late days" that could be used up as needed.  Grade also included class participation, which was considered either questions asked in class or comments submitted at break.	2	2	1972	2598
7938	January 21, 2004	Professor Biliris is really not as bad as all that.  I will concede that he is an extremely boring lecturer; however, one of my friends who is among the smartest people I have ever met was able to go to class and pick up everything from the lectures and never even had to open the book.  Apparently, that was his goal with the lectures (to be a substitute for the book), and it didn't bother him at all when people just got up and left class.\nAs has been mentioned, he is a very easy grader, although the homework assignments are designed a little thoughtlessly.  Generally speaking, the portions of the assignment that take 80%+ of the time spent coding are the parts that are irrelevant to the material being taught by the homework.  For example, the homework assignment involving trees and hierarchies was easy enough conceptually, but the mechanics of getting the applet to display the way you wanted were a royal pain in the posterior.  This shows inexperience and some obliviousness.\nHowever, the man isn't uncaring.  A little begging post-thanksgiving convinced him to extend the deadline of one of the homework assignments, and he seems very approachable and eager to help.  Plus he's got that cute little Greek accent, which is always good for something.\nAn average teacher overall, in Columbia terms.	NA	0	1	1442	1622
82425	October 26, 2020	This was my favorite CS class by far. Prof Dear is super nice and helpful. He explains everything clearly and really cares about students. You will learn a lot of practical algorithms. I recommend everyone to take this course.	5 homework\n12 quizzes\n1 final exam	14	0	13639	26
7983	January 26, 2004	I mostly agree with what's been said by earlier reviewers, but wanted to point out some ways in which the class was different in the fall of '03 compared to earlier years:\nProfessor Feiner makes extensive use of powerpoint nowadays, as well as videos, some overhead slides, etc. The powerpoint slides aren't especially comprehensible in isolation, though; when reviewing for the midterm, have the notes in one window and google open in another to look up terms that aren't explained directly on the slides.\nApart from that, I don't feel like I really learned the vocabulary and concerns of interface designers working in industry; the class focused more on academic UI research, past and present. I plan to redress this by doing a fair amount of independent reading this term.	I found the programming workload for the course to be staggering. Part of this can be attributed to the lack of written problem sets or assignments that were strictly design assignments; for all four we had to handle design _and_ implementation. The first three assignments built on each other (though the final project was unrelated), but assignments 2 and 3 both required significant reworkings of and extensions to what came before. I don't think that an advanced undergraduate course should require its students to produce more than 2000 original lines of code or so, and I wrote much, much more than that.	4	0	39	663
8069	February 05, 2004	Professor Ramamoorthi's lectures were generally fairly dry and could often be hard to follow. His accent isn't really an issue, but he has a way of failing to frame the question that's motivating what he's talking about; you get no sense of what he's building towards. He also doesn't speak very confidently; it's hard to tell whether he's entertaining a possibility for class discussion or actually saying that this is an accepted practice.\nThe lectures tailed off in quality by the end of the course (as did attendance, precipitously); some of the lectures got into mathematical details well beyond the requirements of the course and well beyond what most people in the class could readily understand.\nAs far as slides go: the slides were a fair basis for looking things up on the internet later, but no better.\nThe course was well organized insofar as the assignments go; the course fell down in other respects. The assigned readings in the main textbook (Computer Graphics by Peter Shirley) often had only a tentative relationship to our lectures, and their pedagogical approach was very, very different; it's a good book, but was useless for the class. Other assigned readings included big swaths from the OpenGL red book -- hundreds of pages in all. Fortunately, I think most of us were smart enough to know that one doesn't learn a programming API that way. Another example: the materials and lectures we were given on curves weren't really sufficient to understand the second assignment; my partner and I had to use online course notes from another university. (Reading up on curves in one of the optional texts would have done the trick too.)\nThe overall impression that I got, really, was that Professor Ramamoorthi viewed teaching the class as a chore, offloaded much of the work in running the class to our TA (actually writing up the assignment specifications, etc.), and didn't do a number of small things that would have improved the class greatly.	The workload in the first half of the term was quite manageable -- the first two assignments took some thinking, but didn't require lots of code. The next two assignments were a lot more coding intensive. Coding-intensive is pretty typical for graphics courses, though, from what I understand. The assignments were all good learning experiences -- I feel they were the best part of the course.\nWe were asked to work in groups of two on all the assignments, though some people worked on their own by the end because of people dropping the course, etc. Coordinating with a partner could be a bit of a hassle, but certainly wasn't as difficult as it is with larger groups.	1	0	1588	2634
8241	April 04, 2004	Sidorsky's lectures are a pleasure to hear. He is old, and sometimes he speaks slowly, but he has a profound understanding of the texts and is good at explaining them using his own examples. Furthermore, he has an encyclopedic knowledge of literature, and he weaves references to art, culture, and science into his lectures, thereby connecting the class material to other disciplines. Besides being informative, it is fun to watch his intellectual acrobatics: in one class he quoted the beginning of the Canterbury Tales in Middle Enlgish, a passage from Isaiah in biblical Hebrew, and listed a dozen Roman emperors in chronological order with their corresponding prime numbers (hmm, this sounds a bit crazy, but there was a point to it all). I gather from CULPA that Sidorsky has a reputation for repeating himself, but don't worry, this is not unselfconscious repetion. He goes over important points from the previous lecture at the beginning of most classes--something I found quite helpful. So take a class with Sidorsky while you still can. He truly loves learning, and it makes his class an experience you will be glad to have had.	Not much reading. An ungraded 2 page response paper. Midterm and final. If you go to class the tests are pretty easy.	11	4	856	NA
8298	April 12, 2004	Galanter is so confusing and absurd that it wasn't even amusing.  I'm a psych major and I had to take this course after I'd already taken 4 advanced psych courses . . . thank god I did because it was only thanks to the things I learned in the other classes that I survived his "quizzes."  Really, there was not one answer that I got right that wasn't because of things I had learned elsewhere.  Unbelievable.  So for anyone taking this as a Psych department requirement, DO WHAT I DID: take Mind Brain Behavior, take a few more advanced courses, THEN go back and take this course.  You'll completely unfairly get an A . . . just bring tissues for your crying classmates.	3 absurd tests	2	1	178	NA
8360	April 18, 2004	One problem with this Culpa free-for-all is that the people having the strongest opinions tend to be those who did poorly.  Reading the reviews above, I bet you wouldn't have guessed that PROFESSOR GROSS WAS GIVEN THE INSTRUCTOR OF THE YEAR AWARD, that he is (near) universally loved, that he is very much approachable and takes an eager interest in his students, and that his lecture style is nothing short of brilliant.  His explanations are lucid, his delivery entertaining.  Mostly, Prof. Gross gives a feel for why the material is important and interesting.  I don't mean this in the sense of practical applications of the material (though the training in combinatorics has certainly been useful in my current research), but important in a larger sense.  Professor Gross's goal is to make you (in his own words) "become your own expert"- to teach you how to approach problems creatively, and with maximum rigor.  This class was probably the most influential one that I took in all my undergrad education.  You may or may not appreciate his jokes, but I strongly encourage people to take the class.	Moderate, though it depends entirely on how good you are at solving the problems.  Problem sets can take anywhere from 1 to 6 hours, depending.	11	6	40	397
8384	April 19, 2004	Excellent introduction to the field of computational science.  Mauel is easy-going, understanding, and overall a great teacher.  He's pretty passionate about the material, so it makes even the most boring topics (and there are a few) interesting.  Just keep up with the work, and you should get an A.	Easy, quick, weekly homework assignments that can be done an hour before class.  4 long and involved projects.  They're difficult, but not too bad as long as you start early.	0	0	44	NA
8462	April 26, 2004	Prof. Belhumeur is totally chill, but definitely here to do research and not to teach. He came to Columbia from Yale a couple of years ago, and yet he still doesn't know how the credit system here works. He's invariably 5 to 10 minutes late, and he has missed 3 or 4 classes.\nHe did a few useful grounding lectures in the beginning, and then mostly took a back-seat role, letting students present and commenting occasionally. He is very nice and approachable, but only when you can get hold of him--as big shot like Nayar, he is often away on conferences and things. Overall a nice person and okay teacher for the self-motivated.	CS graduate seminar that meets once a week. Each week some people present some academic papers. Fun way to learn, if at times confusing. Requirements are one presentation and one term project. The latter can be as hard or easy as you want it to be. This class is fun and not very hard, but you learn mostly on your own.	1	1	1777	2746
9721	November 16, 2004	I wish I had met the Cliff Stein that all the other reviewers keep talking about.  The only thing I agree with is he does seem very annoyed by students.  While he may speak English fluently, he races through the material and does everything differently to the book.  He schedules his office hours early in the morning, so that nobody shows and if you do show, he doesn't really help you much.  The sad part is, you will not get a choice of professors for this class, so you are stuck with him.  Best advice I can give, is start the hw early and use the TAs.	Tough weekly homeworks, 2 midterms, cumulative final.	9	11	1342	NA
8464	April 26, 2004	I think this is one of the better (maybe best) pre-professional courses, but it might be slightly more work than others. Professor Mauel is super-enthusiastic about everything which helps in a what could be a painful experience. The course is devoted to doing physics with Mathematica, which enables you to solve problems with difficult math without knowing it. But you have to use a computer...which introduces its own problems. However, whenever you are having trouble, you can e-mail the professor and he will help you. The class was a pretty rewarding experience for me, but I can see how it might frustrate others. The strength of the course is that Professor Mauel encourages students to do their own "research" projects, but provides all of the tools necessary so that you can do something unique on your own without being too hard or time consuming.	Weekly assignments, which shouldn't take more than an hour or two at the most (if it is taking you that long you should ask for help) and four research projects which Professor Mauel gives ideas to investigate and sets up any computer tools you'll need in class. Depending on your computer skills, slightly below or above average workload.	0	0	44	NA
8498	April 28, 2004	This course serves its purpose as a pre-professional course: it tells you the truth that Coumbia's applied math curriculum is all about physics. The course covers 4 physics topics: astrophysics, statistical physics, Fourier transformation applied on physics problems and quantum mechanics. If you're a physics guru, this class is certainly for you. Otherwise, you should really consider taking another pre-professional course.\nAnyway, Professor Mauel is the most enthusiastic and friendly teacher I've seen in Columbia. One can easily tell that he's genuinely interested in what he's lecturing: will you jump and exclaim in delight when you talk about Kepler's laws? I won't, you probably will not, but Professor Mauel will.  He's also friendly and he doesn't mind giving you personal, step by step tutorials on how to complete your assignments. You can e-mail him your mathematica programming codes, (Oh, this class is all about mathematica and programming, if you don't know C++/ Java, you'll be in a great disadvantage)  tell him your problem, and he'll tell you his suggested programming codes usually within 24 hours. Also,  he's willing to sit next to you in front of the computer, teaching you how to  solve the problems.  What else can you ask from a professor?	Weekly exercise that takes you at most 2 hours a week, and 4 projects. Depending on how devoted you're into the course materials, and also your programming skills, each project can take you 2- 10 hours.	1	0	44	NA
8557	May 04, 2004	Prof Reed is an excellent teacher.  He is well prepared for class and knows his material very well.  He is especially helpful during office hours.  His is not a hard professor to get a hold of because he constantly checks his e-mails (and replies to any questions one might have) and gives you his cell phone to call if necessary.  The course covers curves and surfaces.  He covers bezier and b-spline curves.  He also gives lots of examples in class and goes over it in detail.  There isn't any trick for the midterm and final and tells you what to study.  In all, I learned quite a bit about curves/\nsurfaces and feel that professor is a terrific teacher!	There are 4 programming assignments that have to be written in java.  He gives you the foundation for each assignment and all you have to implement is the algorithm.  The programming assignments were reasonable plus he gives you the psuedo-code and goes over some examples in class.	8	4	2060	2767
8607	May 07, 2004	This class was horribly confusing. Not the programming part, that was pretty easy. I already knew C++, Cocoa, Java, Obj-C, Visual Basic, MySQL, JS, etc. \nThe theory part was what was absolutely ridiculous. The theories introduced were NOT introductory material. They were very abstract, and horribly explained by both the professor and the book. After I kept getting back homework assignments in the 60s, I thought I was going to fail the class until I realized that most people were doing worse than I was.	The programming assignments were totally reasonable for an introductory class, and the TAs were indeed generally quite helpful. Ludicrously long and confusing theory homework assignments. A lot of the material wasn't even in the (poorly written) book, so if you missed a class you were screwed. \nTedious things like converting words into binary. Really weird stuff about terminal strings and stuff I still don't understand. I managed to walk out with an A anyway.	1	0	1891	2598
8686	May 11, 2004	No offense to all who posted before me, but this class was by far the easiest class I have ever taken in Columbia. You just do the readings the night before, and take the 3 OPEN BOOK, OPEN NOTE quizzes. Everyone seems to bitch about his multiple choice method where u check the wrong answers, but really it just allows you to pick up free points even when you dont know the answer, by checking the obviiously wrong answers. i slept through most of the lectures, writing notes in my sleep, but the quizzes are fairly redundant, with most questions just a different wording than some previous ones. Granted, you wont learn a damned thing. Galantar seemed to be teaching us psychological breakthoughs of the 1940's rather anything current or interesting. Although, he's your typical old fart with great old fart humor. \nNormally, Id hate to bust everyone else's balls, but I feel I owe the Columbia community a service by recommending this class - trust me, it is not nearly as hard as these reviews make it out, and I know for certain that other students agree with me. And all the reviews from previous semesters agree with me. Did the 1,000 yr old Galantar change his tests and grading policies all of a sudden for this past semester and make his class harder? doubtful.\nThis IS the science requirement to take.	3 quizzes. yes, they were tricky, but with open notes and open book, very very very easy. and that's all! the readings were all doable in a cram session the night before. probably the lightest workload for the science requirement.	9	6	178	NA
8765	May 14, 2004	Pretty Good Professor.  Also, the course is very interesting.  He explains things clearly.  However, he usually explains things exactly as they are in the text, and doesn't really go out of his way to make them interesting.  He is very good in interacting with students however, and makes himself very available outside of class.	5 Homeworks, all challenging, some harder than others (some will take 6-7 hours, a few will take 15-20 hours).  A take-home exam, about as difficult as a homework.	1	1	2089	2830
8843	May 17, 2004	Traub's lectures are absolutely incoherent.  The class seemed somewhat interesting no paper; however, the interest stops there.  Towards the end of the semester, hardly nobody went to class.  That's because 1. the material was too easy, 2.  his lectures were uninformative.  Sometimes, I questioned his competency when he couldn't answer questions related to the subject.  He would, instead, "smoothly" ask his brilliant T.A. on how to solve some problems and jokingly hand over the chalk.  Haha?  Traub has to be top five of the worst 3000+ level professors I've had.  I shouldn't care about even writing this review because I'm receiving my dipolma in four hours, but I feel like the world should know.  Stay away from him.	there's about an assignment due EVERY class.  These assignments aren't too difficult, yet they bug the crap out of you.	4	2	1028	861
8914	May 19, 2004	Professor Kaiser's lectures are generally quite well done. She uses lots and lots of powerpoint slides, which isn't generally my favorite approach -- I like it when lecturers use fewer slides, or just chalk and chalkboard if they can get away with it -- but she pulls it off pretty well.\nThe class organization is quite strong, particularly with regard to the major assignments (paper and project, both of which include several milestones to meet aside from the final submission.) The work required and assignment specs were all laid out pretty clearly at the beginning of the semester, which was really refreshing, actually. Most of the other C.S. classes I've been in don't make specifications for assignments available until 1-3 weeks before they come due; it's hard to plan a semester that way.\nI'd say the course is intended to give a flavor of how web technology is used and how it developed -- up to and including the state of the art -- and it works well in that regard. A lot of information goes by quite fast, especially by the end, but students don't have to do all that much with lectures that don't relate to their project and paper, as there aren't exams.	One research paper in the first half of the course (10-20 single-spaced pages), one web-related programming project in the second half (singly or in groups, about 1000-2000 lines of code per person), class participation (there is an attendance sheet), and a brief presentation on a topic of your choice (probably related to your paper or project.)	7	9	1474	2869
8925	May 20, 2004	WARNING: The reviews below largely ignore the fact that Sidorsky is probably not a good teacher for someone who has a serious interest in philosophy.  In Moral Philosophy we covered a grand total of 7 papers (in the form of interpreted excerpts from the textbook), which were each boiled down to about 4 or so very basic points.  Furthermore, the only meta-ethical paradigm covered was naturalism (how do you teach an moral philosophy class without even mentioning consequentialism?).  Sidorsky barely touched on problems with the Authors' systems -- if you like to read philosophy critically, it will be largely impossible for you to stay focused on the lectures for more than 20 minutes.  Moral Philosophy V3701, as far as the lectures are concerned, was largely a philosophy-qua-literature class in which memorization of the absolute basics of the authorsÃ‚â€™ ideas was the primary focus instead of using the ideas as a vehicle for coming to a deeper understanding of morality.  The upside is I guess that youÃ‚â€™ll be able to say a few sentences about the historical context of these authors and their most basic points if their names ever come up at the dinner table.   Oddly, however, the excessively long exams ask you to evaluate the authorsÃ‚â€™ ideas over and over and over again until you canÃ‚â€™t feel your fingers gripping your pen.  Overall, itÃ‚â€™s a cinch to get a B, but pretty tough to get an A as its difficult to know what heÃ‚â€™s looking for.  In conclusion: this class is not for philosophy majors.   I repeat: this class is not for philosophy majors.  Did I mention that itÃ‚â€™s not for philosophy majors?  Annoyed?  Just wanted to point out that itÃ‚â€™s not for people who canÃ‚â€™t stand repetition (and not really learning much for your tuition).	Extremely light:  7 readings, average ~10 pages each.  Reading was unnecessary as they were boiled down to 4 or so basic points over a series of 6 or so classes.  If you get someone to sign in for you and let you xerox notes, attendance is not necessary either.  Dreadful midterm and final that, while easy, were way too long and posed the same questions multiple times.	7	3	856	NA
8986	May 23, 2004	If you have digital logic background and some comp org knowledge, you most likely will be ok. However, if that is not the case, don't take this class with this professor unless you have tons of time to teach yourself!\nThe first half of the semester he covers digital logic using his own notes and the small appendix on the book which is not sufficient to understand the depth of the subject.  After the midterm, he rushes through the entire book and once he finished, he goes back to cover more digital logic stuff.  He doesn't follow the book because he didn't write it.\nProf. Unger is very disorganized in his lectures and students are trying to understand what the hell he is talking about.  TA's were just too busy with their stuff and weren't helpful at all. \nThe subject itself is very interesting and challenging, you can a lot , but you are on your own.When hws or exams, make sure you understand what is he asking, you might know the answer, but don't quite understand what the hell the prof. is asking you.	midterm 25 % final  60 %\nweekly hws 15%\nThe time you need to spend on this class will depend on your background of the subject.  You are better off reading the book and doing his own made up problems than going to class . Avoid the professor if you can.	6	1	50	27
9068	June 06, 2004	Awsome guy, very aproachable in and out of class. Often in his office and not to upset if you stop buy. He is a fun charcter, his unix prompt displays "Command me baby:" which everyone got a chuckle from. The class is easy if you are into comp sci and a nightmare if you are not. Great intro to java course though, highly suggested for all people considering a computer science major. I decided to do it because of this course as well as a friend of mine.	Heavy for non geeks, Geeks are fine. Midterm, final, 4-6 homeworks take a long time though on the homeworks.	7	1	515	2906
9146	June 27, 2004	The AIS course is one of the most intensive courses. People grumble to high heaven about this class. Fact is, this course has 2 major parts. One is the theory about multimedia on the Internet. This stuff is all bleeding edge - so be prepared to google, read RFCs and chase down details. The second part is the programming part. You **have** to be very good in programming - particularly in threads, locking, networking ... all that low level stuff. You **will not** learn that here, rather the projects will expose you to them. The projects all build up to a software radio, which is a really cool thing to build. (Interviewers are really impressed to hear about this.) And you will become a battle hardened programmer at the end of it all. If you have not done this kind of programming before, then be prepared to spend 10-20 hours a week in the lab. It will be worth it.\nProf Schulzrinne is really into his stuff. He knows it inside out. Okay his lectures are not that detailed. But he is amazingly responsive via email (I got a reply back within half an hour - at 1am!). If you go to him prepared, then you'll find a knowledgeable and responsive person; if you go unprepared or ask stupid questions he will make you feel exactly that ... unprepared and stupid. Don't complain. Learn to deal with him on equal terms and you'll learn a heck of a lot in the class.	8-10 homeworks consisting of theory and programming projects - they come at a pretty fast clip so be prepared. The theory is not too bad. Allocate 10-20 hours a week, depending on your programming skill level, for this course and you'll be fine. Midterm and final have moderately difficult problems. If you've got the main concepts you'll be fine.	2	4	350	2485
9745	November 17, 2004	DO NOT!! I REPEAT DO NOT!! TAKE THIS CLASS...if you know whats good for you..you will stay away.  THE WORST PROFESSOR I HAVE EVER HAD...seriously....he doesn't explain anything...all he does is read the lecture notes online.  He expects us to know theory and concepts that even the TAs learned just a few weeks ago.  The TAs were the only good thing about this class...all of them were extremely helpful	6 homeworks, 1 dropped.......6 programs, 1 dropped, midterm, final.	0	0	1891	2906
82432	October 28, 2020	Awesome awesome class...Tony is so engaging in his lectures and very clear at explaining things. This was one of the most organized classes Iâ€™ve taken, even with it being fully online!	Fall A half semester class, so workload was higher than normal (probably 12 hours per week including lectures, quizzes, and homeworks), but still very fair and manageable	24	0	13639	26
9198	July 14, 2004	Overall, good teacher. Shlomo is personable, very accessible via email (to which he responds very quickly) and office hours, and more than fair with his assignments and exams. My only complaint is that I found his lectures unsatisfying. They were, for the most part, a recap/summary of relevant readings in the text, and general outlines of theory whereas I would have found it more interesting if he went into more programming details. Even so, this isn't really necessary-- you always learn best when you're trying to work out an assignment in front of the computer. Part of it, too, may have been that he was always looking to get the class to participate when no one was really interested-- he may have done much better if he just lectured.\nOther good things about the course-- attendance to recitations is optional (no one went and the TA wasn't especially helpful), and although he said participation counted, he didn't seem to mind if people missed or didn't come to class (good for the independent learner).	Not bad at all-- 3 theory assignments (don't take long at all), and 3 programming assignments (you should probably devote 2 days to each if you don't want to work on them a little at a time). Pretty easy midterm and final.	2	1	1671	1622
9218	July 23, 2004	A very nice professor who cares enough to learn everyones name in the relatively large class. \nBut I don't think she was born to teach. She is very well prepared in that she has everything on powerpoint, but she's not so great at answering questions that aren't in the powerpoint plan. She's also rather bad at coming up with good test questions, asking students to go through every step of an algorithm that is easy for computers, but painfully tedius for humans, and making that worth almost half the midterm. (And giving a full blue book for it).\nThe subject is fascinating, and if no one else is teaching it, I still highly recommend taking it. Kathleen Mckeown is a great professor if you want a friend and a nice office hours buddy, is knowledgeable and cares, but just isn't a born teacher.	3 or 4 programming assignments, 1 very large one. midterm, final. Most of your time will be spent on the programming, but at least I found that to be the best part. You make some pretty damn cool stuff.	8	5	2142	26
9220	July 24, 2004	The good:\nPeter Allen is a very talented lecturer. His handouts are spectacular. They present each topic very simply and completely, making reading the horrendously boring textbook almost completely unnecessary. Even though sometimes the material is a bit dry, Prof. Allen manages to keep the lectures interesting and bearable. I don't know what other reviewers are talking about when they say he humiliates students. I never remember him disparaging any student. \nThe bad:\nHe did have a tendency to misunderstand students' questions and assume they were asking simpler questions than they meant to, but he was always patient and treated all questions as worthy of asking. Also, get comfortable when he starts to walk through an example, because he'll take you through the WHOLE thing, even if the process is the same in the first 10% of the example as it is in the last 90%.\nIf you take this class, be prepared to work. This was the most work I've ever done for a class. Ever. The theory questions are usually reasonable, but the programming is killer. It wasn't uncommon for me to spend my entire weekend working on an assignment (even with no procrastinating). There's a lot of work, but I think it was worth it because after you walk out of that class, you will be extremely well prepared for programming in Java and comfortable with the data structures discussed in class. If you're serious about CS and can handle a hardcore workload, take this class.	6 HW's with programming, theory. 1 Midterm, 1 Final.	3	1	37	1622
9343	August 29, 2004	If you don't your remember probablity and other math from Algorithms then don't bother taking this class because you'll get killed.  In other words, don't ignore the prerequisties for the class because the Prof. will assume that you're comfortable with all the concepts that she listed on the class website. Her lectures are not that good and neither is her handwriting. Fortunately, she makes everybody participate in this thing where in each lecture a student is chosen to take notes for the class. The student is then responsible for converting the notes into LaTeX or PDF and share it with the rest of the class. There are 6 homeworks and one final exam. The homeworks are pretty long so start early. They'll require you to do some mathematical proofs, encryption scheme design, and other theoretical stuff. Take this class only if you're really interested in Cryptography.	6 hard homeworks, one final exam	0	7	1621	2970
9427	September 09, 2004	he is awesome, he is very helpful in answering students' questions, he is there to answer ur questions and he actually cares about our progress, instead of just wanting to make us have a hard time struggling, his homework is helpful, i got an A in that class because i tried hard to do my homework well, but i dunno if it is easy, i put in a tremendous amount of work to get a perfect  score	4 assignments1 final	2	0	1972	885
9449	September 15, 2004	This guy is the reason that tenure should not exist.  He needs to be retired by the school as he gives questions on exams that were not covered in any readings, homeworks, or classes.  He is inappropriate in conversations outside of class, will not help you even if you beg, and grades unfairly on a C minus curve.  He forgets what he is talking about in mid sentence often which is probably why he puts things not covered on the exams.  If you want to destroy your GPA, learn nothing, and be insulted take this class.  Columbia needs to suggest to this guy who is older than my grandfather that he might want to head to Florida and stop torturing students with his dribble.	Unreasonable homeworks that even the TA's could not help with in many cases.	6	1	50	27
9661	November 14, 2004	DEFINITELY the BEST professor I ever had at Columbia.  At the same time, he was definitely the HARDEST professor I ever had at Columbia.  I took computational complexity last semester and it was the hardest class I had taken.  However, because he was such a great professor, I decided to take computational learning theory, and now i can say that that is the hardest class I've ever taken.   However, if you're not afraid to face the challenge, you will find that he is an excellent teacher, and you will definitely learn a lot.  I definitely don't consider myself a very motivated learner, but I  think the hard work was worth it for these classes.	The styles of the problem sets were very similar in both classes (even though they pertain to very different subject matter).  In either class, you will have biweekly problem sets which will each probably take you several days to complete.   They consist of about 6 problems, and they are definitely not easy.  Your homeworks are to be typed up in LaTeX, and just to give you a general idea, mine averaged something like 7 pages each.  Computational complexity had 7 problem sets and a take home final which was basically just another problem set weighted heavier.  Computational learning theory had 5 problem sets and a final project, which is yours to come up with.	11	1	1724	2287
9665	November 14, 2004	While many seem to think his Science of Psych course is boring and deficient, the small seminar setting of his Education Eval. course really brings out the humor, interest and genius of this professor.  It was really touching and encouraging to hear that after a full and amazing lifetime ( I won't spoil any stories for those intending to take this class, but boy does he have some great ones) he has decided that the most important thing to do in life is to try and figure out how to teach others correctly.  While he by no means attempts to say he knows how this is to be done, the class is all about researching and exploring different measurements and techniques to try and get closer to determining the "correct" way of teaching from birth on, touching on issues such as socio-economic, gender, race differences, IQ and "intelligence."  If you are at all interested in going into the education field as a teacher or policy maker I would highly recommend this class as one of the best I have taken in the Psychology department at Columbia.	One "take-home" midterm that is pretty hard but doesn't count for a whole lot more than making sure you are reading articles he assigns and understanding concepts and statistics.  One long paper due at the end on an education topic of your choice.	0	0	178	NA
82435	October 30, 2020	Honestly one of the worst classes I've taken. Lectures are so slow and the assignments are extremely confusing. Very disappointing	Would be much lighter if expectations weren't so confusing	8	1	6653	664
9816	December 01, 2004	Yes, this class fills a science requirement.  And yes, there are only 3 quizzes all semester.  But this man is nuts.\nI mean that in a nice way, actually.  On a scale from one to senile, Galanter should be in a nursing home, but he's quite entertaining from time to time.  "No one on earth understands the Finns and the Hungarians, and I firmly believe that this is because they are extraterrestrials."  What?  Oh man.  You don't need to go to the lectures, the readings are all on a cd so you only pay $35 for all of your books, and the quizzes are open notebook.  If you do the readings, and show up on occassion, it's an easy class.  Boring usually, but easy.	3 open notebook quizzes (although each quiz is on 20 chapters of material, so open notebook doesn't make that much of a difference unless you know where everything is).  No midterm or final.	0	0	178	NA
9922	December 12, 2004	he's so nice and very relaxing while teaching\napproachable... he's willing to have an appointment with you if you can't make it to his\noffice hours\ntake his class!	5 hws 1 midterm 1 finalthe homeworks are pretty tough, and take long time to finish it	1	1	515	2906
10005	December 18, 2004	Where to start?  Aho has an impressive background; no one would deny that he doesn't know computer science well.  He cowrote his own major programming language called "AWK" and teaches far above an introductory level.  The class does start extremely slow, learning HTML and Javascript before the heavy Java programming approaches.  Alfred will give you a great first impression.  Then you will wonder what evil lurks beneath his genial facade when he screws you over somehow.  But by the end you will see he is not such a bad guy. \nAs for the class, much of the lecture is boring, repetitive, and sometimes incomprehensible.  The review session will tell you what is on the exams.  During class I brought my laptop and chatted/checked email every day; listening when appropriate.  I recommend this to any student; otherwise class may be so boring that you will stop showing up.	6 homeworks (starting easy and getting harder) and 6 programs (starting from very easy to really hard), with one of each dropped.  The midterm and final are pretty difficult; attending the review session is a must.	0	2	1891	2598
10100	December 21, 2004	This was a very interesting class.  Galanter looks like he's about to keel over and die but he is actually very competent and often entertaining as well.  Lectures are often hard to follow and have very little to do with the readings.  So you have to do both.  There are 3 midterms and they are hard but the curve is good so don't worry.  There is no writing in this class, only multiple choice so it's an excellent non-tech for us engineers.	On the first day he tells you all the readings you have to do for the semester.	0	1	178	NA
10156	December 22, 2004	In my opinion, this guy REALLY should not be teaching anymore. I assume that at some point a few decades ago he was competent, but it's time for him to be put out to pasture. The ONLY reason to take him is for an easy 'A' - I couldn't imagine an easier class (the questions on the tests are unconventional, and the tests are waaaay to long, but if you have half a brain cell you should be able to bullsh*t your way through). I suppose another reason to take him would be if you enjoy listening to anecdotes and stories and if you want to impress your friends and family by knowing random historical trivia.\nNot only does he not cover much material, he screws up the material he does cover (I've never accused another prof. of doing this, so don't think I'm some thinks-he-knows-it-all undergrad. This guy holds the unique position of being the ONLY professor I do not respect intellectually. He seems to have just lost whatever intellectual ability he had - and I don't doubt that he used to have plenty). \nOh, his stories may seem spontaneous but, having taken 20th Century Philosphy with him I can tell you that he tells the same damned stories in both classes (How can you trust the review of an idiot who didn't learn from his mistake and took two of this guy's classes? I admit that was really dumb. I needed an easy class on my schedule this semester and it doesn't get any easier than Sidorsky. Also, 20th Century was marginally better. If I had it to do over again, I may have still taken 20th Century, actually).	Absolute joke. It does not get any easier. Seriously.\nThe ONLY people who may have trouble with this class are those who cannot write fast enough to get through his tests (either those who have to think an answer through before they start writing or those physically incapable of moving their pens quickly enough). Acttually, another class of people who may have trouble are those who are stymied by unconventional questions. \nIf you can bullsh*t on the fly and have a strong and limber wrist, you've hit the "easy A" jackpot.	11	10	856	NA
10259	December 25, 2004	This is a new class opened by the CSEE department and Prof. Unger is teaching it for the first time. It basically combines Digital Logic and Comp Org into one class. So the content is much more condensed and not as detailed as either of those 2 classes it intends to replace. \nProf. Unger uses his own textbook for the first half of the class (digital logic), and someone else's textbook for the second half (comp org). I must say, the first half is significantly easier than the second half, however, the midterm (which covers the first half) has a lot of detailed questions that require thorough understanding of the material. While the final (focusing on the second half) has mostly conceptual questions that only require a superficial understanding of the material, simply because the second half's material is much more difficult and he cannot go into much details.\nAs for Prof. Unger, his lectures are much more understandable and lucid when covering digital logic topics. When it comes to comp org, his lectures become rambling and explanations become difficult to understand. The homework sets after the midterm also become much more difficult. So be prepared to do a lot of your own reading on the second half of the semester. \nAs for tests, they are not as difficult as the homework questions, but questions still require significant thinking. But if you do all the homework questions by yourself and understand the solutions for the ones you cannot do, you should be fine on the tests.	1 weekly problem set ( 7 questions on average, a lot more difficult questions on comp org topics, do not expect to be able to do all of them)\n1 midterm, 1 final. Final is like 65-70% of your grade and focuses on the second half of the semester.  Not an easy A by any means, must put in hardwork.	0	0	50	4251
10292	December 26, 2004	Great class. Lectures were very well prepared and interesting. Professor Stein is very clear and will stop to clarify things if you're confused.	weekly HW, 2 midterms that are pretty easy, final that is pretty difficult	6	11	1342	NA
10321	December 27, 2004	If you are interested in programming languages or are required to take PLT to graduate, I would strongly encourage that you take this course with a different professor. In the beginning of the semester, you will think that Aho's lectures are pretty cool and  engaging. Moreover, there is a sense that you are basking in glow of computer science rock-stardom (he is one of the co-authors of the famed "Dragon Book" text that you will be using for the class). But, after the first three or four weeks, we were often told to just look in the book to learn about any new concept. In fact, each new idea that was introduced was concluded with the words "go look in the book." He gives affectations to being devoted to his students, and I remember going to office hours several times to ask about topics that weren't being elucidated particularly well by the book. Each time, he forgot my name, and at the end of the (short) conversation, his helpful response was -- guess what? -- "go look in the book." This was irresponsible teaching, and he's able to get away with it because he is tenured and famed within his field. His teaching style would improve vastly if he could only say "go look in the book" in other ways, like "refer to the book for more details" or "the book contains much more information on this topic" or even "read the book and it will explain this concept better than I can ever explain to you during this lecture." I took this class in Spring 2004, and I'm sadly still bitter about this class. You will learn much from this course, but learning about compilers from this guy would be no better than, say, go looking in the book and reading about it on your own.	No homeworks (!). There is a midterm (20% of final grade), a final (40%) and a semester-long project (40%). The project consists of a language whitepaper, a language design spec, a working implementation of your language, a presentation on how your language works, plus a final report and code print-out (expect it to be about 100+ pages at least). The final was exactly as long as the midterm (both were given during the regular 75-minute class period, and they had the same number of questions) yet it counts for twice as much. TAs were not helpful, but most likely they were overwhelemed with the sheer number of students. Pick your project partners wisely, as you're going to be stuck with them for the *entire* semester.	5	2	1891	3105
10332	December 27, 2004	He is very nice and interesting, but I feel that everything he says in class is posted online  which makes coming sort of pointless.  His midterm was very easy and the final was very hard.  The homeworks ranged from easy to hard.  There was not much of a curve in the final grade.	Homeworks are 25 percent of grade, problem sets are 25 percent, midterm is 25 percent and final is 25 percent.   This class should take up a LOT of your time (all you first years will not need to worry about being bored)	4	2	1891	3807
12217	May 19, 2005	The course is interesting, and Prof Feldman really enjoys the material espcially cnsidering that his advisor at MIT was the man who wrote the book you use. He is not the most exciting of lecturers, but he does cover the material in a effecient and clean manor. Prof Feldman is always ready to help, and seems to enjoy students coming to office hours to talk about P vs NP or the Red Sox, its your choice. He is a solid proffesor and I would recommend him if you are going to take computability.	6 problem sets, worth a lot. 3 quizes worth less. And a Final not worth as much as the problem sets. Get good grades of the p sets and you will be solid.	3	0	2550	234
10394	December 29, 2004	Prof. Cannon was simply amazing!  He had this way of explaining difficult concepts in a way that made it easy to understand, and he didn't mind going over the same concept over and over again until everyone in the class was clear.  He also made it very easy to go to office hours (he encouraged it every week).  \nProf. Cannon warned us in the beginning of the class that CS1007 is a rigorous introduction to computer science and that students who had no previous programming experience should consider taking CS1004.  I had no previous programming experience, but I decided to stay in CS1007 because I knew that I would learn more in that class. Prof. Cannon said that students without prior programming experience would find the class difficult (even those who had a lot of programming experience had a hard time), but the class is do-able and Prof. Cannon made sure to say that he would be as supportive as he can.  And he was.  He also made class fun -- he is funny and witty and actually makes you want to go to class (and you should go.  Many times he covered concepts that weren't in the textbook, and we needed to know those concepts for the exams and to complete our homework assignments).\nIf you're looking for an easy A in computer science, then CS1007 is not for you.  Take Professor Cannon's advice and take CS1004 (though I'm not sure what the workload is in that class.  I know it's easier than 1007, though).  But if you're looking for a class that will challenge you and make you proud of all that you've learned, then be brave and take CS1007 and make sure to take it with Prof. Cannon.  He is one of the best professors I've encountered so far at Columbia.  You will learn a whole lot of programming and will be surprised about the things you learn to do.	5 homework assignments each consisting of 2-3 parts (a problem set and 1-2 programming projects).  Every other assignment is considered difficult (they were all difficult to me.  And homework#2 was a KILLER!) There was also a midterm and a final.  Class attendance is required.	1	1	515	2906
10559	December 31, 2004	I totally agree with the other reviews. He's a great professor, so take his class. What I found the greatest about him is that he taught more than the course material. Like, he told us in the beginning of the semester that what he emphasizes in class and the vocab definitions he writes on the board are probably going to be on the exam. Such hint is so useful when you are bombarded with tons of vocabs and info that you encounter in the textbook; because then you know which the primary and important stuff are and which are not. Also, he explicitly provided studying strategies for the midterm, which, of course, can be used in other classes. However, I didn't find him all that helpful when it came to seeing him during office hours or through email; so I got help the TA's who were simply great (I had Rachel Goldman, Cheryl Lau, and Lauren Wilcox). They basically saved my life, rather than the professor (yet that's just me; other students maybe didn't need as much help). However, I really liked prof. Cannon; it's worth taking his class and getting to know him.	NA	1	1	515	2906
10676	January 02, 2005	An excellent professor, not a bad class. Professor Hirschberg is engaging, friendly, and interesting, incredibly well prepared for class, and impressively knowledgeable about her field. \nYou should expect the class to tend towards your humanities side, if you are used to the standard comp. sci class. Exams consist of essays rather than calculations, and at least half the class is devoted to the study of natural language itself, often seperate from computation. There are very few algorithms to learn, material is approached on a "higher level" that avoids technical knowledge.\nGoing to class is not strictly required, since there are beautiful lecture notes for each class, as well as chapters and sections in the book posted for each lecture. Missing class however would be a mistake, as she is an engaging lecturer.	Three homework assignments that require only a relatively minimal amount of programming (repeated use of regular expressions, mainly), but are interesting. One was organized as a competition. Two exams that were fair, with term definition and essay sections.	5	3	1957	4903
10681	January 02, 2005	I disagree with most of the previous reviews -- Professor Unger is a wonderful professor, take his course (well, its required, but at least be happy about it).\nThat being said, the course is difficult, and Prof. Unger inflates his grades somewhat less than we Columbia students are used to. The problem sets can sometimes be difficult, but they are all doable if you have paid attention in class. CLASS ATTENDANCE IS NECESSARY -- Prof. Unger wrote the digital logic textbook, and it is completely incomprehensible. But he goes over the same material in class, with the same examples (hey, he wrote them), and when lecturing, is lucid. He has a habit of mishearing questions, and then answering them, but if you persevere, he has the patience to clear things up for you. He can also be a bit absentminded when assigning problemsets, so if a problem looks wrong, email him about it, because it might well be. But he's prompt at responding, and very reasonable.	Weekly problem sets that are sometimes quite difficult (and even when not, always time consuming), but these account for only 15% of the grade.\nOne midterm, one final. Both tests are much easier than the homeworks, testing only the basic basic stuff. Don't screw up the final though, it is 60% (this term he made it 70%) of your grade.	1	0	50	4251
10803	January 03, 2005	Seriously, just dont take it.  Its  boring and the guy needs a break.  Sure, he's a "sweet man" with lots of experience but is that what you're paying for?  Also, its not always an easy class: it depends on your TA  and your willingness to repeat the profs. personal opinions from class (which differ significantly from the book).  Not worth it.	light.  Reading is dense but average.	3	2	856	NA
10866	January 04, 2005	Galanter is the best guy ever!! He's guaranteed to keep you entertained throughout the whole lecture, but that's where the fun ends. The class was tough, but I learned a lot. I recommend this class to someone who has plenty of time to do all the readings assigned for the quizzes and attend all the lectures.	The class is only 3 quizzes and you are given 4 choices and you must pick the 3 incorrect ones or you will end up with a negative score.  Heavy reading load for the quizzes.	0	4	178	NA
10943	January 05, 2005	Professor Nieh is generally an amiable person.  He provided us with Halloween candy during the midterm and held a pizza party/review session for the last day of class.  His teaching style of writing bulleted lists and making diagrams on the blackboard is mildly helpful -- at least it's not Powerpoint.  The material was actually really interesting, and concretely brought together things I had learned in other CS classes.  Unfortunately, all of this pales in comparison to the torture of the homeworks: endless hours of staring at a computer trying to understand somebody else's LInux code that is hardly discussed in class.  The material taught in class was how an operating system works.  Ability to do the homeworks was in NO way a function of how well you understood this material.  Take this class if you don't care about your grade or have no social life.	6 disgusting group homeworks, midterm and final.	5	8	45	2384
10967	January 06, 2005	Prof. Stein is great in lecture, but he cares about class policy so much that he seems resent the students themselves.  Despite this, the course itself is great.  Some students found that the fact that Prof. Stein, the T.A.'s, and the book all did the problems a little differently confusing, but I like that I could choose the method I was most comfortable with.  Although I feel this course would have been a much happier experience if Prof. Stien got over himself, the course itself was great.	P-Sets can be a little long, tough, and tedious, but they are definitly doable.  Exams are not bad at all.	8	7	1342	NA
10977	January 06, 2005	Professor Sidorsky knows his stuff.  At first he seems a bit scattered, but you then learn that his lectures are actually organized, coherent, and he is actually quite brilliant.  The lectures can be quite dry at times, but  never unbearable.  If you listen and take good notes, the time goes by much faster.  And, by taking good notes, you will be guaranteed to find the midterm and final very easy.  It is very possible to get an A in the class by attending lecture and never doing a single reading...not that there is much reading in the first place.  Overall, Professor Sidorsky is very interesting and very kind.  His class is great for philosophy majors, those who are interested in philosophy, or for those who simply want an easy class that they can learn some valuable information in.	Course pack that is probably $30 and contains all the readings you will need.  You could get by without doing any reading, or at least get away with saving it all until the very last minute considering the readings are all short.  Midterm and Final that are long long long.  You will probably find that you don't even have enough time to finish them in the allotted time.  However, Professor Sidorsky is an extremely leniant grader.  He admits that himself, quite frequently.	0	4	856	NA
10997	January 07, 2005	I would definitely reccomend this class, if only to fill part of your science requirement.  Galanter is, as another reviewer said, basically senile, but he's hysterically funny.  He also made major contributions to the field of psychology, so he really knows what he's talking about.  The lectures vary between very interesting - both because of the material and because of his random stories - and sleep-inducing.  There are three "quizzes" (50 minute multiple choice tests), but they're based more on extensive reading than lecture notes and are open book.	three open book "quizzes" based on extensive reading	0	2	178	NA
11111	January 11, 2005	Once you get over Galanter's senile funniness (the type of humor you'd get from walking around a nursing home) he is a terrible lecturer who made me contemplate taking my own life each and every time I sat down in his class. It was a gamble with longshot odds every time i went to class whether i could come away with something remotely valuable. the way he speaks (and writes in his textbook) is very difficult to understand and makes me hate him even more.  I thought i was failing the class until i got my A. So i guess you can do well in the class if you are willing to put up with massive BS and not learn a damn thing. if you do decide to take the class, i urge you to not spend 35$ on his stupid CD and copy it from someone	3 open note quizes, incredibly difficult but the final grades are wicked curved. sometimes he let us use laptops which was great because you can search thru some of your texts. students must complete 6 experiments, which are a pain, but they turn out not to  be mandatory, but extra credit. turn in corrections to his impenetrable textbooks to recieve more EC	0	1	178	NA
11210	January 17, 2005	Man he was really funny that first day of class....  After that every class got a little bit worse.  By the midterm I had stopped going alltogether.  I got a B could have been better but I didn't do the experiments, and never went to class.  If you do manage to learn something congrats you're the first.	3 tests which are tricky I don't care if it's a better way to test.  And don't drop as i almost did after the first test.... turns out 37 is above average and more than a few people get in the negative,	0	0	178	NA
11252	January 18, 2005	WARNING - this is not a class for slackers. You will get an A in this class if you do the readings, take notes on the readings, and attend and take notes during class. Easily. However, the readings are incredible dry and lengthy so good luck with that. Galanter is a quirky firecracker of an old, old man, making lectures more than entertaining. He sang to us in morse code once. If you want a B or B+ then you should do some of the reading if you have time, go to as many classes as possible, but most importantly share notes with other people - the tests are open-book .	lots of boring readings, 3 50 minute quizzes that are difficult but graded on a curve and most people do shittily anyways. COMPLETE YOUR LAB HOURS or your grade will be hurt	0	4	178	NA
11257	January 18, 2005	My worst academic experience. Pay 200% attention during lectures if you are taking his class since nothing he teaches in lectures will be found in the textbooks. Never buy the textbook he assigned since I have never used it once. Professor Rubenstein seems to be a very smart person and he gets annoyed with questions. Don't take his class if you have problems getting up. He always has 9:00am classes, hws are due at the beginning of the class and LATE assignments are never accepted, even if you arrive 30 seconds after the lecture has started.  Homeworks are very very difficult, so are exams. you are doing really well if you get above 70% in HWs. Midterms and final scores usually averaged around ~ 40%.	Around 7 - 8 assignments. Due dates usually get postponed since he never finishes the materials on time.	11	4	2427	NA
11283	January 18, 2005	Insane.  Who cares about machine language?  I just want to learn the basics of programming.  The homework problems were impossible, although the programming was hard yet doable.  This professor needs to understand that anybody interested in compsci as a major would be scared away by this course.  Comp sci is not this hard.  An intro level course has no need for 0 and 1 machine language programming.  "1000000100000100   // R0 = M[5]; load memory location 5 into R0" Well thanks I'll remember that next time i have to tell the machine how to load numbers into the CPU!\nHonestly one of the worst classes I have ever taken.  Need I even elaborate on the fact that close to nothing was ever taught in class that could later be used in homeworks or programming assignments?\nAnyways, I'm done venting.  Take my advice: If he is teaching any kind of intro class, flee it and take another one.  This was ridiculous.	Weekly HW set (so useless and timeconsuming) or programming assignment (usefull and doable), midterm and final will leave you pissed off.  Don't wait to drop this class.  Do it now!	2	1	1891	2906
11382	January 23, 2005	This class was absolutely rediculous.  I'm lucky I passed.  The homwork was so hard that sometimes the TA's couldnt help.  He expects a lot from you and because he is so smart, his whole level of thinking is way beyond us humans.  He's a genius robot that shouldn't be in the class room.  I respect his mind, but hes a bad professor.	Excessive bi-weekly assignments, hard midterm, harder exam.  Bad curve.	4	0	1891	3807
12251	May 21, 2005	A great professor. He is nice, invites commentary and feedback during class, and even cracks a few jokes here and there. His lectures are generally clear except things got a little confusing during the data structures section, when we covered a top that our book did not handle at all (red-black trees). He likes to make things challenging but not impossible. Good office hours.	6 programming assignments of increasing difficulty. These can take a long time to complete, so try to start early. Midterm and a final. The midterm was easier than the final, which had some fairly difficult questions on it.	1	2	515	2906
11398	January 23, 2005	Galanter is not the greatest lecturer in the world.  He could be best described as "meandering."  This is not to say his lectures aren't enjoyable, as they often are. \nHowever, I often found myself leaving class wondering if my attendance was worth anything.  Contrary to popular opinion, the most valuable part of 1001 for me was the readings.  Not all were the most interesting, but holistically they form a pretty good overview of the subject's basic areas of study.  Galanter's choices are about 50 years old, including the ones he wrote.  WIth a few exceptions they were very easy to get through, if not the freshest of material.  Given the course's historical approach, a little age is nothing to despair.  His quizzes are hard, frustratingly so, even if you've done the readings and attended every lecture.  Nearly everyone does poorly so the curve is quite generous.  As others have remarked, doing the readings and attending lectures is sure to earn you an A.	Fair amount of reading, easy if you pace yourself, and 3 very difficult 50 minute, open book, open note quizzes that are curved generously.  Also, 3 hours of experimental participation is required, although it became extra credit for my section.	0	9	178	NA
11416	January 24, 2005	Believe what you read/hear about this guy. He is AMAZING. He is nice about extensions (he's willing to give you extra time on one of the five assignments- meaning you just can't do it all the time). If you attend lectures and understand the material you will do very well on the tests. I knew some java before the class, so that made it easier, but Prof. Cannon will help you- if you're working on it, so is he. He makes himself and the TAs very available to you for help. In class he always stops and attempts to make sure everyone really understands. His lectures are generally pretty interesting and he is really a find. I am a computer science major, however, so perhaps that skews my opinion.	5 assignments, 1 midterm, 1 final. You do need to spend time on the assignments, do not leave them to the VERY last minute. Curve not too generous, but if you work you can do very well.	2	1	515	2906
11646	March 27, 2005	Eitan is awesome! I have heard that the older guy who used to teach this course was really dry and boring (and I don't know if Eitan will teach it again in the near future) but Eitan is completely hilarious. We spent half of the time in the course joking around with him and he really listens to his students. The book mostly sucks, the examples are all way over-simplified to really help with the homework, but Prof Grinspun does a good job of getting the whole class to work out more difficult examples during class. The TAs said that Eitan was the nicest professor they've ever TAed for and it seems to me they were right, his tests and homework assignments were very very fair and he encouraged the TAs to be easy graders. It's probably a bad idea to skip the class unless you have a friend whose a good note-taker because he does go over material/ do the aforementioned really useful problems during lecture that aren't in the book. He's almost always a few minutes late to class though. The class is pretty easy if you're a CS/compE major but if you're having trouble with something Eitan's totally accesible and willing to help you. After I did not so great on the first problem set, he was willingly 10 minutes late for a collegue's talk just so he could finish going over example problems for the midterm with me.	fair - biweekly problem sets, 2 midterms, final	13	0	2480	397
11703	April 08, 2005	I've always been quite disappointed with the lack of respect Columbia students show their profs.  It was refreshing to finally have a professor who didn't take crap and required a homework due at the beginning of class with no exceptions.  I think it says something about the mentality of the students that couldn't accept this.\nStein lectures very well, somewhat quickly, but the material is simple so it's okay.  He has a very quirky humor.  Grading isn't overly strict, but no completion grades.	Weekly homework.  Midterm and Final aren't hard.  No group projects, thank god.	5	12	1342	NA
11844	April 25, 2005	Prof McKeown is a nice lady. Let's say that first.\nShe's a pretty lousy professor, though. It's hard to tell whether she's just bored with the material, or doesn't know how to make it interesting, or just doesn't care. In any event, her classes consist of a series of slides that are pretty much straight from the textbook, and a lecture delivered in monotone. She seems actively disinterested in any of the interesting intellectual, scientific, or philosophical implications of the material, and instead grinds through the most boring algorithmic parts, yet without enough detail or mathematical sophistication to make it worthwhile.\nAvoid if possible.	Fair. A few projects that can will take as much work as you give them.	10	8	2142	26
11863	April 26, 2005	Pretty good prof, he is pretty leniant and will go out of his way to be available out of class, but his lecture notes are not very helpfull, and  often takes a long time to post solutions and sample code. all in all the class is tought more as a transition to C# for Java programmers and less as a class on C#.	4 programs, in increasing dificulty, and a final, very dificult.	0	0	802	1748
11922	May 01, 2005	In defense of a wonderful professor: Prof. Keromytis is bright, extremely knowledgeable, prepared for class, funny (not dull), and cares about his students.  My friends and I found him to be very approachable (not snotty or blatantly rude) and eager to help, though often it made sense to first go to the TA.  His assignments covered some applied security technologies (SSL, RSA/AES encryption, SOCKS, DH key exchange, etc.) but not necessarily every single theoretical model discussed in class.  C was the language of choice with two minor exceptions for Java.  I rate this class 5/5.	5 assignments - %50, midterm - %20 and final - %30.  The midterm and final were of average difficulty.  Some assignments were very difficult and time consuming and others were of average difficulty (no easy ones).	7	1	1472	2401
11928	May 02, 2005	The best professor I've had at Columbia, hands down. He not only knows his stuff, but is enthusiastic about teaching the material and has an excellent ability to get that knowledge across to students in his lectures. He's extremely organized, always showing up for exams with a detailed plan of exactly what he wanted to do, but never afraid to deviate slightly to answer a student's question. \n(The only exceptions were the two exam review classes, when he stated up front that he would show up with no plan, and spend the time answering whatever questions people had.)\nThere was no book for the course, but he walked us through the methods of constructing and traversing data structures, and really worked on explaining the rationale behind the use of different ones. If you come to class and follow what he's going through, you'll be fine. He's always open to answer questions, and will be happy to explain why he does things in certain ways before going on.\nJust a note: show up on time for class! This course met at 9:10 on the 7th floor of Hamilton. Yes, I know that feels early, especially for CS majors. Yes, I know it's a pain in the ass to get to the 7th floor of Hamilton without getting to the building at least a few minutes early. Make the effort to do so. Professor Pasik was always in class at least 10-15 minutes before it was scheduled to begin, and was happy to answer questions about the course work, CS in general, or anything else (he's a somewhat experienced scuba diver). He starts class exactly on time by laying out exactly what he's going to cover, and giving infrormation that's really necessary for understanding the rest of the material in that class. Lots of people would then routinely walk in 10, 15, or even 30 minutes late, then wonder why they were having trouble understanding the material.\nProfessor Pasik was always available after class to talk with students, and was great about responding to e-mail messages.\nThe material in this class is not so intuitive to plenty of people, but it's a lot harder if you don't come to class. For those of us who came to class ontime regularly, it was a lot easier. Pasik doesn't expect you to just copy the data structures from your class notes. He wants you to be able to understand how and why they work, so you can effectively use them. At the beginning of the semester he doesn't expect a full comprehension of all of it, but by the end he really expects people to have picked up on the things he was driving home all semester. The homework assignments follow this trend.\nAll in all, a great professor. I'm hoping to have the opportunity to take more classes with him.	6 programming projects. The first 2 are very simple and straightforward (he tells you directly how to do them in class). The middle 2 involve a little more creative thought. The last 2 involve solving some problems he didn't discuss directly, with the idea that by this point your problem solving skills should be up for the task. \nAll of the projects are posted on the web well in advance, so you can start ahead of time if you're not the world's fastest programmer.\nThe exams are designed to check that you understand the material presented in class. There's nothing in there that shouldn't be in your class notes, except the occasional analysis of why one method would be used instead of another.	23	16	2508	1622
12209	May 18, 2005	This is a professor that comes painfully close to amazing. He's a fantastic lecturer and actually kept my attention for most of the gruelling 2 hour sessions. He's funny and has great talent at explaining concepts. The homeworks are very well put together, as they challenge the student just the right amount for what you learn. Unfortunately, outside class he's not quite as good. He seemed to be having a busy semester, but his turnaround time for grading homeworks, responding to emails, and sending out final exam grades were far longer than they should have been. I'd definitely take another class with him, as there are weaknesses, but they're in the non-essential areas of teaching.	4 Homeworks (average about 2-3 hours each), Final Exam of reasonable difficulty	0	0	802	1748
12252	May 21, 2005	Prof. Grinspun managed to make this difficult class at the very least entertaining. His lectures are worth going to, not only because he explains things well but because his jokes are surprisingly funny. He actually learns his students' names and calls on people randomly during class. As for the subject itself, the book is pretty poor and has examples that are ridiculously easy compared to the exercises. This is an often weird and abstract class, but it's curved, so try not to worry about your grades until the end.	7 homework sets which can take a long time to complete. 2 midterms and 1 final. The first midterm was easy, the second was difficult, and the final was killer.	8	0	2480	397
12408	June 06, 2005	This is supposed to be an intro class, but Aho made it too hard for people with out experience.  He is a brilliant man, but unless you already know a lot about comp sci, you are about to get totally screwed over.  TA's didn't even know how to solve all of the hw problems.  This class was torture to me.	Too much.  Way too much.	4	2	1891	3807
12434	June 09, 2005	Prof. Stolfo knows the subject well, but couldn't deliver it well and control himself. He would beat the same dead horse over and over again until he realizes that he is too far behind and would start rushing through important topics (and as a result, miss important details). He would also ask questions in the final exam from topics that were not covered in the class just because PhD students were taking the final as their comp exams.	Heavy. It takes a lot of time to figure out how LISP works and the assignments were not easy.	7	1	4213	26
12577	July 27, 2005	Normally I don't bother to review on CULPA; however, I feel that all of the positive reviews about Galanter are incredibly misleading. It is obvious that only the students who "aced" this class are the ones attempting to elevate Galanter from a pompous piece of garbage to the level of a human being. What you should bear in mind is the huge number of students - about 50 - who withdrew from this section. Among them were a number of  psychology majors. I know this for a fact as 3 psych majors withdrew from our study group. Galanter's "readings" consist entirely of books that he has written. Bear in mind: Galanter's books are geared towards his contemporaries in the psychology field - NOT undergraduates. There is no logical cohesion between lectures, the texts, and the syllabus. If there is a topic or formula that is unclear to you, then good luck finding an answer.  Galanter tells the class: "Direct all questions to the TAs." The TAs in turn, were just as lost as the students. Originally there was to be a disucssion section, but Galanter decided that it was unecessary. After all, every student is well versed in statistics, as well as fluent in Latin. Which are required to understand several of the formulas.  Personally, I think the glowing reviews about Galanter's class were posted by the TAs, or Galanter himself. Galanter will most likely  remain in your memories far after the class ends as THE WORST Professor you will have at Columbia. I realize the intense negativity I am imbuing into this review, but it works to balance out all of the unfair "positive" repsonses on this class. If you are thinking of enrolling, ask around for feedback on Galanter. I am certain there are more students with hatred for this man, then there are with love.	3 tests &  forget about the experiment participation - it's only used as extra credit in the end.	38	0	178	NA
12823	October 05, 2005	Rocco Servedio is absolutely the best professor in the computer science department. He exhibits a level of competence and clarity that is a refreshing change from the general level of instruction at the Columbia CS department. He makes a complicated subject seem crystal clear, and the class never (amazingly), ever is boring -- The 75 minutes are over before you know it. Even the problemsets are a joy to complete -- and they are difficult. \nIf you can, absolutely, positively, definitely, without question take a course with this man.	Biweekly problem sets (that you should expect to devote many hours to) and a final project (Paper and presentation). No exams.	16	2	1724	2287
12824	October 05, 2005	I had Prof. Allen's class right after Prof. Rocco Servedio's class. The contrast could not have been clearer -- while Rocco is a clear and competent lecturer who is quick on his feet and always able to answer questions, Allen is a bumbling, incompetent waste of time. He was never once able to answer any questions posed to him in a way that suggested he understood either the question or even the material. His lectures were disorganized, rambling, and unintuitive. He is far and away the worst professor I have ever had at Columbia Computer Science (and perhaps tied for worst ever at Columbia).	Not too bad. A number of time consuming programming assignments, but they're fun.	1	25	37	2403
12911	November 07, 2005	Mauel is amazing.  I took the class having no experience in Mathematica (which is the only program he uses) and was really very afraid after the first couple of classes.  A lot of people drop out, but if you do the work (and Mauel is kind enough to read through all of your code for errors if you're stuggling) you will soon get over the computational barrier and learn a lot about the concepts.  It seems to definitely be one of the harder pre-professional classes but I thoroughly enjoyed it.  Mauel is so energetic in class that it's obvious he really likes this stuff, and he's so willing to help you out.  The TA was also extremely helpful.  Although you do sometimes get caught up on trying to figure out syntax, it really it not difficult programming in the sense that you have all the code from lecture, so it's mostly copy and paste.  Take this class and you will begin to love Mauel and the subject.	Weekly assignments in between four projects.  Everything is done outside of class, but Mauel generally goes over the basic concepts that you need just before assigning them.  With any of the work (including the final), either Mauel or the TA would help you out if you only email your program to them.  The projects each involve a topic but you can go anywhere you want with them.	0	0	44	NA
13153	December 06, 2005	Definitely agree with the first poster, though for a different class.\nHe's one of the best professors I've had at Columbia, and has given me a great passion for AI. His lectures are very interesting; even though it was 9am I always went to almost every class (that's very unusual for me); and though I often brought other work to do, I never got any done. Except for the day or two when he'd go over the homework or test, he had my rapt attention every moment of class.\nFor AI in specific, he not only focused on the computer science of it, but also asked students to read a book called "The Mind's I", and set aside a few days to talk about the more philosophical (and very intriguing) side of AI.\nHe is a hard teacher though, and it's a hard class. Below the mean all get C's theoretically. However, he does offer enough extra credit to shift the curve up to the high B's if you choose to do it. He never accepts late work, but even I (who chronically turns everything in late) made every deadline.	AI is hard stuff. The 3.5 projects all required a huge amount of work. The third took more time than any other CS project I've done. The tests aren't bad though, and if you go to class you don't have to study much. He also offers 5% (of the class) extra credit on each major project.	15	5	2508	26
13364	December 19, 2005	Everyone else has said it and I agree. He is the most confusing professor ever. He teaches 1/12th of what he tests you on and words the tests so that if you are not a statistician you will not understand what he is talking about. \nI knew he was horrendous from the CULPA reviews before I took him but I wanted to get my sciences out of the way and his class was the only one that fit so I took it. \nHe does give you plenty of time to get out of the class. He gives 2 of the 3 quizzes and the grades for them before the end of the drop/add period and a boat load of students leave the class. I didn't drop after the second quiz because I could not afford to lose the money and my Dean said that the science classes at Columbia don't get much easier than this. I have to disagree with my Dean. There are much easier science classes if for no other reason than that there are professors who coherently teach 80-100% of what will be on their tests. This intro level class was a traumatic, anxiety ridden experience. He is a founder of cognitive psychology -- I guess that's why he is still teaching but he should just be writing books and doing some sort of research. He doesn't belong in a classroom. \nGood points : They return the grades quickly--usually within 2-3 days. The TAs know most people are struggling and are available to help you understand things. You get credit for your scores improving -- at least you did this semester. I don't know how he is going to change his policy next year. \nAdvice: If you have to take this class, when you take your quizzes leave all questions of which you are not sure of the answer Blank -- I know this is hard because we are use to being know it alls who answer all the questions but leave it blank. \nAn unanswered question is your best friend. \nI got a B+	Three atrocious quizzes and the readings	3	0	178	NA
13466	December 23, 2005	I didn't like him when I started the class, but I sadly got over it and really enjoyed this. He's a gruff, bitter old man but secretly a pretty nice guy -- lectures are interesting, tangential, and often include lame jokes. Has a lot of experience and generally will not waste your time. Overall, a surprisingly good introduction to the CS department, no matter how he comes off at first.	One midterm exam and five assignments, each of which you get roughly two weeks for. The assignments aren't too hard but tend to take a while and be convoluted -- I did them all the night before they were due, but this made my life extremely difficult. If the class is running behind, he'll generally extend the deadline.\nThe grading curve is very heavy -- my 75 became an A and nobody scored below a B-; this is pretty fair, since the tests ask some really obscure, ridiculous question and most of the people in the class are ludicrous overachievers. This class will not ruin your life.	10	0	42	995
13491	December 24, 2005	Good lecturer (speaks English, makes corny jokes), but watch out because he can be strict!  If you come late don't you dare hand in the problem set by interrupting his class.  Stay out of his way when he's mad, but ask good questions otherwise, and he'll like you.  For a good joke, count how many times he says "okay" in 10 minutes.  It's after ever sentence, and usually a few times in the middle of each sentence as well.  I counted 240 once, and had a muffled laugh after each one.	Weekly, relevant problem sets, two midterms & one final that aren't so bad.	5	6	1342	NA
13530	December 27, 2005	Computer Science majors at Columbia tend to dread the Scientific Computation and Computation Linear Algebra courses, and as few as ten (out of thirtysome) people have shown up to class.  I feel kind of bad that attendance was so bad, as the professor's a nice guy, but I'm not one to comment on why you should go to class, since I for the most part didn't.\nThere are 5 Homework Assignments.  In the first 4, there is a programming component that is worth 40%.  The amount of programming involved varies widely, and the most difficult programming assignment is actually nontrivial, which was a shock to the class.  The theory questions given are pretty easy, and it seems like we would learn so much more if we had less programming and more problems (For example, I don't think there was a question where we actually had to solve for the eigenvalue).  The professor doesn't assign a homework until all of the material on it is covered, and then you get two weeks to do it, which is generous.  You are not given as much time for extra credit (like a week), but extra credit problems are fairly easy proofs, so it is not too difficult to get all 10% of the extra credit, if you are not too afraid of proofs.\nThe midterm was very easy, and the final was significantly harder.  He is a pretty lenient grader, and doesn't plan to fail anyone.\nThe textbook is followed pretty closely, and packets are made covering a few algorithms not covered in the book.\nWhile nobody's crazy about his teaching abilities, he is a very nice guy who will help you out if you ask him.	5 HW Assignments (including programming), worth 30% of grade.  Midterm-30%, Final-40%, Extra Credit-10%.	7	0	2762	3992
13565	December 28, 2005	This class blows!!! At first it seems great because there are only three open note quizes and no papers or finals but I urge you all to resist the temptation to take this class. There are mountains of reading and the text/\nlectures don't relate very well to the exams. Often it seemed like exam questions were worded in the most convoluted and intentionaly misleading way possible so that even if you knew what the questions were trying to ask you couldn't answer them anyway. The guest lecturers and the TA lead review sessions make you realize how little you're learning and the horrible test scores pretty much across the board would lead you to believe they would have to curve (keep dreaming). I went to every single lecture, did the readings, did the full six credits of psych tests, was right around the middle of the pack for every exam and I got a D in this class. AVOID AT ALL COSTS !!!!	Lots of reading from Galatner and his pal's outdated texts. \nDon't worry though because it hardly relates to or compliments the lectures very well. There was a formula on one of the tests I had never even seen before and, like I said, I actually did the reading and went to class. There are three open note quizes. The open notebook helps but the questions are so strangely worded in many cases it won't help even if you know what they're trying to ask. \nYou also have to complete six credits of psychological experiments which supposedly end up as extra credit but it didn't help me at all. This whole class must be some kind of psychological experiment....	30	0	178	NA
14093	January 21, 2006	While it is true that Professor Sidorsky is clearly brilliant and knows his stuff, it seemed to me that he is past the age that he should be teaching.  He often repeated entire lectures and was very scattered in his presentation.  The course content was interesting but the presentation was pretty bad.  Professor Sidorsky is a very nice, old, smart, super-educated professor.  If you're looking for an engaging professor, look else where.  If you're looking to be exposed to brilliance past its prime and wish to get an A without too much work, then take Sidorsky.	Readings for every class that are by no means necessary for success in the class.  Midterm and Final.	3	1	856	NA
14147	January 25, 2006	One word - Wow.  Never thought I'd ever take the time to write on culpa, but I feel compelled to help as many students as possible.  Wow.  And for the people who gave positive reviews of the man and his class - Wow.  Wow.  Wow.  Wow.	WOW	20	1	178	NA
13611	January 02, 2006	Prof. Gross is an interesting lecturer and fairly approachable too.  His main problem is borne of his love of the subject - I think it's tough for him to relate to people who don't understand the material, so he has difficulty packaging things in a friendly way.  In fact, the material, both in the course notes that he teaches from and in the book, seems to have no regard whatsoever for the idea that mathematical concepts needn't be articulated in obtuse shorthand that caters to experts, not students in a class with the barest of prerequisites.  If you're having trouble with a concept, you'll probably have to see Prof. Gross in office hours and see one of the TAs and spend some time curled up with the book.\nProf. Gross teaches directly from course notes that he posts on the class website.  You should consider it pretty much a requirement that you print out the course notes before class and bring in the printouts to write on.  Otherwise you'll be scrambling to write stuff down in class, and you'll miss most of it.  If you print the course notes and read them and the assigned chapters in the book before each class, you'll have a much better idea of what's going on during the class.\nThe problem sets and exams are quite difficult.  You can count on having to run crying to the TAs on at least some of the problem sets, so you should leave time to do that before they're due.  Prof. Gross says he writes the exams aiming for a class average of about a 60.  They're open book and open notes though, so that helps.  He posts some old exams, so if you can do those very well (and you should, as practice), you'll be fine.\nIf your final average is in the high 70s, that should earn you an A-.	Six problem sets, and he takes your best five.  Together, they're worth 20% of your grade.  Two midterms each count for an additional 20%, and the final counts for 40%.  If you don't procrastinate on the problem sets, read what you're supposed to before class, and ask whenever you have a question (and don't stop asking until you understand the answer), you'll do well.	5	1	40	397
13627	January 02, 2006	Professor Gross is receptive to students who show interest in the material, and tries to make the class entertaining. Unfortunately, the material can be pretty boring, and it can be difficult to get a hold on it in the classroom setting.\nHe lectures from his class notes, which are available online and are meant to summarize the textbook. Given this teaching style, I have to say that Gross is pretty good at keeping things interesting. At the end of the day though, it's still a lecture from a notes on a projector.\nThe material can be very difficult at times, and I sometimes got the sense that your performance in this class was more of a function of your innate capacity for discrete math (and less about effort.)	6 problem sets, lowest grade dropped. They take a LONG time (6 hours+ for me) -- Gross recommends doing each group of questions after its relevant lecture. 5 free late days.  2 midterms, the first was difficult (mean ~55), the second was easy (mean ~80). The final was straightforward although some people had trouble with it. And of course it's all curved.	1	2	40	397
13677	January 04, 2006	This course can be improved. There should be a mandatory recitation session.\nAs a teacher Stein is not the best, avoid taking this course.\nThe home works are very time consuming and some questions are very difficult and takes away time from your other classes The course syllabus is from the book if you truly interested in algs. you should get the book and study at your own pace	7 hws1 mid term take home1 final in class	14	7	1342	NA
13788	January 09, 2006	He has an eccentric sense of humour, which you will probably find either entertaining or ridiculous. He lectures using course notes which he has posted online and rarely uses the chalkboard to solve problems (often he gives solutions verbally, which may not always suffice). Exams are open book and are fairly similar to his posted practice exams. Homeworks were graded a bit harshly, but they don't count for too much. Exam grading was much more forgiving. Attendance isn't necessary, but you may find it helpful as he shows you some tricks when he solves problems (and afterward you don't really need to read the book). Overall, the class is not too hard and professor was mediocre.	Six problem sets, two midterms, final.	1	3	40	397
13804	January 10, 2006	I took this course in the Spring of 2004 and found it challenging and useful. The course covered the requisite material thoroughly, and offered intriguing (and sometimes quite difficult) programming assignments. Other reviewers complain about the focus on 'boring algorithmic parts' and lack of attention to philosophical implications. This is both ironic and inaccurate on a number of counts. First, the early part of the course was dedicated to a thorough consideration of the difference between human-like and rational behavior; in addition, a number of readings were posted over the term that addressed just these issues. Second, this course is offered in a computer science department; the capacity of computer scientists to have impact on scientific or philosophical problems is founded in the algorithmic details. Glossing over this material would cheat serious students who are willing to do the work. I enjoyed the course and still discuss and apply the material I learned.	Heavy, but consistent with other upper-level courses required for a Ph.D. in computer science.	2	2	2142	26
13863	January 13, 2006	I completely agree with the last review in that if you have not previously taken any courses in statistics, you will have absolutely no idea what he is talking about a great deal of the time.\nThe "quizzes" (exams, really) have the most ridiculous format I've ever encountered.  Rather than select the 1 correct answer, you are supposed to cross off the 3 out of the 4 incorrect answers.\nThe review sessions held by the T.A.'s prior to each quiz are useless.  The handout they give you which lists all of the topics and historical figures you should know to prepare for the test will simply be a waste of your time if you adhere to it, because half the topics on the review sheet won't even be on the quiz.\nThe lectures are terribly boring, with more than half the class not even showing up anymore after the first quiz and those that do either spend the 75 minutes IM'ing or playing solitaire.  If you're lucky, every once in a while Galanter will crack a joke that is remotely funny but most of the time you will be bored to tears as he simply regurgitates from his own writings which are all circa 1962 and written in a fashion that make even the most intelligent student at times feel like an idiot.\nMy advice:  don't walk, but run as far away from this class as you possibly can.	Tons of reading, 3 open notes quizzes (which are NOT curved contrary to previous reviews), no midterm and no final.  Also, 3 hours of required "experimental" participation.	17	0	178	NA
13879	January 15, 2006	A very good class and professor. Taking Artificial Intelligence with Professor Mckeown convinced me to pursue AI and computer science further. Very highly recommended.	1 midterm, 1 final (both reasonable), and a number of programming assignments that you can spend as much time on as you want to.	1	5	2142	26
13902	January 15, 2006	I think he's a good teacher who can explain things well, but attendance does drop at the end, as people see that a significant part of the course revisits Data Structures.  I wanted to add that in Algorithms, he does not care whether the homework is handed in at the beginning or end of class (as opposed to his other class), and that undergrads are curved separately from the grads (the class is 80% graduate students).	7 Homeworks, take home midterm, final	6	18	1342	4079
14172	February 01, 2006	To start with the most important thing, I am glad that I took Science of Psychology with Galanter.  That said, I don't think he's for everyone.  Some of the lectures were quite vague and difficult to understand.  He went off on tangents and told bizarre stories.  The TA's during the review sessions (which were held during normal lecture time the class before the test) were far better at lucidly explaining the material.  The readings (Galanter's own books) were... a little hard to get through, but provided some entertaining writing and good information.  The worst part about the readings was that they came on CD, and there were very few pictures and diagrams (I sound like a kindergartener), and I think for a course like psychology that could've been helpful.  That's the thing, the class didn't really feel like a science class.  That may be because I had the wrong impression of what psychology is going into it, but needless to say it didn't feel too scientific.  I came away with a decent grasp of what psychology is, but my favorite part of the course was just hearing Galanter's rants.  He is clearly a brilliant man, and he's been around.  He received his PhD from Penn in the 50's if I remember correctly and has worked with some of the brightest psychologists of all time.  He himself was quite a scholar in his day.  So, spending some time in his world was fun.  The grading was based on three heavily curved multiple choice exams with the gimmick that you choose the three wrong answers instead of the one right one in order to receive points, to discourage guessing.  Did I mention they are open note?  I missed a lecture or two, took decent but not fantastic notes, and copied the relevant material from the readings (which we were allowed to do) the night before and cruised to an A+ in the class.  I'm not sure if the people in the class were that dumb and/or were thrown off by the "select the wrong answers" instruction, or maybe I'm just that smart, who knows, but I thought it was an easy class.  Your mileage may vary.  In summary, I'm not sure if I learned as much psych as I could've from another teacher, but I think the unique experience of hearing Galanter ramble combined with the ease of the course made it a good choice.	Some reading that is completely unnecessary to do until the night before the test.  Three tests evenly dispersed throughout the semester are the only factors in grading, and they are open note.  There is no "final," the test is on the last day of class, which is an added bonus.	0	11	178	NA
14173	February 01, 2006	David Sidorsky is a very nice man, and an extremely educated.  He also teaches class at the absolutely slowest pace imagineable.  You think I'm joking.  We had reading assignments of ONE PARAGRAPH sometimes.  I'm not joking.  A typical reading assignment would be two pages out of the only textbook required for the class.  In a way I applaud him for not overreaching the scope of a semester long college course (although that would be a bit of an understatement), because I do feel like most teachers try to cram in way too much reading and no one absorbs anything.  However, it was simple too slow.  We covered the major moral philosophies, but I feel like I could've learned about as much from 2-3 hours of reading on Wikipedia.  Sidorsky was nice and sometimes told some great stories, but I only heard them when I could stay away.  Students' heads were dropping like flies.  I'd be whipsering to my friend for a minute trying to pass the time and then I'd realize that he'd nodded off.  The class is pretty easy.  He doesn't like to give below a B, and he gives plenty of A's and A-'s.  But, you aren't going to learn that much, and it's really, really slow.  If you think it's worth it to sacrifice your education to make a good grade and hear the occasionally interesting ramblings of a very very knowledgeable man, then take it.  However, if I could time travel back to myself and advice myself on course selection, I would steer myself away from this one.	Almost no reading, no papers.  Midterm and final, both essay based with general, easy questions.	7	0	856	NA
14176	February 01, 2006	I feel compelled to add one important thing to my previous review after reading them.  I have no clue how someone received a D in the class after finishing in the middle of the pack on the exams.  On all three exams, I scored one or two points above the mean+SD.  I received an A+.  I saw someone arguing that the class was not curved.  How do you explain me getting somewhere around 85% correct answers on the tests and receiving an A+ if there is no curve?  Unbelievable.	NA	0	17	178	NA
14236	February 19, 2006	Professor Hershkop is a terrible teacher. He is a nice guy, and seems to like the subject, but he just can't teach. There are always typos on his slides and in his assignments, even in the code he gives us to use on projects. He never adequately answers questions and even though I attended all of the classes, I never learned anything. Reading the book during class would've been a better use of my time. He often taught this intro class as if it were Data Structures and expected us to know what he was talking about. Nice guy, but avoid taking a class with him if at all possible.	Though fair in his grading of labs and homeworks, the assignments were often difficult and poorly explained.	6	1	1671	2906
14261	February 27, 2006	Dante's Inferno is the best way to desscribe this class. Galanter does not give quizzes, he gives incredibly frustrating tests. The questions are multiple choice, but he wants you to circle the incorrect answers. If you accidently circle the correct answer, he penalizes you by taking points off your test grade. As a result, many students received minus deviations throughout the semster. According to one of the TAs, the lowest grade in our class on the first test was a -40. Example questions that Galanter may ask are: "Pavlov is to Fechner as Frued is to...,"  "If X is the total number of students comprising Columbia's student body and Y = the total number of females under the age of 20, what does N represent?" And to the reviewer who says that Galanter curves final grades because he got a B+; I also received a D in this class.	3 tests; 3 credits from experiment particpaition; 300-400 pages of reading per week.	23	0	178	NA
14301	March 14, 2006	Hershkop is a bad teacher.  The lectures are too general, too specific, or have nothing to do with the assignments.  Too many times the slides are examples from the book.  The midterm and exam didn't reflect what we were supposed to be learning in the class.  He is a fair to generous grader.  Don't take a class with him if you don't have to.	Midterm, Final, a few programming projects.  He told us there were going to be more than there actually were, so don't count on later ones to boost your grade.  Usually lots of opportunity for extra credit.	5	3	1671	2906
14931	May 16, 2006	I really enjoyed taking this class with him, and would highly recommend it despite the amount of work that I had to put in -  I learned a lot and it was worth it. \n1) he understands the material, and explains it clearly and elaborately. \n2) It takes a little bit of time to adjust to his accent, but after that you'll find he's an engaging lecturer who always comes prepared and has no problem answering any questions that come up. \n3)He's done a lot of theory work so be prepared to tackle that aspect of the algorithms and data structures as well as simply knowing them and how/when they work. \n4) Besides being a prolific and accomplished researcher he can teach, and he's a nice guy, which in this case also means very fair grading.	6 Hw's - 40/60 theory/programming. The theory questions range from mechanically easy to very theoretically difficult and will take a bit of time. The programming assignments also range, with some straight forward get 'em done in a night to a couple taking an extensive amount of time, and I mean a lot.\nMidterm/Final were easier than expected considering the theory oriented lectures and hw, make sure you know the basics of how all the algo/ds work and can reproduce the process, as well as which to apply for a given problem	4	2	2941	2006
14353	March 27, 2006	I have never actually written a culpa review, but after reading the amazingly broad spectrum of reviews on Galanter, I am tempted to offer my own opinions on his course (keep in mind I am not 'bitter', I received an A-range grade in this class). Eugene Galanter is clearly a genius-or incredibly skilled at imitating one. This course however, can best be described as "muddy". His lectures are a drag, and without any statistics background they can be tremendously difficult to follow. Often I just ended up typing whatever I could catch, and staring at my notes in frustration and terror at the end of the day/week/unit. On the first day he puts a simple equation on the board and suggests that it is all the mathematics you need to know to do this course. Technically, he is right (I mean, I did it), but be prepared for much much more difficulty than that particular equation suggests. The lectures often digress into anecdotal chatter about Galanter's personal history, all of which is amusing and interesting and impressive but has nothing to do with the material. However, you cannot skip them entirely because often times a few questions on his thirty-question (or so) quizzes are pulled from sentences he uses in class. Verbatim. The readings are much more central to the quizzes (which I agree are really 'exams') but it is impossible to keep up with the syllabus because it has nothing to do with Galanter's lectures. You will be reading cute stories about Freud's youth long before he touches on the topic in class, which brings me to another point about the readings: they're scattered, and a large portion is anecdotal (like you cared about Pavlov's wife?). Furthermore, they're on CD, so if you're like me and prefer to highlight and make notes on the reading you'll be printing like a mad woman. If the INTENSE stack of readings you must review for the quizzes isn't enough, the TAs occasionally add some more on courseworks (and yes they pop up on the test). Of course, the oft-complained-of format can be a bit annoying but isn't impossible, my best reccomendation is to review your quiz three times before you hand it in (if you show up on time for it you'll have plenty of time to do this and still leave early) and of course, just make your own notes off of the readings. You can do well in this, but you will not enjoy it (and may break down and cry in the night's previous to the exam). Honestly, despite my respect for Galanter, you will end up frustrated and bored. If you're using it for the CORE, take it with a friend and try and split the workload.	Three queerly formatted quizzes, intense stack of readings you'll end up doing the night before the quizzes.	1	2	178	NA
14364	March 29, 2006	Prof. Cannon is awesome. He tries to make the course interesting and makes a ton of jokes. He wants everyone to do well and really makes it easy for you. The TA sessions are really helpful. If you put in the work you can def. get an A and you might even find yourself more interested in comp. sci. after a course with him	homeworks-- not bad and if you do them they count a lot and can help your grade.\nmidterm/final, pretty straightforward with no suprises	8	8	515	3807
14439	April 09, 2006	A word of caution. Feiner seems to have a predanatural power to remember faces. His class will bore you to tears, so few people show up. However he still knows who people are, and for those that are on this floor a lot (CEPSR 6), this is a big problem. I mean either that or scowling glares are the norm in his lab.\nPS: The material covered is common sense. Any basic design class (in any field) will teach you everything this class does (and then some). The biggest problem with way this class is presented is that there are 200 billion different rules and guidelines, which all together sound like superstitious drivel. The field has few (important) pricinples, all of which are presented in the first week. The rest is a waste of time.	a few nights worth of coding. Really, really unpleasant coding.	4	0	39	663
14704	May 07, 2006	I don't think the previous two reviews are fair, Shlomo is one of the few teachers that I've had who really cares about improving his class and helping students. Although some lectures can be a little bland, I found the homeworks to be pretty interesting and helpful getting to know how to use CS skills in more useful applications than 1004.	6 homeworks (but only ended up having 4 assigned), fair midterm and lots of extra credit.	3	5	1671	3807
14705	May 07, 2006	Well, everyone else loves him, but I didn't. He's not a bad guy or anything, but this class is so dumbed-down that you'll wonder why the CS department requires it. I could've aced the final before I took the course, and I'm not all that good at CS, even. Meanwhile Eitan is talking to the class like everyone's a seven-year old. It's easy and the curve is great... too bad it's a waste of your time.	Easy... ten fairly long homeworks that don't usually get too advanced, midterms and final are open-book cakewalks.	1	13	2480	397
14706	May 08, 2006	Dude's a grad student, but he's not bad. Very, very straightforward, powerpoint slides and very little flexibility, but a pretty nice guy who teaches the material well. Never saw him once out of class, even if I wanted to -- of course, I didn't, so it was OK.\nYou're only taking this class because it's required, but he's an okay guy and not a bad teacher.	A little tough -- homeworks aren't too long, but are sometimes hard, exams are pretty average. Two textbooks, one of which is almost entirely useless.	0	0	2911	4251
14765	May 10, 2006	I would not say that Prof. Feiner has a harmonious relationship with teaching, but it's hard to be more specific than that. He is careful to be organized and to cover material on schedule; yet he obviously hasn't edited the material he teaches in years - it's old and mostly irrelevant, although the final 3 weeks of class finally had some traction. He tries to be a good guy (I guess) by telling you how to prepare for exams and then says "do all the [voluminous, outdated] reading and review your class notes," as though that's helpful -- and then asks a couple of questions on the exams that are calculated to punish all but those who memorized the course material. 40% of the midterm, for example, was based on a topic covered by 3 pages in the text and a couple of his slides -- all of which seems faintly  sadistic.  The individual HW's were interesting; there could have been more of them. The team projects, as always, were an aggravating waste of time. I think that if, as a start, Feiner updated 60% of his course material and learned how to relax, both his and his students' attitudes would improve.	Not bad unless you consider reading hundreds of pages of 20-30 year old ACM articles a waste of time.	5	0	39	663
14783	May 11, 2006	This class was a huge time sink.  I was up all night for three of the programming assignments, and I did not miss class (although most did).  Professor Aho does have difficulty explaining things in a way that varies from his lesson plan.  He did cover the material, that is about the best you can say.	HIGH.  Nuff said.	0	1	1891	3807
14915	May 15, 2006	Information theory is an interesting subject, but the professor has some trouble presenting it. He taught directly from the Cover and Thomas textbook, but assigned a different textbook for us, which didn't cover the same material, and organized it differently where there was overlap. The lectures were hard to follow, and there was no text to refer to (Unless you had cover and thomas)	A few easy problemsets, a longer problemset given as a take home final.	1	0	2089	2830
15122	June 10, 2006	My biggest disappointment with this class was how dry and uninteresting he made networking.  This modern, dynamic, complex topic that is fascinating to me in all other contexts was presented so that his students will assume they are bad at it, and will shy away from it for the rest of their career.  \nThe best analogy I can think of is, it was like we were starving and all decided to try sushi for the first time.  When we arrived, instead of bringing us delicious sushi, we were brought a dead fish that we had to dissect using our hands, all the while being criticized by the sushi chef for our poor technique.  We all left slightly sick to our stomachs and unlikely to try out sushi again anytime soon.\nYou won't get any big pictures here.  You won't learn about any actual protocols in use today.  You won't hear any of the vocabulary everyone else in the industry uses to describe network phenomena.  But on the upside, you will use all of that probability and discrete math that you thought had no real-world application.  \nHe says that he doesn't concentrate on details (usually after he's just been called out for getting them incorrect), but every concept we discuss is presented as a mathematical proof.  This means that you will leave his class not knowing how to use the word "bandwidth", but you will be able to draw the min-max fluid model of traffic flow.  \nBottom line: unless you're an EE major, don't take this class.  If you absolutely have to, at the very least, don't assume that this is all there is to networking.  Promise me you'll give it another try some other time.	He loves curves!  The average for homeworks and tests were 15-45%.  The final grade is also influenced by how hard he thinks you worked.\nAbout four programming assignments and four written assignments.  The hardest part about the programming assignments is figuring out what he wants you to do -- note that what you think is unlikely to match up with what the T.A.s think.  The written assignments are taken directly from his EE courses.  \nMidterm had an average of 40%.  I don't know about the final.  Both were impossibly hard.	11	8	2427	4902
15465	October 03, 2006	If I can describe Clifford Stein in one word, it would be asshole. He shows no respect for students, and assumes the worst out of all of them. The fact that he was willing to share that he single-handedly had 5 students expelled from Columbia for cheating was enough for me to know that he was a past nerd who is trying to instill a sense of revenge. I recieved back a few homeworks, and EVERY SINGLE PROBLEM is graded on a check, check plus, check minus scale, thus leaving you confused as to your final grade. If his intention was that homework was for learning, he wouldn't care what someone did on the homework.\nOn the other hand, he is prepared for class and does the examples and it is very easy to understand. However, he does all the examples COMPLETELY different from the textbook, leaving the student confused and in a sea of frustration.\nAlso, in class, he just goes silent when other students start to talk. He doesn't even accept if a student wants to ask the person next to him a question.\nI would say don't take this class, but if you are in IEOR, you're pretty much forced to, so good luck.	One problem set a week which is moderately difficult, two midterms, and one final.	28	2	1342	NA
16312	November 19, 2006	Cliff Stein is the worst teacher i have ever had. He gets a kick out of messing with his students by doing things such as posting solutions that are done using methods that he did not teach in class as opposed to the ones he did teach. Another thing to note is that he purposely teaches everything in a manner different than the way the book does it. This wouldnt be so bad if he did everything the book way, but the problem arises because his answers that he posts online are done using the book method, even though he said his way is better and more intuitive. His lecture notes are also full of errors that he keeps saying he will fix but never does. The only reason he does not just fail everybody straight up is because that would make him look bad, so instead he tries to dick over his students behind the scenes.	NA	20	2	1342	NA
16807	December 11, 2006	Erm... some people formed a cult of personality around this guy, but I found him to be kind of lousy as an instructor and had a tough time maintaining any interest. A lot of questions would be answered in the form of a long, irrelevant story, which was annoying, and the exams were sort of harsh.\nGuest lecture from the VMWare guys was pretty cool. I did eventually warm to this class as the term went on, and doing some kernel hacking will make you feel warm inside, so... Plus it's not like you get a choice, really.	5 and a half homeworks, each of which you get about two weeks for (hell, you could just do them at the beginning of the term). Time-consuming if you don't know what you're doing (I didn't) -- if you already know a little about the kernel, I suspect it's a very light load. Short exams.	2	1	1472	2384
17023	December 19, 2006	In summary: He's a hack! I'm staying out of an honors section of Data Structures next term just to avoid him.\nHe knows very little about the languages he teaches, and when confronted with a mistake, claims it "used to work that way." That might work once or twice, but there's no way that, say, shift() didn't modify an array in the good old days of Perl. It's more likely that you don't know what you're talking about.\nLectures are unbearable, riddled with typos, and full of stupid jokes. You'll spend half this class doing ridiculous things like implementing simple CGI scripts in C++, so it takes hours of drudgery, after you've already been taught Perl. Then he'll pick apart your programs when they don't follow requirements that weren't listed on the assignment.\nOn the plus side, you don't have to go to half the classes -- but you do have to go to the labs, because he doesn't post them on the website! So show up, take the paper, leave, and feel better about yourself for not having sat in the lab for two hours.	Weekly labs (easy), three homework assignments (easy but long), and a final. This term there was no midterm. Grading is not exactly harsh.\nAlso, you need a CS department account (probably for the first time), which runs you fifty bucks.	9	5	1671	4758
17119	December 22, 2006	Pasik is the best professor by far I have had in the Computer Science department and was my favorite professor I've taken so far overall as well. He made his class very interesting and made it easy to do the assignments just on his notes, as he did not seem to like the book that much (I never even opened it up) If you go to class, to me it seems like the class is a breeze, but seemed like more than half of the class did not show up for his lectures and thus complained it was too hard. With and excellent professor, fairly easy grading and very fair tests, and a ton of extra credit, I don't see how anyone would pass up the chance to take a class with him.	5 Assignments and 2 midterms, each worth 10 points. He also had an extra credit assignment and final, each worth another 10, though were graded a lot harder. Overall, workload was very fair for a comp sci class, ranging anywhere from 2 to 5 hours an assignment(though prob more if you have no clue what you are doing) and were graded fairly easily.	5	12	2508	4
17363	December 29, 2006	Prof. Gravano is great as a person, and puts much effort on teaching, but for reasons I can't even try to understand, he also puts great effort in making even the most basic concepts ungraspable and obscure - obscure in the sense that they appear like irrelevant details that won't help you one bit in getting through the course, let alone a job interview.\nThe first half of the course dealt with DB design and SQL coding, and was relatively easy,\nthanks in great part to the self-explanatory, standard flow charts used for DB design and to the equally obvius SQL code. The second half deals with DB I/O cost analysis, and was difficult enough for Prof. Gravano to turn into - take your pick - Derridean post-modern literary theory or Martian rocket science. Even in the project assignments the most obvious concepts were mangled into research paper theory filler - my project team mate, who sailed through the course, kept wondering why on earth the guy would go to such lenghts to turn the clear and easy into the hermetic and impossible. \nAgain, I never had any doubt that Prof. Gravano was putting more than enough effort on the class, considering that as a top scientist on the field he had a busy enough schedule, but the obscurity of his explanations made lectures a tough going, until by the second half he was making jokes about everyone falling asleep. The blank looks he was getting by then contrasted with the sincere interest everyone had on the course material before the midterm, when his challenges and questions started such debates, he had to stop and ask people to quiet down. \nThis is one of the few courses in which the difficult textbook proves more useful than the overflowing PP slides or the teacher's talk. The TA I was assigned for the project appeared to get kicks out of taking points for the most trivial mistakes, but then again, it is difficult to blame the teacher for such things - in fact he was the one who had to ask her to take it easy with the grading.	The hw's were doable, the projects only passably difficult, but the tests were horribly difficult - unless you have a good memory, when rote memorization of concepts will make it possible for you to float through.	2	3	375	664
17396	December 30, 2006	At first, he seemed like a very professional, no-nonsense sort of teacher who would teach a lot but give the most boring lectures ever.\nIn reality, he is a very professional, no-nonsense sort of teacher with the most entertaining lectures ever. You learn a lot and have a bit of fun with the class too. \nGreat intro to the CS department. He's a great professor.	5 Assignments, 1 Midterm, 1 Final	23	3	42	2906
18320	January 29, 2007	I agree as a whole with the previous reviews, he doesnt follow the book's methods, he gets very insecure when people make noise in class, he changed his policy to collect homework at the beginning of class when he noticed some students doing hw during class, he attempts to cover up this inherently nature by cracking jokes, but personality issues aside, he is inconsiderate of his students, for the final he did not allow the TA to send out an email copy of the practice solutions, instead he placed 60 physical copies in the TAs office when there are 120 students in the class, he tries to weed out kids on purpose, and regardless of his intellegence and ability to teach he makes the learning experience an extremely unpleasant one, and his jokes are made in a futile attempt to mask his inconsiderate and slightly spiteful nature. for shame.	weekly problem sets, two midterms and a final, not too bad	18	3	1342	NA
18380	February 01, 2007	I wish I had met the Adam Cannon everyone else seems to be talking about.  Adam Cannon's class was horrible and the class was anything but an introduction.  \n***********ATTENTION**************\nIf you do not have a computer science background and don't consider yourself a computer science guy, DO NOT TAKE THIS CLASS.  Take 1004 instead.  \nHe lies to you at the beginning and says that even if you've never touched a computer before you can do well in this class.  Nonsense! I assure you even if you have a decent CS background you WILL SUFFER.  \nI made the stupid decision to take 1007 because I thought I had enough computer science background to ace the class.  Turns out my 2 years of CS background in high school (which I had easily aced) in no way prepared me for this class.\nDespite what he says, this class is INTENDED for CS majors so if you're not a CS-major don't make my mistake, stick with 1004 or an easier CS intro class.  I wasn't the only one who had a horrible time in this class either, I know plenty of people who suffered through it and many others who dropped out altogether.\nAgain, take my warning, if you're not a CS-major DON'T take this class.	Many homework assignments, the first 2-3 were easy but soon they'll become impossible to do.  If you're not a CS guy you will NOT be able to do them anyway.	5	9	515	2906
18675	February 14, 2007	I liked Angelos.  He seems intimidating at first (if you judge him by his mugshot on the columbia site), but he's really very friendly and takes time to explain things again if you didn't catch it the first time, and seems to enjoy teaching this class.\nConsider this class CS bootcamp, though.  If you're not completely comfortable with C and the linux kernel, the assignments will kick your ass.  They took up all my free time, essentially, but somehow I enjoyed it.\nI found the midterm to be much easier than I expected, but the final test was pretty brutal.  \nAll in all, I would highly recommend taking this course and this professor.	Heavy.  You're suicidal if you're thinking of taking this class with Algorithms.	2	1	1472	2384
18687	February 15, 2007	My opinion is opposite to that of the other two reviews. While I do not rate him as the best guy in the department, he is not as bad as the other two reviews suggest. Machine Learning is a specialized field, unlike other core cs courses, it is interdisciplinary. It does need a good background in Linear Algebra, Calculus and a bit of statistics. WIth the right background, if the course is taken, the course is really enjoyable. Some of his slides are really good (again if you have the right background needed). Compared to Machine Learning home works given at other schools by other professors, his home works really make you understand what you implement. Overall I would give an A- for his course. I would like to stress that you need right background and interest to appreciate his classes	NA	2	9	1636	1921
19183	March 05, 2007	Ms. Arabshian is a very sweet teacher. She's very young, and she's very approachable. She will give you all the time in the world if you need help understanding something. She presents all her lessons well, using powerpoint presentations. Good speaker. I took the class with no programming experience as a freshman, and got an A. I did, however, go to her office hours every week, so she got to know me and I did get extra review. But I wouldn't do the assigned readings, and usually didn't pay good attention in class. Programming is fun, but sometimes frustrating when you don't see your mistake. She will extend deadlines if everyone is behind.	Doable. 6 hw assignments, all programming. 1 midterm, 1 final. Both fair. Extra credit assignments at the end are possible. Very fair grader.\nReadings aren't necessary. Attendance counts. 6 homework assignments, they get progressively harder and longer as you gain skills (in theory). Fun class if you like algorithms.	7	3	3184	2598
19663	April 11, 2007	There's a CULPA review of Dan Rubenstein in which the reviewer compares him to a sushi chef who just hands you a dead fish and then criticizes your cooking skills. Keromytis is much worse than that. He's more like a swimming teacher who throws you into a huge pool of acid, then just randomly rambles on about the Summer Olympics. In his lectures, he was always talking about new concepts without introducing them first. Example: one day he was talking about page faults, as if everyone knew what a page fault was. But he had never talked about page faults or pages in class before. I raised my hand and asked "What's a page fault?" He said, "Oh, that's right, I haven't talked about pages yet. I meant to say 'TLB miss', not 'page fault' ". OK, fair enough. But then, a few minutes later, he used the term "page fault" again. He STILL hadn't introduced the concept of pages. You need to be aware of what you're saying... Don't assume we know these things, we don't all have like 8 million PhD degrees in CS like you. It's a CLASS. We're there to LEARN. That means most of us didn't know anything about this crap at the beginning of the semester.\nKeromytis is one of the many professors at Columbia whose teaching skills were NOT taken into consideration at all when Columbia decided to hire him. If Columbia decided jobs based on teaching skills, Angelos would be fired tomorrow. Basically, he got hired mainly because he's good at acquiring money for the university through research grants.  Learn how to run a class. Oh, wait, I guess you never will learn that.. Columbia has tons of professors who were hired like this. All the most selective colleges in America (the "top-tier" colleges) do. It's a serious problem with the American academic world today. Before I started attending Columbia, I heard that the Ivy League colleges were the "best" colleges, and I used to believe it. But now, more and more, I'm finding that idea hard to swallow.	Ridiculous. The homeworks basically consist of making changes to the Linux kernel, which is really hard if you've never done it before. It's a whole different ballgame than normal programming. And Angelos never took any time in class to give advice about how to do it.	3	1	1472	2384
19709	April 16, 2007	Prof Malkin is very approachable and is definitely on your side - but she won't go find you, you have to send her e-mails and especially go to her office hours. Her lectures are thorough and cover the book material pretty strictly, but I think she'd be more helpful if she spent a little more time structuring the material, saying "You are here" in the grand scheme of Computation and it's Proofs. Indeed, I think a map could be drawn of the proofs and their relationship to one another - this would help a lot in understanding the dependencies of proofs upon each other.\nWhatever you do READ AHEAD OF THE LECTURE. This stuff is nearly impossible to simply hear and absorb in clas, so having thought about the concepts beforehand will make all the difference in the world. Hell, you might even enjoy it.	Not too bad - homeworks don't count for much - but the tests are really based on the homeworks, so if you skip those, you'll be screwed come mid-terms/finals.	1	2	1621	234
19745	April 19, 2007	He's one of the worst prof I've ever had.\nHis lecture is very dry and he doesn't seem\nto really care much about students.	One research project. 2 extra credit assignment	0	1	51	1967
19759	April 22, 2007	Very interesting professor, just go to class and enjoy, very funny guy and makes class very enjoyable, tests aren't that hard and assignments are pretty decent. Nothing is hard and he makes class very fun. just make sure you go to class.	3 assignments, 3 tests	1	0	2508	2906
19942	May 13, 2007	Enjoyed the class and Traub is pretty good, but 2 thoughts:\n1. Class needs to have more programming assignments, that are more challenging. Rather than tell us to use the Newton method to find the root of a particular equation, we should be given a general, possibly multipart problem that we are allowed to solve using all the tools at our disposal at the time.\n2. We probably could have moved quite a bit faster in the material covered. Topics such as numerical differentiation and linear algebra were not touched upon. \nSo while Traub himself does a decent job, the class needs to be harder.	Weekly HW assignments, midterm, final.	0	10	1028	861
19796	April 29, 2007	Pure hell. Though Shulzrinne is a very competent lecturer, who fills the powerpoint-driven class with his vast array of knowledge and with up-to-date news (he even brought up newegg.com on the screen to be sure of the size vs. price of hard disks today) the course itself is probably the most intense you will EVER see in this department. \nBe prepared for a very new kind of programming; you won't be writing anything from scratch (save perhaps the first project where you write the unix Shell). Instead you will have to understand lots of cryptic code and obscure structs in the kernel in order to piece together half of an understanding of what is going on before you can actually make changes. The development cycle, far from being the simple 'javac blah.java; java blah' will instead be tweaking small sections, recompiling the kernel, and rebooting, which can take the bulk of your time. The three TAs, however, were very available and ready to help out.	Extreme. Five group programming assignments which involve VERY confusing hours of attempting to make sense of vast reams of code in the kernel and then finally inserting a few strategic lines in just the right place to make it work. You will spend many hours figuring out how to track down bugs causing mysterious kernel panics that crash the machine. In addition, there are six written (individual) homeworks that are also quite heavy. Altogether there are 11 assignments, launched close together, and no time to breathe. Homework 50%. One midterm (20%) and one final (30%).	1	0	350	2384
19841	May 04, 2007	A mixed review.  Shlomo can be condescending at times, friendly and joking around at other times.  The class is apparently easier than with other professors.  Sometimes his jokes are terrible but at least he tries.  Involves the class as much as possible but he'll shoot you down if you have the wrong answer, and he'll even manage to make you look stupid if you have the right answer!  Probably not the best way to teach a class.  Also he's pretty absent minded.	Tests fairly hard but open book and notes, Homeworks were progressively longer but do-able.  Don't expect grades back any time soon though.	2	0	1671	4
19843	May 05, 2007	If there was ever a man who enjoyed teaching object oriented java, it would be Prof Pasik. Him frustrated is just him smiling more and getting happier. Without seeing his website, it was difficult to tell if he had a curriculum planned out for this class. Lectures past the first few consisted of him explaining example code off of his laptop and the projector. You probably won't see what's on the screen if you aren't sitting front and center and have 20/20 vision (though he posts the code online as well). It's disconcerting to hear him say you aren't supposed to learn something in this class but he's going to teach it to you because your assignment directly relates to it. Goals-wise, the assignments are a bit too open-ended for a low level class like this. The exams are straight forward but tend to have an air of scariness to them (mostly because you aren't sure if your answer will fit his requirements since he likes to tell you not to worry). \nHis class essentially is about putting in effort. He gives bonus points which are not counted into the curve so anyone who actually does the extra work will get the "better" curve.	3 assignments and 3 midterms. 1 assignment and 1 midterm per month. He weighs everything equally except the last midterm which is weighed slightly more. There is no final for his class.\nThe last midterm of Spring 2007 was a doozy. It was all coding though he doesn't expect you to get it perfect in the 75mins you have to take it.\nThe assignments will take you anywhere from a few hours to an entire weekend depending on how worried you are about it. He may write the assignments, but its the TA's that will grade them. The TA's are nice since the assignments are vague.	1	0	2508	2906
19863	May 07, 2007	I have to say, I'm really not sure where the previous posters are coming from. Maybe Pasik liked the material in the other classes better which would be highly understandable.\nI'll admit, Prof. Pasik taught concepts well. He definitely oversimplified a lot of material though (recursion, abstract classes etc). There was no real textbook for the class. Everything was essentially from lecture but only 1/3 of the class went anyway.\nYou only had 2 case studies: A rational number calculator, for which Pasik made his own random classes rather than using standard Java classes like Number, and Scopa, an Italian/Sicilian card game. Everything was based off of those two (and I mean everything.)\nWord of warning: he doesn't accept code that doesn't compile on CUNIX nor does he take late homework assignments (Each was 15% of your grade so don't save it to the last night). Also, don't think that AP Java AB will help you. Some concepts may be easier but watch out for his random implementations while you scratch your head because you know there is an infinitely more efficient algorithm out there. You have to use his code.	HW: 3 long assignments. Don't save them for the last minute. Quizes/Tests: None. Everything else is based on Midterms x 2 and Final. Everything is worth 15% except the final which is 25%.	0	1	2508	2906
19883	May 08, 2007	Okay, Cliff Stein is by far one of the clearest and most concise professors in the IEOR department.  The formula for success in this class (and in Integer Programming) is simple: go to class, take notes, do the homework.  After reading the other reviews for Stein, I can see that CLEARLY this is too much for a professor to ask of his students.  Oh wait, aren't these the BARE minimum class expectations?  Yea, that's what I thought.  \nIt may be possible that Cliff just works better with a smaller class.  For Integer Programming, we even had snack time.  In any case, Stein's a great guy.  He always responds to emails and is willing to talk to you during office hours.  The head TA, Shiqian, is really helpful as well.	challenging/long homeworks (don't start them the night before), pretty challenging midterm and final.  you will do well if you go to class, take notes, and actually do the homeworks.	5	16	1342	NA
19939	May 13, 2007	Good professor overall. Taught all the relevant bits that you would expect in an Adv. Programming class. Fairly entertaining and informative in class, and very helpful outside of class. Pretty flexible when one desires an extension. Majority of the grading done by the TAs, but reasonable overall.\nHomework assignments and labs tend to be relatively easy but some of them took quite a while to do.\nRecommended, overall.	3 HW assignments, weekly labs, midterm, final.	9	12	1671	4758
19941	May 13, 2007	Good professor overall. Entertaining in class, made a potentially dry subject quite interesting. Overall workload easier than one would expect; while each HW assignment was reasonably challenging and lengthy, there were only 6 of them in the whole semester. Material was pretty easy, and it would have been useful if we could have moved along a bit faster. Midterms were challenging, but were also open-book which means you wouldn't have to memorize stuff. \nRecommended, but they should probably make the class a bit faster. And maybe spend some time showing where the knowledge can be applied.	6 HW assignments, 2 midterms, final.	6	1	2480	397
19953	May 14, 2007	I don't know what to make of Edwards. I like the guy, and I'm *pretty* sure he's a good professor. But I can't prove it.\nEdwards knows everything about language design; he's funny and relatively friendly. He keeps the lectures interesting, sort of -- but by the end of the term nobody went to class. For one thing, ONE annoying kid managed to ruin the whole term by asking ridiculously irrelevant questions every five seconds, and Edwards never really tried to shut him up. So the lectures kind of went to shit from that point on.\nBut! PLT is super-intense and is probably the first (well, maybe OS) 4000-level course that actually kicks your ass. Personally, I like this. You work in groups and design a language; if you're like us, you leave it until reading week and then just live in the CLIC lab for a few days. You can do it, but it's a bitch.\nAnyway, you're just choosing between Edwards and... what, Aho? for this class, so choose Edwards.	Two homeworks, which tend to mirror the contents of the exam and final almost exactly. Exams are surprisingly hard compared to the rest of the coursework.\nThen you have to implement a programming language... for us, that ran about 30 hours lab time, plus a 40-page report (mostly source code).	5	0	1637	3105
19954	May 14, 2007	Hell if I know. I never went.\nThe website says "CS Theory is the last course required of all CS undergrads", but it should probably be more like "CS theory is the last course of the day, don't bother." The topics mostly overlap with other courses (data structures) -- if you stay at home and read up on regexps and such, you'll be completely fine. The homeworks are basically perfect reflections of what you're accountable for, so if you can do them you're set.\nI'm not really complaining about Tal, she's pretty OK. At the end of the day, it's just another CS course repeating the same damn curriculum.	Ten homeworks (good for maybe an hour of work each, if you do the reading). Midterm and final with cheat sheets. Overall, pretty light.	3	20	1621	234
19955	May 14, 2007	WTF? Maybe Pasik's a good professor in Java or something. I think he's awful. His lecture style is agonizing and grating. I feel bad, because he obviously *does* want people to learn the material, and seems offended when you don't get it. But ultimately, he's kind of an ass.\nOn the plus side, you don't have to go. At all. Homeworks are submitted by email. Usually I just read Wikipedia ten minutes before each exam, and this was enough to walk away with an A. So... whatever. Did you take AP CS? You're done, then.	Eight homeworks (straightforward C projects with half the source provided), two mildly difficult exams.	1	7	2508	2008
19994	May 17, 2007	Excellent lecturer with exceptional preparation. He has an extremely old-school, no-nonsense approach to coding, and every word he speaks is something new you're learning.\nHe is, however, the biggest hardass with whom I've ever taken a class at Columbia. There was absolutely no leeway on assignment deadlines, and to attend office hours with him, you'd have to schedule a time for him to come to campus on a Friday from his midtown office. Intimidating, unapproachable, and unforgiving.\nIf you're confident in your C skills, and want to raise your CS and programming skills to the next level, take his class. If you're not very confident in your C skills, his class could be a nightmare.	NA	6	0	2508	2008
20317	September 06, 2007	First of all, Rubenstein is a little insecure. At least that's the first impression he gave to me, and I write this knowing full well that he's going to read this review. In the introductory lecture, he spent a full five minutes explaining why the reviews of him that were posted on CULPA are unfair. \nWhile I've heard professors respond to CULPA reviews before, I've never seen anyone get so defensive about one. \nIt leaves you with the impression that he feels like he's got something to prove, which is unfortunate since he's not a bad teacher.\nUnfortunately, for all the time he spent preparing his defense of his CULPA reviews, he never really seemed to spend enough time preparing to teach the course. The fact that he doesn't like any of the books out there isn't by itself a problem, but he needs to understand that there are people who like to be able to use books as a reference, to supplement lectures. The fact that he didn't decide whether to teach the course top down or bottom up until the second lecture meant that he couldn't recommend a book that covers the material in the same order that he would. This meant that those of us who tried to use the book he suggested to help with the early material were stuck with references to things that wouldn't be covered until the end of the course. How difficult would it have been for him to take the time to make that decision just a few days earlier so that he could suggest a book that could complement his lectures?\nLikewise, despite requests from several students, he never produced any kind of schedule for the course. No one had any way of knowing what would be covered, when it would be covered, or when the assignments would be due. This was especially problematic around midterms, when people are trying to budget their time, and Rubenstein decided to give out the information pertinent to assignments at the very last minute.\nI don't have a problem with teaching networks from a theoretical perspective, but I wish he spent more time talking about networks early on and less time trying to justify his decision to teach the way he does. Furthermore, everyone in the class has already taken a stats course of some sort, since it's a prerequisite for the course. It really wasn't necessary to spend 3 lectures early on explaining about expected value, especially since there was no schedule that people who already understood stats could refer to so that they could skip the redundant sessions.\nThe assignments were the kicker. He's certainly not the first CS professor I've had who's extremely rigid about assignment deadlines, but usually the ones who are that rigid are obsessive compulsive about posting the assignments well in advance and making sure that the project specification is detailed enough to avoid problems. Instead, Rubenstein would give out assignments usually a day or three after he promised, only to have to go through several rounds of revisions to account for mutually contradictory requirements within the project. It's not that the assignments are bad, just that he doesn't seem to take enough prep time to really set them up properly ahead of time.\nAs for his exams, he takes great pride in making them hard, which is certainly his right. The trick is to understand that he'd always rather ask a question designed to trick people than directly test their understanding of the underlying concepts. While it's useful to understand the concepts, you need to go into his exams trying to find the places where he's trying to trip you up. Unfortunately, this means that performance on the tests is at least as much about your ability to outsmart Rubenstein as it is about whether or not you're learning about computer networks.\nAll told, don't go out of your way to take any classes with him. He's not bad at standing in front of a room and explaining things, but he seems thoroughly uninterested in spending sufficient time preparing to teach. As for the theoretical angle he likes to take, it's not as bad as the other review would indicate, I just wish he hadn't wasted everyone's time with remedial stats in order to do it.	Regular problem sets. Not so regular programming assignments. Don't get going too early on the assignments, since he'll change them. Midterm and final, designed to trick you.	13	3	2427	4902
20502	November 18, 2007	I think Professor Stein teaches well. He understands the subject thoroughly as can be seen in his explanations. I haven't seen even one instance of a question he couldn't answer convincingly. He is helpful in office hours and will walk you through a problem if necessary. \nThe class is in the morning (9 am ) and it's possible you will sleep through some classes. But every class is worth going to (take coffee !) . I find Stein's explanations in class easier to understand that the book. Many a times I have gone back to my notes because the book seemed to complicate thing a trifle.	The load is fair, bordering on too much (7 homeworks, all lengthy). The (take home) midterm was a breeze if you attended class.	3	9	1342	4079
20556	December 10, 2007	Professor Cannon is an awesome teacher. The class has a really heavy workload, though. Most of what he teaches in class is in the book, but he clarifies it and makes it easier to understand. You have to learn all of Java code on your own though and it can be really frustrating because many times you won't know where to start. The TAs are EXTREMELY helpful, though. I highly recommend that you go to office hours at least once a week because they usually teach you Java concepts and code. The class may be hard and the workload tough, but its a class worth taking because you learn A LOT.	There are 6 homeworks-but each homework has two parts, theory and programming. The theory is due a week from when it was assigned, and the programming is due two weeks after it was assigned. The workload is pretty fair in the beginning of the semester, but it gets heavy with the third homework.\nMidterm and final--hard but okay if you study well.	6	0	515	2906
20604	December 17, 2007	Gross (pronounced the way it's spelled) is a guy devoted to his work. He's decently approachable in class (especially if you're in the 10 or so who actually go) and he's full of fun stories. \nHe wrote the study-guide for the book that you'll use. \nThat book actually is pretty good and I'll be keeping it for future reference.\nThe stuff you'll be doing will be probability, recursion, recurrence relations (kind of like ODE material at times), relations, and most fun was Graph Theory.\nGross tends to like tangents especially if they relate to his line of work - Graph Theory. The amount of material this guy knows is simply astonishing and he delivers it well. If you can imagine a sweet grandfather figure that would likely be Jonathan Gross. Unfortunately you're either so bored because he goes through the material so slowly or you're bored at his new anecdote.\nTake this class. Its average but worth your time.	Point System. The Midterms were decently easy but small mistakes could screw you up. All exams were Open Book but that doesn't make them easy. About 100pts per midterm. 200pts for the final and another 100pts for the homeworks which tended to take about 3 hours minimum due once every week and a half roughly.	2	2	40	397
20605	December 17, 2007	I thought David was hysterical. A PhD candidate with a sense of humor as keen as his is rare. Well, some people loved him. Others thought he was a bit aloof. \nWhat was best about him was his analogies and drawings. \nHe makes sure the class knows what is going on before proceeding. Most people, however, don't want to raise their hands.\nVery approachable with fascinating stories to tell I highly recommend you take this course with Elson. For a point of reference, if you took AP Comp Sci AB in high school you'll be fine until the last week where he studies things like NP completeness.	Light but the programming sections were a pain even for people who knew java. The Theory was also a pain at times but overall wasn't must of a problem. I wish I had gone to the TA's for more help though. 50% HW, 20% Midterm, 30% Final. All easy but the HW, as stated earlier, is tedious. You'll get the concepts far before you work out the bugs in your code.	4	1	3332	4
20654	December 21, 2007	I would not be writing this review if not for the spectacularly bad experience I had taking Prof. Keromytis class. I found his lectures unispired and generally incoherent. For a programming course I find it important to be given examples but his lecture slides were what seems like incomplete ideas carelessly put together so that there would be a semblance of a lecture note. I later found out most of the slides were taken straight off of books, other websites, man pages, etc. As a matter of fact the only good lectures were those where we had guest lecturers.\nHe tended to be somewhat condescending in reponse to questions and requests and I got the impression that he was intentionally misinterpreting the question to make you dumb when in fact that was not the question at all.\nHis labs and homeworks were generally repetitive and again uninspiring. Many of the labs and homeworks were repetitions of one another or just annoyingly tedious...sort of like asking someone to do long division to the 100th decimals.\nOverall, the worst CS class I've ever taken in my life.	3 homeworks, 10 labs, midterm, final\nnotably the midterm and the final were done in the CLIC lab. The final was absurdly long and asked us to program something that we dealt with tangentially. Little did I know that network security was one of his main interests.	3	5	1472	4758
20655	December 21, 2007	At first, he might come off as a very strict and hard to approach professor. But once you talk to him, he is very very open and remembers your name. His C coding practices caused me to have a new found repsect for the language C. \nif you attend classes, you will do well because he is a kind of professor who you can osmosis all the facts and not even study for the final and do well although it might be hard. \nI know there are two types of student.  \nStudent who listens and don't take notes and try to learn everything at the first time  VS Student who take notes and don't really intently listen during the class and review the notes and books. \nfirst one will do superbly and have fun in his class. \nsecond one will hate the class and dthink it is ridiculous. \nhe has no textbook. \nhis words are better than textbook's short definitions of algorithms or bullet pointed algorithms. \nultimately, if you are ready to attend classes and focus hard for 1:15 then you will succeed.	very easy homeworks: implement list library, RSA implementation, compare and statisically analyze quick sort and heap sort, ask 20 tree traversal homework, card shuffling and displaying and playing, and something i don't remember but basic.\n2 very easy test that you can do in 15 minutes if you listend to his words. 1 final which is actually challenging but mildlyWORKLOAD IS NOT THAT GREAT BUT YOU LEARN ALOT	5	2	2508	2008
20725	December 30, 2007	Potentially a very dry topic, but Prof. Malkin was able to make it interesting. Mostly because she seems to believe a great deal in class participation, and engaged students in every derivation.\nOverall, I'd rate her highly.	~1 hw per week. 1 midterm, 1 final. Not too bad.	16	4	1621	234
20742	January 06, 2008	A semi-retired game designer with a cult of personality. Kind of a jerk, but sometimes effective. You'll know on the first day whether you want to stay in the class, because it's sort of a big arrogant meritocracy. Highs and lows.	A lot of written work, most of which isn't very productive. Also you have to code a video game from scratch; that takes just an eensy bit of time.	1	0	3355	4899
20743	January 06, 2008	God, poor Aho. This class had an enrollment of about 9 and a daily attendance of about 3. He makes a diligent and sincere effort to teach well, but tends to get derailed (particularly with the constant stream of irrelevant questions that this class seemed to be all about). The lectures are dull, but he's a nice guy and knows everything... it just doesn't work out somehow.	Very light, although this could vary in the future -- 3 PowerPoint presentations and a ten page technical document (half of it is screenshots and console output).	0	0	1891	4900
20744	January 06, 2008	Gross is an American hero. Wandering into class every day to give a one-hour lecture, straight from his (excellent) textbook, peppered with clever jokes. I don't know how our Computer Science department managed to hire him, it must be before they started hiring the least qualified people they could find.\nI agree with the reviews below -- if you don't pay attention at the beginning of class, you will die. Otherwise, it's pretty straightforward... but the language gets technical very very quickly, and you'll find yourself flipping into the text every third word if you weren't paying attention.\nHighly recommended!	Fair -- something like... seven homeworks, all of which are time-consuming but doable. Exams are open book and open notes, and tend to be pretty easy if you've been paying at least decent attention.	4	0	40	4901
20746	January 06, 2008	Like swimming through Jello. Bad lectures, good programming assignments, bad written homeworks, unbelievable exams.\nIt's not that the exams were hard. They were open book. But even if you knew ALL the material, you couldn't really do well on the exams. Or the written homeworks. I don't think anyone knew the right answers, because the questions were vague and were graded vaguely to boot.	Fair: Three reasonable-difficulty programming assignments, five short written assignments, open book exams.	3	0	2089	4902
20747	January 06, 2008	Man, I must not have been taking the same class as the other two reviewers. NLP is an interesting topic but somehow it ended up getting reduced to baby talk, with endless probing of the uninterested students for examples to incredibly simple questions. She's a nice person and all, but this felt like a big waste of time.	Three long programming assignments, two pretty easy exams (a lot of memorizing terms).	4	0	1957	4903
20818	January 14, 2008	Professor Bellovin is an engaging and well-prepared lecturer.  He's got a good sense of humor, he can draw you in to the material, and when he does he explains it very clearly.  Of course, the material is intrinsically interesting, varied and with a strong focus on real-world security incidents.\nI'd recommend the course, but there are some caveats.  There's no single textbook and the readings, while usually interesting, vary greatly in terms of how thoroughly they cover their subjects.  On top of that, while lecture notes are posted online, they usually provide only a broad outline of what Bellovin says in class, so it can be hard to find reference material for homeworks or for studying if you missed a class or didn't take good notes.\nAlso, Bellovin appears to be something of a big shot in the computer security world outside of academia (eg., helped write Usenet back in the day, won the 2007 NIST / NASA security award).  This is kind of cool, but involves him missing a relatively large number of classes to travel to conferences and so on.  When he's gone, classes are taught by the TA, and at least in our case, the TA was a non-native English speaker and a bad lecturer.	4 homeworks, which make up 50% of the grade, plus a midterm and a final.  The midterm and the final are relatively easy if you've gone to a reasonable number of the lectures and done a reasonable amount of the reading; the questions are straightforward.  Each homework has a written part and a programming part.  The homeworks are moderately difficult and time-consuming, about the average for a Columbia comp sci class, but are graded particularly harshly.  There is also a tough lateness policy, and no freebies / dropping lowest grade / etc.  If the class is curved, it doesn't change much.	0	0	3366	4907
20826	January 15, 2008	Prof Nayar is a natural. He is clear and cogent and drives all the relevant points home. Be sure to hang on to every word he says, because its generally very deep. If possible, make notes on top of the slides he gives, they make it easier to understand them when you study for the exam. This is a no-nonsense course, only relevant stuff is taught. Therefore, read the slides very thoroughly. Its not much to read, compared to the Horn book which is quiet abstruse. The class is a great learning experience. Particularly because of the simplicity that Prof Nayar brings to it. If you ever have anything remotely close to Vision take this class. If you don't, take it to experience what a great teacher is like.	5 assignments. If the first freaks you out, hang in there, things just get easier. Overall assignments are easy. The slide handouts are all you need to prepare for the exams, and yes, some presence of mind.	2	0	1812	2386
20919	January 24, 2008	Prof. Stein is a really entertaining guy with a good sense of humor. He seems genuinely interested in making people understand the material. It is very important that you attend class, because he follows an intuitive teaching approach which can save you time as opposed to reading from the book. In other words, he does a very good job of teaching from the book without getting into the uninteresting itsy bitsy details. \nIf you have taken any course on algorithms before, this class might seem like a repetition. However, he teaches the material on NP completeness very well, which I think many algorithm courses don't delve deep into.\nThe homeworks take a lot of time, and are pretty intense, and so is the course aas a whole. But I think if you are really interested in algorithms you should take the course, but make sure you mix it with light courses.	Heavy. 7 homeworks (intense), take home midterm, in class final.	4	7	1342	NA
20953	February 03, 2008	AP is the best professor I've had at Columbia. His lectures are the only ones I've ever bothered to go to, as he actually teaches instead of preaches. He goes over what is important, tells you implicitly what is going to be on tests, and goes step by step so it's almost impossible to get lost. If you do, he'll stop and explain.\nHe doesn't believe in pointlessly long questions or tests. He's focused on the principles, the tricks, that are necessary, and on how these things are useful in applications; specifically finance, which is excellent for CS as many job opportunities will be finance related.	Bi-weekly assignments usually consisting of 1-4 written problems that are as long as my review and a programming part that can be done in less than an hour in the worst cases.\nOccasional quizzes if he feels like it, though you'll know exactly when and on what, extra credit makes up a possible 10%.	5	0	2762	3992
20958	February 05, 2008	Professor Stein is a great professor - and you do learn algorithms really well if you attend all lectures and are sincere in your homeworks. \nHe is great at teaching, prepares his lectures well, and knows how to make his subject interesting. Frequently jokes in class, and keeps the class alert.\nHomeworks are hard, start early. They are never short, and take a lot of time. Exams are hard too. Usually he gives 7 homeworks, 1 take home mid-term, and one open book final. Use the TAs.\nClass is mainly a graduate level course, so undergraduates may find it a bit too hard.	7 homeworks, 1 take home midterm, 1 open book final, Heavy workload.	6	9	1342	NA
21024	March 03, 2008	I personally like his interesting sense of humor, but some find it annoying.  As a transfer student, I feel he gave the other side of programming languages than my other class which was more theory-based -- one down side is that he doesn't know that much about the lambda calculus, which seems to be a big hole in somebody teaching programming languages.\nIn terms of teaching the material, lectures can be a bit scattered but always have great information.  His homeworks and exams are more than fair as they are straight out of the lectures.  If you are in his class, attending the lectures will make you do well in the class.	The workload was overall about the same as some other programming classes like Networks with prof. Misra, but is definitely less work than OS	3	0	1637	3105
21025	March 03, 2008	Professor Gravano is tied for my favorite computer science professor.  He generally follows quality texts in his lectures and easily outperforms them in terms of the ease with which the material is presented.  His homeworks and exams are reasonably challenging but also completely fair -- don't worry if you get a 60% on an exam because it will come out in the curve.\nFurthermore, he always knows what he's talking about (more than some professors) as a result of an expansive knowledge of all aspects of databases thus far.  Now that I have gotten to know him better, it seems this stems from a more passionate interest in the subject than I've seen with others in their respective fields and it leads to a genuine desire to help students really master the material.\nI would definitely recommend taking the 6111 course if 4111 was at all interesting.	Reasonable workload, but group projects are easily do-\nable on one's own.  Homeworks can be tricky and are a fair extension of concepts in class.  Exams are generally pretty difficult, but it shows in the curve.	16	21	375	4956
21026	March 03, 2008	Professor Nayar is tied for my favorite professor.  The main reason I believe he is so good is because he conveys material in an extremely concise, understandable and well-spoken manner and really knows the subject inside-\nout.  He is also very approachable in person and makes an effort to know students on some basic level.\nThe only thing that was a little weird about the vision class was the lack of math -- it was all in the slides but there is essentially no math in the entire class, which is in sharp contrast to the textbook.  In addition, the first homework is pretty ridiculous in many ways and shouldn't be considered as a measure of the class' overall worth.\nProgramming assignments are engaging, and exams are very fair.  Prof. Nayar makes use of the entire spectrum of scores on exams, and I feel gives proper questions to let those who understand subjects thoroughly to stand out.  The one complaint about them is that he does not even give a format for the exam, let alone sample questions -- this was very nerve-wracking for me personally but it ended up OK in the end.	The workload for the class is VERY front-heavy, so just get down and dirty early to enjoy the freedom from work at the end of the semester.  It can definitely be a more difficult workload, but not too bad.	4	0	1812	2386
21027	March 03, 2008	This class was the class I have learned the most from, and has also been the class from which I have gained the most marketable skills I have and have at least indirectly landed me job offers.\nSometimes professor Nieh presents material in a suboptimal order, but he is very good at explaining low-level system concepts and hardware interactions as well as higher-level algorithms.  Exams are definitely fair, but homeworks can be ridiculously difficult in some cases, but others are a good amount of work and are very educational.\nHe is also very approachable in person and will help with concepts outside of class and welcomes feedback as well.	The largest workload of all the classes I have taken in the CS department (databases, vision, PLT, adv. databases, AI, etc.) -- 5-6 projects that involve directly altering the linux kernel, 2 exams, each project is a group project with an individual part with problems mainly from the text.	0	0	45	2384
21029	March 04, 2008	To be honest I didn't go to class very often but when I went I found his lectures very clear and engaging. The subject matter was relatively easy. I think this is the least rigorous choice for the SEAS computer science requirement. Matlab is incredibly useful so if you know you don't want to pursue computer science then you should take this class.	Programming Assignments, Midterm and Final- Nothing too difficult and a very generous curve as far as I know (I got around the average on both tests, did relatively well on my programming and got an A)	5	1	3409	4957
21047	March 11, 2008	Though this is David Elson's first semester teaching, I think he's done an outstanding job of it. I've always marveled at why I seem to enjoy classes taught by graduate students better than I do classes taught by actual professors, but I think it is because graduate students are more understanding of how to lead a class of undergrads in such a way that they will be interested and entertained.\nDavid Elson has two qualities that really qualify him as an excellent teacher, 1) excellent English and ability to explain concepts and 2) a wicked sense of humor.\nI have never missed a Data Structures class because of this; this was true of Chris Murphy's 1004 class I took last semester, too. David Elson really CARED that the students are learning the material -- he explains things clearly, does relevant examples, cracks corny jokes, and always tries to encourage class participation (a noble endeavor indeed!). His availability is also extremely flexible -- he answers emails even at excruciating times like 2 AM on a Friday or Saturday night, which really helps for the people who chronically try to complete hw assignments two days before the due date. The homework assignments started out rather tedious and long, but David took into account the class's complaints / suggestions and lessened the workload to really help us learn the implementations of data structures instead of spending 40 hours struggling with other irrelevant code. I love his programming assignments -- thought they were totally relevant and even FUN, dare I say. This is one of the few classes I ENJOY doing work for.\nAll in all, I thought Data Structures would be the death of me this semester, but I ended up loving it and learning far more than I thought I would. Thank you, David!!!	see other review for breakdown. I should mention there was quite a bit of extra credit (mostly extra programming!), and if you do it all, it can be helpful enough to push you 1/3 of a letter grade higher =)	2	0	3332	4
21074	April 01, 2008	Nice guy, a horrible professor. The main problem is that he tries to fit way too much information into slides and is so boring that you stop caring about the course. He also interlaces examples while introducing examples, which may seem like a good idea, but Prof. Jebara introduces them at such bad times that you don't learn anything. \nAlso, the homework is embarrassingly easy and you don't learn anything, so by the time exams roll around, you don't have a clue what happened in the class.\nBefore people spout off bullshit about how machine learning is hard, try to find a lecture about ML by Andrew Ng (Stanford), Michael Jordan (Berkeley), or Tommi Jaakkola (MIT), or for a different flavor Carlos Guestrin (CMU). All the classes they teach cover more material, but the students are able to understand more material and understand it better.	Two bad exams, 6 joke homeworks	14	3	1636	1921
21103	April 09, 2008	I loved this class, especially because I took it alongside CC. I would frequently use the information on the philosophers in this class that overlapped and sound extremely insightful in CC discussion. I did absolutely no work in the class. I just came to class, listened, and took notes. At the same time, the midterm and finals were absolutely beastly. I couldn't finish either one on time and I wrote more on them than I've ever written in my life. I also don't think it was an easy A at all. I really did buckle down to study for the tests, and I couldn't manage to get any higher than a B+. The thing is, I really don't think going over the readings would have helped at all.	Not much reading and not necessary at all. Really long, arduous midterm and final. An ungraded paper. By no means an easy A.	5	0	856	NA
21139	April 15, 2008	Paul Blaer is a master in his field. He knows exactly what he is doing, and can answer damn near any question you can come up with. The homework assignments are not extremely difficult, but do take time and actual mastery of the subject. He makes himself very available if you need help, and has knowledge of Computer Science that extends far beyond Java. The workload is not serious, and you do not really need to attend lecture if you're keeping up with the book. However, it doesn't hurt your grade at all to attend lecture, as he often gives clarification on confusing topics and a myriad of extra information which could help you out on the midterm and final.	Five (5) homework assignments, each worth 10% of your grade. They are not difficult. One (1) midterm, fairly difficult, make sure you know your theory. One (1) final.	3	0	3409	3807
21143	April 15, 2008	Professor Shree Nayar is the best professor I met at Columbia.  The course is very informative.  He gives great lecture with a sense of humor.  The TA are very helpful.  The assignments are not that hard but yet gives you a sense of how things really work.\nI highly recommend this course to anybody who has interest in vision/graphics.  It's a must for students in vision/graphics track.\nHighly recommended.	Not bad.  The assignments are getting easier after the third one.  But you need to spend lots of time on the slides to make sure you really understands the materials.\nFinal and midterms are well organized.	6	1	1812	2386
21161	April 19, 2008	Sidorsky is the cutest old man ever! :) Just take your laptop and write down everything he says and memorize it. There is no need whatsoever to do the readings in order to have an A in the class. (In fact, the readings might confuse you and you'll do worse.) Also, on the first day he says that you have to have taken a philosophy class in the past or else this will be too hard. I almost switched out because he seemed really serious about it. Rubbish! No need to worry!	It can literally be nothing if you want it to be up to the midterm and final when you study your notes. Oh yeah and we had to do a 2-page reflection on something. But it didn't count for a grade. I think some people turned it in a month late.	1	1	856	NA
21165	April 20, 2008	Professor Sethumadhavan genuinely has a passion for the subject and makes an effort to teach.  However, his teaching method is not too effective; he comes in with powerpoint slides, but unless we've read the book thoroughly prior to the lecture, it's very difficult to keep up.  Sometimes, he'll realize that he made a bad lecture, and he'll come to the next lecture being a lot more prepared.\nI have to give him an A for effort.  He makes some joke in class, which weren't funny, but at least it shows that he tries to lighten up the mood.  He also makes an effort to remember your name.  This is his first time teaching in Columbia, so hopefully, by the time he teaches this class again, he'll be better prepared and teach a lot better.\nThe textbook for the first half of the class (Brown and Vranesic, Fundamentals of Digital Logic with VHDL Design, McGraw Hill Publishers, Second Edition) was very poorly written (it refers to examples that require the reader to flip back ~10 pages), but the one for the second half (Patterson and Hennessy Computer Organization and Design: The Hardware/Software Interface, Elsevier, Third Edition) was much more well written.	9 homework assignments, difficulty varies greatly, way too much (~10 hours, if not more) for some weeks, and very short for others; one very hard midterm (he claims that it should be okay for us because it took his TAs 1 hr 5 mins to do the midterm); and one final	4	0	3429	4251
21181	April 23, 2008	Either you love Bernie or you hate him.  You'll get a lot out of the class if you're self-motivated, willing to put in a LOT of work, and have a thick skin.  If not, then you probably shouldn't take the class.  Bernie will rip your game to shreds and show you all the problems with and holes in your design.  That said, the class is great for those who are excited about designing and building a game with only a little outside direction.  (Keep in mind that it doesn't have to be a *video* game.  It can be a board game, a card game, or any other kind of game you can design.  No coding experience or knowledge required!) I would strongly recommend this class, but not to the faint of heart.	a lot of written work (which was never graded or returned to us...), a semester long project (your game...)	2	0	3355	4899
21271	May 20, 2008	In all, Professor Aho was a pretty interesting teacher who went over quite a bit of useful material in an ultimately fulfilling class. He is friendly and always willing to talk, and is very approachable during office hours. I would recommend him for CS4115.	Two assignments, 1 Final Project, 1 Midterm, 1 Final. The Midterm was deadly, everything else was fine.	2	0	1891	3105
21273	May 20, 2008	Overall a good class. Good programming assignments, some of the written hw questions can be vague. Class lectures were alright but were unfortunately scheduled to start at 9:10AM, so I missed most of them.\nExams were not problematic if you knew your stuff, which you would if you could do the homework.\nOn a side note, I was able to use this class to get quite a nice bit of experience doing multithreaded programming. That was pretty nice.	2-3 Programming Assignments (Time Consuming), 4-5 Written HW (easy enough), midterm, final	1	0	2089	3105
21274	May 20, 2008	Operating Systems is typically taught by Jason Nieh. This past semester it was taught by Prof. Nahum.\nOverall, Nahum is an interesting lecturer who tries to engage the class as often as possible during lectures. He is very approachable and very helpful as well, if you are in a bind (say if the pressures of the world make you and the rest of the class need a hw extension).\nGoing by the number of assignments (and what Prof. Nahum said at the beginning of the semester) the class is a bit less hardcore than when Nieh last taught it, but all the important bits are still intact and you still learn a lot.\nIf Nahum teaches OS again I would definitely recommend it, as he is a pretty solid teacher.	4-5 Assignments with Programming and Written Component, Midterm, Final	0	0	3448	2384
21283	May 21, 2008	Nice guy, helpful lecturer, smart, fair. Not much to be said. He gets the job done well.	Five programming assignments, of average length.	1	0	3451	5002
21284	May 21, 2008	OMG WTF. It doesn't matter, as you have to take this class to graduate with a CS major. Traub is crazy! He was probably pretty good in his time, but the lectures were incoherent. I hope you like getting your homework emailed to you in all caps in something like (but not!) LaTeX formatting. What?\nOn the other hand, it's not very hard to do well, and the exams generally recap the homework. Generally.	Like three homeworks a week, easy but announced at unpredictable times and sometimes just on CourseWorks. Tons of extra credit.	4	1	1028	861
21286	May 21, 2008	Network Lab sucks, but it doesn't totally suck. Baset's lectures are beyond worthless (he's barely audible and doesn't cover relevant material), and the labs are EXTREMELY frustrating and repetitive. But you do learn some actual skills... I'm legitimately smarter for having taken this class.\nBut it ate up my time and gave me an ulcer from doing endless, monotonous network tasks. It's sort of like being a real-life network person. Ow, my stomach.\nYou can do a final project instead of taking a final exam, which isn't a bad idea, although the projects are really poorly stated and vague, and we found his expectations had changed a lot from the terse description he'd given us. Still, it was tolerable.	Ten labs, with quick prelabs and LONG group reports (a lot of ours were 60+ pages; although a lot was debug output, it was still a ton of writing; even trading them off, they ate up lots of time. A few brief homework assignments thrown in now and then.	3	3	3453	4902
21513	August 30, 2008	Awesome. Her and Professor Gross are my favorite professors.\nHer classroom delivery is fantastic. Slides were lacking in content but she more than made up for it.\nIf you attend class you'll be perfectly fine. Notes don't really convey audible concepts well so it helps to hear them in person. I think you'd get pretty lost if you didn't attend regularly. At least skim through the assigned readings, I found actually reading them to be unnecessary. Just getting the gist of it or reading the abstract is usually ok. \nThe lectures are the theory, the homework is the implementation, which makes it sometimes necessary to visit the TA to find out how to do it.	Homework (biweekly) was very, very light, and interesting. The subjects were scattered and sometimes disconnected from the lectures and you may need to go to the TA to figure out exactly what's going on in the assignment, but once you do, each takes less than 2 hours. \nWe didn't have a midterm, and the final project was 3 3-page scientific papers analyzing various topics in the readings (don't worry, you don't have to read all of the readings). \nGrading was average.	4	9	1957	5041
21659	December 10, 2008	Jae does an excellent job making this class interesting and informative. He learns everyone's names and is always helpfully giving extensions for every lab assignment and responding to the class email. I learned a lot about how unix worked and how to write good c programs, including completion of a web server. The assignments are well thought out to build and each other and simulate real life programs.	Light reading with programming due every week to two weeks. Assignments take a while but if you listen in lectures should be fairly easy.	31	3	3509	4758
21801	December 17, 2008	I was very happy to see Professor Cannon has a star, which I think he deserves.  COMS W1004 could be one of the best courses at Columbia.  I would recommend this course to any strong student up for a challenge, even one who does not need COMS as a requirement.  Professor Cannon says it is not easy and tells us which assignments are especially hard, but CS will teach you a new way of thinking about the world.  Professor Cannon covers the basics of both hardware (the physical structure of the computer) and programming, so by the time you're done with the course you will probably know which topic you like better.  Lectures supplemented the readings and helped clarify which aspects of the materials were the most important.  One of Professor Cannon's strengths was making complicated concepts understandable.  He is willing to go over the same idea more than once, even at the expense of glossing over a few simpler programming concepts that I would have liked the lectures and assignments to cover a bit more thoroughly.  The final was DEFINITELY harder than the midterm, although neither was excessively difficult.\nIt's a good idea for people without a very strong programming/hardware background to take W1004--you learn quite a bit about both and are a much more fluid programmer by the time you reach the more advanced courses.  Professor Cannon was very good at introducing us to the academic organizations and resources the CS department offers.\nThe fact that there are many TAs means that you should be able to come to a good TA's office hours (in my experience, decent to good TAing was the rule rather than the exception).  Professor Cannon is also accessible and reasonably flexible.	THIS COURSE IS NOT A JOKE!!!  For me, the workload was 5-18 hours a week.  Start readings, assignments and exam studying at least 4 days early, because you don't know how long it will take to understand a concept or get a program to work.	11	10	515	3807
21829	December 18, 2008	Elson is a phd student but is a good professor overall. Not a class for computer science majors, but this class is a lot of work. Elson does his best to make it manageable, he knows that most of the class struggles with the programming sections, so he gives you late days and tries to help with the homework. Overall, a hard class that takes a lot of time, but if you are good at computer science, this should be no sweat. If not, then watch out.	Heavy, very heavy. Five assignments(theory and programming) that take about 10-12 hrs each assignment. Midterm which is long, and final which is more reasonable.	4	0	3332	4
21867	December 20, 2008	The professor is not very good. He is not really clear during class, but is very willing to help you understand the material. It's best to ask a lot of questions and make sure to make it your responsibility to clarify all the material that is taught, because you can't expect that of this instructor. He really wants to make you understand, but because he is not very clear at it, it might be harder if you don't show you don't understand and don't ask questions. So, use office hours, study from the books often, and make sure you get everything clarified.\nAlso, he is very poor on expressing himself. On the final exam, one problem had a mistake in it because it was worded too awkwardly and ended up contradicting itself. This ended up being a big problem because we couldn't do much of the problem until the question was clarified. I ended up kinda guessing what he meant to ask. Also, the really bad part was that this was 1 out of 5 problems, and the next 2 problems built up on the one that had the error. Generally, very unclear demands.\nUnfortunately, if you want to major in CS or EE, you probably have to take this class, so you don't get much choice. But make sure you go in prepared to face a lack of clarity. So make it your responsibility to clarify everything. You will get help, but need to ask for it, because chances are information won't come to you in a organized format at first.	Homeworks every week. Midterm and final.	5	13	2427	4251
21960	December 25, 2008	This course is fairly simple, and a good bet if you are trying to improve your GPA.\n4-5 fairly easy, (written + programming) assignments (50%) that will be as simple or as complex as you want them to be; however, putting in extra effort to write an extraordinary program will not fetch you extra credits.\nEasy mid-term (20%) and finals (30%) that contain only open-ended, "open to interpretation" questions. There are no right or wrong answers to most of the questions. You are supposed to integrate all your knowledge to answer the questions, but basically the answers are so downright simplistic (and amusing) that they might not strike you at all. That is, if you have a rough idea of what has been taught in the class, and use appropriate terms from the slides and suggested reading materials while answering, and mention that your answer assumes "so-and-so", you can hardly get it wrong. \nThe whole course is about applying common sense. I have to say that I didn't learn anything spectacular in this course. I goofed up in the midterms because I didn't apply "enough" common sense, and did very well in everything else. And I got an A- with a 92%, so that should say it all.	Low to medium.	6	0	3366	4907
21961	December 25, 2008	Steer clear of this course. It is supposed to be a research course, but except for the project (40%), everything else is a lot of manual (I'd prefer the word 'menial') labor that comes to nothing. Schulzrinne is probably a brilliant professor, but this course is the worst I have ever taken in my whole life, and this course is also the worst mistake I made in Columbia.\nAs it seemed to me, there is nothing worthwhile taught in the class, the TA was not very useful if you went up to him with problems, the labs (3, 30%) were long and monotonous that didn't teach you anything about how VoIP really worked, 2 presentations (30%) that is supposed to make you research the topics and give a talk on (but everybody just makes short work of it). \nThe project can be really meaningful if you choose a good topic, but make sure you either do it alone or get a partner who is sincere about the work and is not looking for a free ride. The TA was not very helpful in resolving either technical or interpersonal problems. You might get a mentor in one of the professor's PhD students, but remember that you might not get a lot of help unless you put it yourself. Everyone I went to talked in arcane terms that they expected you to know, but you wouldn't know anything about them unless you have prior background in that field. \nAnd compared to the fact that it has a 40% weightage, the professor does expect a little more than that. If you do take this course, brace yourself for some boring moments in the semester, and do not take up a project that would require you to write a lot of code from scratch. No one seemed to care that writing original, running source code for a nascent idea wasn't trivial (that was what my project was about, and unfortunately I had a partner who thought his job was only to supervise).\nI wouldn't recommend this to anyone, but to each his own.	Average to a little high, but only in quantity and not quality.	0	0	350	5167
22108	January 05, 2009	Blaer is amazing! I was convinced that I would hate computer science and that I would probably do poorly in it.  Thinking that MATLAB would be a practical way for someone interested in research to fulfill the SEAS programming requirement, I was less than enthusiastic at first about the course.  However, Blaer made the course interesting and I loved it- probably my favorite course last semester.  I did the work (it wasn't that much) and got an A.  I highly recommend taking comp sci with paul blaer--he is engaging, funny, a really nice guy, and a great instructor to boot! I would consider being a cs major after this course (except of course that the fact that I am a sophomore and I took 1005 instead of 1004 makes this an impossibility).	not much at all.  5 assignments throughout the semester, a midterm and a final that were pretty straightforward with a generous curve.	8	3	3409	4957
22142	January 07, 2009	Taking a class with David Sidorsky is absolutely worthwhile. He is one of my favorite professors at Columbia and definitely one of the most interesting and knowledgeable. Yes, I admit, he may be very old, loves going on tangents, and sometimes strays from the syllabus. Some students might be bothered by this lack of structure in his teaching style, I think it is one of the best things about him! He has so many stories and experiences, and does not hesitate to spend large amounts of class time enlightening us with some real world philosophical anecdotes. I seriously looked forward to his classes and just sitting back and relaxing.  In addition, he reviews material a pretty slow pace, and usually covers important points multiple points...it is nearly impossible not to get the main points if you just go to lecture alone and do not read anything at all. There are required readings, but they are hardly necessary for earning an A. Seriously...if you are interested in philosophy at all, take his classes!	Very very light. Midterm, final, and perhaps a short reactionary paper or two that literally counts for nothing. Beware, however, that his tests require a LOT of writing.	9	5	856	NA
22172	January 10, 2009	Hardest CS class you'll take at Columbia, hands down. Also, the class you'll learn the most from. Work hard in this class and you will be rewarded. Work not so hard and, well, you'll know the theory fairly well, but that's about it. This class requires a highly intimate knowledge of C--if you don't know it very well, then either skip the class or be prepared to read the K&R book thoroughly.\nThe course covers the internals of the Linux kernel and we worked specifically with 2.6.11. Nieh covers mostly theory in class, and there is one text which goes over theory in more detail, and one which is a god-awful dry textbook (more like a manual, actually). The assigned readings aren't that long, and you will definitely need to do them--otherwise you will have no idea what the hell is going on. That being said, his lectures compliment the readings very nicely. Nieh was one of my better profs in terms of not "teaching out of the book." However--Nieh is the person you go to if you don't understand theory. If you need help with the homework, skip him and go to the TAs directly (he has little involvement in the homeworks).\nFor each homework, you write a patch to the kernel that does something. After you submit, you have to meet with the TA for ~30 minutes to demo it, and they will also run their own test program on it. Be careful as they are NOT AT ALL forgiving if anything goes wrong--if you can't get it to work (even for a stupid error like you submitted the wrong file), you lose practically all points. Also, each HW has a written portion (~10 questions, usually 50% of the grade).\nHWs:\n1. Basic stuff, write a small shell, etc.\n2. syscall logger: not that hard, just an introduction to syscalls/the virtual machines you'll be using\n3. waitqueues/locking/threading stuff: you don't have to write that much code, just be careful what exactly you write.\n4. implemented a new scheduler type. most of the class just skipped this HW entirely, i recommend you give it a shot, but, don't bother if you can't get it.\n5. memory tracker: write a syscall that can track what chunks of memory you're using. requires you to go low-level with page tables, etc. tough but doable.\n6. process tree filesystem: make a filesystem that reflects the processes on a system. it's a lot easier than it sounds; he gives some examples of other pseudo filesystems in class.	6 homeworks, 1 midterm, 1 final. Best 5 out of 6 homeworks used. Be careful - each homework could be considered a workload you would put into a project for another class. The midterm and final were both standard: he has a review session for each where he goes over old ones. The exams you take will be different, so you can't just study the old ones and be fine, but they're aren't THAT tricky.	0	0	45	2384
53565	November 19, 2014	This class is legendary for a good reason. The assignments are long, the material difficult, the exams are incredibly tricky bordering on unfair. However if you get through it you will have learned as much in this course as self-taught programmers may learn in years, if ever. I write this from a perspective of someone who took this course with basically zero knowledge of computer science or programming experience coming into this class. \nWhat the class covers really well: C.\nWhat the class will force you to learn by sheer force: the UNIX environment, working with a shell, basic git commands, how memory works under the hood, and more C than you ever care to know, and then some.\nWhat is briefly touched upon: multi-threaded programming through blocking functions, sockets/networks, and basic under the hood stuff for C++.\nJae begins the semester with the claim that he'll turn students of programming into actual programmers which sounds like an ambitious task but he pulls it off fairly well. By the end of the class, you will have coded a linked list in C, written your own web server, and some minimal C++ experience, all of which isn't that impressive on paper. However, the skills you learn here will be applicable to nearly any job you hold as a computer programmer unless it's really implementation-heavy front end stuff. Even then, you will come away with experience of having to read lots of documentation with very little guidance on how to use it, which is expected of all programmers. \nIf you want to do programming as a career and are debating taking this class because of the grading, take it anyway. You'll learn a lot more than you think regardless of your grade. He grades to a A- and in my semester he curved everyone to at least a C-. I did terribly on my first exam and still eked out a B+.\nThis is sort of a requirement: get to know your TAs really well. They are all super helpful, smart, and were probably the reason I didn't drop out after failing my first midterm. They really make or break your experience in the class.	Heavy. 10 labs, 1 optional, 7 free-form late days, no more than 2 per lab. \n2 midterms, 1 final, all impressively crazy. \nI wouldn't take this and Data Structures at the same time if you're looking to take your programming skills to the next level. Both professors warned me not to do it; I did it anyway and I managed to survive, but I was only taking 10 credits. Still I wouldn't recommend it. Take 3134 or the honors Data Structures first before taking this class if possible.	9	12	3509	4758
22173	January 10, 2009	Jonathon Gross is a funny guy... he has random moments that will make you laugh, at least the first time he tells the joke (he will point out that he retells jokes... he will even tell you multiple times that he always retells jokes... this man is brilliant but his memory is not what it used to be).\nIf you're paying attention and you get what's going on, you'll be fine. If you're a math major, you'll be fine. However, if you don't, you'll fall back quickly. He goes through the first few chapters quickly, since most everyone has seen that kind of stuff. And then he goes at a slower pace for everything else... but it's still very fast. And if you stop paying attention for a little bit, you'll find yourself wondering what he's talking about, why he's saying that point x cannot be mapped onto point y and what the hell a cellular imbedding is. But, he teaches straight out of the book, which is good and bad (bad cause it's boring, but good cause you never have to take notes).\nFinal note: this class doesn't get into any algorithms, i.e. you won't be able to write any sort of computer program using graphs after taking this class. It lays the groundworks for you to learn this kind of stuff on your own, but that's it.	7 homeworks, with 1 dropped; 2 midterms, 1 final. Final grade = .25*(hw+mid1+mid2+final). The homeworks aren't that bad, just ~10 questions each, with some being straightforward and others requiring you to look at the problem and get an 'a ha' moment two days later. So, not that hard, but don't put it off until the day it's due. Although, you get 5 total late days to use on homeworks. He provides practice midterms/finals--DO THESE before the test, otherwise you could be taken by surprise (although he changes the focus sometimes, e.g. we had a basic network flow on our midterms which weren't on the sample ones). Overall, not that bad.	2	0	40	4901
22185	January 11, 2009	The first day of class Professor Cannon told us we should expect to be spending at least 10 hours a week doing work for the course. I thought he was joking. HE WAS NOT. This is a great class and he's pretty good at explaining concepts (if you pay attention), and he's understanding about extensions and going over certain topics more in-depth if the class needs it. But the weekly assignments were pretty difficult and/or very time-consuming. You MUST start each assignment at least 4-5 days before the due date, because you will run into problems with your programs and you need time to meet with the TA's. I found that many students taking the class had prior programming experience and they found it easier (and messed up the curve). But for the rest of us it was a grueling learning experience. I'm glad to have taken it but you need to invest time, no joke.	Weekly assignments, alternating between theory and programming. One midterm and one final. The average for the midterm was like 87 or something. The final was harder. STUDY.	20	1	515	3807
22265	January 16, 2009	This class was so great. Adam is really thorough with his explanation and will always stop to make sure that people are following. We got bi-weekly assignments that tested our knowledge of the reading and during the last few weeks we had to make some programs using python. Honestly, if you want to try computer science but are worried that its going to be hard, this course should change your mind. If you need any help, go to the TA's office hours and they basically take you through everything step by step. They're really helpful with checking homework and making sure you're on the right track.	bi-weekly assignments, easy midterm, more difficult final	4	0	515	1138
22284	January 19, 2009	This is by far the most demanding and rewarding class I have taken as a CS grad student at Columbia. The famous 6 Linux kernel homeworks were just as time-consuming as could be expected. However the Prof and the TA:s were very helpful and there is a good discussion board belonging to the class. It was possible to skip one homework without a grade penalty. The first two assignments were not that difficult but 3-6 was very challenging.\nThe exams were in general pretty straight-forward if you had attended the lectures during the semester. The lectures however were rather slow and somewhat obstructed by irrelevant questions. The level of the lectures were much lower than what was required to finish the homeworks.\nThe best advice I can give for this class is to preferrably get familiar with C and Linux as much as possible before starting the class. No previous kernel programming experience is necessary but not having to spend time with syntax problems is very nice. \nBut anyone interested in low-level programming should definately take this class.	The assignments took us on average up to 40 hours each.\n\nIn addition there is some reading to do and lectures to go to. The exams does not require a lot of studying though.	0	0	45	2384
22285	January 19, 2009	I agree with the previous reviewer. Stay way clear of this class unless they change the layout of it severly.\nThe lectures were just student presentations of different more or less interesting subjects. It was supposed to be seminar style but since no one had a good VoIP background the presentations (including mine) were naturally shallow and buzz word centric.\nThe labs (30%) were enormously time-consuming and not very rewarding. My group had hands on experience with setting up VoIP servers before, otherwise I would had been completely screwed. The presentations were alright but harshly graded. The projects were rather vague and too wide in scope and in my opinion most of the groups did not produce anything of substantial value.\nEven though this was the class that caused me the most stress and took almost as much time as OS I still got a rather lousy grade compare to other classes. This class gave me almost nothing. I still don't know how VoIP works :-)	The labs took way to much time without giving much back. There were no proper instructions and even though the TA was very helpful it still did not work very well.\nI would have thought that we would just play around with VoIP equipment but it was more an exercice in testing 12 different features on say 4 different phones and over UDP and TCP rendering 12x4x4x2 cases to implement and test.	1	0	350	5167
22314	January 20, 2009	I'm going to cut right to the chase, and tell you that this is not so much a review as a warning.\nMaria is not good person. In fact, I felt myself becoming religious for the wrong reasons: I wanted her to rot in hell and suffer an eternity of some kind of torment. \nHere's the thing. Her exams are extremely easy if you study the material at all. However, the course is curved around something, so you expect that something fishy is going to happen. Something very fishy happens. Her TA's begin taking points of for extremely silly things. Oh, did you not detail every tiny step you took to get to the answer? 5 points off. Oh, you didn't name the method you are using to answer the question, even though it's bloody obvious what you're doing? Take 5 more.\nSee my point? The class is curved around how good you are at predicting what random thing they are going to take points off for next. If you are reading this review before taking her class, then you are lucky. You can simply avoid this non-sense by writing down every tiny detail, just to be on the safe side. \nIf you do talk to her, as I've heard many people have done, you will not get the slightest sympathy. Not that I expect any, since I understand she cares nothing about what I think. But there's something cold about the way she talks and looks at you, that reminds me particularly of a venomous snake. Anyway, I digress. Just don't bother talking to her or her TA. He's this snooty French guy, who despises you stupid Americans.	NA	34	13	4996	NA
22414	February 06, 2009	Ms. Leslie is a very sweet teacher. She's very young, and she's very approachable. She will give you all the time in the world if you need help understanding something. She presents all her lessons well, using powerpoint presentations. Good speaker. I took the class with no programming experience as a freshman, and got an A. I did, however, go to her office hours every week, so she got to know me and I did get extra review. But I wouldn't do the assigned readings, and usually didn't pay good attention in class. Programming is fun, but sometimes frustrating when you don't see your mistake. She will extend deadlines if everyone is behind.	moderate	0	0	595	3807
22493	March 12, 2009	She did a good job of covering the material and explaining what she expected for the midterms.  About what you'd expect for this level class.  There was a curve.\nhttp://www1.cs.columbia.edu/~kathy/NLP/	3 projects (in perl or java), 1 homework and 2 standard exams.	1	9	2142	4903
22573	April 19, 2009	Professor Rubenstein tries to do a good job, but in the end his attempt at teaching networking is not very good.  There are a few ways he can improve this class.\nFirst of all, he teaches the class from a very theoretical point of view.  Considering this course is described as an Ã¢â‚¬Å“Introduction to computer networks,Ã¢â‚¬Â he needs to focus less on the theory.  The theory he teaches is excessive to the point that itÃ¢â‚¬â„¢s hard for me to follow how the theory relates to networking in real life.  I donÃ¢â‚¬â„¢t have a problem with theory, but first IÃ¢â‚¬â„¢d like to learn something practical so that I know how to apply the theory.\nProf. Rubenstein clearly states that he does not follow the book.  I understand that many professors do not follow the book because they need to present material that relates more closely to the course.  Unfortunately, in this situation, itÃ¢â‚¬â„¢s a big mistake.  Based on the course description, the material in the book is better than what Prof. Rubenstein teaches.\nCompared to other classes, Prof. Rubenstein also puts a lot of weight on the mid-term and final.  Based on the amount of effort IÃ¢â‚¬â„¢ve had to put in to the homework and programming assignments, I think the assignments should be a larger factor in the overall grade.  He barely teaches anything in class on how to do the programming assignments.  This leaves students with a lot of work although it only counts for a small portion of the grade.\nI wouldÃ¢â‚¬â„¢ve liked to learn about networking in this class, but unfortunately it looks like all IÃ¢â‚¬â„¢ve learned is strange theory that I have no idea how to apply to real life.  I think Prof. Rubenstein could do a decent job teaching the course if he would just read the course description one more time and realize that he doesnÃ¢â‚¬â„¢t need to teach anything other than whatÃ¢â‚¬â„¢s presented in the textbook.  Save the theory for a different class, donÃ¢â‚¬â„¢t give it to us in the introduction to networks class.	NA	4	18	2427	4902
22583	April 21, 2009	I completely agree with the above review.\nThe class as a whole is curved, and so even if you don't have those random points taken off here and there you still are not guaranteed a good grade. The average on the first midterm, two standard deviations above the average on the second midterm, and one standard deviation above the average on the final still resulted in a B- for the class.\nConsider yourself warned.	NA	21	2	4996	NA
22589	April 21, 2009	Overall: A really great class.\nLet's start with the bad: the lectures were not 100% terrific... so I tended to skip lecture sometimes and when I attended I sometimes didn't pay much attention. It's not that he isn't brilliant (he is... for heaven sake's he is the "a" is "awk"), it's just that he has trouble teaching to a class.\nNow for the good: His office hours are golden. I cannot stress this enough. If you go into his office hours not understanding something, you'll come out of it completely and utterly understanding the subject; end of story. He is TERRIFIC 1 on 1. The homeworks are incredibly hard, so I recommend checking in during his office hours to double-check your work (or ask for pointers -- no puns intended) before submitting.\nThe other: As I said, his homeworks are incredibly hard (think Discrete math, but far, far more difficult). One of the last problems he gave us included a proof that HE had made in 1993 or some such proving that the way that perl handled regular expression recognition was NP-complete (when he first proposed this... no one believed him until he proved it). There was no way I could have solved this problem without going to office hours. But moreover, with the possible exception of the aforementioned problem, his assignments, while hard, are pretty fun. I don't mean you'll think they are entertaining, but they are well structured, so they are informative, and if you end up understanding the problem, it really helps you get a comprehensive understanding of the material (which is great). He also gives out practice exams that are incredibly useful. Grading is decently quick and fair.\nThis class is required for CS majors, so you have to take it, but if you have an option of taking it with or without Aho, take it with.	1 midterm, 1 final, 6 homework assignments (approx 4-10 hours of work each).	7	0	1891	234
22591	April 21, 2009	Great course. Makes a somewhat dry subject incredibly interesting. Very lively lecture... one of the few CS classes I really have enjoyed attending. If you can take this class with Grinspun (he tends to teach in the Spring), so do.\nHomework is difficult, but not extraordinarily so. Midterms are very difficult, as they are open book so they test not what you could memorize but how adept you are at solving the problems. It is also possible to recover from a bad midterm... I nearly aced the first midterm (missed one or two points), but the second midterm I don't think I managed to get more than 20/90, but with a decent score on the final I still ended up with an A-.\nNot to mention, the questions on the homework and exams are actually somewhat fun (interesting questions, not dull or boring ones for the most part), which is always a plus.	2 Midterms, 1 Final, 6 homework assignments (approx 6 hours each)	1	0	2480	397
22592	April 21, 2009	We're now 3 weeks away from the final exam and I still don't really know what the point of this class is. The first day of class we spent half the time discussing how Moore's law is the most important law in computer science. First of all... that's BS. Moore's law is an observation of fact, not a force that drives (though, granted, it did have some effect... but to call it more important than anything Turing did?). Moving on...\nThe man is somewhat insane. It isn't hard to do well, but he is cutting back on the extra credit. From what I hear, there used to be possible to get more than 20% of your grade be extra credit, and anyone who gets over a 100% gets an A+. Now he "only" gives out 16% possible extra credit. 10% of that extra credit is in the form of problems (not hard). 6% is in giving him articles from newspapers that have errors in them. The thing is, he decides how "worthy" the error is. I've sent him plenty of articles this semester, and only one of which was "worthy" of the extra credit. All of them had numerical or factual errors... it's just somewhat ridiculous.\nThe class really is pretty darned easy. The thing is, though, you NEED to go to class and pay attention (even though it is very difficult to do so...), as his exams are based largely off lecture (e.g. what are the benefits to using the Newton method... some of the reasons are very subjective). He also gets a lot of his test problems from the homework (also, if you know someone who took the class, try to get ahold of their midterm... he tends to repeat midterm questions). Speaking of the homework, he gives out about 30+ problems over the course of the semester. All of them are fairly trivial, yet time consuming, and are downright annoying. How many times do I have to program a very trivial algorithm before its obvious that I can code? Apparently about 10 times. \nAgain, I still don't really get the point of this class, not to mention I don't get why it is required. There is nothing this class has taught me that I couldn't have taught myself with a little pre-calc knowledge and the knowledge I got in 1004.\nA hint for the midterm/final: write down a whiteboard (or something) every function you've learned up until that exam, and each function's pros/cons, and study from that. The things he tests you on are the things the homeworks are on: the same very limited applications of the functions that you see on the homeworks.	30+ hw assignments (annoying and somewhat time consuming). 10+ extra credit assignments. 1 midterm. 1 final.	4	1	1028	861
22618	April 24, 2009	Pasik is an interesting and fun guy.  It does help to be the right kind of student (interactive, awake, asking questions).  He usually doesn't have a text book and doesn't do much on the board or with notes.  He basically talks to you.  Attendance is absolutely essential.  If you show up every day and pay attention, you can't help but get an A, because he explains everything.  If you skip classes, and you don't already know the material, then you're in trouble.\nWhile I like him as a Professor, he's not the strongest when it comes to math or theory.  He's a pretty practical guy.  That works for him though, especially in data structures, which is a practical course.  His coding skills are very well practiced.  If you want your code to be clear, modular, and work the first time, watch him go through code.  If he posts code online, take it and put it in your coding base.  It's really well written code.\nBy the way, he loves recursion... really loves it.  The main thing I learned from him was how to write concise, elegant, semantically clear, recursive code.\nLittle things to note:\n1.  He will not accept anything late.  He assigns things extremely far in advance.  Get them done.\n2.  Make sure you really get the material.  Since he lectures well, the average scores on the tests tend to be pretty high (at least in my experience).  So if you want an A, you need to do well on the tests.\n3.  The tests are really straight-forward (no surprises), but they might require you to actually know what you're doing (not just get the gist).  He will make you write code snippets on the spot on exams.	Data Structures: 5 or 6 programming assignments.  All quick and easy.  Midterm and Final.\nArtificial Intelligence.  An easy project, then a hard project, then a really hard project, then a group project.  In hindsight, the third project shouldn't have been THAT hard, but you really need to understand lisp by that point in the semester.  Midterm and final.	2	8	2508	26
22624	April 24, 2009	Professor Blaer seems to know anything and everything there is to know about the Java programming language, and practically lives and breathes CS.  He's always happy to explain the finer points of Computer Science to us.  His office hours, immediately after class, are held at an unusually convenient time for most students and even if it takes him more time than he thought it would, we rarely go away with our questions unanswered.  In addition to holding his posted office hours, he vigilantly monitors the course discussion board.  His board posts are essential (and appreciated) given the difficulty of his assignments.\nThe 6 assignments can be quite time-intensive for people who are less than overqualified, including top students from the recommended prerequisite course (COMS W1004).  A substantial number of students have a much stronger background than this, and some have practically taken COMS W1007 beforehand.  These may be the people who would call the workload "not too bad."  The rest of us just get a lot of programming practice.  Fortunately, the grading and grading curve are generous.  The median grade is usually B+, and this semester it might be A-.  \nLectures are understandable and thorough.  Professor Blaer sometimes talks so quickly that note taking becomes a bit difficult, but most of the material is from the textbook anyway.  The textbook, _Object-Oriented Design and Patterns_ by Cay Horstmann, explains concepts reasonably clearly but provides inexcusably buggy solutions to exercises.  Exams are long and information-intensive, but manageable if you've studied.\nProfessor Blaer LOVES to make fun of students who procrastinate (he never singles out individual people but talks about Columbia students as a group).  He is also merciful toward those who do procrastinate, because of his liberal extension policy.  Sometimes he says things about the average student's level of organization (i.e. our lack thereof) that aren't true.  I hope his lectures get put on CVN because they are so good, but those parts are cut because they reflect badly on Columbia University and are a lie.  Most students are doing well this semester, and our organizational skills are one of the reasons. \nI highly recommend this course, but only if a student has taken COMS W1004 or the equivalent beforehand.  Otherwise they might get buried in coursework.	Watch out!  The biweekly assignments can easily run to 20+ hours, or even 30 hours.	3	0	3409	2906
22643	April 30, 2009	Jae's lectures are always interesting, sometimes funny, and certainly relevant and helpful for completing the lab projects. Though many of the projects are rather time-consuming, they are all quite easy if one pays attention in lecture, reads Jae's lecture notes, asks questions on the mailing list, or goes to TA office hours. Jae is sympathetic to students' difficulties due to external influences and sometimes gives class-wide extensions on the projects.\nThe curriculum is a quick (but thorough) overview of C, C++, and UNIX programming and is very good preparation for many of the advanced CS courses.\nThere are 10 lab projects (one is optional), each of which one has about a week to complete (before the inevitable extension), and a final exam.	Light reading (though you can skim)\n10 lab projects (each can take several hours)\nFinal exam (40% of the grade)	21	1	3509	4758
22664	May 04, 2009	He sure is a sweet old guy, and it is clear that he knows a lot, but this class is almost painful at times, depending on the day and depending on your mood. Sure, it's easy, and, sure, the readings are interesting, but it's almost impossible to not go to sleep some days; he goes off on tangents constantly and covers very little in each class (which can be a nice change from classes with thousands of pages of reading). Sometimes, I like this class, when what we're discussing is especially interesting or when students contribute their comments; other times, I find it to be a waste of time.	very little reading, midterm and final worth 50% each, attendance taken every class, but I'm not sure it counts for anything	7	1	856	NA
22755	May 13, 2009	Jae is the best teacher I have ever had, hands down, and definitely golden nugget-worthy. He is knowledgeable and approachable. He will never hesitate to review a concept that anyone is having trouble with and his explanations are unfailingly clear and highly informative. There are two required textbooks for the course, but most of us rarely had to crack either open since his syllabus and teaching ability are so great. One of the things I particularly liked was that he set up a mailing list at the beginning of the semester in which anyone could ask him, the TAs, and our peers to clarify concepts, etc. - this was extremely helpful, particularly for the labs.\nHe is always understanding of his students' tight schedules and tries to be flexible by granting class-wide extensions for the labs. This gets to be a little excessive by the end of the semester, and you start to depend on the high probability that you will have more time to finish the assignment, and here's a tip that took me ages to figure out: DONT!\nThe course covers the C programming language in depth, offers a good introduction to the UNIX environment, as well as an introduction to C++. However, he designs his lectures and labs to offer sufficient background for a variety of higher-level CS courses, so you will learn a lot more than that!\nAs Jae said at the beginning of the semester, his goal in this course is to take "programming students" and turn them into "programmers", and I believe he did just that.	10 labs (programming assignments), very time consuming, one of them is optional\n1 final, difficult	24	3	3509	4758
22758	May 13, 2009	I can understand what the course is supposed to be and why it could be a required and important course for CS students (particularly, the part in the course description about an "Introduction to computation on digital computers" and the discussion of chaos), but the course as it is now has little to offer:\nFirst off, Traub himself is incomprehensible. However, is absolutely necessary to go to class, otherwise you will have no idea what is going on since he quite often teaches random topics of interest to him that are nowhere to be found in the book (though I cannot guarantee that going will actually solve this problem since many a time I have looked back at my notes for reference only to find that the three or four lines he scribbled on the board lacked context and explanation -- I learned this on the first day and therefore started writing down everything he said as well, but this still did not help). At least twice a day he will ask the class a question only to be faced with a sea of blank stares (and the course was in the middle of the day!) because nobody has a clue what he's talking about. He usually waits for a full minute or two of awkward silence before moving on. One day, we spent the whole hour and fifteen minutes discussing climate change (he honestly covered the entire board with evidence that its happening/evidence that its not happening/evidence it is caused by man/etc.) for no reason! This was a terrible waste of time, but not a single person left, probably for fear that he would stop wasting time and start covering actual material and that then they would be lost. Worst of all, the structure of the course and the depth of the material covered lead you to simply memorize a bunch of equations for the midterm and final and promptly forget it all.\nOverall, there are one or two nuggets of wisdom to be gained from this course, but the CS department should not make us go through an entire semester of incoherent randomness just for that!	~25 homework assignments, short but annoying\nMidterm\nFinal\nThere is also quite a bit of extra credit	1	2	1028	861
23146	September 10, 2009	Professor Kender knows his stuff.  His lectures are not the most engaging and gripping, but they are eminently useful--pay attention!  His homework assignments are extensive and fair, clearly utilizing the skills taught in the previous unit.  He has an abrupt personality, but respects the course, the students and teaching in general.  Tests are difficult and graded harshly, but the class is curved at the end of the semester.	5 assignments (one ever two weeks, approximately 8 hours long.  Time required depends mostly on your experience with programming), one midterm and one final.	5	1	42	2906
71075	December 16, 2014	Some thoughts about this course, in no particular order:\n1. Rocco is a stellar professor, well deserving of the gold nugget. He is excellent at distilling complicated subject matter in an intuitive manner. He cares about his students. If you ask a question during class, Rocco will make sure you understand it 100% before moving on. He never treats any question like a stupid question, and  completely lacks the condescending demeanor of so many profs. Amazingly, Rocco would personally answer many of my questions to the course email account, often within minutes. I'm actually amazed how much of a shit he gives about every single person in the class, given that almost none of us will continue in his field.\n2. The course requires a lot of time. Every homework has 5 difficult proof based questions. You need to think things through very deeply. I was close to the top of the class and still spent around 20 hours for each homework. Some individual problems took me 5-10 hours of deliberate thought to break through on. This can be frustrating, but the reward when you finish is worth it. If you don't have much aptitude for theoretical CS, this class will punish you. \n3. Clement Cannone is a fantastic TA. \n4. As other reviewers have mentioned, this class will give you virtually no practical skills to apply in machine learning. That being said, it CLT is a beautiful field that will make you better understand some of the fundamental issues in ML. If you're the type of person who stays up at night wondering how things REALLY WORK, this is the course for you.\n5. The final was very reasonable. If you payed attention in class and understand the concepts at a high level, you'll do well. It doesn't require anywhere near the intellectual sophistication of the homeworks, which is a good thing.\n6. The project feels like annoying busy work, and is probably the only thing I'd criticize about the class structure. Reading a research paper is fun and all, but writing 10 pages at the end of the term with all the other finals going on seems like fluff. I think a 2-3 page summary would be better (perhaps for a smaller portion of the grade).\n7. Out of the 3 profs who teach the core ML courses (Rocco, Jebara, Hsu), Rocco is BY FAR the best instructor. No contest.	5 homeworks that will test your grit, 1 annoying paper, 1 reasonable final	4	0	1724	NA
22777	May 14, 2009	As one of the students that has "practically taken this course before" mentioned below, I should preface this review by noting that if you have any kind of Java experience beyond the AP CS AB level, you should really try to test out of it. I asked about skipping the class and was strongly discouraged by everybody in the department that I talked to; in the end, I think that was a mistake.\nThat being said, a class that by all rights should have been an unbearable repetition of things I'd already taught myself turned out to be a reasonably good experience. Blaer is a really engaging lecturer and an all-around smart, friendly guy -- he was happy to entertain various questions I had about side projects totally unrelated to the course material, and is really accessible outside of class.\nThe homework turns out to be enjoyable as well -- there's enough freedom and flexibility in the assignments, particularly the middle few, that you can have fun playing around within the constraints.\nAll in all, I highly recommend Blaer (and would happily take any other course he teaches), but be wary of signing up for 1007 if you come from a CS background.	6 homework assignments, due every 2 weeks, that take 2-4 hours to complete if you have a good grasp of Java (and, I'm told, many more hours if you don't).\n1 midterm, 1 final, both fairly predictable and not too difficult.	2	1	3409	2906
22785	May 15, 2009	great class! A.C. is funny, likable, knows his stuff, and presents information in a way that makes a relatively intimidating topic (for non science people) feel like fun. I would highly recommend this class for anyone, especially those who have little or no experience in compsci and are interested in a light challenge.\nthe first half of the class covers things like databases, networks, computer architecture and organization (how computers actually work), and basic HTML. After the midterm, the class got more challenging, but not too much so... an introduction to programming in the language PYTHON. i found this to be really fun although it can be rather frustrating. \nfulfills the columbia college science requirement even though it isn't on the list!	5 problem sets increasing in difficulty, two weeks for each. midterm and final. really not too bad. some of the assignments are really fun like the first programming one... a third of it was logic riddles!	0	1	515	1138
22799	May 16, 2009	Try to stay away from this professor.  He is really old and doesn't know how to teach.  You won't be able to hear his voice and anything you do hear won't be comprehensible.  Basically, you don't need the lecture for this class.  The subject material is sooo easy.  Taylor, Newton, Taylor, Taylor, etc.  "Everything derives from Taylor."  Really, the material is a joke but he doesn't know how to teach and will confuse the f out of you.  I taught myself the whole course.  The double extra credit is the stupidest thing I've heard of. (Find errors in newspapers)  What does this have to do with anything??  I cannot overstate what a horrible experience this has been with Traub teaching, because I love the material.  Its all about approximating functions that can't be fully solved.  Its really all very interesting, but Traub's class is a complete waste of time.  There are people always sleeping in class, its ridiculous.  Most people try to sit in the back so they don't have to look at this guy and be trying to figure out what he's trying to say.  His explanations are sooo unclear, the TA was a big help - the TA was even confused about Traub's explanations.  There were apparently 3 TAs for this class although only 1 was actually of help.  1 was a complete nuisance and the other was okay but arrogant.  All in all, the will probably have to take this class and with Traub so go find somebody's midterms.  Oh, by the way. most of the material does NOT come from the book so you need to go to class and somehow try to understand what he's trying to get across.  "CAN WE DO BETTER???" or as he writes it, "CWDB" This guy loves to abbreviate things but doesn't say what he's abbreviating, this class is a comedy show.  He's also obsessed with Google and the number of search results.  Dude, that is an approximation but he takes it way too literally.  I once asked him a question (well, actually more than once) and both times he said, "Look it up on wikipedia"  hahaha wtf.  Oh, and sometimes he will forget to finish his point on a topic and then test you on it.  crazy.	About 25-30 homework assignments, really a pain because they are sooo easy but the lectures wont help for them so you have to learn all the material to figure it out.	5	7	1028	861
22820	May 17, 2009	His accent is a little hard to understand and also explaining over the concepts he goes into more of small things which makes it more frustrating. Overall I would suggest everybody to avoid courses being taught by him.	Workload is quite heavy in C++ derivatives with 8 homeworks out of which 7 are graded and each takes a lot of time to complete. The bad part is most of the financial stuff is not properly taught by the professor which hurts when one does the homeworks.	2	4	4205	5366
22946	June 05, 2009	This course is the best CS course I have ever taken.\nI entered the course with very little C experience and with hardly any Linux experience - let alone any kernel programming experience. After taking this course I did a project for the professor next semester and I now feel confident to take on large kernel intensive projects.\nFurther, even if you're not going to be an operating systems developer, taking this course will make you understand all those details, which are unavoidably important, but always seem vague without having real OS experience - such as memory management, device drivers, threads and processes and more. I have taken another OS course before this at another institution, and I have to say that a course like this should be mandatory for all CS students.\nJason is an excellent teacher, who is very approachable and answers any question with insight and dedication, so take this course with him if you have the chance.\nOnly criticism is that I think there should be a homework related to writing a driver/module instead of for instance changing the scheduler, as it is more relevant for most of the kernel work to be done by the majority of people. Also, the classes do seem a little slow at times, but I guess that's more of personal preference.	Regarding the workload, yes, it is VERY tough. The homeworks will kill you, and if you have little C and linux experience it will be even worse. As another reviewer wrote: do some C programming practice before starting this course! Also, pick a good teammate and plan the entire semester for homeworks (including which homework to possibly skip) from the beginning. The midterm and final are not over the top difficult, but will require knowledge of what you are doing. (The questions are relevant though and not to test-like).\nDon't let the workload scare you off, but don't take this course together with other core-courses - you will suffocate :)	6	2	45	2384
23289	November 15, 2009	A good teacher. I had zero comp sci background and am doing fine in the class, he's awesome at office hours and explains things really well. A lot of people who complain about the workload also start the assignments really late, which is a bad idea. A great class and a funny teacher, i enjoyed it.	can be a lot at times, take his advice- if you haven't made in progress in half an hour stop and get help.\nbook questions can be a drag but are pretty easy	9	8	515	3807
23314	November 18, 2009	I guess professor does not have experience in teaching. She is not able to properly deliver the lecture, she herself is confused most of the time. Its a wastage of time attending her lecture.\nIts better to study by yourself from book as her lectures does not contain anything new.\nWhen you ask her some doubt, you will find that doubt is still doubt.\nMoreover, she is very harsh to the students, in short not at all student friendly. She even does not listen to the student's problems. Her grading is also very strict. I will suggest not to take this course under her. \n.	NA	6	2	4227	4079
22947	June 05, 2009	This is an excellent basic architecture course where you become familiar with all the architectural aspects of modern computers, which any CS student should be familiar with.\nBy taking this course you will gain some understanding of what the difference is between newer and older processes, why various cache organizations have various advantages, why memory performance is so ever important and you'll get a hint of issues and challenges related to SMP.\nBesides just learning the material and getting familiar with terminology you will get an idea of how to evaluate performance of different architectures.\nThe instructor is very dedicated and approachable and does his best to keep you involved when going through the some 50 slides for each lecture. The number of slides sounds like a lot but reducing the number would mean to compromise with the material learned.\nProf. Carloni does a great job making the subject interesting, up-to-date and he is not over-prepared in the sense that he thinks up the solutions to the questions he asks in class, which gives you time to follow his thoughts.\nThe homeworks are fine, but a little concentrated on the calculational aspect of things and some slightly more "getting to know things" homeworks would be appreciated.	The workload is not all that bad for a Columbia CS course. Don't get me wrong, it's a core course which will take a lot out of you, but for the amount learned it's pretty decent. Watch out though, the final project can be quite demanding and I think the instructor should drop the last homework to allow more concentration on the project.\nThere is also a fair amount of reading related to this class. I took the class together with OS, which was kind of a pain, but as Prof. Carloni told me before taking the class "you can do it if you're a good student".	16	13	4212	5392
22948	June 05, 2009	Prof. Creamer is a mediocre professor, and that may be a compliment. His exposition of the material was shallow, and uninspiring. Prof. Creamer didnÃ¢â‚¬â„¢t explain the programming material clearly, nor did he explain the financial engineering concepts. It was difficult to follow his explanations.\nIn his defense, this was the first time the course was being offered. Also, there were approximately 70 students in the class, with varying levels of knowledge of financial engineering and programming concepts. Teaching a course catering to such varied abilities is undoubtedly difficult.\nI would not suggest this Professor to any of friends (or enemies).	7 of 8 Homeworks counted for grade. Each Homework was due approximately fortnightly. Each homework required 4-5 hours of work. 1 midterm and 1 final.	4	6	4205	5366
22983	June 23, 2009	he is a really nice prof. He was also very into his stuff. At times I felt that he went on for a bit about privacy issues but even when he did it was still interesting. The workload isnt a lot really. Except the problem sets get a bit ridic. I would suggest reaching out to him well in advance with questions about it. He is really helpful.	Its not an easy A. A reasonable B+ but def not an easy A. you will spend hours and hours trying to figure out how to do the last 3 h/w assignments. the book is soooooo boring. torture. seriously. but he says he is changing it next year so good luck with whatever you get.	4	4	515	1138
22993	June 26, 2009	Jae is a God. No, not just a god, he is a Three-Wolf-Moon shirt on steroids. Not only does he know his stuff, he knows how to teach it. Granted, this was the hardest class I'd ever taken in my life, but the long hours of work and sleepless nights have made me into a better programmer and students. \nThere is a reason as to why people were basically begging him to revive the Data Structures in C class and teach it also; he was just *that* good. The classes were engaging, he would answer any question and repeat things as necessary, and really wanted to stress it all so we would understand, even if we had to go through  it multiple times. \nThe most lovely thing about this class is the listserv; through email, all students in the class could give advice and help each other on the homework (code-free of course!). \nWriting your own web server was daunting but once you're done, you'll be amazed at what you've been able to accomplish. He is professor material, for sure. Columbia, be smart and make him a prof with automatic tenure; our Computer Science department needs more wonderful people like him.	10 labs, 1 optional and for use as a make-up. Start the labs early; they take hours and days to finish. No midterm this semester but others have been different. Prepare for a butt kicking in the final. \nMultiple TA's are available to help you with your homework; the office hours are worth every minute!	36	3	3509	4758
23022	July 17, 2009	As one of those students NOT coming from a strong CS background, I just have to put it out there that each homework assignment took me roughly 10-15 hours to complete. As for Prof. Blaer, I thought the textbook was just as good a teacher as he was, since he mostly repeated what was in there with some additional reinforcement and examples. He is fairly accessible and does a decent job of presenting the material, but ultimately Java is something you learn mostly by yourself. I certainly learned a lot through the programming assignments. Overall I would recommend him just because he's so helpful and cares about the students doing well.	6 programming assignments, the first and last were somewhat easier than the middle ones.	4	0	3409	2906
23031	July 29, 2009	Hands down the best comp sci teacher I have had so far. He is an excellent professor who actually cares for his students and their understanding of the material. Professor Papageorgiou comes well prepared to class and actually teaches. He goes step by step to make sure everyone logically understands the progression of the lecture. \nIf you go to the lectures and pay attention, the class will be enjoyable and rewarding. Everything on the midterms and quizzes was covered in depth, there were no surprise questions, and the extra credit is usually manageable. He emphasizes understanding not out-of-the-book memorization, so his tests are designed that way. Also, he will gladly take the time to help you out after class with any type of doubt or question on the homeworks. \nGoing in, I thought this course was going to be a pain and was pleasantly surprised by everything I had learned towards the end. The comp sci deptartment needs more people like him.	HW 30%, Midterm 30%, Final 40%, Extra credit 10%\nHomeworks arent too bad and they actually help you understand the material. If you attend the lectures, pay attention and ask questions, the tests are a breeze.	3	0	2762	3992
23082	August 20, 2009	This class the truly Terrible and unbelievably hard! It says that it is an into level class, but its not. This was the most time consuming, annoying and frustrating class I have ever taken. If you have taken AP comp sci, or have a better idea of java you will be struggling, but if you have none DO NOT TAKE! It was impossible with out outside help. \nCannon is a funny man, and class was not boring, but the subject is just impossible. The theory stuff is easy and understandable but the java is very very hard and is not taught at all, its more teach yourself everything or find someone who knows what they are doing and have them teach you. \nI learned ALOT, but in the end, not worth it.	4 Programming Assignments, all pretty much impossible, but very rewarding when you finish them. Don't expect to do that well on them (close to 20 hours of work for each). 4 theory problem sets, more managable but still time consuming. Midterm and final, easier than programming assignments but still VERY hard and painful.	23	47	515	3807
23358	November 24, 2009	Adam Cannon is wonderful. Funny, nice, knowledgeable, good at explaining things, basically everything you want a teacher to be. The Intro to Computers class (now renamed Intro to Information Science) is basically an overview for people who want to know a bit about computers but aren't going to major in Comp Sci, but I love this class so much that I've decided to start a Comp Sci minor.\nThe class is not quite a walk in the park; there is some serious work involved, but it's nowhere near unreasonable and always rewarding (see below). If you're looking for a fun, useful, not-too-tough class to fill out your schedule with, this is a great option.	The workload is definitely manageable. Homework assignments every few weeks, one midterm, and a final. The homework assignments are not the kinds of things you can do in one night, but they are fun and you don't feel like you're wasting your time doing them. I'd suggest starting them early and going to Cannon (or the TAs) with any questions. Also, the homework assignments get progressively harder so don't expect the second one to be as easy as the first!!	20	14	515	1138
23385	December 06, 2009	As an applied math major taking CS classes for fun, I found this class to be extremely simple. Prof. Allen is a very good lecturer, keeping the lectures funny and engaging. He prints out enough hardcopies of the handouts on each topic for every person in the class, which I found helpful. The lectures usually contains a bit of theory, then algorithm, and he goes over each algorithm in detail with graphical / code examples. Although going to recitation is encouraged, it's most likely a waste of time as I never went and never had any problem with any of the homeworks. The midterm and finals are extremely easy. Even as a person who's not very good at CS, I managed to score 1 standard deviation above the average in a class designed for CS majors.	1 midterm, 1 final, 6 homeworks. Homeworks are 45% of your grade. Although I do not recommend waiting till the last minute to do the programming, they were pretty simple, and would probably take at most 2-3 hours to code.	2	15	37	1622
23397	December 09, 2009	I studied Java for the first time during my senior high school year. Though I felt like I learned how to program in Java and I was confident in programming, this class even challenged me to the next level of profession both in Java and in general. This class taught me enormously amount of knowledge of Design and Object-oriented programming. It was mainly because the assignments were time-consuming and they demanded dedication, and also the ability of Prof Kender to succintly pointed out all crucial aspects of Java and OOD.\nProf Kender is very good-natured. He looks tired sometimes but he is full of energy when it comes to lecture time. He is very approachable, and he answers all questions you have in mind. He is very funny in his own way. And above all those, he is a very, very fair grader. (And of course TAs in this course are just like that.)\nThose who wants to master in programming will not regret taking this class. You will learn much more than the Java itself; you will encounter a lot of situations where you have to decide in terms of design and strategy. You will be ready for the next level of programming, which is in bigger scale and more complicated. I would say that I appreciate this class so much, both from Prof Kender and from the class itself.\nBeware though, the class is a little tough.	Five assignments. Two weeks for each.\nAn assignment composes of two parts: theory and programming.\nUsually an assignment would take your whole weekend -- i'm kidding -- just about 20 hours for me. (If you manage to work for your assignment as early as you can, you will surely survive.)	14	1	42	2906
23442	December 13, 2009	The professors does not speak english and  was therefore very difficult to understand in class.  Because the professor does not follow the book there was no real way to figure out what was going on if you did not understand what was happening in class.  Good luck going to office hours - he doesnt even post his office number!  The TA's were not much help either.\nThe midterm was similar to the review questions but nonetheless impossible - he seemed upset at our low performances, but maybe he should have taught us something understandable in class.\nThe homeworks were not impossible, but required extensive wikepediaing as they were neither in the notes or in the book.\nWorthless class.	Bi Weekly homework - varied in difficulty	2	1	1749	3992
23459	December 14, 2009	The instructor was very prepared with powerpoints, however the lectures were a bit dry and I didn't necessarily learn much from them.  \nThe assignments were good conceptually, however, the instructions were generally very confusing and in my opinion led to unfair reductions in grades.  Though I tried to get clarification both through emails and office hours, the emails did not necessarily help as following those responses led to point deductions and despite scheduling appointments at office hours the teacher was late.  It would have been helpful to get the test cases for the programs so that we could determine whether or not our programs correctly solved the problems.  The project guidelines were very ambiguous, and despite trying to get a feel for the "creativity" and "originality" for my project before I dove into it I was not able to learn much.   In my opinion  if we complete or at least reasonably attempt our proposal (with guidance from the instructor of course) then we should receive very high marks on the project.  The project should have been about finding something that was original, interesting, and useful to you.  However, the instructor failed to respond to emails about problems that I was having with the project and seemed to give the impression that he would dock points for our projects not being "original", though this is very subjective.\nIn my opinion the reason I took this class was to learn python - being required to turn in the assignments forced me to do that, though I don't necessarily attribute anything that I learned about python to being in class.  Rather the direction that the assignments pushed you forced you to learn python yourself through both trial and error and online tutorials.  Given that the workload in the class was definitely more than it should have been for a one credit course, I probably would have been better simply teaching myself python over break.	The work was fun, but its definitely too much for a one credit course - especially when you are not getting an A for it!	0	0	9496	5519
23460	December 14, 2009	The lectures were definitely entertaining, but I can't say I actually learned anything from them.  The professor is definitely skilled and experiences, but almost to a point of not caring about our individual class.  The professor does not have office hours, and even if you try to schedule a meeting he will simple tell you to stay after class - this is not very conducive for going over material.\nAlso, the teacher did not show up for the last day of class and instead had the TAs teach a review session.  We were not informed of this change until the weekend before the last day of class.  Since the teacher doesnt have office hours, we should have known that the second to last class (two weeks before the final) would be the last time we see him.  Moreover, the final review was worthless - see notes on the TAs below.\nFinally (though I am about to comment on the TAS individually), I have never been more frustrated with a set of TAS.  Despite spending a significant amount of time trying to better understand the assignments in office hours, the tas would ask questions like "Are you sure there is an exam next week?"  The TAs spoke so little english that we were reduced to playing pictionary.	The assignments were IMPOSSIBLE.  I started at least a month early on every assignment and still ended up pulling all nighters the week before it was due.  We never went over how to do them in class (and never really learned lisp for that matter)!  We should have had more small assignments that were less frustrating and allowed us to better grasp both AI and LISP.\nMoreover, the exams were IMPOSSIBLE.  First, it would be nice to have some room to write rather than having to cram it onto one page.  Next, I felt like I studied everything (and more) that could possibly be on the exams yet still did poorly.  It wasnt like I left the exams wishing I had studied a particular concept more - rather the questions were so tricky there was no way you would ever understand what was being asked.  After spending weeks studying for these it definitely does not give you a chance to show off what you know.	10	4	2508	26
23487	December 16, 2009	I had never taken a comp sci course before, and let's just say it was rough. Homeworks took me roughly 10-15 hours to complete (boy did I hate the computer labs in Hartley and Mudd after this course), granted I usually did them the weekend before they were due, but it was painful. \nProfessor Blaer moves very quickly in his lectures, flipping back and forth between Editor and Workspace so it was often difficult to write down what he had typed before he switched windows. He would also go back into code and edit what he had originally to create a new example, easy to do on a computer but almost impossible to write down the whole code again with the change (usually very small but really important to his point) by hand before he switched back to the workspace. \n\nI went to every lecture but got lost during histograms and plotting and never really recovered until the last homework. I still don't understand the whole image-histograms-plotting thing, which bodes well for the final tomorrow. An unfortunate fact about matlab; not many people take it unless they are comp sci majors or bme kids (or need to fill the comp sci requirement for seas like me), so help around campus is limited. \nMy advice? If you've never taken comp sci before then find yourself a study/homework buddy in either your class or as an upperclassmen who has taken matlab before. Go to lecture. Get used to the idea of spending hours at a time in the computer lab (bring a sweatshirt, it gets cold in mudd). If you get to a point in the homework where you just can't handle it anymore, it's ok to just turn it in (especially if it's past 3am). Ask for help if you've sat in front of the computer for more than an hour without making any progress. Seriously. It's not healthy.\nGood luck.	Six homeworks (upwards of 10 hours each, especially from #3 - #5, granted he does warn you) every two weeks or so. One midterm (generously curved, thank goodness) and one final (tomorrow, woo).	6	4	3409	4957
23529	December 18, 2009	I don't know why Pasik has a silver nugget because there is absolutely nothing good about his teaching. It is very clear that he has experience in the field and he is a friendly and intelligent man, but the fact remains: he reads off slides word for word, cannot answer the majority of questions we ask on the spot, and does not care whether or not we learn the material in the slightest.\nWhen we ask questions in class, we get one of the following: "well... that's not important to our discussion right now", "uh... I don't know off the top of my head... but I'll look it up and get back to you next class" (he never did), " uh, well... that's a good question! We'll get back to that later..." (of course he never does).\nAll of the homework assignments are purely LISP programming projects, and when asked one day in class how one writes comments in LISP, he did not know! He had to look it up online while we sat there staring at him and waiting! I cannot believe that he would require us to write massively complex programs in a language that (1) is not taught in the class and (2) he doesn't even remember the syntax for something so basic!\nHe does not hold office hours, so the only time you can ask him a question is before or after class, but he employs the same techniques he uses in class to brush off your questions (and you couldn't even go to the TAs for help since they had heavy accents and also had difficulty expressing themselves in English)! Even worse, he didn't even come to class on the last day which was supposed to be our final exam review session, but instead had those same TAs run it. We were not notified of this change until one or two days before the class itself. The TAs did an awful job, just pulling up his PowerPoints and letting us stare at the slides which corresponded to our questions for a few minutes (I'm not kidding - this is exactly what they did).	Three homework assignments: LISP coding projects. You had better be comfortable with LISP going into this class, because he doesn't bother to teach it at all. I found the final project impossible even though I started three weeks before the due date!\nTwo midterms, one final: (haven't taken the final yet, but I expect it is very similar to the midterms) difficult no matter how hard or long you study your lecture notes, his slides, and the book.	12	4	2508	26
23566	December 22, 2009	Professor Gravano is a phenomenal instructor. He presents the material so clearly that at times you'll be bored to death because everything seems so simple! Don't be fooled, though -- this is only because he teaches so well (I made the mistake of being lulled into a state of overconfidence and skipped out on a few lectures, and I'm paying for it now just before the final!). \nGravano clearly knows his stuff and can answer any question you might have - if you ever have a doubt, don't hesitate to ask him a question because after he's through explaining, you'll wonder how you were *ever* confused.	Two group projects (two teammates) - quite time-consuming, but definitely help you learn the material\nFour homework assignments - tough but fair and good for learning the material (which is useful because these are good indications of exam questions!)\nA midterm and a final - if you attend lectures and review all of the concepts before taking them, you'll be fine. I've heard the curve is great, too.	8	6	375	664
23581	December 23, 2009	A strange, infuriating, wonderful class. Almost certainly my favorite class this whole semester, but I can't quite figure out why.\nGross is absolutely brilliant -- there's no question about that. He just radiates a sort of aura of genius while he lectures. The class inevitably brings up questions about things that are peripheral to the course material: the incompleteness theorem, decidability, complexity, topology -- Gross can explain it all. But the CS department here is full of brilliant people, and none of them have (yet) inspired the same kind of reaction from me that Gross did.\nHis lectures and course notes are fantastic. Clear, concise, elegantly typeset -- you could learn all the material from only reading the online notes, or from only going to class and reading nothing at all. But Blaer is a great lecturer, and Allen's notes are just as good; again, I never looked forward to either of their classes as much.\nHe's digressive, but...actually, I don't think there's another lecturer in the department quite as digressive as Gross. And maybe that's the point. When your question about the well-definedness of negative moduli launches a fifteen minute discussion of how humans understand made-up words (and no answer to your question), you're learning. When you're treated to a lengthy description of the mechanisms used to solve the four-color problem or the Poincare conjecture, you're learning. The main content of his lectures teaches you discrete math, but the digressions teach you to think like a computer scientist.\nI think CS students here have a tendency to underestimate the usefulness of this class. If you are planning on doing anything in real computer science (and to a certain extent, even software engineering) discrete math is absolutely crucial. If you can't put together a proper inductive proof, you can't do CS Theory, and you can't do Analysis of Algorithms.  If you can't reason about graphs, then you'll never really understand what's going on in Data Structures or in Networks. I would have been helpless on the first Linear Algebra homework this semester were it not for the tools I picked up in this class...you get the point.\nThis is powerful stuff. Learn it from Gross.	Biweekly problem sets. Some of the problems are really tedious, so the homework is much less unpleasant if you spread it out over a few days. The TAs will love you if type everything up in TeX (now would be a good time to learn).	5	1	40	397
23590	December 23, 2009	An interesting class.  Covers proofs for lots of very interesting combinatorial methods but only tests their applications, so the class is totally doable for someone without crazy math chops.  Gross tells you that he'll teach you to Amaze your Friends with your combinatorial abilities, and he speaks the truth:  A lot of the pattern finding and summing is very clever, especially to the ~math illiterate that I am, because, especially towards the end of the class, some of the methods seemed like voodoo.\nLectures are useful for the tone of Gross's voice, but generally come straight out of the lecture notes.  The fact that he wrote the book means that lectures really don't provide a different perspective on the material, and the pace of the class requires students to have read-ahead to keep up.  I attended lecture but, to be honest, it was only because I think gross's side-note anecdotes were amusing.  For the most part, the class requires a lot of self-teaching (in my experience).	check the homepage for more up-to-date workload (http://www1.cs.columbia.edu/~cs4205/) 6 problem sets and 3 non-cumulative (except when self-referential) exams in ~decreasing difficulty.	0	0	40	5544
23592	December 23, 2009	It would appear that Prof. Rubenstein's evil twin taught this class last semester. Don't worry -- the real Dan is back. His slides are gorgeous, his lectures are unfailingly clear, and he's eager to help out outside of class.\nApparently he's used to teaching by drawing everything on the blackboard, but he had rotator cuff surgery early in the semester and had to do everything via PowerPoint to avoid damaging the muscles. Surprisingly, I think this turned out to be a good thing. Once you get into some of the scarier-looking circuitry, I imagine that it's easy to make make mistakes drawing, and I'm certain that it takes forever. This way, we got straight to (relatively) error-free drawings and spent time talking about the big picture instead of worrying about which wires cross.\nThis is also one of those rare classes where the material is interesting without being difficult. Five or six people in the class got perfect scores on the midterm, and I suspect a similar number aced the final. I don't think it's that Rubenstein makes the tests too easy -- this is just really straightforward stuff.\nThe few complaints I have are relatively minor. I think he was still a little sensitive about the last time he taught this course (with reviews like those, who wouldn't be?) and made a point of stopping to make sure everybody was following. This was nice, but the endless refrain of "are you with me? Raise your hand if you understand" got a little irritating by the end of the semester. He also seemed to get a little bit confused by some of his own notes about pipelined architectures, but everything worked out in the end.\nIn short, don't be scared off by any review written before 2009. This is a good class with a good instructor, and I would wholeheartedly recommend Prof. Rubenstein for Fundamentals.\nA side note:\nThe class nominally requires two textbooks. You can get by without buying either, but your life will be a little easier if you get Patterson and Hennesy. Don't bother with Mano and Kime -- it's almost completely useless.	Weekly problem sets, ranging from easy and quick to easy and mind-numbingly tedious. You'll get really good at binary arithmetic.	14	0	2427	4251
23593	December 23, 2009	Let's not mince words here: Peter Allen is an asshole. He makes fun of you when you ask questions, he ridicules you when you answer questions, he (no joke) has been known to flame his own mailing list. At the beginning of the semester, all the nastiness really bothered me. "How," I asked, "am I supposed to enjoy a class where the professor so clearly hates his students and thinks he's far too important to teach?"\nThen I got over myself.\nShould you find yourself in the position I was in, you should really, really try to get over yourself. Prof. Allen's lack of basic human decency is matched only by his supreme competence as an instructor -- his course notes are great, his lectures are better. By the end of the semester, I actually looked forward to class.\nAnd when the third person sends out an email to the mailing list asking for some hand-holding on the extra credit, and when the tenth person asks when the next homework assignment is due, you begin to understand why Prof. Allen despises undergraduates: it's because we are, by and large, despicable creatures.\nSo suck it up and appreciate your opportunity to learn from the master.	Trivially easy biweekly homework assignments. Generous extra credit awarded to anybody with a brain.	13	9	37	1622
23608	December 24, 2009	Overall, I think Daniel Rubenstein was an excellent professor. Specifically, the majority of his lectures were extraordinarily clear. He had well prepared slides for every class, often with plenty of well-chosen images from the textbooks, and spent most of the class time describing what was happening in the pictures. One of his greatest strengths was being able to clearly and succinctly describe and give insight into the functioning of a circuit or architecture. He was also unusually receptive to questions during class. By and large, the students asked thoughtful and helpful questions, and as a result, he was able to clarify almost all subtleties and potential pitfalls in the material. The lectures seemed all the more engaging and participatory as a result as well.\nAll this praise aside, I can how see professor Rubenstein may not be a good fit for every student. Specifically, to get the most out of this course, it is best to take a very active approach. I agree with a previous reviewer that "it's best to ask a lot of questions and make sure to make it your responsibility to clarify all the material that is taught." As I mentioned above, one of the reasons that the professor was able to make the material so clear was that students asked questions whenever something was less than one hundred percent clear.\nAs for the course as a whole, it felt like a gradually unfolding adventure/mystery story. We took a thoroughly bottom-up approach, and starting from the absolute basics of binary logic, gradually added new layers of abstraction until we had essentially designed a computer out of nothing. I was always on the edge of my seat waiting to see how all the ideas we looked at unfolded and built on each other to eventually construct such an amazing machine. Some of the ideas we covered, such as latches and flip-flops, are so utterly brilliant that I think it is somewhat of a shame that we never considered the engineers and inventors who were responsible for them. More generally, I think the ideas we covered in the class could have put into a richer historical context.	My one complaint about the course was the appropriateness of the homework. The workload was relatively light, but the problems themselves could have been more interesting overall. A lot of the homework time was spent either doing tedious computations (multiplying numbers in floating point comes to mind), or delving into an annoying level of detail, such as describing what effect a small design change would have on dozens of instructions which were not all listed in the same place. He seemed to save the best questions for the two exams, both of which were fun as well as fair.	14	2	2427	4251
23628	December 25, 2009	I'm no compsci genius, but an A in this class wouldn't have been much more trouble from the A- I got. \nHe's a really good teacher, and even though waking up to get to a 9 am lecture was hard... I learned something every time I went (and didn't fall asleep). He'll walk you through pretty much everything and is really nice if you have questions- he was probably one of the friendliest professors I've ever had. \nMatlab itself isn't very hard, and there are TONS of resources on the internet to help you if you have trouble...\nIn all I would definitely recommend this professor and this class. As long as you're resourceful and willing to put in a little bit of effort, this class will be a breeze.	~6 psets, first and last are really easy\n1 midterm\n1 final\nthe homeworks are tough, but you have 2 weeks to do them\nthe tests are definitely doable, especially if you've gone to class and understand the logic behind writing code... \ngenerally the tests are much simpler than homework problems... they're just ridiculously long.	7	5	3409	4957
23669	December 28, 2009	I took Data Structures & Algorithms during the Fall 2009 semester, which was taught by Peter Allen.\nThe Course:\n   On the whole, I think Data Structures & Algorithms is a great course that gives CS students a solid grounding in how to think about solving computational problems in ways that are efficient with respect to time complexity and memory usage.  While I learned a lot from this class, I think it would have been possible to make it slightly more advanced than it was.  There was a fair amount of overlap with the data structures component of COMS 1007 and, in my opinion, not enough time was spent on learning more complicated algorithms and data structures.  Nevertheless, at this point, I feel that I have a solid understanding of all basic and intermediate DSA, which is of course extremely critical to success in CS.  My only other complaints about this class are that the homework assignments were a bit too easy (or at least were graded as such) and that the programming assignments all required GUIs, which ended up requiring more time and effort to implement than the algorithms themselves.\nThe Professor:\n   Professor Allen is an excellent lecturer who does a great job of making sure that the concepts that he's presenting are clear and that the students have thorough exposure to how a particular algorithm works.  I read an earlier review that said that Professor Allen can be an asshole who berates students for asking questions/giving answers.  While I must say that there were a couple exchanges that Professor Allen handled in a bit of a confrontational way, I think this was unintentional, and I think he really does care about his students and their success.  He is also a very funny guy, so I think sometimes his humor is such that his jokes could be construed as reproaches.  He is very helpful both in office hours and over email.  Additionally, his handouts are so fantastic that I anticipate using them as reference materials for years to come.\nThe TAs:\n   While generally I don't think a TA's contribution to a class merits review (positive or negative), I believe that Dan Federman warrants an exception (positive).  First of all, as a recitation instructor, Dan was very good at both reviewing things that Professor Allen had gone over during lecture as well as delving deeper into certain topics that were either not discussed at all in lecture or were merely glossed over.  In addition, I found Dan's recitations to be extremely helpful when it came to clarifying the details of our various assignments.  DSA required every assignment to be implemented with a GUI, which could have proven to be exceedingly burdensome were it not for Dan's ability to explain the finer points of Java AWT/Swing.  Dan's recitations were effective not only as a consequence of his intelligence and knowledge of the subject, but also because of his ability to present material in a very dynamic and engaging way.  Secondly, from an administrative standpoint, Dan was incredibly responsive when it came to fielding questions about the logistics or the substance of the course.  Finally, Dan made a point of putting the class into a "real-world" context by discussing the kinds of applications the various data structures might have or by going over what sorts of DSA-related questions might come up in interviews.  This information is invaluable and was extremely helpful.  I am taking CS classes at Columbia as a postbac, and so I have had plenty of experiences with TAs as points of comparison.  Having said that, I can honestly say that Dan is as effective a TA as any I have had in my academic career.	The workload was very manageable.  6 assignments which were fairly easy but still took a little while to do (40% of your overall grade), a medium-difficulty midterm (25%), and a medium/easy final (35%).	14	5	37	1622
23731	January 01, 2010	Kender is one of the best (and most intimidating) professors I've had here. Lectures were very well-structured and easy to follow without being simplistic, and although the material was occasionally a bit dry (idiom memorization is not exactly thrilling), Kender's understated and offbeat sense of humor kept things interesting. He puts the material into perspective--the class is taught only in Java, but he explained the language's current (and rapidly shrinking) place in the field and how it differed from other languages (often in the form of deadpan disparagements). While he spent a good portion of the first few weeks of class waiting for students to answer questions, eventually the class began to respond and lectures became more smooth and interactive. Despite a scant four-month programming background, I felt comfortable with the material largely due to the clarity and thoroughness of the lectures.\nWhile the first assignment was difficult, Kender polled the class on our experience and modified the next assignment based on the responses (similar polls happened after all assignments and the midterm), which I really appreciated. He took pains to keep the class fair despite challenging material.	Five assignments of varying difficulty and length (all took me 15+ hours), graded quite fairly. Impossibly long midterm and final exam, both of which were curved generously. Occasional reading is really helpful but also explained in lectures.	5	2	42	2906
23733	January 01, 2010	I'm definitely not the only student with a love-hate relationship with this class. On the one hand, much of the material was fascinating in and of itself (NP-completeness, probability tips and tricks, graph theory) and tied in well with 1007 material; on the other hand, I couldn't draw any connection between units and if I didn't understand one intuitively (which did happen) I never really got it (which happened more often).\nGross is great and I enjoyed his lectures, though they were at times dry. He really knows his stuff, and loves tangents about the material we're learning (almost all of which helped us understand said material).\nI'm keeping the text and lecture notes, all of which I'm sure I'll dig out in a few years with intense regrets about not paying more attention during class.	Six problem sets, none of which were impossible. Two midterms (averages in the 50s and 60s) and a final which focuses largely on the last two chapters. Doable.	5	0	40	397
23739	January 02, 2010	Prof Pasik is basically an entertainer rather than a good teacher . His gestures and mannerisms of teaching create humour but at the same time it dilutes the seriousness of the subject . The paper pattern is in no way connected to the teaching in the class. He leaves class about half an hour early in each lecture ; the time duration I thought he could have utilised better by giving more insight about lisp which was alien language to most of the students if not all. Once he even conducted a survey which was his daughters' high school assignment - again a total waste of time . Assignments are not discussed in depth . Avoids answering doubts with cheeky replies . Overall not a good source of knowledge.	Artificial Intelligence theory is ok , but coding the assignments in lisp gives a tough time	21	3	2508	26
23740	January 02, 2010	Prof Stein is a good prof w.r.t.knowledge but his academic policy is not foolproof or rather I can say has a lot of loopholes in it . On one hand he does not prefer people referring to the sources on the internet whereas on the other hand his TAs give full credit to those who discuss the sums . So copying verbatim under the name of discussion is prevalent but if someone wants to access wikipedia or any other internet source then it is not allowed . Also the policy of picking up individuals for violating the academic policy seems to be random as many copy cats do escape . Also both the professors of algorithms do not show the same honesty while following this highly controversial and confusing academic honesty policy	heavy with 7 assignments , midterm , final	22	3	1342	4079
23763	January 03, 2010	Simha is the worse professor I've had at Columbia. He gaves way too much work; the work from his class was more than the work from all my other courses combined. He doesn't seem to understand what a reasonable amount of work is. \nHis lectures are extremely boring and hard to follow. The assignments and tests are poorly written and are ambiguous making the already difficult work even harder. \nAs a person he's kind of a nice guy. However as a professor he seems to think that students have no other commitments beyond his class.\nOverall, avoid this professor at all costs.	extremely heavy	13	6	3429	4251
23765	January 03, 2010	Operating systems is a mad hard course. The assignment take forever. If you don't need to take OS you should avoid it altogether. Its a very painful course, having left me sitting in that smelly CS lounge staring in front of ugly terminals displaying kernel bug and panic messages on warm spring weekends while everyone else plays with frisbees or what ever the youth plays with these days. However the skills learned from this class could come in handy; it helped me net a sweet job so the pain was worth it for me.\nThe theory behind the class isn't too bad but the assignments involve changing the actual linux kernel to do new things. The kernel is very confusing and has many program practices which would normally be considered bad, such as extensive use of macros, but is justified for efficiency. There are a ton of underscores everywhere which annoys me (I prefer the Java capping style but oh well). Also since its the kernel debugging is a lot harder. Make sure you thoroughly understand C before this course.	6 super heavy assignments (1 dropped), tough midterm and final	5	6	4214	2384
23832	January 10, 2010	Prof. Rubenstein is really nice person. He tries to make everything clear to you and put lot of emphasis on concepts. He prefers to write everything on board rather than using slides. His way of teaching may or may not be preferred by students. Its depend on students. Like many students including me were comfortable with board. Prof. Dan tries hard to make you fundamental clear and theoretically sound. If you attend his lecture regularly, understanding concepts of CN will not be problem for you.\nThe only thing that was that not much time was spent on practical and programming. You yourself has to learn socket programming. If you are doing it first time then it may take some time.\nOverall a very good class. You will really learn a lot especially if you are new or little knowledge about Networks.	Workload is average. 4 Programming assignment and 4 written + one midterm and one final. Midterm and finals together make 70% of grade. So do them properly!	11	0	2427	4902
23880	January 12, 2010	Prof. Servedio's very good, gifted even, at explaining section a.b.c through to x.y.z of the textbook. His lectures, notes, and problem sets are high quality, better than those found elsewhere on course websites at CMU or UT Austin. So you will learn something or even a lot but is the right thing and is it worth taking for credit? No.\nDO NOT think that taking his learning theory course is of help in machine learning or data mining courses. I did well on the latter without needing or being able to use ANY of what I learnt here.\nHis style is lemma, proof, lemma, proof and a large fraction of the time is spent on proof minutae at the cost of developing re-usable big picture ideas or connections to topics in machine learning. This fatal flaw in his presentation also results in a poor breadth of topics covered.\nOnce I asked Prof. Jebara a question and he replied "That comes from the PAC model" or such. Imagine your frustration at spending a 20 hr/week semester learning the PAC model in this course but not being able to relate it or apply your knowledge. Do not think that you can get help at that point because the standard response is "take Prof. Servedio's course".\nIt's my belief that he's on a personal crusade against grade inflation and tries to actively deflate your grade:\n1) The solutions to the assignments are deliberately written poorly. You'll soon give up on trying to learn where you went wrong and may miss key "tricks" or key conceptual points in solving problems in general. This is quite devious because a lot of important course material is left to the assignments to develop and it's hard to improve your problem solving ability on future assignments. The only reason I can think of why anyone would do this is to prevent copying/selling of materials. The course staff should consider having a 30 minute recitation to go over the solutions if they are paranoid (or you should ask during office hours).\n2) There is no feedback on average/median/max/min and marks distribution for any assignment. Make SURE you specifically ask for this to judge your progress and calibrate your effort. It's easy to get blindsided and find out that there are 10 students who have scored near perfect on every assignment or 70% of the class has the same average.\n3) He takes the view proofs are either completely right or wrong, the latter gets you a 0 with unpredictable partial credit. Nothing infuriates you like a 0 on something you spent 6 hours crafting because you missed a minor detail. It feels like a penalty on attempting to solve the problem. Expect this to happen a lot and do not underestimate the effect on your motivation.\n4) The grading system is ill-conditioned (e.g. 84-86 = A, 79.5-83.99 = A-,..) therefore I feel that your grade precariously hangs on his impression of you.\nBased on the above I would have serious doubts about taking another one of Prof. Servedio's courses for credit. Definitely do not take his learning theory course if you're not a Phd student in theory. If you're aiming to become one I suggest you take a computational complexity course or algorithms/optimization/math courses as this course will not help you in the future.	Based on self audit, varies from 18 to 22 hrs a week spent on 5 Problem sets = 70% of grade. 40+ hrs on a 10 page Final Project = 30% of grade is a survey of literature related to a topic (given on website and can get help from him regarding sources). Final project is tough because a lot of startup time is required to translate the notation and learn higher math that is frequently assumed. Topic selection is very crucial for success.	9	23	1724	2287
23916	January 16, 2010	Biometrics boils down to 1) [Image Processing] feature extraction that gathers information (face shape) from raw data such as images (male/female jpgs) and 2) [Machine Learning] An algorithm that takes info from 1) and classifies the raw data (im1.jpg = male etc.) \nI'm not going to recommend this course for the following reasons:\n1) The meat of the theory can be described in the rest of the review text to a cs junior. I do not believe a 3 credit course with all those lecture hours should be this shallow.\n2) This course doesn't teach you any engineering skills. There is no critique on programming style and you're expected to learn MATLAB (3 hrs) on your own. The code that you write, including the final project, are toy programs averaging 80 lines of code. The algorithm itself is only 10-20 lines of API calls, the rest is I/O.\n3) No theory behind Image processing is covered, basic API calls are provided in the skeleton code for the assignment. PCA and Fisher analysis is discussed but this is 3 lectures at most.\n4) DO NOT take this course for Machine Learning. Bayes' theorem (which bag did the red ball come from?) and a baby algorithm (intimidatingly called "K-nearest-neighbors) are all the tools you learn. SVMs are discussed for culture.	6 programming assignments + 1 project. Project is very involved and great opportunity to do good work.	12	4	1777	5150
24017	January 31, 2010	Glad to see Prof. Kender has a silver nugget to show for his excellent classes. Although he is very intimidating at first sight (one of my friends who audited the course for one class actually ran away in the first 15 minutes), Prof. Kender is just a fluffy teddy bear that just wants to be hugged. But since he is too intimidating for any students to just walk up to him and hug, he penalizes us by giving us incredibly challenging (but fun) assignments.\nHis lectures, most of the time, grabs your attention and doesn't let go. The only boring parts would be the ones where he tells us about the necessary evils of memorizing idioms. Even those, however, coupled with Prof. Kender's otherwordly sense of humor and enthusiasm, are possible to get through completely awake and conscious.\nThe assignments are quite difficult, yes, and many people dropped the course halfway through because of a certain assignment. (It personally took two all-nighters in Butler.) But if you enjoy computer science at all, the challenges he throws at you and the sense of accomplishment that you get when you finish will be enough to keep you going throughout the entire semester.\nFYI, don't worry about the numerical grade that you get. Prof. Kender grades hard on all assignments and tests, and the numerical grades may seem low. But the letter grade won't be; for example, the B+ on the midterm was in the high 50s.\nIf you have a chance to take this man's course, do not let it pass on by. You'll regret it.	5 Assignments, anywhere from 3 to 15 hours of work each.\n1 Midterm, difficult, but doable.\n1 Final, ditto.	9	5	42	2906
24078	March 07, 2010	Professor Rubenstein was great. I think it's unfortunate that he received such bad reviews in the past, but it's clear that he's taken the feedback and changed his style of teaching - he frequently stopped and checked in with the class to see if everything was comprehensible (and it almost always was). He also did a fantastic job of scheduling the course, and he made sure there were days that existed only for review before tests.\nHe also is extremely helpful during office hours, although you probably won't need to go. The course is a strange combination of both fascinating and quite simple, conceptually. Most people will be learning a completely new facet of computing, but Prof Rubenstein made it both easy to understand and interesting. He takes a very bottom-up approach; you'll start with binary math, then boolean logic and gates, then designing logic circuitry, then ALUs, registers and eventually basic processors. It's a really cool course.\nAlso, Dan is just the man.	Totally doable homeworks once every two weeks. Took around 2 hours each, but there is a strict no-extension policy. Very doable midterm (a few got 100's) and final.	10	1	2427	4251
24109	March 29, 2010	Professor Kender was one of the most amazing professors I've ever had.  His lectures were entertaining and he taught really well.  I've never enjoyed any other class as much as his.\nHe's an amazing person with a great sense of humor; I really enjoyed his quirky, nerdy jokes.  He made me care so much more about the class, and I went to every single one of his lectures.  He really knows his material and clearly explains everything.  He is more than happy to clarify any questions, and is very approachable, though he may seem intimidating at first.\nI was impressed by the level of attention he gives to his students.  With the assignments, he tries to give as much help as he can without giving away answers, and provides a lot of interesting and relevant supplements and anecdotes.  He is an extremely fair grader and though the class is difficult (generally, most the students are engineers), it is curved.\nI would definitely recommend taking this class just for the professor.  He encouraged the class to attend talks and such around campus and to take advantage of all opportunities provided by the university.  He is not only an amazing professor, but an amazing person and makes you feel he cares, even if you've never spoken directly with him.  He clearly has a passion for teaching, and I would seriously recommend holding off taking 1007 a semester to be able to take it with him.	Be prepared to spend a lot of time on the assignments (five in total).  The midterm and final were a bit difficult, but Prof Kender is a very fair person and there is a huge curve.	5	6	42	2906
24125	April 05, 2010	Prof Zussman is a very smart professor with a lot of background in Networking. His lectures are very well planned (granted the slides are from the publisher). The lectures are good if you are at all interesting in networking and general informative.\nThe lectures are planned so well that any student asking a more advanced question or trying to correct the professor is faced with a sharp reply from the professor.\nThe book does a good job of giving a implementation and high level view of networking, but that is not enough for this course. Gil likes to bring his research of statistics into the classroom and sometimes supplements the book for his slides he created while at MIT. They are full of statistics and other advanced topics which are asked on most of the homeworks.\nThe statistics which are briefly discussed in class are a large portion of the homework and exams.\nThe programming assignments were time consuming, but pretty simple if you have used threads and sockets before. You can use C or JAVA.	Assignments: 6-7 written homework assignments\n2 mid-sized programming assignments\nMid Term : 75 min. during class hours, calculator and one sided letter paper with notes allowed.\nFinal: Dec. 21, 9AM, 180 minutes, calculator and one sided letter paper with notes allowed, comprehensive.\nMethod of Evaluation\nAssignments 30%\nMidterm 25%\nFinal 45%	15	9	4210	4902
78694	May 15, 2015	It's very rare to find a professor that genuinely cares about their students, but Dan Rubenstein is one of them. He might not be the best lecturer I've ever had (more specifics on that later), but he is undoubtedly one of the most helpful and caring professors I've had at Columbia.\nLECTURES:\nLike I said, objectively speaking, Rubenstein isn't the best lecturer I've had, but by no means is he a "bad" lecturer. Really, his biggest problem is that he needs to ditch the slides a bit. Instead of going through examples on a powerpoint, he'd be better off going through them on the board. It can get messy that way (with all the circuits and whatnot), but to combat that he could just post the examples on courseworks for reference. The occasional times he did problems on the board, I found them to make so much more sense than following along with the slides, and that's because, at the end of the day, he's actually good at explaining concepts in the course. With that said, see the Office Hours section for why you should go to them because they are/were super helpful. \nTo elaborate more on him as a lecturer, he does NOT read straight from the slides. He glances at them before speaking to remind himself what's on the slide, but he doesn't read straight from them. In fact, I think he blatantly avoids doing so because he knows that wouldn't be very helpful. \nAlso, his analogies and stories are not only hilarious, but make the classes/material memorable. Anyone who doesn't enjoy these bits of class seriously has no sense of humor. \nHe does explain concepts too many times- I know it's because people don't get them the first or even second time around, but hearing the same concept did get tedious sometimes.\nAlso, people complain so much about the occasional mistakes he makes on a slide, but really, I think we just need to relax a bit and recognize that he is a human being. We make mistakes. \nHOMEWORKS:\nDifficult and long, but super important for doing well in the class- not because they're worth so much of your grade, but because they're really important for gaining a good grasp of the material. Rubenstein is very purposeful in the questions he chooses, so really understanding each one is important.\nI will say though- the MIPS assignment was somewhat unreasonably hard, though graded extremely generously. I liked learning MIPS in the beginning, but I think holding off this hardcore assignment more towards to the last third of the semester would have served us better. I feel like most people didn't get as much as they could've from the assignment because it was just too soon to be given that hard of an assignment.\nMIDTERM:\nSuper hard. It was a huge time crunch- I didn't even get to read the last question (of 4) or truly attempt the third question, which means I essentially left half the test blank. And I wasn't a rare occurrence. With that said, the average ended up being a 42, so it all worked out in the end, I suppose~ \nHis tests are super hard, but they do drive us to really have to know the material. He warned us at the beginning that he tests this way to really get whether or not we understand the material. If you understand it and can apply it, then you'll be fine. \nFINAL:\nEasier than the midterm- the average was a 62 and it was very reasonable. It wasn't technically cumulative (but the material builds on itself, so it sort of is at the same time). \nOFFICE HOURS: \nHis office hours are great, and if you can make them, you should make every effort to do so. Every time I went to office hours, it was a valuable experience and he's so willing to go through anything you don't understand at whatever pace you need. His office hours get a bit busy around the time homeworks are due (still totally useful though because people ask good questions, which I always learned from, too), but going to his office hours when there's maybe one other person or no one else is great because you'll get his full attention. This is good advice for pretty much all professors, but unlike a lot of people/professors, he won't make you feel dumb if you don't know something - even if it's a simple concept. Don't be afraid to go- he's seriously such a nice guy. He might come off as intimidating at first, but he really is a nice person and at the end of the day, just cares that his students learn the material. \nThe only problem was that he had his office hours in the same class sequence at the same time (i.e. Tuesday/Thursday from 11am-12pm), which made it really hard/impossible to make office hours if you have a class during a portion of that time. I had a 10:10 and an 11:40, but if the 10:10 hadn't ended early lots of times or I didn't accidentally sleep through it occasionally, I would have never been able to make his office hours, so if you're in his class, really try to get him to not have office hours in the same class sequence.\nTIPS:\n1. Goes without saying, go to his office hours. Not only useful, but he apparently takes office hour appearance into consideration when grading at the end.\n2. He's a chill professor- get to know him. Also, he does research on networks and that's pretty cool. \n3. Skim the textbooks if you want, but don't read them religiously because Rubenstein does a good enough job that you don't need to read the textbook. If you want to read them though, they're actually not too bad of a read.  \n4. Do his practice midterm/final problems!\n5. Go to class. Seriously, you pay/get financial aid to go here and Rubenstein is both good and entertaining. Why skip if you don't have to?\nTHE FINAL WORD:\nStudents tend to have a preference for Martha Kim's version of the class, but I think a large portion of that is because her class is easier (And that is the attributed reason at least half the time)- she doesn't go into the material as in-depth (at least according to the lectures, which I've looked through), so the tests and homeworks are much easier (I've gone through them for practice). So with that said, if you're looking for the easier class, then sure, take Fundamentals in the fall with Martha Kim (she is also very nice and a good lecturer as well), but if you're looking for the class that will make you/cause you to learn more and know the material a lot better, then Rubenstein's your bet. He'll challenge you and you'll hate him temporarily when you're coding his MIPS assignment at 3 in the morning, but at the end, you'll have gained so much knowledge that you'll realize it was worth the struggle.\nWith that said, I had a great class experience with him, especially because I appreciate professors whose main goal is to challenge and have us learn and is willing to go the extra mile to make that happen.	Not necessarily heavy, just difficult. We had 8 assignments, each of which varied in length of completion time. It kind of depends on what you're strength/major(s) are. For me, a CS major, the material in the beginning that was very circuitry heavy was the hardest since I just didn't think that way at the time, so depending on which major/background you're coming from is what will come easiest/hardest to you and which assignments you'll spend the most time on.	31	19	2427	27
24126	April 05, 2010	These one credit classes are great for learning new languages, but the professors are not the best.\nRamana refers to all the basic websites for learning, such as w3schools and another one he found by googleing.\nThe class has a participation grade after the day when 1 out of the 10 students showed up.\nThe final project was to do jezzball game, which was poorly graded imho.\nHis lectures are pretty lengthy, but thankfully youre in a computer lab, so you can just surf the web or do the homeworks during class.\nHe is an interesting guy when you talk to him, but not very willing to give back points or assignments.	4 easy homeworks\n1 midterm\n1 final project\n+class participation	2	0	4207	5638
24180	April 15, 2010	Pasik is without a doubt one of the worst professors I have had at Columbia. Though his lectures are entertaining, they gloss over the course material and provide little to no insight into the concepts, test material, or homework assignments. He always ends class early, for such reasons as "I'm going salsa dancing!" When asked a question in class, he often doesn't know the answer and responds with some bs, or says he'll answer it next week with an example. Subsumption, for example, is not hard and something that he should be able to define and provide an example for on the spot, but he can't. His lectures have clearly not been updated in several years, and it shows. It seems like there are typos from the 90's that would take 2 seconds to fix, but doesn't bother to do anything to fix them.\nAll your homework is in LISP and Pasik barely covers LISP in class. Your knowledge of this language comes completely from independent study, and the homeworks are very time consuming. You would think that he could at least provide some sample LISP programs or god forbid tutorials that he quickly googled, but no, he leaves that up to you. As for the actual homeworks themselves, that are so vague and non-descriptive that you'll spend half the time trying to figure out what you have to do. Days or even hours before the due dates, TA's will post requirements on courseworks of things that you must include in the homework. He does not provide solutions to the homework, so you're screwed in that sense. He reuses the homeworks every single year, without changing them at all. This turns out to be bad because he could make the homework prompt more descriptive than 3 sentences. Be prepared to spend 40+ hours for each of the 3 homework assignments, and start them way early (you do have plenty of time). He probably has never read his own culpa reviews, and doesn't realize that he needs to REALLY update his lectures, homeworks, and tests.\nHis tests are ridiculous. No amount of studying can prepare you for them. It's not because you don't know the material, it's because you have to predict the answer that he's looking to hear. Even if you're answer is correct, as the TA agreed with me on several occasions, he could not award points because it was not identical to Pasik's horrible solutions. If you know the material and feel prepared, you can still do poorly because you did not mention something in your answer that was not asked for in the question. You will lose points for not writing a novel for each answer.\nPasik does not hold office hours and does not care about any of his students. Don't bother sending him emails or trying to get help from him.	3 programming assignments, very vague and very time-consuming.\n2 midterms, 1 final.	10	8	2508	26
24226	May 01, 2010	I was terrified of Maria after reading the two reviews about her on CULPA. In my experience, she is nothing like that. She is not only an amazing mathematician, but a charismatic, compassionate, and funny person. I was scared to take the class because I was the youngest student in the class, and she was very kind and helped me work through issues that were probably rudimentary. She probably realized that I wanted to work to do well in the course, and that is why she supported me. \nIf you get a chance to take a class with her, I would highly recommend that you do so. She is currently one of the most illustrious individuals in her field, and can elucidate the beauty hidden within graph theory.	Approximately one homework assignment per week. These start off easy, but get progressively difficult--not impossible though. 4-5 problems, all proofs (I think we had maybe 2 problems all semester that were just applying an algorithm, but the rest were all proofs). The grade is 50% homework assignments and 50% final take-home exam (cumulative, 7 problems).	5	2	4996	4901
24233	May 02, 2010	Where to begin...\n1) This class was useless. Biliris is a mediocre lecturer and an incompetent teacher (or he just wasn't trying). His lectures were a complete waste of time. He would crap on and on about some simple concept in the most unintelligible way for an hour at a clip. I can honestly say that I did not learn anything substantial from this class. By the sixth week half of the students did not show up or left at the break. By the fourteenth week it was more like 80%. The material was presented with no context and no depth. I could have taught this class better than he did, and I do not have near the amount of database and teaching experience as he does.\n2) I ended up doing all of the group work by myself because my partner was so lost. I cannot blame him considering the lectures were essentially black holes. If I had not had database experience prior to this course I would have probably been as lost as my partner, who had none.\n3) A bit of the material was out of date. This happens in CS classes often, but it was particularly bad in this class. I think the textbook we were using was from 2003.\n4) We were forced to use Oracle for our projects, which was a nightmare. Oracle is one of the most bloated and hard to learn database systems around. Why we would use Oracle and not MySQL (very popular, modern, and easy to use) is beyond me.\n5) Biliris does not understand English well enough to teach a course. He can hold a conversation, but he cannot explain complex ideas. He did not understand questions asked by students and he often hid this by making fun of them.\n6) The grading in this class was ridiculous. Often points were taken off if we did not answer a question exactly how the TAs thought we should have, despite those requirements not being specified in the assignment description. Each homework and test problem was graded by a different TA, which meant you had to contact many TAs if you had questions about more than one problem. This was incredibly inconvenient.\n7) My assigned TA had worse English skill than Biliris, which made him useless to me.	There were two projects. The first is pretty substantial and took some time, but was by no means difficult. The second could have been done in a few hours if Biliris actually ever mentioned PL/SQL during the lectures. \nThere were four homework assignments. Some were a bit challenging, but all were mostly irrelevant when it comes to actually learning something useful about databases.\nA midterm and a final. I have yet to take the final. The midterm was not hard, but the questions were as irrelevant as the homework problems.	18	9	1442	664
24258	May 04, 2010	Don't know why the CS department did this, but Abishek was a grad student when he taught this class. First time teaching.\nNot the greatest teacher in my opinion; but for the first time teaching, not the worst. He stated repeatedly that he was limited by the lecture notes, that he was told by the Professor Gross to go straight from his lecture notes. Which he did. He did a decent number of examples, but he didn't do them very well, i.e. skipped a lot of steps. The concepts didn't really stick. If you wanted something clarified, however, he was very good at answering questions.\nThe things he covered in class often carried over to the test, but never to the homework. What the lectures were doing and what the book/homework emphasized were completely different. They didn't have much overlap.\nHe had abnormal ways of going about tests. He experimented with different ways to do review sessions over the web, i.e. TokBox, Google Wave. It was effective enough, I suppose. He answered the questions that people came up with, but it wasn't as easy to understand; it would've been easier if he did it on a chalkboard. Additionally, the way he grades: if you improve from the first test to the second test by at least 15 points, he'll take the higher of the two. But if you had higher on the first than the second, he won't change the scores. If he is your teacher, I would recommend going to class. Looking at the lecture notes tends not to be enough: he'll go into tangents, which he'll end up testing.\nHaven't taken the final, but it seems he plans to curve to either a B+ or an A-.\nHe has a tendency to go a bit too much into his personal life. He's also always telling you good courses to take.	6 long problem sets, due about once every three weeks.\n2 midterms, 1st one easier than the second.\n1 final.\nCurved to either a B+ or an A-.	7	2	10192	397
24260	May 04, 2010	I liked Doctor Pasik's class. It seemed I have a better programming talent than my peers, so take this review with a grain of salt.\nYou must go to lecture in order to do well; there is no course textbook. He's taught this course many times, so he knows what he's doing. There is a mad steep learning curve, starting with recursion. Once you get this, however, his code becomes a lot easier to understand. For each data structure, there is an abstract understanding of it, and there is a programming understanding. The conceptual understanding is more important; the programming is only important in the assignments (and he posts all his code on Courseworks anyway). His conceptual explanations makes use of diagrams, so recommend taking notes on pencil and paper. His explanation of each data structure is very systematic in this way.\nDoctor Pasik is very approachable, but only after class (he has no office hours). He always stays to answer all questions the students have; you can often get hints on the assignments this way. Additionally, he has lots of insight into the rest of computer science, and potentially a networking contact, depending on your desired industry.\nThe assignments can be difficult; however, you never have to work from the ground up (except the last one). You take his code from Courseworks, and using those basic methods, you build the rest of the methods to complete the assignment. Again, these additional methods require a conceptual understanding of what you are doing.\nHis grading style is interesting. There are 60 points worth of assignments (6 assignments, 10 points each), and 50 points worth of tests. To calculate the curve, he will take the 5 highest scores from everyone's assignments and the 50 points from the tests and calculate the average from that (curved to a B-). Then he'll add on the raw points from the 6th assignment to the score, boosting everyone's grades.	6 assignments, due about once every three weeks. Once you actually plan out what you're going to do, they don't take that long. 50% + up to 10 extra points\n2 midterms, 15% each.\n1 in-class final, 20% (on last day of class).	6	2	2508	4
24271	May 05, 2010	One of the worst CS professors!\nThe good:\n1. He's fairly nice and approachable, but I think most professors are friendly, so he isn't out of the ordinary.\n2. He gives homework extensions to anyone who asks for them and for almost any reason. If you need more time, you have it (but this is also a con, see below).\n3. Pretty easy\n.... that's about it.\nThe bad:\n1. Extensions that *everyone* abuses. I'm ok with giving homework extensions if people are sick, but I had friends who purposely abused the system and took advantage of him, which is unfair to people like me who did homework on time. It's quite ridiculous when people turn in homework a month late with no penalty.\n2. Typos. He can't even add. The points on the homework never add up and his slides are full of errors.\n3. Boring! He teaches from slides and doesn't engage students well. I fall asleep (it was a 9 am class though)\n4. Useless homework. Most assignments are pointless and not useful. You won't get much out of the course, except learning how to debug webthumb. What's that you say? Exactly - pointless! Those who took the class know what I'm talking about. \n5. Lack of communication. He doesn't communicate with students well, and I heard that he never really speaks to the TAs, who grade the homework, so they are a bit confused and grading is sometimes inconsistent.\n6. Perl - pointless\n7. Almost every assignment is a CGI program -- never useful outside of this class\nOverall, he's just a mess. It doesn't seem like he puts much time into teaching. You'll probably do fairly well in the course (at least B+), but you won't get anything out of it. Avoid this prof and take it with Jae, who is actually useful and on top of his shit. I heard Jae is harder, but it's worth it for a class like this!	Easy for 4 credits... 8 relatively easy labs (about 1 every other week). 2 longer homework assignments with a partner (the only somewhat interesting assignments). Final.  (no midterm)	9	2	1671	4758
24273	May 06, 2010	I tried very, very hard to like this class.\nHere's my dilemma: when Stolfo teaches this course properly, it's a blast. He's an engaging, funny lecturer, the material is interesting, and the homework is a genuine pleasure to code. \nMost of the time, though, he doesn't teach it properly. Stolfo seems to have gotten it into his head that AI ought to be conducted like a Socratic seminar; as a consequence, you will spend most of your time in this class in awkward silence people do their best to avoid making eye contact. To make matters worse, he has a particularly nasty tendency towards extreme vagueness, so his questions tend to be things like "so what is it about this problem?" or even "what was the thing that you learned during the first half of the course?". That may fly CC, but in a computer science class (and particularly one requiring an above-average level of formal rigor) it's hard to imagine a less effective teaching style.\nThe real problem here is that because nobody answers his questions, the lectures creep ahead very slowly, and class falls further and further behind schedule while trying to get through basic material. Then, he realizes how far behind we've fallen and skips ahead over all the tricky stuff. As a result, we ended up spending a week and a half on BFS and a day on alpha-beta pruning, and two weeks on symbolic logic followed by fifteen minutes about Bayesian inference.\nThat same vagueness also seems to manifest itself on just about every exam question, which might explain why the average on both midterm and final was below a 60% (and mind you, this is a class made up of half MS and PhD students).\nWhat's really maddening is that on the handful of days he says "Fuck it, I'm just going to lecture today" the class is great. If he could be somehow persuaded to do this all the time I would have no hesitation at all in recommending this class; as things are right now, my feelings are mixed.\nOther random thoughts:\nThe TAs were some of the best I've ever had -- friendly, approachable, and (with the exception of one disastrous mistake that made the midterm quite literally 25 times harder) very knowledgeable.\nI came into this class with the rather unique advantage of already knowing Lisp. Regardless of what the syllabus may say, they will teach you no Lisp at all, but you will be expected to know it. If you, like 90% of the class, have never seen it before, you might be well-served by picking up a copy of SICP to read over winter break.\nMake a real effort for the gameplay tournament. Five or ten points is nothing to scoff at when everybody fails the midterm (and it's fun).\ntl;dr. The short answer is that I don't see any good reason not to take this class over Pasik's, and if Stolfo cleans up his act for next year it may even wind up being your favorite.	Extremely reasonable. Four projects, none of which should take more than six hours to code (and three of which ended up at less than 100 lines). Exams are impossible to prepare for.	4	1	4213	26
24283	May 07, 2010	This class was an incredible disappointment.  Stolfo managed to make interesting material difficult to learn through his insufferable lecture style and frustrating programming assignments.  He rants and pontificates, only occasionally delivering actual content.  He seems to teach this class to have a captive audience for his jokes, which alternate between offensive and inane.  Many are posted on his website, reflecting his general unprofessionalism.  I found Stolfo so loathsome that I couldn't bring myself to go to lecture for the last month.  When I tried to watch the lectures online (they were all posted because the class is offered to CVN students) I couldn't watch for more than 20 minutes.  He started one class sulking because the 15 people who still attended class were not being responsive enough to a series of vague/inane questions.  He tries to put on a dramatic and inspiring performance (like Gulati perhaps) but since he utterly lacks charisma the result is grating.  For example, he asked the class on numerous occasions, "do you remember when you first touched a stove and learned what hot means?  do you remember? do you?"  He would keep this up until someone pretended like he or she had a memory of this exact experience.  To most, this would seem like a rhetorical question but he wouldn't stop until he received confirmation that this very same scenario had happened to each of us.\nThe midterm and final were almost entirely composed of trick questions rather than straightforward questions about material that we had actually learned.  I think they were supposed to be easy but I didn't understand what they were asking.  Since I got around the mean grade on each, it seems like most of the class was similarly bewildered.\nStolfo's approach to teaching Lisp was to reminisce about the early days of computer science when it was just an elite group and make us fix buggy code.  While the programming assignments were ultimately the only worthwhile part of the class, I think they could have been less frustrating while still teaching the same important lessons.  After being exposed to Lisp for 50+ hours, I felt like I had learned how to conquer it and work around its structure rather than actually feeling comfortable.  While Stolfo's introduction to the language was certainly inadequate, Lisp is basically just a frustrating language.\nIf you can tolerate these jokes (http://www.cs.columbia.edu/~sal/notes/y13.html) or find them amusing then take the class with Stolfo.  Otherwise, avoid.	4 programming assignments (3 in Lisp which take forever if you're unfamiliar with the language - I completely disagree with the 6 hour estimate below, 1 in any language), in-class midterm & final composed of random questions that you cannot possibly prepare for	4	2	4213	26
24305	May 08, 2010	Material: \nDon't be mislead by the cross-listing as CSOR, this is a MATH class all the way, taught by a math person. You won't learn how to solve any real world problems using graph theory by taking this class. By "application" Prof. Chudnovsky means proving a theorem using another theorem instead of proving it only from first principles, she doesn't mean applications in real world problems. \nI even had an interview where having seen this course on my resume, I was asked a very reasonable (for someone who has taken a CSOR graph theory class) applied question which of course I couldn't answer properly as we totally skipped that in the class, and what was an otherwise decent interview got spoilt. Needless to say I wasn't picked for the next round and I have now actually knocked the course off of my resume. \nSo, unless you are a math major or theoretical computer science Ph.D. student or some equivalent thereof in another department, this course is just going to be a wasted effort in terms of time and money. Probably the CS version of the class is a better option if you are a CS student or have spare electives left in OR.\nGrading: \nWe were told in class that "75 is a good score in this class" and also that "you shouldn't worry too much about your grades, I know it's an advanced course, so I won't be doing averages and curves, [although it's not officially on the grading rubric] participation will count". \nAssuming that 75 was indeed an A-, if you end up a point or 2 short at the end of the day, don't expect to be bumped up even if you have a 100% attendance (there were only 16 students and Prof. Chudnovsky handed back homeworks in class, so she definitely knew who is who and how regularly they came to class). In summary, appearances are deceptive, Prof. Chudnovsky has a very sugary sweet personality, but when time to assign grades comes along she can be cold hearted and mean.	1 week take home exam due on the last lecture counting 50% of the grade, and is graded by the professor. \nHomeworks (we ultimately managed to have 9 of them) count for the other 50%, and are graded by the TA. The homeworks are generally on a assigned on Thursday, due to the following Tuesday cycle, but adjustments were made when we didn't get through enough material in lectures. \nThey are all proofs, so it's hard work. If there were 4 or fewer problems (generally the case) 4 days was enough time to do them provided you don't have more that 2 other classes. There were a couple of homeworks with 5 or more problems and these are ones you are likely to bomb a problem and a half because there just isn't enough time, especially when you have exams/projects due in other classes. With the no mercy if you end up on the borderline final grading policy, this can end up making the difference.	2	0	4996	NA
24353	May 10, 2010	Martha is one of the nicest professors I have met here. She takes the time to try to help out students, wants to know their names, and tries really hard to be available. That being said, she is a new professor to Columbia, and it shows. Homework lengths varied greatly, and she often seemed surprised that things took as long as they did. She corrects herself in class so many times that it is hard to know what the conclusion is when she is finished. The midterm exam, for example, arrived nearly 20 minutes late since there was an issue with the printer. Why not print it out the day before? The average on the midterm was a 50%, and she seemed happy with that (I think it was higher than last year's). Hopefully with some more experience some of these rough edges will go away, as she has a lot of potential. A friend who took this class both with her and Rubinstein said that it is definitely better to take it with her.	6 HWs (40%), of varying time requirements and difficulty with the lowest score dropped. One midterm (30%) and a final (30%) which is non-cumulative. Exams are open book, but that doesn't mean that they are easy.	6	4	4221	4251
24361	May 11, 2010	Scientific Computation I is an elaborate practical joke.\nYou will walk into this class the first day with a healthy respect for Joseph Traub and his towering reputation in the community. After all, you're taking Scientific Computation from the man who invented scientific computation as a serious topic of study.\nThen you will receive the first homework assignment. You will look at it. You will wonder if there's been some mistake. You will wonder if Prof. Traub accidentally sent his 12-year-old great-great-grandchild's homework to the TAs to copy instead of the real assignment. Why? Because the assignment instructs you to "choose five different scientific problems and their continuous mathematical models." Not understand, not describe, not explain, just "choose". It's not a mistake, the TAs will assure you, and they will remind you not to waste your time looking for the actual equations on which these models are based.\nRemember that time freshman year when your Calc II class talked about Taylor series? That seventy-five minute lecture was all of SciComp. You'll talk about Taylor series the very first day, but as the days turn into weeks and the weeks into months, you'll wonder when you get to move onto something else. You don't.\nAt last, the final exam will be offered. The TAs will admonish you, as they did before the midterm, that decorating your blue books with animal pictures and dirty limericks may sway them to grade your answers more leniently. You will turn the page over, and feel an odd sense of dÃƒÂ©jÃƒÂ  vu. The questions on the final look familiar. They are, in fact, the very same questions that you went over during your review session a week before -- identical, coefficient for coefficient, variable for variable, word for word. Only one thing is out of place: a question asking for a brief essay on the historical origins of weather prediction.\nAnd it is at that moment you'll realize you've been had. This is not a math class, you are not meant to learn anything, there is, in fact, nothing for you to learn -- you're just the punchline of a joke that Joseph Traub likes to tell from time to time.	At the last count there were some thirty-four homeworks and extra credits assigned this semester. Traub seems to have a slightly unusual understanding of the term "homework assignment", and has been known to assign as many as four such assignments in a single class period.\nDid I mention the extra credit? My final grade in this class was increased by 16% because of all the extra credit I did. Needless to say, you should do it as well.	13	3	1028	861
24368	May 12, 2010	Rubenstein definitely takes these reviews seriously, and has improved dramatically. Don't worry about his old, negative culpa reviews, because the he is nothing like that. He is one of the best professors I have had at Columbia in CS. After having taken both Fundamentals and Networks with him, I highly recommend him.\nHis lectures are spread between writing on the board and going over lecture slides that the textbook made. Both are pretty good, but when he writes on the board, he can go really fast. If you don't want to fall behind in class when he's writing on the board, don't copy everything down (though I did, and I often got lost). Listen though and ask questions. The textbook might serve as a good resource. I referred to it several times, but you could probably get away with just using Wikipedia. There's no assigned reading but he does cover nearly everything in the textbook (and more).\nHomeworks are reasonable. The first two programs are the hardest, but after that they just get easier (and even easier still). Do yourself a favor and do them in Java, trying to do the noble thing and programming in C just won't cut it. The first program will take 40+ hours in C, or 10 hours in Java. Your choice. You have plenty of time for the programs. The separate theory homeworks are assigned with only 1 week to do them (sometimes concurrently with the programs), so if you don't start early they can be tough.\nHis tests and theory problems work the same way. You learn the basic concepts in the class. Then you're asked questions that rearrange problems to something you've never seen before and are something that was covered in class. The only way you can do well is if you have a strong understanding of the material (obviously).\nHe is a fair/generous grader and a nice guy if you go to his office hours. Listen, ask questions in class, start the programs relatively early (and do them in Java!), know the concepts and you'll do fine. Usually the class has a low average too.\nDo take this course even if it's not required for your track. Unlike some CS classes, the material is actually interesting and relevant to so many things. No abstract theoretical stuff that you can't relate to anything. All in all, an excellent course and excellent professor.	4 programs (they get easier as the semester progresses)\n4 theory assignments (some easier than others)\n1 midterm (too long)\n1 final (reasonable, though tricky)	11	0	2427	4902
27232	May 03, 2012	Peter Allen is a really nice guy.  He's more normal than most comp-sci profs, probably because he went to Brown and was an Econ major before he found his calling in CS.\nHe's a little disorganized, and his PDF packets are kind of annoying, but at least they're all available on his site.\nSome of the assignments are needlessly a pain in the ass, but they do teach you the material in a more direct way than, say, for example: object-oriented programming with an awful PhD student.  (Only take OOP with Kender.)\nI would stress that his lectures are not the most helpful thing in the world, but he is supportive and has a sense of humor, which is always nice.\nI recommend this class, but prepare to slog through terrible problem sets, especially the last one.	Moderate to high.  The midterm wasn't too bad, though.	4	6	37	1622
24370	May 12, 2010	I can see why people like him, but the material is extremely difficult, beware!\nHe makes lectures interesting and funny, but he glosses over important concepts and you never feel like you understand anything until the difficult midterm and final come around. You'll have to study your ass off just to pass.\nThe programs are a lot fun. They take some thinking, but overall they're well-structured and very useful. The theory questions on homeworks are impossible.\nWhat's very unfair about this course though is that you can't recover from a single bad grade on anything (hw, midterm, or final). A single mess-up will glare at you on your final grade, not to mention that the curve is very small. The difference between letter grades is very slight, only a few points will be bump you up from a B+ to an A (notice there's no A-). But only a few points will drop you down from a B+ to a B-.\nUnfortunately he grades strictly by the numbers, and no amount of asking questions in class, going to office hours, or demonstrating grade improvement throughout the semester will factor into your final grade. He has no problem setting the average to a low grade.	5 homeworks (they get easier over time)\n1 midterm (impossible)\n1 final (difficult)	7	4	1812	2386
24371	May 12, 2010	Absolutely awful. His lectures are boring as shit and he doesn't actually realize that a 2.5 hour class can be taught in more than 8 powerpoint slides (literally). For some reason, he's obsessed with Barbados too and won't stop talking about it.\nBut now onto the real stuff:\nDon't bother going to class. Read his lectures that he posts online (takes about 30 min) and save yourself the other 2 hours. I can't stress enough how useless his lectures were. It's basically like taking a class online, you just have to show up for the midterm and final. The material is actually extremely useful and somewhat interesting.\nLuckily though, the material is easy and there's not much of it. There's a grand total of 10 short lectures (only 9 of them are tested on), compared to other classes that have about 25 a semester. The average won't be that high because you're with a bunch of IEOR majors and grad students that don't know how to program. The 4 homeworks can be tricky at times, but honestly not too bad.\nThe group projects are relatively easy and straightforward. You just have to demonstrate that your projects contain every concept that was taught in class, regardless of whether or not your Database schema will benefit with it (i.e. Aggregation is great in theory, but NOBODY puts it into practice in their database. it makes things painfully redundant and difficult. but since we learned it in class, you'll lose a substantial amount of points if you don't have aggregation in your database). Don't bother making your project look pretty or have much functionality. As long as you demonstrate the concepts that were in class, you'll get full credit. The median on project 2 was 49/50, if that says anything to you.\nYou have a total of 6 late days, 3 for the individual homeworks, in total, and 3 for the projects, in total. So clutch.\nMidterm and final are straightforward. If you know relational algebra, SQL, and the concepts, you'll do fine. And let me remind you, DON'T GO TO HIS LECTURES.	4 homeworks\n2 group projects\n1 midterm\n1 final\n(all reasonable)	12	11	1442	664
24378	May 13, 2010	This course started off with really basic things but moved along very quickly, covering a broad range of material at quite a deep level. Seemed that we were getting definitions in one class, and moving on to prove some famous/important theorem the next. \nWe got homework every 1.5 weeks or so on average, and the professor would get students to volunteer to share their answers with the class on the board, which was quite an interesting exercise.\nProf Chudnovsky is brilliant and really knows her stuff. This comes across in her lucid explanations, and her live critiques of students' proofs. (Though it was sometimes cringe inducing to see a poor soul's proof being shredded to bits in front of the whole class, I can understand that it was good training  for graph theorist wanabbes.) She's also very approachable and willing to explain really basic stuff if asked.\nIts not an easy course to get an A in, especially if you don't have some previous experience with mathematical proofs (speaking from experience here). But I'd recommend it if you're looking to learn something interesting and be intellectually inspired.	Pretty heavy. Assignments take a fair amount of time, which can either be really enjoyable or painful-depending on whether or not you like staring at a blank sheet of paper and thinking.	0	0	4996	NA
24389	May 13, 2010	Like everyone else said, go to class! There's no textbook and it's at 6:10 so it's not like you're skipping a morning class to sleep. Pasik is an excellent lecturer and if you go to class, the material is very clear. I had no programming experience before college, and I didn't do amazing in 1004 and I got a freakin A+ in this class! (HOLY CRAP!!!)\nHe LOVES recursion. Definitely try to learn it because it really opens your mind about programming. Also, learn a bit of LISP before hand because Pasik basically programs in LISP but in the Java language. It'll be a lot less overwhelming when you meet recursion for the first time.\nHis grading style is very interesting. He curves to a B- but there's a decent amount of extra credit to be learned. The TAs are super nice so if you have trouble with the assignments (AKA not enough experience with Java like me), they are really helpful.\nKeys to success:\nGO TO CLASS. Seriously, try not to miss any lectures.\nStart the assignments early. (I have stayed up to 4am debugging. It was terrible.)	6 Assignments, lowest grade "extra credit"\n2 exams, both fair\n1 final, cumulative\nOther reviewers have explained the curve.	6	2	2508	4
24393	May 14, 2010	Bert covered almost exactly what was in the textbook in his lectures--the most useful part of the lectures was that he read the textbook much more carefully than you did, so whenever he found something he found confusing, he expanded on it.  He also decided to cover some material that wasn't in the textbook (networking), so before deciding to skip all of his lectures and just teach yourself the material from the textbook which is generally pretty possible, look at the course web page to make sure that he isn't covering something that isn't in the textbook in lecture, because it will be a pain in the ass to try to search it on the internet.  On the other hand, his slideshows are pretty complete and he posts them on the course page.	5 programming projects, from 4-5-ish hours to 10 hours, depending upon how cleverly you use the design tools they teach you, and whether you are any good at programming.  There are also written problems, which if you read the textbook are borderline trivial.  The textbook (Object-Oriented Design & Patterns by Horstmann) is pretty readable, but not strictly necessary to read that closely if you attend lectures.  It is worth your time to go to office hours, and Bert's office hours tend to be better than the TA's.	4	0	4206	2906
25025	December 20, 2010	This class is great for someone that is planning to go into UI research. For everyone else, not so much. It should actually be called "The History of User Interface Analysis and Research." Feiner spent many of the lectures describing, in laborious detail, research projects and ideas from 15 to 30 years ago.\nAs the review before mine points out, the tests are sadistic. Unless you have a photographic memory, you are not going to do well. The midterm's questions were based on less than 1% of what was covered in the lectures, textbook, and articles he asked us to read. For example, 20% of the test was based on one random paragraph from one of the many articles. Another 20% was based on a topic he spent literally 5 minutes talking about during a lecture. Why is this a bad idea? It rewards students that have better memories or, to a lesser degree, that happen to get lucky because they studied the 1% of material that shows up on the tests. Studying for Feiner's tests is essentially a game of roulette, but with much a lesser chance of success.\nOh yeah, and Flash Builder 4 is terrible.	2 individual assignments and 2 group projects. Time consuming, but not particularly hard. \nSadistic midterm and final.	13	0	39	663
24411	May 15, 2010	There's a lot of debate on the background required to take/enjoy this course. Let me give you mine: Linear algebra (important, forgot), Gradients/Hessian (slightly important, forgot), diff/integ of exp, log, poly (important, very good), Probability (most important, Very good), Statistics (not needed, forgot), Optimization (slightly important, none), MATLAB (most important, none). Do not let people intimidate you, you can still do very well in this course by honest effort. Besides Prof. Jebara is a very good and considerate teacher who buffers his lectures with essential background material. \nI'm puzzled with the other reviewer's comments regarding the material with respect to Ng et al. The combination of topics such as SVMs, VC Dim, graphical models and Back propagation is rare. Digging deeper, 6.867 at MIT is very similar in scope.\nHis slides are a work of art! Beautifully thought out with rich visual cues.\nTAs were brilliant (Pier Francesco Palamara and David Bondatti). Patient, welcoming and knew the material inside out.	Very well designed assignments. These involve translating/extending the equations in class to new distributions and settings and implementing them in MATLAB for a non-trivial data set. I feel very happy doing them because I know I will know EM, Junction Tree etc. inside out rather than wrestling some artificially hard time drain. Exams are challenging but fun! Make sure to get plenty of sleep and work out the practice exams WITHOUT referring to your notes.	10	13	1636	1921
24422	May 16, 2010	This course is more aptly titled "COMS W3137: Java GUI and Data Structures," because really, data structures weren't as prominent as the name of the course suggests. Overall, a terrible experience that I'm glad I'm over with. \nProf. Blaer, in his lecturing ability, isn't to blame for why I hated this class so much. He's very clear in explaining the material and a funny guy overall. He was able to keep me awake even after I pulled an all-nighter working on the first assignment (see below).\nThe material is too sparse to deserve an entire semester. For anyone who has taken AP Computer Science AB (not me, and for future CULPA readers, I guess not you, either), the actual data structures covered would already be second-nature, and the associated algorithms would be simple. I stopped going to lectures really early on in the semester since each week covered only roughly five pages of the textbook. \nThe homeworks were absolutely ridiculous. Most of the programming in the homework assignments didn't involve implementing the data structures (instead, we were just allowed to steal the source code from the textbook's website), but instead revolved around Java GUIs. All but one of the assignments had uninteresting programs for us to code (unsurprisingly, that exception was the one that involved the least fiddling around with GUIs) and in general took quite awhile of experimentation. Furthermore, the TAs were incredibly slow at grading the assignments. The 60-odd people's assignments were divided among four TAs (the remaining TA was solely recitation instructor) but would take somewhere between 3-4 weeks to get back to you. Of course, you could just say, "oh, each assignment takes a long time to grade," but the fact that they managed to grade all the exams within six hours after the midterm demonstrates that they can grade quickly, but simply choose not to. \nOn the bright side, code didn't have to be as strictly formatted and documented as it did in 1007... and... I'm done with this course! (and I pity all you future CS majors that have to take this class)	Five homework assignments, lowest dropped. A midterm and final around the difficulty of the homework assignments.	1	6	3409	1622
24427	May 16, 2010	Quick note: This class is most definitely a mathematics course. There are basically no concrete applications of the material covered and certainly no programming involved.\nProf. Gross is arguably the most idiosyncratic professor you'll ever meet. And that's definitely a good thing. His lifelong love for topology and graph theory (and their intersection) is clearly evident in his lectures, in which he wanders off into reminiscing about his early mathematical career and some tidbits from math history and algebraic topology. This "sidetalk," as he calls it, makes the class more interesting and is, as a result, an integral part of the course. Integral.\nGross's lecturing differs from other practitioners of the overhead-projector style because the projector doubles as a slideshow of ever-evolving course notes and a whiteboard in which he goes through examples with the class. This is probably because he has walking problems (he comes into class wearing sneakers and holding a cane) and the fact that Graph Theory is a CVN course. I wasn't really able to appreciate his usage of the projector in Discrete Math because it didn't seem necessary (small examples, mostly numerical manipulation), but once we hit graph enumeration, it became clear why Gross preferred the projector: it's basically impossible to fully draw examples otherwise. \nThe course is by no means an easy course like the pre-req Discrete Math. While the graph theory section of Discrete Math was limited to basically one type of problem ("find a Kuratowski subgraph"), this course requires much greater ingenuity. The homework assignments' problems range from trivial input-numbers-into-formula questions to somewhat difficult proofs, and the tests are filled with mostly the latter. While the homework sometimes feels like a drawing exercise, the tests are filled with original and clever problems. \nI felt that the breadth of the material covered in this course was especially exciting, though keep in mind that this makes the course go at a very fast pace. But just keep up with Gross, because it's totally worth it.	Six assignments dropping the lowest. Three open-book exams of equal weight, but no final.	7	0	40	4901
24443	May 17, 2010	This is not a "mad hard" course, but a few bad policies unnecessarily make it more painful.\nDespite repeated pleas Prof. Yang did not post the slides before lecture, his reasoning being that this would force everyone to take notes. This voodoo pedagogy ended up discouraging me from taking notes. Please take a look at this: \nKimberley A. Babb, Craig Ross, The timing of online lecture slide availability and its effect on attendance, participation, and exam performance, Computers & Education.\nHis slides are pretty incomprehensible/garbled in most places and too verbose in others. Prof. Yang is pretty earnest, so it may be a matter of N-iterations. \nThe TAs for this course were not the best. They're perfectly OK with the grading but their mannerisms, politeness and preparedness leave a lot to be desired. Also getting the TAs to grade parts of the exam is ridiculous.\nSpring break gives you a breather, so if at all possible take OS in the spring. Prof. Yang will have asides on topics like Files Systems, Concurrency, Testing etc. whereas Prof. Nieh (Fall) talks about other OSes like Android. Other than that the two offerings are almost the same.\nThe Linux kernel is written with *excellent* C programming practices. Some of the constructs are delightfully concise yet ridiculously extensible and performance tuned. Doing the first assignment to its completion will get your C programming up to scratch.	I scoff at suggestions that it's too heavy. It's entirely reasonable given the ambitious scope of this course and if you understand what you're doing. Make sure you pick partners who like OS and are not just trying to get it over with.	1	7	4214	2384
24447	May 17, 2010	The class was definitely a math class, though I happen to know that the curriculum of the other graph theory class is equally un-applied (it is much easier though). If you are interested in Graph Theory specifically, you should definitely take it. Maria Chudnovsky is one of the rising stars of the field.\nAs a teacher, she's decent. Her lectures are solid and she takes time to go over things twice if they're difficult. Unfortunately, the sheer volume of information sometimes means that problems on the homework call for answers that came from peripheral facts in class. In addition, the most difficult theorems she proves in class are almost impossible to wrap your head around the first time hearing them - they take up multiple blackboards and take some deep thinking to grasp. \nHomeworks are proof-based and reviewed upon handing in with students giving the solutions. These review sessions were semi-helpful, and Maria elucidated the worse-written proofs. Still, I sometimes slept through this part a little.\nThe class when I took it was over a third PhD and masters students, so as an undergrad I was pretty intimidated. I had the impression that Maria and her TA would have given a lot of help if I had sought it more aggressively, but I didn't end up doing so.\nOverall: A very solid course, with a nice and helpful teacher. If you don't mind the math orientation and fairly high level of difficulty, you should definitely take it.	Homeworks: Ostensibly weekly, which were assigned annoyingly often with just 5 days to complete. However, they often ended up being two-week assignments instead, which was much easier to deal with. Content was tough, but half-proofs and almost-right proofs were given generous partial credit, especially on the final. Rigor is not demanded unreasonably in the proofs, in keeping with it being a class open to non-math majors. Not all problems will be doable - There were some that almost nobody in the class was confident enough to present their answer for. Maria intends and accepts that this is occasionally the case, so don't worry when you can't get 90%. Normally below the level of the difficult lectures also.\nExam: One hellish take-home. An experience I hope not to repeat. Graded very leniently though, with lots of partial credit. Know the lecture content.	1	0	4996	NA
24457	May 17, 2010	This class was the subject of the nastiest official course evaluation I've ever written. I put almost exactly these notes in the little box on Courseworks, and I fervently pray that somebody in the department reads them.\nI feel bad for Prof. Hershkop. I really do. The way this course is designed -- or, at least, the way he seems to envision it -- it's impossible for an ordinary mortal to teach (Jae Lee, I'm told by his rapturous former students, is made of a different stuff than the rest of us, but that's a discussion for another day). 3157 requires its instructors to have an intimate knowledge of C, C++, make, Perl, Ruby, HTML, CSS, HTTP, CGI, memory, security, obscurity, etc. Not an impossible list of things to learn, but for somebody whose real work only deals with two or three of them, perhaps a bit unreasonable.\nDear Shlomo, unfortunately, isn't up to the task. His knowledge of web standards seems to end in about 1998 (he suggested that a problem with one of my labs, ultimately traced to bad server configuration, was because I wrote my newlines as <br /> rather than <br>). Ditto stylesheets. As for the unfortunate Ruby / RoR lecture, he was forced to resort to a mortifying game of "spot-the-error" with the class to cover up for the fact that he was completely clueless about variable scope in Rails controllers. Not everything was wasted -- I feel like I have a pretty solid knowledge of Perl, and the course was a useful C / C++ refresher for me.\nBut my real problem is this: He loves webapps, but in an effort to come up with "applications" for the things we learn in class, Prof. Hershkop assigns projects that actively encourage VERY BAD DESIGN PRACTICES.\nFor example: In order to avoid adding a brief intro to relational databases to the already-groaning syllabus, students are encouraged to do everything with flat file databases. Nobody even mentions the fact that this is fundamentally unscalable.\nFor example: The entire second project required us to write vast numbers of CGI scripts in C++. Hardly anybody uses CGI anymore, and they sure as hell don't write the scripts in C++ when they do.\nFor example: Some of the labs instructed us to write Makefile jobs not to compile our code, but to run it.\nFor example: we were forced to repeatedly work with a nasty little script called webthumb. At this very moment, there are a hundred copies of Firefox running in a hundred X server sessions spawned by a hundred instances of webthumb because some poor sod never found all the bugs in his copy of webthumb. There are many better ways to do this, but apparently part of being an Advanced Programmer is remaining wedded to long-dead technologies, even when superior alternatives exist.\nI could go on, but I hope my point is clear. I think there is a place for this class within the CS major, but it needs to be slimmed down, modernized and a little less webapp-happy.	Fairly reasonable. Despite strenuous protestations to the contrary you really don't need to go to lab. Come to think of it, the lectures were similarly unhelpful so you really don't need to go to this class at all. Labs are not time-consuming, but homeworks are, so make sure you budget ahead. Then again, Prof. Hershkop will grant an extension for any assignment, at any time, so don't stress the planning too much either.	10	2	1671	4758
25162	December 23, 2010	I would not recommend this course unless a) you really want to be a software engineer and have no prior experience or b) absolutely need it to graduate.  It's mostly busywork and stuff that you can learn in a decent summer internship at a software company (if you want to go into software).\nThat being said, Gail is a wonderful person, and is very kind and understanding.  However, her lectures tend to be very dry and not very helpful, and the course materials aren't any better.  The course skims over component model frameworks, software testing and various software quality assurance techniques, but doesn't really go deep enough to make things useful.  Most of these topics are covered briefly in lecture, and then exercised in a group project where they become a passing thought when completing your documentation.  By the end, you'll learn that you should do 'xx' and 'yy' if you're working in the software industry on a big project, but will be unsure as to what exactly qualifies as 'xx' or 'yy'.	Take home midterm and final, three easy homeworks in the beginning of the semester, and one semester long group project.  The group project is very hit or miss depending on your group (I chose poorly).  Oh and five to six pop quizzes that really just check if you're sitting in lecture and still awake (it's hard sometimes...).	4	0	1474	1616
24488	May 19, 2010	You should not take this course unless you are REALLY into physics or math. The topics we covered this semester were Kepler's Laws of Motion, Randomness, Data Compression via Fourier Transforms, and Quantum Mechanics. If none of this sounds remotely interesting to you, this course is not for you and will be a 3-hour weekly waste of your time. You also should not take this course if you have had no programming experience. Mauel hardly goes over the basics of Mathematica, and introduces new constructs and functions with only a passing statement. If you really want to know what your code is saying or want to create really cool/intricate projects, you will have to spend some time learning Mathematica code by yourself, which will be a bigger challenge if you haven't taken AP Comp Sci or COMS 1007.\nHaving said that, if you are interested in these topics and understand (fairly) simple programming concepts such as loops, arrays, and modules, this course will be worthwhile. Mauel is a fantastic and very enthusiastic professor. I don't think I've ever had a teacher as enthusiastic about his/her subject as Mauel is. It's also stunning just how knowledgeable he is in such a wide range of topics. He is also incredibly helpful on a one-on-one level, so do yourself a favor and take advantage of this: talk to him after class, email him, and schedule office hour visits. \nHowever, he does tend to move quickly at times, and if you are lost at the beginning of a topic.. you'll be hopelessly lost until the end. And this brings up a major problem of the course: it doesn't really have a purpose. It doesn't go nearly in-depth enough into the topics to give you a full understanding of them, there really isn't any programming he's teaching, and you don't really learn Mathematica. By the end, it's just one large copy+paste festival to get a project complete on time. \nStill, if this course sounds interesting to you, take it for a week or two, see what you think. If you don't like it after three weeks or so, drop it. It won't be worth your time and effort.	Fairly light. Optional homeworks. The only grades come from the projects that are due once ever 3-4 weeks.	7	1	44	NA
24496	May 19, 2010	Paul Blaer is one of the best professors I've had at Columbia. His ability to clearly present course material and actually make you learn something is unparalleled. His lectures are very straightforward and well-paced. He will essentially analyze and go through each data structure/algorithm step-by-step, making sure the class is with him as he goes along. He's also a pretty funny guy and will sometimes go on tangents, but they were always CS-related and will be interesting and beneficial to you if you are a CS major (i.e., go to lecture! You don't know what you'll miss). He is a very accessible guy and friendly one-on-one, so although he's intimidating at first, don't be afraid to go to office hours or ask questions in class. A misguided reviewer for this course will have you believe that taking AP Computer Science AB will make this course a breeze. This is NOT the case. I have taken the AB course and I still learned a wealth of information from Blaer, not to mention that most of the material after the midterm was not covered in AB, including perhaps the most important topic, graph theory.\nEach homework assignment is divided into two parts: theory and programming. People I know in this class complained about the GUI. Yes, there is a lot of GUI, so be prepared--in fact, I'd say the GUI is about 50% of each programming assignment, which isn't necessarily a good thing, but it probably builds character or something. However, they tend to be fairly simple, such as drawing dots on a grid or drawing binary trees (protip: if you abstract your first tree GUI interface well enough, you can reuse it later on for at least one more assignment). However, there is just as much theory as there is GUI, and the theory is much more challenging than simply looking up how a JComponent works. Most theory questions are taken from the book and definitely require a bit of thought before you arrive at a solution. \nOverall, if you have the option of taking this course with Blaer, don't wait. Take it with him. You'll learn data structures, you'll learn algorithms, you'll probably write some painful GUI code that you don't want to, but you'll come away a better computer science student.	On par with what you'd expect from this course. 5 homework assignments, one dropped (although from the way he talked about it in class, dropping a HW may not be the norm). Each assignment took around 10 hours, no more than 20 hours (may vary by your level of GUI expertise--I've done GUI before, but I'm definitely no expert). The midterm and final were very similar. They consisted of general theory questions, some coding, and some applications of data structures--fairly easy, especially if you studied.	11	0	3409	1622
24549	May 25, 2010	This class is a joke. Go to class, everyone says. And it is true, you should go to class if you really want to understand the material.\nWhat he does in class is he just goes over the coding that is on courseworks, first in general and then looking at the code itself. So for say, the linked lists, he would first explain what linked lists are, and then go over it in code. Of course, you really don't even need to take any notes, since if all you do is pay attention, you'll understand how the structures work and then you can just read the code to refine it even more.\nHe also let us out more than twenty minutes early multiple times, because that's how clear he makes the material.\nSo what makes this class a total joke? First, he assigns six homeworks. They aren't hard at all, and if you have a comp sci-major friend, they're actually easy. They don't take all that much time to do, and best thing, they're worth 50% of your final grade. 50% for six homeworks? Yup, he takes the "lowest" grade (you should be getting 10's on all the homeworks anyway) and adds it on as extra credit. If you have good enough friends, you should be getting ten points extra credit. Not only that, but on two of the assignments he had two MORE ways of getting extra credit: one was a simple, two line code, and the other was a bit tougher but still very doable, and he gave three points each for a grand total of sixteen points extra credit max. And note, these are on the HOMEWORKS, not on the tests that actually test your knowledge.\nThe tests make up the rest of your grade. Two midterms worth 15% each (15 points each) and a final worth 20% (20 points). They were also jokish. On each midterm he made sure to put at least one problem where you have to code, and one problem where it's a freebie 3 points if you went to class and listened (simple things like 'what is the time complexity of heapsort'). The final was a bit different: one tough problem, one very very easy problem (his freebie question worth 6 points, everyone should have gotten this one) and one coding (practically the same as the code in class). Even more, because all his midterms are point-based (they're out of 15 points), it's not like other classes where it's out of 100 and then scaled. What you get is how many points you add onto your final score, but with your sixteen points extra credit, you technically don't even have to take a midterm and you'll still get an A+. But even if you do, you're practically guaranteed an A+ unless you really don't know java, in which case you'll just get an A. He practically guarantees that everyone gets at least 7/15 points, so at most, if you aren't that good at java, you'll get 14/30 from the midterms. The final was much harder, but the TAs said that they graded generously, so you should probably get at least a 13/20 on the final, so that's 27/50, and then you add the free points from extra credit, and you get a 77/100, but then you add the extra credit and voila, you're back at a 93/100, and you get an A for doing so badly on the tests.\nDon't be scared when, in the first day of class he complains about grade inflation and describes how one standard deviation above the mean is a B and two standards is an A, because really, with that much extra credit (and the ease of this class), at least half the class got A-range grades.	Six assignments (not hard at all), two midterms (pretty easy), final (you should get at least 10 points)	13	2	2508	4
24550	May 25, 2010	OS is an essential course and you could learn a lot about kernel programming. \nHowever, personally speaking, Prof. Yang's classroom delivery is the worst that I've ever seen at Columbia. The first several classes, it turned out to have 50-70 attendance. Then, this number continued to drop and after Spring Break, we've only had 10 people or so in the classroom. It seems people prefer reading textbook. A lot of errors in his slides. He's a nice person tho.\nSome TAs in this course are really bad, in contrast, some are really good. I agree with the previous review. One TA had a serious attitude problem and he looked down upon on the students. And it seems that there's few communication and discussions among the TAs, so that they have different criteria when grading. A lot of grading errors. It's totally unprofessional.	6 tough HWs through out the semester. 1 can be dropped.	8	8	4214	2384
24568	June 01, 2010	This class was crazy hard, but Professor Pasik is a good teacher and did his best to guide you along.  As a student with no natural ability for Comp Sci I managed to survive the class, and in the end I learned a lot.  Make no mistake this is an extremely difficult class, but is also rewarding.  Pasik focuses on programming a lot more than other professors that teach the class.  Overall do not take this class lightly, but if you want to be challenged and learn A LOT than I definitely recommend him for Data Structures.  If your just looking to get through the class than you should take the class with a different professor.	Intense.  60% of the grade is programming.  Hard programming.  6 programming assignments worth 10 pts each.  2 midterm and 1 final.  midterms = 15pts each, final =20 pts.   **class totals to 110 pts, its basically 10 extra credit points	5	18	2508	4
24785	October 21, 2010	This class is terrible. If you're in it, you should probably just curl up in the fetal position while listening to Justin Timberlake's "Cry Me a River"--you'll get the same grade that you would have gotten if you had gone to every lecture and slaved your ass off. Unfortunately, while Itshack appears to be a computer science genius, his command of the English language appears to be worse than my command of the Matlab programming language (which thanks to his terrible lecture skills and general lack of teaching abilities, is only slightly better than William Hung's English). He mutters under his breath and seems to be unable to articulate his words beyond mumbles and sighs. \nOnce upon a time, there was a class called Matlab, which was supposed to be for non-computer science majors. However, the material in this rendition of W1005 is comparable to what Stephen Hawkings does for challenge problems.	CRAZY. IMPOSSIBLE problem sets every week (even the TAs can't complete them).	27	2	4057	4957
24790	October 25, 2010	The lectures during the first half of the class were informative. The paper, project, and presentation were fun. This is a rare class in the CS program in that you can elect not to be in a group! Read that last sentence over again. I feel like way too much of my time has been wasted working with incompetent group members in other courses.\nThe only downside to this course is that you are forced to sit through the other student's presentations. As in you get major points deducted if you skip even one day during student presentations. Many of your fellow students will not know how to give a presentation (dense text on slides, try to cover 40 slides in 10 minutes, mumble through the whole thing, etc). Many of them will also not speak English very well, some not at all. I kind of feel like it is somewhat sadistic to make a student that barely speaks English give a presentation... and make other people sit through it as well. Simple solution: bring a laptop and work on your project!	15 page paper on some web related topic of your choice and a pretty large programming project, again your choice, as long as it has to do with the web, and a 10 minute presentation. Not bad for a 6000 level course.	11	4	1474	2869
24893	December 06, 2010	I took the class CSOR 4231 with Prof Yanakakis. Unless you are really stupid, do NOT take this class under this Professor. Granted, he has great credentials and has won a Knuth prize or two for his research. But at the end of the day, teaching a course is not the same as doing research and not everyone can do both well. \nInstead of making the class interesting and explaining the background behind how algorithms should be designed and how they came to be, he just puts the algorithm on the board and makes a poor attempt at explaining it. Watch one lecture given by Stein on CVN and you will be inspired .. and sit for one lecture with this guy, and you will forget the little you knew before the class. His homeworks concentrate more on proving correctness than on designing algorithms and mapping problems to standard algorithms. It is a pity that a researcher of his caliber, does not have the ability or the inclination to make this class interesting. Believe me, you would be better off watching lectures on MIT OCW or stein's on CVN. You have been warned.	The workload is high and you would have to devote about 10-15 hours a week for this course. There are 6 homeworks, a mid-term and a final.	9	45	2941	4079
24928	December 12, 2010	He's an entertaining and friendly guy. Class is always interesting, and he incorporates more philosophical aspects of AI into the class, besides just focusing on algorithms.  There were four programming assignments, the first one was extremely easy, as it was just to teach you LISP.  The other four assignments did take some time, but they weren't break-your-back difficult.  The tests were all very reasonable and short.  If you read the textbook and went to class, you couldn't help but score well.\nHonestly I'm surprised at some of the reviews here.  \nFirst and foremost, some people seemed to say that he was poor at answering questions.  If anything, I'd say the exact opposite!  He would always take time to address questions, and would even work them out on the board if he didn't have the answer on the top of his head.  He was in *no way* dismissive of questions, and actually was looking for questions from the class more often than we had them.\nI can understand that some people might dislike his teaching style if they don't want to engage with him, but really, if you pay attention, you learn a lot and are entertained at the same time.\nAnd by the way, as some people have mentioned, he really does like LISP and recursion.\nOverall, I definitely would recommend him, and I think he is deserving of a silver nugget.  I think the best thing about him (and this course) is that he inspires interest, because you are exposed to so many new topics.	Three exams, four programming assignments, and textbook readings.  That's it.  The last assignments are interesting in their own right, but aren't massive undertakings.	5	1	2508	26
24938	December 13, 2010	I found Prof. Edward's sense of humor painfully annoying and his teaching rather scatter-brained. The topics he covers are all pretty interesting, though, and since the only other option for this class is Aho, I'd definitely go with Edwards.\nBy far the most educational part of the class was the project in which we had to create and implement a programming language in OCaml. However, learning OCaml was a bitch and made my team yearn at times for Aho's section (you get to use Java). Also, Edwards didn't really ground us in the theory well enough for us to create our own compiler until about 3/4 of the way in to the semester, which made the end of the semester hellish.	1 large team programming project, 3 problem sets (4-8 questions), midterm, final	7	2	1637	3105
24991	December 16, 2010	This is the first review I've ever written on culpa, but I have to say prof Rubenstein is the best professor I've ever had. I was initially hesitant to take this course because I was scared of the course material(circuits! circuits! and more circuits!), but professor Rubenstein presents does an amazing job of explaining things and his lectures are actually enjoyable. I, too, was somewhat worried after reading the old reviews, but now that I've taken a course with him, I know for a fact that those are not an accurate description of him. (Maybe his evil twin brother as someone suggested...) If you need to/want to take Fundamentals, by all means, take it with him.\nHe makes great lecture slides(that are actually better than the textbooks) and post them on the courseworks ahead of time. Some students just read over the lecture notes and do not attend the lectures, but I suggest not to do it because 1. the lecture notes are quite condense and hard to understand without the aid of lectures (at least for me)  and 2. it's one of the few classes where lectures are golden. His lectures are very interactive and he makes it obvious that he's enthusiastic about teaching (which can only help the students). Although the pacing can be somewhat fast at times, if a student asks a question, he'll slow down and explain to make sure the student understands the material. \nThere's about one homework per each week (9 HW total). Homeworks are reasonable, but can be tough. It depends on how much background knowledge you have (If you're good at circuits, you'll breeze through the first half of the course). Start at least 3 days before it's due and go to the office hr if you're having a hard time. His tests are open book/open note, but since he asks design questions, you have to have a solid understanding of the material. There's no surprise questions and he won't try to trick you, but will test you how much you understand the core of the material. Take HW problems seriously, as they will help you tremendously. \nOffice hrs literally saved me. This is the only course I attended office hrs on the regular basis. You come in with a question, and you will walk out with a full understanding of the material. If you have a schedule conflict with regular office hr, don't hesitate to email him and make an appointment. He truly cares about his students, and he'll make time for you. In fact, I never went to his regular office hr as I had another class during the time, but I never had a problem getting help whenever I needed. I got the questions that would take me 10 hrs to understand answered in 20 minutes. \nHe's approachable, funny, enthusiastic, and truly cares about the students. \nTake this course with him if you can, and you won't regret it. Interesting course material taught by a great instructor, what more to ask?	9 problem sets (1 HW per 1~2 weeks)\n1 midterm\n1 final\nCould be challenging, but worth every effort!	10	8	2427	4251
24992	December 16, 2010	Real men take Operating Systems. And, of course, hard as nails women too. \nThis is by far the hardest class I've ever taken. The workload is about 30-40 hours per week on project weeks, almost none on off weeks. And there are like two off weeks. \nThe course itself, as in the things you get examined on, is actually relatively simple. There are two components: a concepts component, which you can get entirely from reading the textbook, and a practice component, which consists of endless hours of reading through C source code, followed by more hours of implementing your design, followed by a frantic 24 hour code marathon once you finally figure out what you were supposed to be doing from the start. \nSome prerequisites: Firstly, you need to know C really, really well. I mean like, you need to be able to write memory-safe in C in your sleep. You will be taught thread and interrupt safety in the course itself. \nMore importantly, you need to be able to read C code. There is no manual for the Linux kernel. It's C all the way down (well no, it turns into assembly at some point...) I mean, yeah there are some documentation notes, but the real deal is the code. If you can't figure out what a method is doing in one glance, you're going to have to brush up on your sight reading. \nOh and also, the projects are based around modifying the Android Linux kernel. I mean, how cool is that!	Oh sweet Jesus. Like I said before, the workload is crushing. On the bright side, though, you will be working as a team, so you can always opt to cling like a remora to your teammate's work. If laziness is not your thing, you'd better get the lead out, because this class will make the rest of your classes look wimpy.	7	0	45	2384
24996	December 16, 2010	Chudnovsky was not as bad as I thought she was going to be. Granted her lectures were only mildly useful (she's not very good at teaching and she usually makes mistakes), the course itself is very easy and if you take the time to understand it, you will do well. The best thing to do is to do the homework every week and become well-acquainted with the techniques. The textbook is just as useless as Chudnovsky is by the way so your success in the class basically depends the quality of your TAs. We had one really great TA so those of us who went to her office hours every week did fine.\nThis was the end curve:\nX>97 A+\n90t need to study much in the end.\n2. DO NOT MAKE SILLY MISTAKES ON THE EXAMS. The exam averages are usually pretty high and a lot of people score in the 90s. If you make a silly mistake, its probably going to cost you 15 points. Ridiculous.\n3. Go to office hours.	10 - 11 homeworks, only 4 or 5 problems each, very simple and a good representation of the basic concepts you need to know\n2 midterms, fair\nfinal, fair / mildly challenging	5	3	4996	NA
27498	August 12, 2012	I honestly wanted to like this class, and expected to after reading several positive reviews.  Maybe there is an inherent flaw in teaching a class like this during the summer, but I suspect that the fatal flaw of this class was that it wasn't well planned.  Nonetheless, as I read the other reviews of Professor Blaer, I am suspecting that he might be better at implementing a course during the fall or spring than during the summer.  \nIt seemed that this entire class was planned as an afterthought, and the class seemed to operate under principles that I previously thought violated those of learning computer science.  I thought computer science was about thoroughly understanding concepts and creatively applying them to solving problems.  I also thought that lectures were a supplementary feature to the learning process, and that the most important part of the learning came when working through assignments.  Finally, I was under the impression that computer science is a subject one couldn't cram for, and the way to learn is through practice.  I'm hoping that I was right about all this, and that the only reason I am questioning it now is due to the faulty implementation of this course.\nI went into this class with the expectation exams should be doable if one is able to figure out the homework assignments on your own.  After all, the purpose of said exams are to ensure that people truly understand the material and don't get rewarded with a top grade for getting through the assignments without fully understanding them (for example, by getting excessive TA help or copying from other students).  However, that really wasn't the case in this course.  The exams tested concepts and syntax that were not covered in the assignments, or that were covered in assignments that weren't assigned until after the exam.  (For example, the first time we were ever asked to write a program using anonymous classes was during the midterm exam.  These is nothing inherently difficult about using anonymous classes in Java, as it is just a quirky syntax to get used to.  However, this straightforward exam problem was significantly more challenging due to the fact that we had never been asked to implement an anonymous class on the computer prior to the exam.)  To be fair, he did teach the concepts in lecture, but it is very difficult (for most people) to learn computer science enough to quickly apply it exclusively through lectures.  \nAnother expectation I had in taking a computer science class over the summer was that I'd be drinking from the fire hose.  I thought I'd be working hard and losing sleep to finish assignments on time.  The only time I truly found myself working hard and losing sleep to get the task done in the time allotted was when cramming for exams.  \nThere were only four homework assignments, each of which consisted of a written portion and a programming portion.  The content of these assignments was fair.  They were time consuming (except for the first one), but completely reasonable in scope.  Nothing we were required to do went beyond the concepts discussed in class, yet I still found myself learning a good deal while working through these assignments.  That being said, I would've liked another assignment or two in order to thoroughly learn the material that was covered on exams but not on the projects, as well as to lessen the weight of each assignment on our grade.  Moreover, he extended the deadline for every assignment, which was great for the students who procrastinated.  However, for those of us who started the assignments when they were released, these extensions were more of a punishment because they were often granted after we had already allocated significant time to completing the assignment prior to the original deadline.  Further, he did not make the new assignment available until the extended due date of the previous one (despite promising to make them available earlier on a few occasions).  Due to the poor timing of assignments, the final assignments ended up being due the midnight prior to the final exam.  \nFeedback was another story.  Initially there was a single grader for the class, and as a result we did not receive feedback on the first homework assignment until the middle of the fourth week of class.  At that point, a new grader was hired.  The class ended last night and we have currently received feedback on two of our four homework assignments.  It also took two weeks to hand back the midterm exam in class.  To be fair, the instructor admitted that the lack of TA help was a problem the course was facing.  However, these delays were more than just annoying: they caused many students to be penalized multiple times for the same mistake.\nLectures largely consisted of presentation of the textbook author's slides, from the book "Object-Oriented Design and Patterns" by Cay Horstmann, and occasionally he'd present additional examples of his own.  These lectures were fine, but not exactly easy to pay attention to for three hours.  Easy or not, paying attention was important, as many points he made during lecture had a tendency to show up on exams despite not appearing in the assignments nor being emphasized in the textbook.  When the instructor presented his own code, there was often a several day delay between the presentation of the code and the uploading of this code to the course website, which made at least one of the assignments much more difficult than it needed to be.  \nIf you are planning to take this offering in the future, make sure you are very confident in your ability to learn computer science quickly and without much practice.  Otherwise, you will probably be sensitive to the problems with the course.	The grade was calculated with the following weights: 50% Homework Assignments (of which there were four), 20% Midterm Exam, 30% Final Exam.	5	0	3409	2906
78699	May 15, 2015	This is a decent class where you will be challenged, put up with lousy instruction but learn a good deal in the process. Daniel Hsu is a super smart professor but about as engaging as a piece of wood. He knows the material in and out and leave you with an appreciation for ML by the end. The class runs pretty smoothly from an operational perspective. The response time on Piazza is insane - Daniel gets back to you in a few hours, especially right before HW deadlines and exams. His answers aren't generally helpful. You see a lot of monosyllabic "No"s as answers and he will put you down if your question is stupid or poorly worded (thank god for anonymity). However, when he does deem your question worthy, you get a thorough response.\nThe course assumes you have a decent background in calculus, statistics and linear algebra. Daniel does not pull any punches on the math. If you've taken Calc III, Linear Algebra and Intro to Probability and Stats, you should be fine. You have to be familiar with some matrix calculus, basic probability and stats (multivariate Gaussians, expectations, Baye's rule), projections, eigenvectors and SVD from linear algebra.\nDaniel focuses a lot on a lot of theory in machine learning and less on practice. Lots of long proofs and details on the math behind classification models. I personally think this is excellent since ML is inherently a very mathematical subject and understanding it at this level is key. We covered MLE, generative models, decision tress, linear classifiers, perceptrons, SVM, kernels, some ML theory, boosting, regression, PCA, clustering, entropy, HMMs and some math behind a lot of these topics in detail in their own dedicated lectures. Lots of good stuff!\nIt was impossible to stay awake in class since he turned off the lights in 501 NoCo and is a pretty boring lecturer. He doesn't engage with students unless someone asks a question. Thankfully, his slides are great and available online. I encourage you to try to pay attention in class because sometimes the slides are hard to understand on your own right before the exam at the last minute.\nThe homeworks were reasonable and consisted of a mix of theory and programming questions. They were challenging but nothing you couldn't do by spending some time pouring over the slides and going to office hours. Some of the theory questions were hard and it took my hours reading lecture notes or going to office hours to figure them out. The programming part tends to be simple but you have to vectorize your code for it to take minutes not hours, which can be a bit tricky. Assuming you don't pay attention in lecture (because it's really hard to) and that you have to read the slides from scratch to solve the HW, it takes 8+ hours of work on average. TAs were not helpful since they often couldn't solve the homework themselves.\nHis exams are impossible. Numerical grading on tests and homeworks was very generous and countered the difficulty of the exams. However, his letter grade assignments are on the harsh side.\nI heard StatML with Cunningham is fantastic. He's a great lecturer and focuses on intuition. If you want a more practical course, I would suggest that. If you're a CS major in the Foundations or AI tracks and need ML to count towards your track requirements, you're out of luck. Daniel's class is not bad and I would take it again even though it was a little painful.	5 homeworks 40%\n2 in-class exams 30% each - nowhere near enough time for the first one, the second one was insanely hard; only knew the answer to one question properly	12	5	13116	1921
25082	December 21, 2010	I looked forward to this class every day---it's probably one of the best courses I've ever taken. Aho is certainly not for everyone: he's a little dry and very odd, but he clearly cares deeply about the material, and does a good job explaining it. \nHe's a minor god in  computer science---his portrait is on the wall at the Google offices downtown---and this class is worth taking for that reason if no other; he's also shameless about reminding you of his associations with major gods of computer science, in particular his friend Don (Knuth, that is). If, like me, you enjoyed Gross's digressions, you'll probably also enjoy accounts of evenings spent (no joke) playing violin concertos with the author of "The Art of Computer Programming."\nYou, like Aho, should care deeply about the material. This is a class about the fundamental questions of computer science---how problems can be described, how they relate to each other, how they are solved, and at the most basic level, what it means to compute. If all you want to do is write Java programs to fit a spec, you shouldn't have bothered with college: the whole point of studying computer science at an institution like this one is to learn how to answer questions like the ones Aho asks, and, you know, do something interesting with your life.\nIn summary, I had a blast; if you like oddball teachers and hard problems you will too.	Minimal. Five problem sets, four of which took a few hours and one of which caused me to spend an entire weekend staring at a blank sheet of paper (technically an empty LaTeX document, but who's counting?). Easy midterm, easy final.	5	7	1891	234
25087	December 21, 2010	This is not the class I thought I signed up for, but now that I'm done with it I think it was worth taking.\nIt's insufficiently clear from the course directory that NLP (at least with Prof. Hirschberg) is entirely a survey course: you learn very little that you can sit down and implement, and a lot about broad categories of problems in computational linguistics and the general approaches that has been used to solve them. There are a handful of algorithms I'll hang on to---two months after the midterm I'm fairly confident I could write a Brill tagger or a CYK parser---but realistically, I'll never need to, and most of the material is not that specific. This class is not so much about learning to do NLP as it is about learning to understand what's already been done.\nProf. Hirschberg herself is very sweet---helpful and accessible outside of class. She also has a very soothing voice. This turned out to be a bit of a problem: I came every day, but to my great shame would start to doze off around the 45-minute mark almost half the time. I would love for her to read me bedtime stories, but the bottomless slide decks and repetitive nature of the material mean that the lectures are unstimulating to the point of peril.\nIf you're at all interested in NLP I'd certainly recommend that you take this class; if you're just trying to fill the AI track requirements you'll learn more impressive things in graphics.	2 programming assignments that require potentially infinite time---you're evaluated on a blind test corpus so you have no idea how you'll do. No "A for effort" here---your score is entirely based on how well you handle the test corpus relative to the rest of the class.\nOne (fairly lengthy) written assignment.\n1 midterm, 1 (non-cumulative!) final.	4	2	1957	4903
25088	December 21, 2010	A fun, laid-back class---worth staying until 8 on Thursday nights for. You read papers (or, if you're an undergraduate taking 5+ classes, you sometimes read papers), you discuss, you learn about machine translation. Habash is the authority on Arabic SMT; it's pretty cool to see him cited in just about everything you read, and it means that he can answer all of your questions. I would have liked to see a more than a single lecture spent on how the vanilla SMT and rule-based systems work (nobody studies them anymore, but you need to understand how they work for everything else to make sense, and they're not easy to figure out on your own). Other than that, really good---if he offers it again, take it.	1 "lab", with partners: put together a translation pipeline from start to finish, and then tweak it to see if you can get your BLEU scores up. He makes it a competition; people get excited.\n1 semester-long project, culminating in a final paper in the format of an 8-page journal article.\n2 presentations: one on a paper set of your choice and one on a language of your choice.	4	0	10197	5794
25153	December 23, 2010	Aho is a really really nice Professor. The problem is that he is too smart for his own good. Sometimes it's difficult to understand what he's trying to convey in class until you get to the problem sets and have to work through them. For the most part he tested exactly what he had taught and was very fair about it.\nThe real difficulty in this class is getting the material. Some people just understand it. Some don't. It's very much like Discrete Math where you are waiting for that ah-ha moment to arrive and suddenly connect the dots and for everything to make sense. Sadly that never came for me.\nHis stories are pretty funny and they make you realize how cool the CS dept is for having someone like Aho on staff. This is really a hit-or-miss class but I would say take it with Aho if you can.\nIn retrospect here's how I would have studied for this class if I could go back:\nReview your notes after every lecture and then make new notes. Try and see the differences between the various terms (ie: deterministic and non-deterministic, Recursive vs RE). Make sure you understand the theory stuff. Read the book BEFORE the lecture so you have a basic idea of what you're about to do. Do every homework over again before the exams.	5 problems sets. 1 was really hard and the rest were decent (or at least on-par with what you expect from a CS class).\nThe midterm was fair. The final had some tricky theory questions which I'm sure tripped people up.	4	0	1891	234
25155	December 23, 2010	GREATEST. PROF. EVER.\nTake this class with this man. I don't care what conflicts you have. I don't care if you aren't required to take this class. Just do it. It will change your view on professors forever. \nImagine if you will a prof who cares about his students. Who makes every attempt to give them good grades AND have them understand the material. Who before every tricky concept, takes the time to explain why the material isn't tricky at all. A prof who doesn't need office hours but takes the time to explain concepts to you any time you show up at his door. A prof who knows how to create the perfect balance of practical and theory without overworking the class. A prof who doesn't try to trick you on exams but rather tests the fundamental concepts that you will take out of the class. The prof I'm describing is Papageorgiou. \nHis lectures are clear and cover exactly what you need to know. His homeworks were fair (and even fun on some of the programming ones). He tests were incredibly straightforward. His review session goes over EXACTLY what you need to know.	5 fair problem sets. One was a Matrix Solver which was pretty cool to build. 4 Quizzes which he lets you know about at least a week in advance and tells you the questions that will be on it. Midterm and Final which were pretty easy if you paid attention in class or at least came to the review session.	5	1	2762	3992
25165	December 23, 2010	Cannon is awesome. With a couple of masters degrees and a phd, you know he's incredibly smart, but he also keeps the class moving well with his wit. Class attendance is typically helpful, but you can get by for most topics by simply doing the assigned reading. If you do attend class, supplementation with assigned reading is still ideal. The texts for the class are pricey so get them from a friend or rent them if possible. Only one of the two, Big Java, will really be useful after the course is over, so if there's one to buy, that's it. The books are thick, but the course does not cover nearly all the chapters in them.	This class necessitates a tremendous amount of effort and time, but it's totally worth it. The satisfaction of realizing the efficiency and power of a program you've just designed and built is unbelievable after you've spent hours debugging it. The class alternates a theoretical problem set from the book every other week with a programming project every other week. The problem sets are generally pretty simple and graded fairly, with the programming assignments much harder but graded fairly easily. The midterm and final were extremely easy, and the class is curved to something like a B+ average.	6	4	515	3807
25170	December 23, 2010	I 100% agree with the reviewer from April 15, 2010, and the later ones.\nI really want to emphasize how insufferable the homework assignments are. The assignment descriptions sound straightforward and manageable, at first. It is when you start to work on it that you realize you know WHAT the homework means (that is all the lectures are good for), but not HOW to implement it. Most of the time will be spent figuring out how the program should work, even in a conceptual way, in order to achieve the algorithm that Pasik wants. \nThis is made harder because (a) You are using Lisp for probably the first time, a language that is not used anywhere outside academia and will never be useful to you again. No other language you have learned or lab you have taken in CS at Columbia will prepare you for understanding Lisp except the concept of recursion (b) You will not learn, during lectures, the Lisp you need to do the homework. After the first couple lectures, Pasik will not continue to teach Lisp and consider everyone a "Lisp expert" (c) You will spend hours reading Lisp primers before you actually work on the program. For this reason (and the fact that you have 3 other CS classes to worry about), the assignments will most likely lead to several all-nighters. Pasik has a 1-point-per hour deduction late policy, which is the most ridiculous policy I've ever come across in a CS class. If a student must resort to submit late, do you really think it will be by a couple hours? For a class like this, 25% deduction per day is much more reasonable.\nThe lectures are brief (usually they take Pasik 30 min to get through), with a focus on definitions instead of Lisp-based, example-driven concepts. Typically, a lecture will have one or two high-level examples (i.e. a diagram or graph), and one or two, if at all, slides of lisp code that do not relate to the homework in any way and will not be useful for exams.\nAs for the exams, I really didn't mind them. They are straightforward. However, each question is usually 1 point out of 10 points, so four points off already puts you at 60. Pasik will not tell you what questions will be on the exam. The best method is to read the slides carefully and focus on definitions. Also, there will be a lisp question on each exam that relates to the homework (i.e. a snippet of code from your hw).	4 programming assignments\n2 midterms (each 10 pts), 1 final (25 pts)	2	3	2508	26
25201	December 25, 2010	All you really need to know about this class is that it's awful. The class started off like this: too many (easily over 100) students crammed into a room struggling to stay awake as Pe'er tries to explain simple programming concepts (like binary and the way computers represent integers) in convoluted terms. The homework started out so easy that nobody really seemed to mind. \nAfter a few weeks, though, he transitioned to horrendous weekly homework using MATLAB in ways that no one ever intended. Going to class won't help, and asking the TAs won't help. All you can really do is beat your head against your keyboard for hours on end until a mostly-functioning program comes out. Don't even think about asking your classmates for help; late in the course several people were picked out to complete a special assignment as punishment for cheating.\nHow are the exams? For the midterm he gives you 12 trick multiple choice questions about the fine details of MATLAB syntax followed by 3 pieces of code to correct. The code correction is generally straightforward, but good luck knowing how well you did on the rest!\nThe real tragedy here is that Paul Blaer is the other instructor for this course. Avoid any non-Blaer instructors at all costs, at least for this class. You'll save yourself many a headache.	Cruelly long problem sets assigned weekly with arbitrary and harsh grading. Taking the exam is like playing at a casino: you might get lucky, but in the end the house always wins.	22	2	4057	4957
25247	December 27, 2010	Most of what I have to say about this class has been said: Blaer is a smart and funny teacher who does a great job explaining abstract concepts and making sure you understand them. He's accessible and fun to talk to, especially if you find him during office hours and/or not surrounded by a hoard of undergrads. He also has an amazing twitter that isn't updated often enough. You can google it easily. \nNot sure what happened during my semester of 3137, but it seems like we had less GUI than previous classes. If that's just an anomaly, then, er, too bad... but I thought I would give CULPA a head's up, since it was a big source of pain and anguish for most of the reviewers below. \nIn other words, take this class with Blaer!	6 homework assignments, which involved theory and programming. The lowest was dropped. \nMidterm and final were straightforward and easy as long as you made sure you not only understood, but could also run through each algorithm given some data and know its big-oh.	6	0	3409	1622
25261	December 27, 2010	This is the class that made me want to major in Computer Science. At first I only took it because it was a requirement, but Adam Cannon is a skilled lecturer. He knows how to make confusing material digestible, and his classes are enjoyable.\nI would recommend going to office hours - the TAs are generally pretty helpful, and it's useful to get feedback on your code before you submit it.\nThe programming assignments were a lot of fun, once you get into them. The book assignments (the theoretical ones) can be a pain, but they're necessary to grasp the material fully.\nIt's not necessarily the easiest class that you'll take at Columbia (unless you're already a programmer and therefore shouldn't be taking this class anyway). But it's also not the hardest - and it may even be the best and most important one you take. Make sure you take this class.	6 assignments, each with a programming part and a theoretical part. One midterm and one final (both easier than they could be, but you still need to study for them - means are in the 70s). Mean is curved to a "high-B, not a B+" (in his words).	10	1	515	3807
25534	January 18, 2011	God, Professor Gross is wonderful. I want him to be my uncle.\nThat said... the class was really entertaining, not particularly hard, and basically lots of fun if you go to lecture. Prof. Gross is hilarious and obviously very smart, but he has the best, nerdiest sense of humor (read his quotes page to see what I mean: http://www.cs.columbia.edu/~gross/things_I_said.html) We actually did a demo of the birthday problem in class!!\nThe work is on the easy side, but laughably easy. It's a smorgasbord of fun, interesting stuff. This is DEFINITELY a recommended class for those of you who need tech electives.	Psets every two weeks, nothing TOO hard but they were rather long. We had 5 free late days on these; every day after would be -10% or something like that.\nTwo midterms, final -- nothing unusual.	7	7	40	397
25273	December 29, 2010	I'll be blunt: Angelos Keromytis is not a good instructor. He might be pretty smart and know his stuff, but he just has no idea how to be a professor (sometimes literally; there was a period of 5 or 6 classes where I didn't see him at all and the TAs taught both the lab and lecture classes). \nA good professor spends time crafting detailed but concise slides with concrete, succinct examples; Keromytis copies code off the web and pastes them into his slides as if they were his own. (Seriously, Google the code. You'll find the exact same contrived examples online that only seldom work; most of the time they'll only serve as basic skeletons of what you need to do to get your code to compile.)\nA good professor is welcoming and encourages student participation and questions; Keromytis is intimidating and sometimes even humiliates students. For example, about 3/4ths of the way through the course, when a student wasn't sure how to change permissions on a file, instead of replying something reproaching but nevertheless sane such as, "Use the chmod command, as we've been doing for the past two months," Keromytis responded, "Are you kidding? You're kidding, right?" This is not a good way to encourage students to keep asking questions. As if asking questions helped most of the time (see next paragraph).\nA good professor teaches and presents students concepts and ideas; Keromytis' ego comes across more than his material, and when asked questions, tells you to just look at the man page. Due to both the nature of this course and the professor's incomplete slide examples and his poor teaching abilities, you'll have a lot of questions about what to do. However, half the time when asked something about a particular C function or paradigm, either on Courseworks discussions or in class, Keromytis will just tell you to refer to the man page. While I understand that this class is supposed to mold you into a competent programmer who is fearless of elaborate technical documentation, there is something worthwhile about having a human being explain something to you rather than just reading it online or on a man page, and a good professor shouldn't just tell you to refer to something else nearly all the time. ..Although this professor might be an exception. I feel like I've learned more through Stack Overflow than Keromytis could ever hope of teaching me.\nIn the end, the only saving grace in this class were the two TAs. They seem to be the only ones that cared about us. They would take the time to read through our code line-by-line, helping us find bugs, and they would actually help clarify concepts. Their accents were a bit hard to get through at first, and the English and grammar in the assignments were sometimes confusing (since they wrote them all), but they mean no harm and will gladly clarify if you ask. Not to mention if you write to them about a specific bad grade you received and give reasonable arguments for why you think you deserved more credit, they will entertain your request, and if you present a good enough argument, this usually entails you getting at least one or two points back.\nI might sound bitter, but don't think this is because I got a bad grade. I didn't. Keromytis is just an astoundingly poor specimen of a professor. I got a good grade in the class, but it was due to my own hard work and the hours I put into labs and homeworks. I wish I could say Keromytis helped me along the way. I can't.	Heavy. 1 "lab" (i.e., homeworks) per week that takes on average 4-6 hours (extremes were around 8-10). 3 "homeworks" (i.e., longer projects) thoughout the semester. The first one was intense and took some time, but the following two felt like they could have been labs and were much shorter. Note however: you will be pressed for time throughout the course. You need to eat, sleep, and breathe Advanced Programming (especially if you take it concurrently with Data Structures--a poor choice, in my opinion. Both have heavy workloads). Whenever you have spare time, work on your lab and homework. Especially during weeks when homeworks are due, since these would often be due 2-3 days after a lab, in order to keep the labs on schedule.\nMidterm and final are both in the CLIC lab and are programming assignments. Midterm was doable (avg 68%) but final was difficult (avg 59%). It had two parts, one in C and one in PHP. The C part relied on one concept we learned for basically one lecture, and if this didn't work, the entire part wouldn't work. Protip for exams: when you reach bottlenecks like this, stop messing with it and spend your time wisely by coding other features, even though they may not be testable due to the aforementioned bottleneck. If your code is right, you'll at least get a few points for it.	8	2	1472	4758
25293	December 31, 2010	Prof Pasik has a very good presentation style, but unfortunately the AI material, he covers, lacks body. He uses slides, not more than 10-12, and you would have guessed that only some introductory and intermediate concepts are covered. He spends too much time on the philosophical aspect of AI; important it may be, but I would imagine that one lecture would have been more than enough to convey the message.\nProgramming assignments are to be done in LISP. And if one has good enough experience in programming, LISP shouldn't be too hard to adapt to. Good thing about LISP is you don't have to learn it all in order to get started. I did enjoy programming in LISP and assignments were engaging but not too difficult.	4 Assignments\n2 Midterms and 1 Final Exam	3	2	2508	26
25299	December 31, 2010	A word on Edwards. He would spend a good deal of time telling jokes that apparently he found funny. Humor can be a great teaching tool, but this isn't the Laugh Factory, it's a university. The topics covered in this course are difficult, and having to listen to the professor joke his way through his lectures is irritating and frustrating. As for his metaphors, I have heard people tripping out on drugs make more sense.\nIf you have no experience with functional programming do not take this course. Read up on lambda calculus and OCaml (which he has a huge hard-on for) before you even entertain the idea of taking this course with Edwards.	Huge project. Not too difficult midterm and final. A few individual programming assignments that if you do not know about functional programming you will not be able to do.	12	11	1637	3105
25309	January 02, 2011	One of the worst classes I have taken here that could have easily one of the best. I registered for this course with very high expectations. I was planning on studying oceanography and/or atmospheric science for grad school, so I thought the 'Physics of Fluids' would have been the ideal preparation. Moreover, Mauel is renowned to be one of the most enthusiastic lecturers on campus (he really is) so I figured this class has to be a hit. Boy, was I ever wrong. \nMy biggest gripe with this class is that Mauel almost never uses the chalkboard and teaches solely from his scanned notes. He compiles his poorly written notes into a powerpoint and lectures with the aid of a smartboard. Each slide is packed with a ton of information, mostly equations with very little comments, and he crams about 45 of them into a single lecture. For an 1hr 15min lecture this works out to be a minute and a half per slide. Unless you have had a lot of exposure to the subject and/or have an IQ of 250 you will have a difficult time learning at the pace at which this man teaches. As a SEAS student, I have grown accustomed to drinking from the so called fire hydrant. The usual remedy is to simply read ahead of each class but that brings me to my second biggest gripe: the text book.\nMauel uses a textbook by Kundu and Cohen, which is quite frankly the worst textbook I have ever used. It claims to be an introductory text but assumes that you know all the jargons of the subject. The book is as readable as a phonebook and not nearly as organized. Mauel follows the book for the most part but the chapters usually go beyond the scope of what's covered in the lectures. Needless to say, learning from this book is very difficult. The book does cover 'everything', so by the end of the course you'll find that it serves as a decent reference. For learning purposes, I had to borrow a few books from the library which turned out to be a life saver. \nMy final gripe is with Mike Mauel himself. I really like this guy. He is as brilliant, enthusiastic and entertaining as people say he is and he really knows how to spark the class's interest. However, he doesn't seem to put much effort into his lectures anymore. He essentially recycles the same set of lectures every year. Even the stuff on courseworks had dates that were 2 years old. There were many instances were he forgot what a slide was about, fudges the explanation and fingerjabs the smartboard to go the next slide. He also doesn't give out past exam questions to prepare for his exams. He claims it's too much work to come up with new questions. He didn't even go over the midterm with the class.\nIn summary, if you have a good amount of exposure to fluids, a solid physics background and solid math background up to partial differential equations then this class can be manageable. If you are like many people and are without said exposure and background, your learning curve will be very steep and you will have to put in a lot of work to keep up with the class.	He assigns a problem set every two weeks. Questions are usually easy and from the textbook. He occasionally throws in a monster problem that requires hours to get through.\n1 midterm and 1 final. Class average was about 60 for the midterm. The final felt a lot harder. \nHe has two grading schemes: \nPS: 25% M: 25% F: 50%\nPS: 1% M:33% F: 66%\nwhich ever gives you a higher grade	6	5	44	NA
25370	January 06, 2011	This guy may be a genius in programming, but has no concept of how to teach properly. He can't finish one sentence without stuttering, loves to pick on students during lecture to make them feel embarrassed, and gives poor/dismissive responses to students' questions and concerns. Good luck surviving his useless, boring lectures - you'll be staring at the room's clock almost every second, dreadfully hoping and praying that the class gets dismissed early or ends soon enough (which takes like a millennium). Time dilation effect, anybody?\nYou will definitely come out of lectures more confused about the concepts than before - attending them was almost a complete waste of time and do nothing to help with his crazy problem sets, in which you're not even allowed to discuss/brainstorm any ideas with classmates before submission. This would make sense if the homeworks were doable alone, and didn't incorporate higher level comp sci topics like recursion and GUI that no other computer science teacher covers in an intro course (for non-cs majors!!!).\nUltimately, this may possibly be the most horrible experience ever at Columbia with a professor (not friendly and gives terse replies to emails). Avoid him at all costs or prepare to suffer like never before. Very mentally draining and the only salvation is when the course finally ends (but not everybody can make it to the finish line unscathed). Don't do this to yourself, unless you're a genius at MATLAB of course; even then, I would still think thrice about choosing Pe'er, for he turns a potentially fun class into a complete torture and disaster due to the lack of organization. It's not healthy!!!	Weekly psets 40% -> hours and hours of pain, without much progress in the end, so make sure to start really early (i.e. almost as soon as the assignment is posted) and attend the office hours of TAs, who were nice and generally helpful, particularly in debugging written code.\nMidterm and Final (25%, 35% respectively) - multiple choice and code modification questions (on paper) that were full of tricks. Partial credit was given, but doing well is determined by chance and the arbitrary grading. Heavily curved though.	12	2	4057	4957
25396	January 09, 2011	Professor Chudnovsky was a good professor. Not terribly exciting (she also taught this class at 9 AM), but in terms of transferring what she knew to your head, she was excellent. Her lectures were very organized, and had plenty of examples. Just make sure to get all of the general steps of each algorithm. Her midterms were ridiculously early though: the first one was after four lectures. She also doesn't appear to be the most approachable person.	11 Problem Sets (10 required, 1 optional), no dropping lowest\n2 midterms: 1st was very easy, 2nd covered more material but was still very manageable. Both in first half of class\nCumulative final, very manageable.	4	3	4996	NA
25463	January 12, 2011	Even though the class goes by pretty slowly since he talks pretty slowly, his lectures are surprisingly very organized and, with the exception of a three-session-long rambling digression into US foreign policy in the 70s, every lecture was very interesting.  However, Sidorsky is pretty old; he couldn't see people's hands raised for questions, so after a month or two most of us gave up trying to ask questions entirely. \nAlso, there is pretty much no interaction with him at all aside from his lecture. Though he kept repeating  to himself almost every week that he should involve us in a discussion more often, he never did anything but lecture the whole time.  To me, this was a virtue of the class.  Instead of hearing my peers who have been in three philosophy classes, I got to just sit and listen to someone who has been studying philosophy for 60 years.\nGrades were based only on the midterm and final, which, contrary to his claims of them "probably being easier than than they should be", were actually disproportionately difficult, though not unreasonably so.	VERY short, dense weekly readings (2-20 pages)\nChallenging Midterm\nLong, difficult Final	3	2	856	NA
25533	January 18, 2011	A.P. IS THE BEST PROF EVER. He is so nice and really clear with lectures, and flexible if you need an extension (although he looked really sad when I asked for one, so don't do it too much). He obviously cares a lot about students, and is really enthusiastic about Linear Algebra.\nThere were a few 15-minute quizzes at the end of class, these were open-book and open-notes. He'd announce the topics the class beforehand. What's more, HE CAME AROUND AND HELPED after about 10 minutes. They weren't very hard, but due to his help I ended up getting 100 on all of them. Midterm and Final were similar, although not AS easy.\nOne tiny, tiny complaint: I got over 100% on the class, but I didn't get an A+. Maybe he doesn't give them, or maybe it was because of the curve. Whatever, it was still one of my most stress-free and worthwhile classes.\nBless him.	Psets every two weeks, with programming and written component. Not hard, although the programming takes a long time (but you should be used to that if you've taken CS classes before).\nMidterm, final. COPIOUS amounts of extra credit.	3	1	2762	3992
25840	May 03, 2011	Great guy, really gets excited about the content. I don't know how someone could get so worked up about recursion and binary trees, but it made the class a bit more interesting I guess. I didn't pay attention most of the time, but when I did, he was pretty clear and the content was relevant to our assignments and midterms.\nIn the end, I feel like I learned a lot about data structures, although if you are an IEOR major, there isn't a high chance you will use it again.	6 programming assignments, 2 midterms, and a final on the last day of class. Pretty manageable, although each programming assignment could take you a while if you get stuck.	4	2	2508	4
25578	January 20, 2011	Cannon is a great lecturer. He's very clear and has the wonderful ability to see things from a student's perspective. I believe he's been teaching this class for several years, every semester and so the class is well-planned and thought out.\nI would recommend going to all the lectures, you'll really learn a lot and also you probably won't have to spend much time reading Big Java for the assignments if you attend class. Plus Cannon always goes on random CS-related tangents every once in a while and these are generally fun and informative.\nAs for the class, it's got two components; theory (Intro to CS) and programming (Intro to Java). Theory and programming homeworks alternate from week to week. Theory homeworks are not too bad, they can be done just from reading the relevant chapters in the book. Programming ones can be challenging and take varying amounts of time (depending on who you are) but you will certainly learn how to program at the end of it.\nMidterm and final aren't all that bad if you've been keeping up with the lectures and the homeworks. They're a bit on the memorization side of things - especially the final which asked some pretty obscure questions which is why it's good to attend lecture because he often mentions random things that I noticed ended up on the test.\nI should mention that although this is intro CS, it's a pretty high level intro so don't take the class for the granted - you'll have to put in some work to get an A.\nAlso there are lots of office hours and for the most part the TAs are great so I would highly recommend popping in if you have question regarding your assignment; even if you code works, you might wanna just make sure with the TAs that your design, etc. is okay.	See above.	5	0	515	3807
25601	January 24, 2011	Cannon is a phenomenal teacher.  If you're not interested in computer science, go to class just because it's fun.  Since it is an INTRO course to computer science and java, he does a really great job at explaining concepts, etc. and will happily answer any question.  You will learn so much more from being in class than by reading the textbook.\nThat being said, read the textbook and make notes!  The midterm and final both include a vocabulary section - where you have to write a definition for the given words (note, Cannon gave us a list of 100 possible terms for the final and tested us on 10).\nThe midterm is really easy if you're prepared.  Do the work, meet with TA's, etc. etc. etc.\nThe programming assignments will take a lot of time, so definitely do NOT start the night before they are due.\nLet me say again - Cannon is a phenomenal teacher.  He is an amazing lecturer and makes class fun.  He always has a good story, funny / snide remark, or riddle / brainteaser to share.	An assignment every week alternating between a written assignment (problems in the textbook) that is generally quite easy - and a programming assignment that is generally quite difficulty.  One midterm, one final.	10	1	515	3807
25610	January 26, 2011	HORRIBLE lecturer (cannot complete a sentence without stuttering and "ehhhh" every other word). Also, he put his one office hour on Tuesday mornings at 8:30-9:30 am. First of all who is gonna wake up that early... not to mention the comp sci building doesn't even open til 9am. So good luck getting help from him in person, and his responses to email were often curt and unhelpful as well. The TAs were alright... nothing amazing and when they made a program to check our programs A LOT of people had to go for regrades that weren't very liberal at all. Most of the grading was done without taking into account how horribly written and ambiguous the problem sets were. \nCovers recursion and GUIs... which are definitely NOT supposed to be a part of the intro class curriculum. I didn't bother buying the book for the class and ended up with an A-...\nBut that A- was the result of literally 20+ hours each week on the problem sets. And I guess I got REALLY lucky on the midterms and final... Be happy if you can stay average in the class. The class started out with over a hundred students and ended with only 60ish students.\nIn short... try your best to avoid this class at any cost. And if you must take this teacher, don't be afraid to harass the TAs with questions and give yourself PLENTY of time to finish the problem sets!	Weekly problems sets (about 20 hours per week to complete); midterm and final (class averages were usually in the 40s)... and he forces ppl at lectures to participate so don't get caught sleeping.	15	3	4057	4957
25674	March 23, 2011	What's not to like about Pasik? He's a good teacher and a friendly guy. He's super patient and all kinds of approachable. If there's ever anything you don't understand he's more than happy to explain it to you. Unfortunately his office hours are practically non-existent, but he's always around for about half an hour before class, and for as long as you need after.\nThe course was taught in LISP, but if you're not familiar with this language, don't worry. He usually spends some time at the beginning of the semester explaining the basics, and none of the assignments require any really advanced level knowledge of LISP. If you get stuck, you can almost always find what you need with a little Googling. \nHis lectures are interesting and if you show up consistently and take thorough notes, you may not even need the textbook. Be warned, you will hear lots of stories about him and his family's zany adventures, but he's a good story teller and there's always an AI related moral in the end.\nAs another person pointed out, there is a lot of discussion about the philosophy of AI, but if you look up, you'll see that the name of this class is not Ã¢â‚¬Å“Artificial Intelligence ProgrammingÃ¢â‚¬Â, it's just Ã¢â‚¬Å“Artificial IntelligenceÃ¢â‚¬Â. The history and theory of AI are relevant to the course, even if they're not all that relevant to the grade. There will be some readings on this and probably one question on one test somewhere. If you decide to skip it all together it won't kill you, but it is interesting and might even help you out a little on the homeworks.\nThe assignments are deceptively complex, but they're not very difficult once you figure out what you're supposed to be doing. Give yourself some time. You're not going to bang them out in one night, but you can get them done over the weekend if you don't have much else to do.\nThe tests are sort of cumulative. It's usually around 3/4 new material and 1/4 old material. Expect a coding question, usually just a variation of something from the homework. He expects you to know all the algorithms by name so be sure you've go that down. Pasik will tell you himself that if you do the homework early you'll be pretty well prepared for the test and this is definitely true.	A few fairly short readings on AI history and philosophy\n4 programming assignments. Each can take some time because of the complexity of the assignment\n2 midterms, mostly centered around the material in the assignments\n1 final, which is just a slightly longer version of the midterms	3	7	2508	26
25867	May 05, 2011	Not only was this the worst CS class I have taken at Columbia, it was the worst class I have taken in any department at Columbia.\nProf. Hershkop doesn't plan his syllabus in advance at all, and he pays almost no attention to this class. For example, he promised for weeks on end to set up virtual servers for the group projects. In the end, he never did (nor did he tell the class that he had changed his mind, so some students were left hanging). Since we had no virtual servers, the only way for us to collaborate on the projects was for one partner to give the other his password(!). \nWorse, the projects are built to encourage horrible programming practices. He doesn't just allow them - he encourages and sometimes requires them. For example: we store our data in flat text files, rather than databases. For example: \n1. We were not allowed to use 'make install' to install external modules; we had to move the files into place manually. \n2. We were not allowed to use MOOSE to do object-oriented programming in Perl (because he 'didn't want to have to learn MOOSE'). Forget that nowadays all Perl object-oriented programming uses MOOSE.\n3. For example: we were told to use C/C++ to implement CGI scripts (which are themselves outdated), instead of using Perl, which we had already learned. C is the only language that doesn't support strings natively, so why would string manipulation be our first introduction to C, as well as our only major project in C?\n4. We were essentially prevented from using version control for the group project, as well as the individual assignments.\nIt doesn't help that the syllabus was last revised in 1995. There is no reason to be teaching Perl anymore - and if it should be taught, we shouldn't be spending more than half the semester on it (as we did). If CGI scripts are believed relevant (which they really aren't), then they shouldn't be written in C. Webthumb is a script that nobody has used outside the Columbia CS curriculum since 1997. This is supposed to be the class where you learn about important tools like version control, shell scripting, and the like. In Hershkop's class, you'll learn none of these. \nGrading is slow to the point of providing no useful feedback whatsoever. By the time you get each lab back, you'll have turned in three more. I'll be surprised if we get the grades for the midterm project before we take the final (which looks unlikely at this point).\nIn short, there was nothing redeeming about this class. Prof. Hershkop takes an imperfect syllabus and manages to make it even worse. It's clear that he doesn't put much thought into the class - most of the time on the assignments is spent trying to debug the typos in his sample code.\nDijkstra once said, 'The teaching of BASIC should be rated as a criminal offence: it mutilates the mind beyond recovery'. But if you ever have the chance to learn BASIC as an alternative to taking this class, by all means, go for it. It'll damage your programming career less than Hershkop's class would.	9 labs (the last one was supposed to be optional, but in typical Hershkop style, he changed his mind at the last minute). The first two are easy, and the remainder are easy but incredibly time-consuming. Don't be surprised if the Webthumb assignment takes 30 hours or more. Most of the time isn't programming; it's debugging the sample code that Hershkop provides (or the buggy external modules that he forces you to use).\n2 projects. The first was originally supposed to be due during spring break, but then he (as usual) extended it twice, by a week each time. The first time, he told us a week before, the second time he told us a day before. Because you have to work on it over spring break, don't expect the TAs (or professor) to respond to the discussion board, or to emails. And don't wait for him to enable virtual servers - he never will.\nNo midterm, but there is a final.	9	1	1671	4758
25698	April 05, 2011	I am not a computer science major or a computer science person at all; I'm not a math or science or logic person in any sense of any of those terms. My mind just doesn't work that way, and I struggled with this class more than I've struggled with any other class.\nThat being said, it was probably my favorite class thus far. Cannon is just a wonderful man who makes the lectures interesting, fun, and clear. He is incredibly welcoming ad supportive, so absolutely take advantage of his office hours. Talk to him about any concerns that you have - whether it's a specific coding problem or worries about the class in general - and he will help you. \nIf you're not a computer science person, there is a lower level class that provides a lot of the background for this class, which I didn't know about, and could have done much better had I taken it. This is not an easy class, but it's very fulfilling. It's something I never could have seen myself doing, but I would absolutely recommend taking it.	It's pretty tough. You definitely have to put the work in. Everything is doable, even if you don't have the familiarity in programming that a good majority of the class does. You'll be surprised at how capable you become, and this is one of the few classes where you are actually proud of your work and have something to show for it.\nTests are absolutely straightforward but you need to have a very deep understanding of the material. If you do all along, you won't need to study much, but if you are struggling, you'll need to put in a lot of time.	10	0	515	3807
25747	April 14, 2011	Taking Advanced Programming with Shlomo in the second semester of my Freshman Year was an awful idea. Shlomo himself is not a horrible teacher. He is funny and personable. Just don't expect him to ever respond to your emails. \nThe main problem with the course is the way the curriculum is structured. I decided to take the class because I wanted to learn C and C++ before going into my internship for the summer. Little did I know that most of the class would be perl, perl, and more perl. Out of the 10 labs for that class, six were about perl, two were about C, and two were about C++. \nThe only things he really covered about C were pointers and memory management. Obviously, good memory management is important and one of the trickiest parts of programming in C, but I really wish we went more in-depth. \nMost of the labs on perl centered around CGI programming, which is kind of pointless nowadays unless you're going to work for Amazon. There were also CGI parts to the C and C++ labs, which is even more pointless. If you are a Computer Engineering major like me or are on the systems track for CS, I highly suggest that you wait until someone else is teaching it.	Not that bad. The labs generally don't take that long, and Shlomo is rather liberal in granting extensions. The projects take a long time, so make sure that you get an early start on them or you will be spending long nights in the CLIC Lab.	2	1	1671	4758
25759	April 21, 2011	Nice guy, ABSOLUTELY THE WORST PROFESSOR I'VE HAD AT COLUMBIA.\nLectures are extremely dry. He talks in a slow mumble that is impossible to hear. Youmust constantly ask him to speak up where he usually replies "I'll try but I have a soft voice."\nExams are ok if you can manage to get something out of his lectures.\nOk here's the biggie, HOMEWORK ASSIGNMENTS ARE CRYPTIC\nWritten homework assignments usually contain material that he sneaks in his lectures in the last 5 minutes. His assignments are unclear and leave you dumbfounded as to what you are supposed to produce, usually a very lengthy Q/A on his website follows with frustrated students probing explanations as to what the assignment actually means.\nProgramming assignments are impossible unless you are not taking any other classes and have done extensive network programming before. Yechiam Yemini does not go so far as to talk about programming in class. EVER. Unless you've already done it you don't have a shot at the programming assignments, which are just as cryptic as the written assignments. Also be ready to drop some cash on a CLIC account if you don't have one, all assignments are submitted via virtual machines on CLIC. Deadlines are also very short, usually about 10 days for extremely high involvement work\nI really wanted to like this class, the topic is important and the class deserves a better professor. Wait for Dan Rubenstein or someone else to teach it before you take it. \nWriting this review is making me physically upset.\nOther than that, he seems like a really nice guy and I don't think he means to cause heartache. The poor sucker just can't teach (or talk loudly for that matter) and makes everything harder than it needs to be.	3-4 written assignments, 2-3 programming assignment, midterm and final. The exams are fine but the homework makes this class absolutely frustrating\nOh yea I need to clarify. He does not write is own exams (thankfully). The midterm he gave was a Rubenstein test. Yemini admitted to it and Rubenstein's name was on the test.	4	1	51	4902
25772	April 27, 2011	One of my least favorite classes at Columbia.  I am sure the professor is a genius in his field, but it was not well executed or translated to undergrads.  The lectures were dry at best - the class was not engaged.  The lectures were very repetitive - you realy only needed to go to every other class as he spend the first half reviewing and the second half teaching (though I did go to every class).  The slides were confusing with too much information crammed into them.\nThe teacher was not very approachable - I went to his office hours but he was unable to explain the proof in question to me.\nMuch of the course was over my head, in part because the prerequisites did not prepare me.  Iw as not alone in this, but the course was not taught with this in mind.\nThe TA's were horrendous at best.  The did NOT understand teh material.  I would usually start the homework the day it was assigned - if I went to office hours then I was told I was working too early and they were not yet expected to understand the homework.  I was also very annoyed when, after a homework had been live for a week (and I had completed it) it was changed.	Exams were impossible - no idea where he got the concepts from\n6 decently straightforward homeworks	4	3	1636	1921
25787	April 28, 2011	From my course evaluation:\nI am sorry to say, but this course was a waste of time and money. The professor began the semester hiding behind a desk, and it only got worse from there.\nAs more and more people stopped coming, she seemed to lose more and more of her confidence. \nThe midterm was a disaster, much too long and needlessly picky on syntax. Certain things are done best by computers, so what is the point of having them on an exam other than to be able to ascribe a grade at the end?\nFollowing the midterm, the professor basically lectured (read 'read straight from the slides, which were straight out of the book') directly to the computer, only raising her head to bury it in the textbook or to look at the blackboard. Not to say that she didn't respond to questions, but half the class could have disappeared and she wouldn't have noticed.\nOverall, the course seemed to be more about teaching things that could be easily tested, rather than understanding concepts in depth.\nThis is not a teacher who should be returning next semester.	Not too intense, but a lot of self teaching, as the lectures were largely inadequate.	4	8	3184	5890
25788	April 28, 2011	It was impossible to shake the impression that Ang, the grad student who taught this course, did not want to be there. He used someone else's slides, which he largely ran through. The projects were vague and uninspiring. Emails often went unanswered, and when they were, they often lacked depth. \nRather than teach the nitty-gritty of the language, he often chose to focus instead on 'cool things that other people did with it', leaving you largely on your own to learn the language. Disappointing for a course that is meant to teach you the basics of a language.	Hard to say. If you understood what the assignment wanted, pretty straightforward. Otherwise, lots of time wasted trying to figure it out.\n3 weekly programming projects (40%), 1 final project of your choice, in python (60%). Not midterm or final.	2	0	11132	5519
25829	May 01, 2011	Prof Morris cannot teach.  Sorry.  He should stick to his PhD studies.  He cannot effectively convey his thoughts or a lecture to a class.\nHe stumbles constantly and his slides are very disorganized, meaning that every lecture he will apologize for having already said this in another slide or referring to a slide he will cover 5 slides later.  His board skills are also very lackluster.  I would not hire this guy nor would I want him to teach me again.  He is too hard to follow, even though he's a native English speaker.  All of his spelling and grammar mistakes in his slides are quite distracting, too.\nAs for COMS1007, it's a fairly useful class if taught right.  Take it with Kender.  The text is OK, although Big Java, also by Horstmann, is generally more useful.	Average.	3	1	10722	2906
25877	May 06, 2011	The previous reviews pretty much sum up this class. Though it is probably one of the hardest preprofessional courses, Professor Mauel makes this class awesome! He is one of the most enthusiastic professors I have had and his enthusiasm made this a 9 am class that I didn't miss once (as well as my favorite class so far at Columbia).\nI took this class my spring semester after taking W1004 with Cannon. With this as my only prior programming experience, I found I was more than prepared for adapting to the new language (Mathematica) for this class. If you have no programming experience at all, this might make the beginning somewhat frustrating, as he does move rather quickly through the basics of the language.\nI loved this class; it made my semester. I would definitely recommend it to anyone who has any experience with programing and is interested in physics, comp sci, or math, or to someone without programming experience prepared to learn quickly and put in time on your own (preferably before class starts) learning.	Assignments every week or two that are "recommended" - take about 30 min to 1.5 hrs\n4 Graded Projects: he lays out pretty clearly an example of what you should do which is pretty easy to just follow. If you are interested, he encourages you to do some investigation of the topics on your own instead. - projects take 4 hrs ++ depending on how much you do / if you get stuck with debugging your code forever	5	1	44	NA
25886	May 07, 2011	An enjoyable, informative, and (really, really) laid-back class. Like the title suggests, it's about ML applications to NLP, but since just about every machine learning model anyone's come up with has been used for NLP at some point, it tends to focus on problems Collins himself has worked on or is working on now. This is obviously a Good Thing: he was obviously excited about most of the material in the class (I don't think I've ever heard the phrase "fun algorithm" used more or with such earnestness) and made it exciting to learn as well.\nHe's a phenomenally clear lecturer---I took this class concurrently with ML, and the contrast between Collins' presentations and Jebara's insane ramblings couldn't be clearer. I'd encountered a couple of the models we talked about in this class before and struggled with them; MC made everything effortlessly comprehensible. The slides are also good enough that you can get away with skipping the assigned papers (though you really shouldn't; I stopped after about two weeks but am hoping to catch up during the summer).\nAt times it felt like half the department was taking the class; other days there were only five people there. Obviously he's a big fuckin' deal, and just about everyone in the NLP group, faculty included, showed up at some point to watch the man himself teach. I'm still not sure how many people there were auditors rather than enrolled students. That said, both he and Vinod were very accessible during OO and by email.\nI'm pleased to see that he's teaching NLP next fall---he'll bring some much-needed rigor to Hirschberg's class (which is well-intentioned but a little fuzzy around the edges). I really enjoyed this semester and hope I have the opportunity to take something else with him again before I graduate.	Remarkably, at times disturbingly, little. Two problem sets, both assigned near the end of the course and requiring more time to typeset in LaTeX than they did to solve. The main event is the final project, but even that is pretty low-key: the writeup is only six pages long if you're working by yourself, and Vinod seemed surprised when I gave him something in the form of a journal article rather than a lab report.\nI don't know if MIT students are all crybabies, or if Collins feels compelled to dumb himself down for us (I hope it's the former); either way, don't let the 6 in front of the course number fool you into thinking that the material will make you sweat.	10	1	10729	5902
25928	May 10, 2011	Great professor but definitely not the easiest course. He's very structured and organized, so that's a plus. But be prepared to study!\nThe class begins easy, and the stuff appears intuitive, but then picks up the pace pretty quick and gets pretty complex.\nLectures consist of both ppt presentations and stuff he does on the blackboard.\nThe textbook is pretty helpful and combined with his lectures, you're never at a loss for material to study.	10 homework during the semester--don't take more than 2-3 hours.\nMidterm and final--pretty standard if you study\nGroup project and presentation	1	4	1342	NA
25955	May 11, 2011	The Good: Prof Morris is very nice and approachable. He is very easygoing. \nThe Bad: Despite the fact that he does put effort into the class, Prof Morris is too disorganized and not a good lecturer. He literally takes EVERYTHING from the book, so all you have to do is take the book to lecture (if you even ended up going after a week) and read the parts the Prof Morris does a really bad job of explaining. For the most part, he knew what he wanted to teach but had a very hard time trying to teach it. In addition, the assignment grades were always very very late, and overall pretty easy. Funnily enough, the course started with the hardest homework assignment and every one after that got gradually easier.  You might as well read the book on your own for all you might take away from Prof Morris class. \nIf you want to have a pleasant chat, however, he is a great guy who knows his stuff. He just doesn't know how to teach it.	5 Homework Assignments (though he ran out of time and cancelled the last one), a Midterm and a Final (which was surprisingly easier than the midterm).	3	0	10722	2906
25956	May 11, 2011	This is a very difficult course made much worse by the fact that he simply can't teach.  From what I understand he is very good in his field, but that does not translate into the classroom.\nThe lectures are confusing and the slides are difficult to understand.  He spends slide after slide on the easiest parts and then glosses over the more difficult concepts because they're "obvious".  I and a lot of other students in the class didn't bother to use our notes and materials from his lectures to prepare, instead using the freely available materials for the Stanford machine learning course.  It's absurd how much better they are.\nJebara isn't very approachable.  If you look at his personal web page he has about ten different places where he says he's busy and can't be bothered.  The TA's are hit and miss - there are one or two that are good and will actually try to help, but the rest aren't that great.  I'm pretty sure one of them never actually held office hours.  He just sent out an email that he was canceling every week.\nAlso, there was a really strange incident that stuck out at me: on one of the homeworks one of the TA's announced they thought there was a lot of cheating going on, as they got a lot of almost identical submissions (something like 40 out of 130ish students), and their response to this was to take a few points off the grade of any student with one of those suspicious homeworks who asked for a regrade.  It just falls in with the fact that, as a general rule, the professor and TA's for this class just can't be bothered.	5 deceptively difficult homework assignments - they seem simple, but you have to look up a lot of math\n1 unholy difficult midterm - I thought I was pretty prepared, but there were a lot of hard concepts combined, along with the requirement of doing a lot of big matrix operations we'd been doing in matlab by hand.  Not fun.  For one 20 point question, I got 0 points and a frownie face as the only explanation.\n1 final that I'm fairly sure will be a crime against humanity	7	5	1636	1921
25959	May 12, 2011	Cannon is definitely NOT a good discrete math teacher by any standard. In fact, he could possibly be the worst discrete math teacher at Columbia. Having had him for 1004, I thought he would be as a great a teacher at discrete math. He cursorily goes over TONS material which he seems not to have mastered well himself, but succeeds at covering it up. He assigns EXTREMELY long problem sets that are proof heavy. Attending class was a major time-sink as he would be late for class, his lectures were unorganized and his class examples trivial, not helpful at all when it came to doing the problem sets.Though discrete math is a useful class, I disagree it is the most important (as Cannon appears convinced) and he should be more considerate of this view.\nThe midterm for the class was fair, but the final impossible. Of the many faults Cannon's teaching style has, the worst is probably the fact that the final is cumulative, with approximately 700 pages worth of material--including over 300 vocabulary words and proofs--to know by heart. \nStrongly consider taking discrete math with another teacher.	Extremely heavy. 6 long problem sets--each about 18 multi-part questions. Mid-term is attemptable, but lots of material to cover (closed book, no cheat-sheet). Only gets worse with the final, with over three times the material to cover and hundreds of vocabulary words to know by heart.	18	14	515	397
25978	May 12, 2011	This is for the quantum computing class - take it with Papageorgiou if possible at all. He's a phenomenal teacher - clear, helpful, and it shows that he really cares about your learning experience. He starts off every lecture with a review of past lecture, and he'll go through plenty of examples in class to make sure you really understand the underlying theories and principles.\nThe class itself is no joke. You'll have to know your linear algebra (he'll do a quick review but you still need to have some background). Quantum computing comes down to matrix operators acting on vector qubits, so linear algebra is essential. Papageorgiou sometimes gets a little carried away and covers a large amount of material in a single lecture - make sure you go over your notes after to really understand it.\nAs a result of his clarity and superb teaching, the average of the class was crazy high. So you really can't afford to mess up since the curve will hurt you a lot if you do. But since it's taught by Papageorgiou, you really shouldn't have any difficulties. Go to class. Do your homework. If you have questions, ask him in class or go to his office hour (he's very very approachable, I occasionally dropped in his office not during OH and he was glad to help).	5 homeworks - mostly straightforward with a maybe a few less straightforward proof questions. Each homework has a programming component, which is very doable and it's cool to see how you can simulate a quantum algorithm on a classical computer.\nThere is one quiz before the midterm and before the final, whose grade gets factored into the midterm and final grades. He does this to make sure everyone is on track.\nMidterm and final were very straightforward and open-book and open-notes. He'll do plenty of review problems before the exam and even gave out at least 2 questions on the exam (without revealing the solutions). So if you go home and worked it out, you pretty much have already earned 50% on the exam before you even started it.	8	0	2762	5922
25994	May 14, 2011	First of all, the co-requisite of Discrete Math is not necessary in order to understand the materials in this class. In fact, we went over most of the graphs stuff in this class before Discrete Math. So don't worry about taking both classes at the same time,\nThe class covers the basic data structures and the algorithms associated with them. Most of the codes are provided by the textbook, so you don't really have to memorize how to write them, but you do need to know how they work. Most of the questions on the test and the hw require you to apply an algorithm to a set of data and show their results. The materials covered are not too difficult, and as long as you can think abstractly and understand what you are trying to do, you'll be fine.\nProfessor Allen is an excellent lecturer who presents the materials very clearly. He uses powerpoints for the lectures and every time we get to some code, he would stops and demonstrate how it worked on the blackboard. His lectures notes which he posts online are concise and super helpful. The lecture notes extract the things you need to know from the textbook without going into excessive details and get boring, as the textbook tends to do. In fact, I almost never had to use the book other than to do the assignment from the back of each chapter. You can get by on his notes alone without going to class or read the book, but I highly recommend you to attend the lectures when possible because he actually explains everything in details.\nThe homework assignments were not difficult. There's usually a couple of questions from the back of the chapters and 1 or 2 programming questions that'll take you about 3 to 6 hours if you know what you are doing and maybe 10 hours if you are really lost or have little experience in programming. The programming assignments mostly involved implementing the psudocodes he gave in class and put it in a real use, which I really enjoyed. \nIn summary, it's a (surprisingly) light class with a great lecturer and awesome notes. I highly recommend taking the class with Allen if you have the chance.	6 assignments that are assigned every other week. each take about 3 to 6 hours. There's always some extra credit for each assignment. Pretty light class (compared to other cs classes)	4	4	37	1622
25999	May 14, 2011	Warning: this class should be an applied math course. I attended lecture frequently but learned nearly nothing, and the slides were incomprehensible. He assumed a level of math that was not reflected in the prerequisites whatsoever, but at the same time, he oversimplified some things to the point of being confusing: he explained what an integral was but then, a few lectures later, used Lagrange multipliers without a single word of explanation. The homeworks were nigh impossible, and the midterm was about tangential mathematical properties of the equations that we based algorithms off of. This course is by far the worst grade I've gotten at Columbia, despite the effort I put in.	Five homeworks that take around 6 to 10 hours each.	4	4	1636	1921
26000	May 14, 2011	Like the person before me said, Martha is an incredibly nice professor. The course was well laid out with clear lecture slides that were all posted online before the class. That being said, if you miss a class (or a few) it's not too big a deal, but make sure that you go back and listen closely to the next lectures that expand on those topics because it can be easy to fall behind. Personally, on a few of the homeworks, it took me a little bit to understand what the questions were asking, but a quick conference with a friend uncovered that they were a lot simpler than what I was expecting. And if for some reason a concept doesn't stick, she drops your lowest grade. I would definitely recommend Prof. Kim optimistically to anyone who has to take fundamentals. This isn't a class to worry about and should interest people of all areas of study in CompSci, EE, and CompE with at least one topic.	6 homeworks worth 40% and a midterm and final worth 30%	1	8	4221	4251
26023	May 15, 2011	This class was totally hopeless, and not because of the material but because Professor Morris taught it horribly.\nI think he is a very busy PhD student and did not have the time needed to teach an important class properly. It is really completely the department's fault for hiring him to teach this class.\nI thought this class was going to be my hardest class but it was almost my easiest. Almost half the class averaged at above 90% I think. The lectures were terrible, the slides were all taken from the book and the few times I went I always started falling asleep - Mr. Morris would just stand at the front and go on rather incoherently - I couldn't really follow him and he undoubtedly had very bad communication skills as a lecturer. I stopped going to lectures after the first 2 weeks and just read the textbook which had everything we were expected to know and did well on both the midterm and final.\nThe homeworks, except for the first one, were all trivial. They barely took me anytime and I felt that I wasn't learning anything as they didn't require any thinking at all. I definitely spent more time on my homeworks in 1004.\nTry to avoid taking classes with this professor if you can, he does a bad job of teaching whether or not it's his fault or that of the department. You also won't learn anything.	Light	3	0	10722	2906
26038	May 15, 2011	Yes, his command over English is not the best. Yes, he does take digs at what students say if he doesn't understand them. But overall I wouldn't describe Biliris and this class as awful. His lectures are 2.5 hour long rambles, but not without comical interludes. His jokes are often funny, and he gives a ten minute break in the middle of class, which often extended to fifteen. Having said that, you can manage even without ever going to class, so apart from the few jokes there's very little value addition by his lectures.\nThe class material itself is interesting. It c, ould have been presented better (He reuses slides from several years ago, and doesn't even change the semester in the footer), but he has his limitations in teaching ability, and so you just need to make do with it. The four homework assignments are fairly easily. The projects can take time, but if your partner isn't completely lost, you can divide up the work and finish it over the course of a night. The exams are both fair, but of course, there's thinking involved, so it's easy to panic if things aren't going your way.\nIf you're not a CS major, I'd recommend to buy the book. His lecture slides are essentially a summary of the book, but there are some concepts that aren't very clearly explained in his slides. If you were sleeping in class (or absent, like I was), the slides will be of very little help in such instances.\nI can't say whether Biliris genuinely cares about this class or not, but he definitely gives the impression that he cares about the students. In our first class, he announced that we could call him up at any time before 11PMexcept if we were going through a breakup, in which case he said feel free to call me even after.\nIn summary: his lectures are pointless. But he's a nice chap. His material is interesting. The workload: not too bad.	Four homework assignments - the first couple take 3-4 hours maybe. The third and fourth are shorter.\nTwo projects - done in pairs.\nOne midterm and one final - both fair.\nThree grace days for assignment submissions and three for projects make life much better.	7	2	1442	664
26139	May 20, 2011	The very hilarious review below says it all.  I'd bet money that it was written by a TA.  Who btw were super helpful with everything the course threw at us, as they knew the real challenge was understanding what Prof. Traub wanted.  While Traub is a great man in his field (don't talk to him about it though), and is hilarious and cute, he is not a great lecturer as it is impossible to follow him. And it's not because the material is too hard.  Nor because we cover too much.	Not too bad; though on some weeks it was much heavier than others. All depends on the TAs (we had AWESOME, INCREDIBLE ones).\nAbout 20 assignments in all with about 10 extra credit assignments (an assignment means one problem). Midterm and final weren't too hard if you memorized and taught yourself everything (shouldn't take more than 5ish hours).\nDo the extra credit and you'll get an A/A+ if you don't screw up.	1	3	1028	861
79093	May 02, 2016	This is one of those classes that every systems programmer should take, even if they will never design a chip in their life. You will lean so much about what actually goes on in a modern CPU -- much of which is not very well documented by online resources. It's essential for anyone who wants to write fast code -- for example, if you plan to work on operating systems, libraries, or high-frequency trading. \nI learned a lot from the lectures, despite being scheduled Thursday 7 - 9:30 PM when everyone is exhausted. Prof. Sethumadhavan was a great lecturer for the first half of the semester, but then he stopped making jokes (probably because he was tired like the rest of us - but jokes help us stay awake). There are definitely some lectures that were extremely dry even though they could've been interesting. Also, his explanations are unclear (self-contradictory) sometimes on complex things, like how to access a DIMM.\nThe most helpful part of the course was taking with Prof. Sethumadhavan during halftime and at the end of class. He is really great at explaining stuff in small groups and genuinely takes pleasure in hearing interesting questions from students. Wish I had attended office hours more.\nThe problems from the book truly horrifying - they are filled with ambiguities and errors - but my understanding is that there are not that many textbooks about computer architecture. Maybe there are some non-textbooks that we could integrate into the course. \nHowever, I really enjoyed the group homeworks where we had to argue about how to interpret computer architecture papers and write programs to demonstrate concepts from class. The midterm was in the same vein - come up with some optimizations and then implement them - so I also enjoyed it a lot.\nSometimes the assignments were poorly worded or had bugs. For example, the hw3 skeleton code did not properly check whether the optimization changed the program's output, despite several corrections by the TAs over two weeks. This did not affect our group because we figured it out, but had we not been so careful, we could've wasted a lot of time and had nothing to show for it. I understand that TAs are busy, but correctness is also important.	A bit heavier than most classes in the department. Not as bad as classes like OS or PLT though. \nThree long homeworks, each one with an individual and group component. Pick competent group members so you'll have something interesting to talk about. Since there are only three homeworks, the workload is bursty if you (like most people) procrastinate until the weekend before the deadline. \nTake-home midterm which takes about two months.	3	6	3429	5392
26064	May 16, 2011	Ang is a really laid back PhD student who wants you to learn Python for your own benefit.  I'm not a CS major and the only other programming course I took was intro to programming in Java, over two years ago.  I wanted to learn Python since it's a pretty hot language and would be useful in my own research and nice to put on a resume.  That's pretty much Ang's philosophy, he assumes everyone is in the class because they want to use Python for something or another, not because they have to take the class.  Ang is super cool, always available to help, and he gave a lot of people extensions.  (In fact I think he gave the whole class a week long extension on the final project.)\nThe lectures and slides, as he admits, are basically telling you the same thing that the tutorial on Python.org will tell you.  So you don't really need to come to lecture, especially if you have a solid CS background.  Not having such a background myself, it was hard for me to follow the lectures, especially the late ones, but luckily it doesn't really matter since you get to choose your final project, so you really only need to worry about understanding the things that you will need to complete your project (which should be the things relevant to what you plan to use Python for anyway).\nThe class was six weeks, there were 3 homeworks: the first two were writing programs from scratch, the third was involved with the project (basically outlining, planning it, and writing the unit tests you plan to use).  The homeworks were really challenging for me because of my lack of background, and the first two took basically a weekend each to complete, but the time was well invested as I did well on all the assignments.\nThe final project was basically anything that would be "useful in your research" (of decent enough size and complexity to be called a "final project").  One of the most challenging parts of the class, for just about everyone, was figuring out what to do for your final project.  On the one hand it can't be trivial.  On the other hand, since you're essentially assigning yourself a project, you don't want to fuck yourself over with too much work.  If you can find the right balance, you'll probably do well and it won't be too painful.  You also have to give a short presentation of your project either to the class, or to Ang or the TA one-on-one.  Again I spent a lot of time on the project and did really well.\nOverall I'm glad I took the course as what I got out of it was proportional to what I put in, which is how it should be.	3 homeworks, only two were real programing assignments [40% of grade].  A final project of your choosing including a manual, help docs, unit tests, and a short presentation [60% of grade].	1	1	11132	5519
26087	May 17, 2011	For a Discrete Mathematics course I felt that Cannon did pretty good job. He was enthusiastic about the course material and was clear in his presentation of core principles in Discrete Mathematics. His proofs were simpler than the textbook's but they showed the basis for core theorems and for what he expects in proofs. Cannon was also able to effectively condense a 800 page textbook into only a notebook of notes. While the textbook is huge, most of the material in the textbook are proofs and there are only a 100 or so pages of actual definitions, theorems and algorithms that you need to learn. However,I feel that Cannon was irresponsible in frequently arriving late for lecture.	The workload is reasonable. We had 6 problem sets that take about 10-20 hours each but you get two weeks to do them. The midterm was easy (definitions, some calculations, and 2 easy proofs) but the final was extremely hard (many proofs that are not all intuitive).	3	4	515	397
26117	May 18, 2011	I have to disagree on most accounts with the below polemic on Adam Cannon. There are two separate issues needing to be addressed here. First, whether or not Adam Cannon taught the class well, and second whether or not it was hard and time-consuming.\nI can say that I thoroughly enjoyed the class and, as usual, found Adam Cannon to be an engaging and witty lecturer. It is true, he wasn't on cruise control as he is while teaching 1004, but he was still very good. His explanations were intuitive and clear and he realized that most people taking the class had not had previous exposure to a higher level of mathematics. As a result, he time again emphasized and explained to us, the importance of thinking truly mathematically as it were. In other words, he taught us to recognize the importance and place of proofs in mathematics and stated that while examples are often helpful, they are simply not adequate to understand abstract concepts completely. He sometimes proved theorems which were not in the book, so be aware of that and occasionally makes notational mistakes on the board so don't be afraid to point them out as he often doesn't notice them afterwards. I felt lost in only one of the lectures which was the one on solving liner homogeneous and non-homogeneous recurrence relations, I don't know what happened there but it seemed like Adam Cannon was having a monologue with the board for 20 minutes.\nIn class, he asks interesting puzzles related to the material and will always give you an idea about the real-world applications of the concepts being covered. He is also just friendly and approachable. He has 4 office hours a week, which is more than most professors, although there is often a line so go early. Definitely go to office hours if you get stuck on the homeworks, he's more than happy to help. He'll rarely give away an answer but will certainly tell you how to approach any given problem.	6 homeworks assignments in the semester - we had 2 weeks to complete each assignment. They were pretty long in an absolute sense, but given that we had two weeks to solve them, the length was by no means unreasonable. A quarter to a third of the problems in each assignment were proofs but most of these followed almost straightaway from the definitions. Writing proofs was hard at first for some people, but then again learning how to write basic proofs is half the point of the class. The bulk of the time-consuming problems are in the earlier part of the assignment so you can get started early during the 2 week period. One thing I did find was that the point distributions on the homeworks could be bizarre and some hard problems had very few points assigned to them. Also the TAs sometimes graded kind of harshly so if you think they overlooked something and your solution was correct, definitely go back to them and ask.\nMidterm was easy, the 2 proofs were perhaps the only tricky part. The final was cumulative and the questions were difficult. Lots of counting problems, 4 proofs  (3 of them manageable) and some modular arithmetic. 20 points is testing vocabulary so these are basically free points and you have to learn the definitions anyway in order to do well on the proofs. It also doesn't take all that long. According to him, the class is curved to a high B so about 30-40% of people get some sort of an A.	0	5	515	397
26118	May 18, 2011	This class is basically two classes combined into one. The first half covers digital design and the second covers computer architecture involving learning elementary programming in MIPS assembly.\nThe Good: \nMartha Kim is friendly, approachable and helpful. She willingly answers questions in class and for the most part she answers them well - especially when it comes to the computer architecture, she knows her stuff well. She teaches from slides, and what's in the slides is pretty much what you're going to be expected to know for the class. The slides are easy to read and understand and have intuitive diagrams. A lot of the pictures are taken from the textbook. I found the course material interesting and valuable.\nWhat was wanting:\nThe lectures were mostly very boring. She spent a lot of time explaining trivial things that we could have understood better and more quickly by glancing over the slides on our own time. Most of the lecture was spent in teaching relatively straightforward concepts but almost no time was spent teaching us to apply them. In other words we did almost no real problems-solving or "thinking" in class. Any examples covered, were for the most part trivial ones. As a result, there was a gap between the lectures and homeworks and an even bigger one between the lectures and the exams. The lectures certainly prepared us very poorly for the midterm on which the mean was a 52 and which was so long that almost no one actually finished.\n6 homeworks in the semester, one assigned every two weeks, about 4 questions per homework. Given that we had two weeks between hwks, it was really very little work. I spent an average of 4-5 hours on each assignment, only about 2 of the questions out of 4 actually required thinking, although these ones could be tricky. The problem was that we didn't have enough of these questions and didn't have enough homeworks so when the midterm rolled around, we got killed.\nThe final was non-cumulative and included everything from after the midterm. It was about the same length as the midterm but we had double the time so it was manageable. The mean was 63 - I got a 92. I recommend reading the slides and textbook very carefully. You need to have a complete understanding of the single-cycle and pipelined processors - especially the pipelined one and also get some practice coding in assembly.	See above. 6 hwks, lowest score dropped (40%). Midterm (30%). Final (30%). Class curved to a B+ she said (and thankfully so).	4	4	4221	4251
26119	May 18, 2011	The topics were extremely interesting. All of the readings were fun and understandable. Unfortunately, the class was enormous with about 200 people and the lectures took a hit.  The instructor had no clue where most of the class was, and questions were rare. The lecture slides and lectures assumed reading ahead of time, and half of the class seemed to be behind. I got an A+ and I didn't do anything special other than read ahead in the book. The class doesn't lost as prerequisites but should MATLAB, optimization (Lagrangians, subgradient and gradient methods, etc.), graduate probability ( measure spaces, Bayes, and conditional/causal reasoning, etc.), lots and lots of linear algebra, and differential equations. It felt like he was trying to fit an entire career of ML into one semester.  \nSome I sat next to in class were from basketweaving departments like OR or Business.  This is definitely a math or statistics class.	Five very challenging homeworks. They would have taken much longer, but the answers were all online from previous years.	7	2	1636	1921
26136	May 20, 2011	Prof. Morris is perhaps the sweetest professor on campus.  He's always willing to listen to students when they voice concerns.  His teaching is pretty standard for a beginning lecturer, and he puts all of his lecture slides online (on Google Docs) so it's easy to follow along if you get lost.  I learned stuff - and yes, I could've learned more with a harder professor - but I didn't have to kill myself at all.	First assignment was very difficult, next 3 weren't so bad. He drops your lowest score out of 5 (in our case 4), pretty easy/standard midterm/final	1	5	10722	2906
79125	May 09, 2016	The material is easy. The teacher is acceptable. But be aware: your grades will depend a lot on how CAREFUL you are in following the instructions of homeworks/exams.	light	1	0	375	664
26147	May 22, 2011	So having read the below reviews, I tend to agree. So instead of harping on the bad, I'm going to talk about the things that were ok with the class. Give me a break, the TSA was a bit slow so I missed my flight, so I'm burning time until my next one.\nShlomo, is an interesting character. I don't know what his method of teaching is. Some (actually most) would say there really is no teaching being done, and going to class is just to find out what things you have to go on the internet/break open the books to learn yourself. This is completely true. Be prepared to scour the interwebs for tutorials and the sort if you are as unfamiliar to PERL and C as I was. \nOn to the class...\nThe class... was really what you made of it. I usually went to lecture because it was closer than my dorm from the class I had right before it. They were ok and I'm sure if I was the diligent notetaking type I would have gotten a little more out of the class than i did. But be prepared to get sidetracked, because like every lecture, there will be dumb questions being asked (once, some kid asked a question where the answer was literally on the slide we were on). Normally this isn't a big deal, but Shlomo has a tendency to stop and continue on that tangent. I think we've finished 3 lectures without him putting on a flipbook presentation of the last 20 slides in the 3 mins at the end of class. \nThe lab (not the assignments) was surprisingly enjoyable. I did spend much of my time there laughing and fumbling with the assignments, but having people there who ostensibly were there to help you was a tiny bit calming. Unfortunately, if you actually NEED help, then good luck. I'm sure the TAs are very capable programmers, but like most people who can do, they really can't teach. Take this with a grain of salt, as each year the TAs change. Shlomo, while he is there for maybe the first half of the term, goes AWOL when shit gets real in C.\nThe one awesome thing that I particularly enjoyed about Shlomo (no sarcasm) is that he is super lenient with deadlines. While some people are frustrated by the constant pushing back of assignments, trust me, you will be saved at least once by this.	Soul-sucking. Most of the assignments aren't bad, but some of them are just practices in frustration and the sort of thing you'd imagine a wise Shaolin master would give you to test your patience. Be prepared for major struggles with webthumb and for your sanity, do not leave the labs until the night before. I'm sure those who do can handle it, but seriously, why the f*** would you do that to yourself. Also, GET A HEADSTART ON YOUR PROJECTS. In lieu of a midterm, these two whoppers will be the second largest portion of your grade. Be prepared to devote large portions of your time you could be spending with lovely ladies and your WoW buddies (that's what the hip kids do now right?) to getting your shit to work if you decide to just stick with PERL and C for the projects. \nIn the end, when the light at the end of the tunnel hits your face like the doctor's light on a newborn baby's face, you can at least take solace in the fact that there will be much extra credit on the final (which almost seemed like a formality) and if you put your due diligence in the class, you can walk out with an awesome grade.	12	0	1671	4758
26156	May 23, 2011	Most teacher I've had at this school thus far have been subpar (*SHITTY*). Blaer is very interesting and funny! He makes everything very understandable and the TAs are very accessible over e-mail. If you get how to do the homeworks you should have a good grasp of everything. The homeworks can take a bit, but they aren't intimidating. Seriously, just pay attention in class and write down everything he says. Should be an easy A if you dedicate some work to it!\nBlaer was awesome! It feels so weird that I can actually do programming! WA THE FUUUUH?!	5 homeworks (2 weeks to do each, with 1 that we had probably like a month to do and one that we had like 1 week). They are really doable, especially if you have friends who know programming/people in the class who get the hw/if you go to office hours/if you ask the TAs over e-mail.	5	3	3409	2906
26175	May 24, 2011	Professor Cannon is great.  While his lectures aren't always structured like they're coming from an outline you can copy down, they aren't boring and they do get the information across.  The point of Discrete Math is to make you learn to think through problems, and few problems in the real world just appear in your head with a clear path to get you from A-B-C-D-E.  If it were that easy, it wouldn't be a problem that you needed to learn how to solve.  When he lectures, he doesn't just go A-B-C-D-E, he tries to get you to think about the process behind getting to E.\nThe class covered a lot of material very fast, and it definitely helped if you had a rudimentary familiarity with things like statistics, logic, and counting.  But if you didn't he gave enough information that you should have been fine.\nHis lecturing style is a bit free flowing.  He seems to have an ordered list of a dozen or so things to get through each lecture, and will work through them.   He does enjoy occasional diversions to related topics.  He clearly likes the material and manages to keep what could be a very dry topic interesting.  He welcomes questions, and is one of the best professors I've seen at being able to explain concepts multiple ways when people don't grasp them.  If you ask a stupid question, he won't sugar-coat his response, but he won't out-right mock you either.  And in one-on-one interactions, he's great.  Very approachable.\nOn the downside, he was usually 5 minutes late to class, and there was a very long lag time for homework to be graded and returned.\nAnd he LOVES his definitions.  Make sure to copy them down and memorize them for the exams.  You'll need them both for the terms section and also for the proofs.  They're the keys to the kingdom.	One problem set every two weeks (about four hours of work)\nOne midterm\nOne final (cumulative)	7	7	515	397
26290	July 06, 2011	Most of the reviewers from spring 2011 class have got it right about the lecture style of prof Jebara. He simply can't teach. I think the prerequisites are enough to prepare you for the math covered in the material; you will have the opportunity to explore more of differentials applied to matrices, lagrangian and bayesian probability. \nFor me it was pain attending lectures as I could hardly follow him. I guess his lectures were hampered by the size of the class. He would always seem to be in a hurry to cover as much material as he could without really caring whether students understand any of it or not. Like many others, I had to rely on online lectures from Stanford to build a proper understanding of many concepts covered in the class. What a shame! \nAssignments do well in helping you get the feel of the concepts but are not substantial enough to endow confidence to tackle hard problems. Mid-term was a disaster. Final exam was good, I thought.	Five assignments, a midterm and a final exam. Assignments have programming (in matlab) and non-programming (math) problems. Most of the problems in assignments test basic knowledge, therefore doable in couple of hours. Some (in most cases non-programming problems) are extremely difficult and you would spend days pondering and not get an answer.	11	4	1636	1921
26304	July 18, 2011	The class is very well organized but the lectures are really boring. The assignments in this course are all based on Flash Builder with 3 assignments(2 individual) and a final project. The theory exams are totally theoritical. If you have a really good memory, you can do very well in the exam. Just read everything from the textbook as well as his slides thoroughly, as questions can come from anything: Be it a single line mentioned in the slide or rather a random paragraph from the tetxtbook.	Easy course. Not too time demanding!	4	1	39	663
26425	October 22, 2011	I am writing this review a semester after I have taken the class... while at the end of taking Advanced Programming with Shlomo I was rather disappointed by the utter waste of time that taking AP with Shlomo is, it had not downed on me yet the ramifications that his class would have on my future studies.  \nAt the end of Shlomo's class you will not know C or C++, the most crucial element of AP, and one that you will regret for the rest of your stay at CU!\nIf possible, avoid Shlomo like the plague that he is!	9 lab - badly explained, useless for actually learning any skills, rather easy but time consuming\n1 final - joke	9	3	1671	4758
26690	December 22, 2011	Mathematical Programming is conceptually easy, but the graders and TA's will take off a lot of points for mistakes.  I actually enjoyed going to lectures except when we did proofs that were never seen again for the whole hour, which you can just read and understand on your own.  Grades seem to be too subjective in the sense there are several ways to approach a problem so TA's are likely to give back points for regrade.  The first average of the midterm was an 80, the second was a 90, and then final was an 80.  Obviously the material is not difficult, but you have to work to keep up with the average.\nCurve was nice:\nfinal grade >= 96  ---> A+\n90A\n84.5A-\n80B+\n75.5B\n69B-\n65C\nfinal gradeC-	10 Problem Sets (20%) - Most easy and helpful\nMidterm I (20%) - A little tricky\nMidterm II (20%) - Very straightforward \nFinal (40%) - Cumulative, but focused more on LP formulation and second part of the semester's algorithms	2	0	4996	NA
26528	December 06, 2011	Course without any textbooks/reference books\nOnly thing you can *rely* upon is class lectures that are nothing more than few lines long on topics that range from almost everything to everything in parallel computing.\nOne Instructor Vijay Saraswat is more interested in telling what X10 can do and what HE can do rather than teaching something that we could understand. One of the worst courses I took in all my life.\nVijay did not teach rather he just tested again and again what students know beforehand....everything he spoke only 3-4 in class could make out what he is talking about.Worst idoit I have every seen.Really sick of this person and unable to find suitable words to match culpa requirements.\nAll IBM bastards were equally crap and they were also not so interested in teaching but i dont know wtf..\nJust could not make out things unless you studied them beforehand(I mean in your undergraduate or so..)\nGot really really frustrated after taking this course, did not learn anything great here except some shit like asyncs , streams etc..\nDont take this course unless you have to just fulfill credit requirements and there is no other course to take.	heavy with assignments with stuff that they rarely teach in class well.He will just talk some shit in class about some sentences and give you to figure out rest....such an ass	36	0	4221	6026
26577	December 14, 2011	The premise of Computer Graphics class is to understand the fundamentals and principles of graphics. How we perceive the world in perspective; how we understand surfaces, shape transformations, and shadows interacting with light sources; how we manage to get millions of triangles described in a text file to be displayed nicely as Nemo in 3D model; how we render stunning images from a merely text file; they are all in one class. I cannot believe I have accomplished so much in one semester, and this class is simply one of the best class at Columbia that exceeds tuition fee that I pay for. In this class you will be exposed to pretty much everything in graphics pipeline. The awesome part is that you gotta have to sit down and implement real graphics program from scratch. It is a great class to let you see how technology and art can strengthen each other. And who wouldn't like a class that he/she can enjoy the two at the same time?\nEnough said with the class. Prof. Grinspun himself is also an extraordinary teacher. With his exclusive background in math, you will blow your mind to let you see how much graphics and math are inter-connected. In addition, because he is an excellent teacher who explains things from the perspective of someone who knows little about the subject, you can't go wrong with the materials. His humor and energetic teaching style will also motivates you to engage in the class, even if it is two hour class straight at night. There were multiple guest lectures, which feature people from the real industry, like NVIDIA for example, to talk about the technologies that people are engaging out there. After you have taken the class, you are sufficiently well-rounded in graphics.\nThe assignments are heavy. It is pain in the ass; it is self-tortured at times, but the reward can give you a life-time inspiration. My favorite part is that you will have chances to do something creative and get credits for them. By the end of the semester, you have more than flourished programming skills, but also motivation to create digital arts in your own way. Highly recommended class for anyone who's interested in graphics.	About ten assignments. Each one varies in length, but most of them are time-consuming but not impossible. Prepare to have a solid background in C++ and a good sense of math, and you will go a long way without banging your heads several times a week like me.	2	0	2480	2634
26585	December 14, 2011	Nowick puts a lot of effort in this course and he is very disciplined, organized and nice person. However, be prepared to spend ample of time on projects and homeworks if you are planning to take this course. He doesn't make jokes in the class and not a very dynamic professor. Another negative side is, sometimes he will just introduce with a new topic briefly and then he will make suck a homework problem or project that you will need to learn everything by yourself to confront it. Having said that, he is very approachable and if you are lucky then you might get some good TAs to use some help from them. I would say, it's not a dead hard course and it's possible to get good grades if you work hard. Also, if you are good with logic design fundamentals then it will be smooth. \nIf anyone is interested to work on digital logic design/ hardware design, then I would recommend to take this course.	5 homeworks, one final project, midterm, final (we had to do 2 projects and 4 homeworks).	9	0	46	6038
26641	December 20, 2011	I have no idea why this guy has a silver nugget. He's not a good teacher. At all.\nHe always has a very, very specific answer in mind when he asks questions. In class, this leads to him calling on several people before he hears exactly what he wants to hear. He often gets exasperated at people not saying the right answer immediately. What's important to note is that often the right answer has been said, but he just didn't notice because he was too fixated on having it said exactly how he thinks it should be.\nThat's how it was on the exams as well. Clearly, he thought of the answers before he thought of the questions, and didn't spend much time thinking about how to phrase the questions. They were completely incomprehensible. On the midterm, he even gave us all an extra 8 points because he admitted that one question was so terribly convoluted. On the final, the chalk boards were covered by the end of the exam because of how many changes he made to the directions. I must have lost 20 minutes going back and redoing stuff because he was redefining the questions as we were taking the exam!\nThe work load is enormous in this class. Again, the questions were often ambiguous. If you badgered him on the discussion board, he'd sometimes clarify things. He also didn't check the API before assigning some of the graphics stuff. I must have spent 20+ hours combined trying to work around bugs in the API to try to make my designs the way he wanted them. I even sat down with him once in office hours to read through some unofficial API source code, given that his response to one of these bugs was, "Hmmm...that's unexpected..."\nOverall, this class was the most frustrating experience of my semester. If I didn't have to take it, I wouldn't have. I don't feel like I learned that much (except for some interesting stuff in chapter 7 about generics). I feel like if Kender had been focused, it might have been a semi-enjoyable experience. He was too much in his own head and didn't interact well with students, though.	Unreasonable. In fact, on the course evaluation one of the check boxes was next to "So much I didn't learn anything." The fact that he would even consider this to be an acceptable option speaks volumes about how he approaches this class.	15	37	42	2906
26685	December 22, 2011	Cannon is great. He's an interesting lecturer (hilarious, and also super passionate), very receptive if you ever want to meet, has tons of office hours, and is always very fair. Also, he has tons of (useful) TA's, so basically there is always someone available whenever you need help on homework, including weekends. \nI had some experience with programming before taking this class, but I had to put a sizable amount of work into this class--the programming assignments take time. (But really, start early. The TA's can basically help you through any problems you're having if you go to office hours.) \nThat being said, this class made me want to be a computer science major. It's incredibly fun and satisfying, and was definitely my favorite class this semester.	An assignment every week alternating between a problem set, which should take maybe an hour or two, and a programming assignment, which can take between 2-10 hours. This class really is manageable, as long as you start early and get help--people who say it took them 20 hours a week probably started homework due Monday on a Friday.\nOne midterm, one final, both very straightforward---if you do the readings and understand what he's talking about in class, you'll be fine.	7	2	515	3807
26847	January 06, 2012	Awesome professor who in any other context may be mistaken for a cat lady. She puts interests in every one of her students (admittedly easier than others because of a class size of 15 or so), is easily approachable, and keeps the long (2 hr) discussions as fun as they could possibly be. Also one of the best academics in her field... if you're a CS major looking to do coursework in NLP, you should absolutely take at least one class from her!	Weekly paper readings (varies in length), 1 Final Project (Proposal, Interim Report, Final Report and Presentation)	3	0	1957	6152
26695	December 22, 2011	Aho was possibly the best CS professor I've had at Columbia... and I've had some pretty good other professors before. \nThe book (HMU, Automata Theory, Languages, and Computation) is a bit dense. Luckily, his class notes (posted on his website) are a very condensed, very readable summary. They don't cover everything, though, so you'll have to fill the rest in yourself.\nAho is a very clear and straightforward lecturer. No matter what question you ask, he's able to answer it without hardly having to stop to think - almost robotic (in a good way). Few mistakes, doesn't skip a beat. And a good sense of humor to boot.\nThe midterm and final were straightforward - the problems were difficult, but short (either you knew the answer and could justify it, or you couldn't). No need to memorize tons of proof details when studying, as long as you understood the process and the underlying concepts. Be warned, though, there was at least one trick(y) question on each exam, so you really need to know the material well!\nI'm glad I took this class, as it gave me an appreciation for theoretical computer science (particularly lambda calculus) that I never had. It wasn't the most back-breaking CS class I've taken, but it's definitely one that you'll want to dedicate some time to, partly because the material is dense and abstract, and partly because Aho is just an all-around awesome dude.	Four homework assignments. Moderately difficult, though very doable if you start early, work carefully, and ask TAs for help if you need it. Midterm and final were both fair, but there were a few tricky questions on each. Grading seemed fair - a bit on the generous side, but hard to tell.	5	8	1891	234
26735	December 25, 2011	Jae was an okay teacher with a fair grading scheme, but I wouldn't say he was mind-blowingly spectacular. Take my review with a grain of salt, as I got senioritis halfway through the semester and never went to office hours.\nThe semester started out well enough, with a lot of good explanation of pointers, C syntax, etc. But as time went on, he started to fall behind in his lectures. As a result, the lectures were less focused on explaining and teaching material and more focused on explaining what you need to know for the labs.\nLabs also took a similar route. I started from knowing the functions I would need for the labs to Googling everything. Thankfully there's stackoverflow and cplusplus. He would also always extend the lab due dates to reasonable dates for everyone.\nTests were fair. He emphasizes that doing the labs on your own and understanding what's really going on will be the best preparation for the exams, and he means it. I didn't need to study much else beyond reviewing the lab solutions.\nJae also set up a course listserv in which he (Jae), the TAs, and the students could all participate. Anyone could ask or answer question, post articles related to computer science in general, etc. It's a good system, but you have to find a way to sort course e-mails from the rest of your inbox; the listserv totaled 766 e-mails throughout the semester.\nOverall, someone with any initiative and the ability to adapt to CS languages shouldn't have a problem with this course, and there's plenty of resources to help you along the way if you seek them out. But don't expect to come out with god-like programming skills. It's just a CS course.	10 labs, with lab 7 taking the longest time and lab 8 being truly optional\n1 midterm\n1 final	19	11	3509	4758
26744	December 25, 2011	When you enroll into this "Intro" to Java class, you are signing yourself up for a scheduled butt-kicking every time a programming assignment is due. \nDo yourself a favor and start the programming assignments early, and write down all your questions so that you can meet with the TA's during office hours to sort it out. \nCannon is a fantastic teacher and he is very talented at keeping the entire class attentive during lecture. Take notes during class, because he only covers the important material, which makes sense, because that is exactly what appears on the midterm/final.	Homeworks worth 40% (2-3 from one Textbook, 2-3 from another Textbook, and 5-6 programming assignments), a midterm worth 25%, and a final worth 35%.	11	1	515	3807
26754	December 27, 2011	Prof. Papageorgiou teaches simply.  He'll review material covered in the previous class, then get on and whiz through the topics he planned for the current class.  And that's about it.  Especially since the material isn't the most exciting stuff, class can get pretty boring.\nHowever, he really tries to make computational linear algebra accessible to everybody, and he tries to give everybody good grades.  If you ask him to stop and repeat something, he'll do it.  If you're a little confused about something on a quiz or a test, go up and ask him about it.  He's very liberal with hints.\nThere are five homework sets, four quizzes, a midterm, and a final.  The homework sets are part theory (questions from the textbook) and part programming (often to implement algorithms he discusses in class).  None were particularly challenging, except for the one for finding the null space of a particular matrix, and only because there were so many places for hiding potential counting errors.  The quizzes and tests are really, really easy (he called one a "morale booster") and are meant to help your midterm/final grades.  The midterm and final are also ridiculously straightforward (he'll even give you two or three of the five questions beforehand).  Oh, and it doesn't hurt that you can ask Prof. Papageorgiou to check your answers for you.  He'll tell you if anything's wrong and the correct way to get the right answer.\nThis course covers a lot of topics, and if you're not interested in linear algebra, you'll find it incredibly tedious.  But at least Prof. Papageorgiou will be there to simplify everything and help you get a nice grade in return for sitting through class.\nThere is one side-effect of getting so much help from the professor, though.  If you want to get an A+ and not just an A, you have to do the four extra credit assignments.  But that's not really much of a side-effect because they're also unbelievably easy.  He even give hints for those, too.	A short homework set every two weeks (five total), four extra credit assignments, a midterm, and a final.  Nothing very challenging at all.	6	1	2762	3992
26764	December 28, 2011	You know you're taking a class on a different level when you're doing homework and whenever you Google for help, your own damn professor's slides and research papers are the top (and sometimes only) results. \nYou know from that that Michael Collins is obviously a brilliant man and has made a huge impact on NLP research, but he's also a great lecturer and professor. He explains topics thoroughly and thoughtfully and takes time during class to answer all questions. He'll give printouts of slides to you as well as post them online. (The slides themselves are really only meant to supplement his lecture thoughÃ¢â‚¬â€there are some classes where the slides are a good substitute for in-class notes; this is not the case here.) For some of the bigger topics (part of speech tagging, machine translation, etc.) he'll also type up his own notes that cover the subject pretty well. Overall an approachable and friendly guy. \nAs for the course itself, like a previous reviewer said, Collins definitely brings some rigor to a class that is generally within Julia Hirschberg's realm of teaching. The class felt like applied machine learning at times, and you were at an advantage if you've taken some sort of ML before, and a strong foundation in statistics is important to really understand what's going on. The average on some assignments and quizzes were really low (a third of the class got less than 50% on the second quiz), but the class is curved. The tests were a mix of applying basic knowledge on a topic and adapting algorithms learned in class to some unique situation. The analytical part of the homeworks were generally in a similar spirit. Grading was a bit harsh at first but seemed to let up towards the end. \nIf you know 1) your stats and/or 2) have taken some ML before and 3) want to learn NLP from one of the top people in the field, there's no question you should take this class. If you just want to do #3, it'll take you a little more effort, but you'll probably muddle your way through like the rest of us. If none of these sound interesting, there are better classes out there for you, friend.	2 quizzes, 1 final.\n3 homeworks, seemingly released at the TAs' whims. All had analytical parts, first 2 had programming. On par with what you'd expect from this style of course. \nProgramming wasn't necessarily difficult, but sometimes it's hard to debug when you're working with a decent-sized corpus and your entire program takes minutes, if not hours, to run. If you ask, the TAs should release how long each program should take to run (generally < 5min), but everything's language-dependent anyway so that's only slightly useful.	13	0	10729	4903
26768	December 28, 2011	Professor Grinspun is old school. His classes will punch you in the face and make you learn out of self defense. He's a very good teacher. This class is definitely the closest I've had to "drinking from a firehose" style learning.\nThere's not really a whole lot else to be said The guest lectures were all great and relevant. Almost half the course was guest lectures, partly because we sort of ran out of things to cover partway through.\nStart the ray tracer early.	Intense. Weekly programming assignments that take about as long as the bi-weekly ones I get in other classes. I'm astounded by the sheer amount of things I had to learn how to do. He doesn't do extensions, save for a general ten-points-off-for-hour-late policy.	3	2	2480	2634
82440	November 04, 2020	I don't see any reviews for how this class was virtually, so I'll go ahead and throw one out there. In short, depending on your math background, I'd say this class could range from pretty difficult to regularly feeling impossible. The tests are pretty hard (sub 50 medians), and the exam caliber practice material is pretty limited. At best, you might be able to find old exams from other schools like CMU or UC Berkeley which are good for seeing if you can apply what you learned, but I found Verma's exams to invariably be harder and impossible to thoroughly finish. If you've taken multivariable calc, linear algebra, and probability you'll be able to comprehend the symbols on the homework (which is often an important first step in solving the problem!), but beyond that, I think having some kind of classes in real analysis and convex optimization would make the intuition much easier. The TAs were good and helped make the problem sets doable. The prerecorded lectures are nice, and Verma seemed helpful in his flipped classroom office hour sessions. The difficulty with the online format is especially compounded by the fact that no group work is allowed on the homework, so you can't just do 2/5 problems and have your group mates do the rest. It seems the difficulty of the problems was scaled to match things, but the class is inherently hard and there's only so much adjustment that can be made without compromising the integrity of the education. Another brutal aspect of this course is that the gap between the final and the last PSET is small because the exam happens on the last day of class, so there's no reading week to study for it. For reference, during the fall A term, the PSET was due on Monday and the exam window (there was a 48 hour period during which you could sit and submit the 2-hour exam) opened on Thursday. This meant you had most of 3 days to really dedicate to studying for the CUMULATIVE final without worrying about other stuff in the class. Good luck if you have a bunch of other stuff going on in those 3 days. \nThe programming can handily be completed in python and isn't a real focal point of the courseâ€” it's more focused on the theory and you receive basically 0 help on any debugging or algorithmic design. If you don't know python don't use this course as a way to try and learn it from scratch. If you know some basic python and are good at googling how to solve your problems, you'll be ok.\nDespite how hard this class is and how much past experience with the subject matter helps, I'd still recommend it to anyone willing to try really hard because it's one of the few classes I've taken where I feel like I really learned something. I now can read papers on machine learning and have some remote idea of what's going on with the design, and I feel like I can use many existing tools with intent and knowledge on the advantages and drawbacks of each. While the class is curved in the end, don't take it if you're looking for an easy A. I think to the average undergraduate student that's taken the bare minimum prereqs listed on the course website, an A- and maybe even a B+ are great achievements here.	Pretty high to Extreme:\n4-6 PSETS (40% of final grade) that can take upwards of 30 hours depending on how good you are at rigorously proving things and coding/debugging. Most of the hard part is figuring out what exactly the question is asking, putting together a solution usually took less time. You're in serious trouble if you save this stuff for the last minute. \nMidterm (30%) covers first 4-5 units, pretty conceptual \nFinal (30%) comprehensive, hard as hell	12	1	13496	1921
26794	December 31, 2011	A pretty good class. Prof. Malkin makes a point of offering both conceptual and formal treatments of the material, which in principle is nice (as just about every result in crypto is deeply counterintuitive); in practice, I found her lemma-proof-theorem teaching very clear, but the high-level explanations so vague as to be practically useless. Part of the issue was that a large portion of the class didn't really have the mathematical maturity necessary for this course, and she would get bogged down answering basic questions and then have to rush through material. She got better at this (i.e. stopped answering stupid questions) as the semester went on, but it remained frustrating throughout.\nHomework assignments were well-designed. Fernando (the TA) was a real stickler for rigor, and I definitely learned to be more careful about writing up proofs by the end of the semester. Midterm (in class) and final (take home) were both trivial; I don't know what the final average was, but due to the aforementioned mathematical maturity problem midterm scores were shockingly low.\nAs a side note, this can be a great class even if you're not specifically interested in security. I was in learning theory at the same time, and my final project for that class relied on a bunch of cryptographic hardness assumptions---this is about a lot more than secret codes.	Light. A problem set once every couple of weeks that usually took me 2-3 hours (including typesetting). Don't cut corners on your proofs.	3	10	1621	2970
26795	December 31, 2011	A really fun class. As other reviewers have already pointed out, Prof. Servedio gives the clearest, best-organized lectures in the department---he made a large body of complicated theory totally intelligible.\nThe format of the class is nice: no exams, just a few problem sets and a final project. His argument is that the insight necessary to solve most of the problems in this class doesn't come right away even if you have a solid understanding of the material, so a test isn't a fair evaluation. This was certainly my experience---I felt like I had a better grasp of the theory than most of the class (this is judging by the pset averages: as so often seems to happen in this department, the undergrads inevitably outperform the grad students) and I would regularly spend hours staring at the homework assignments without making any progress.\nProf. Servedio was also extremely available outside of class, and was extremely helpful in suggesting references and proof techniques for my final project.\nSome advice: as soon as every problem set comes out, take an hour or so to just think about the problems without any expectation of solving them. Your brain has this marvelous ability to process subconsciously, and you'll find that if you return to the pset in a few days you've already made a great deal of progress without reading this.\nIn short, if you're in either the theory track or the AI track, this is a fun, low-stress (but not low-workload!) class that will do wonders for your development as as a computer scientist.	Not too much on paper, but be prepared to spend a loooong time on problem sets and invest a decent amount of time in your (12-ish page) final project.	10	0	1724	2287
26800	December 31, 2011	Professor Carloni is a very nice, approachable and friendly person BUT, he sucks at teaching. Computer architecture is a basic course and he failed to teach it effectively. Most horrible thing is, it's too hard to understand his weird accent. At the beginning of the course, I thought that it's my problem that I don't understand his lecture clearly but eventually I came across many students who struggled to decode what he says in the class. I will give him an A+ for his friendly and welcoming behavior but unfortunately he fails to be a good teacher. \nThe good news is, if you work hard then you can manage to get good grade. The TAs were awesome during my time. If you have Marcin as a TA, then make the best use of him. He is good at explaining the concepts. Another bad part of this course is, Carloni starts talking about advanced topics during the second half of the course and he terribly fails to explain the intricacies of his lecture slides. He also assigns a lot of research papers for reading but eventually he doesn't give any questions in the exam from those topics. So, it's not a big deal.\nIf you work a bit hard, then you can manage to get a good grade and will have a good idea about basic computer architecture. However, you will feel that the you could do much better if you had a good professor!	5 homeworks, one project, one mid term and one final. Homeworks are not so time consuming and level of difficulty is intermediate.	3	8	4212	5392
26824	January 04, 2012	I have to disagree with the review below me on multiple accounts.\nFirst, workload: There are five assignments, a midterm, and a final. For each assignment, we were given at least two weeks if not more. Kender, though as inscrutable as Dumbledore in his answers, will point you in the general right direction through discussion boards, and office hours with the TAs and Kender himself will help you if you're ever feeling totally lost--but to take advantage of this, you MUST start the assignment earlier than the weekend before they're due. They can take up to a whole weekend to do but often much less. They are difficult, but they can be fun and you'll learn something from each one.\nSecond, as for the phrasing of questions, he just likes for you to state the reason behind the answer rather than rote memorization. To reiterate what previous reviews have said, he seems grumpy but he's really a sweet, witty, silver nugget-worthy guy.\nHe's like an m&m with a hard crunchy outer coating but is really just a sweet, melty, softy on the inside. If you really took his exasperation to heart, then do yourself a favor and get over yourself. He's not a kindergarten teacher who will hug you and listen to your feelings but he will go well out of his way to help you as much as he can without straight up giving you the answer. He wants you to oh my god forbid learn something instead of cruising out with a B+.\n\nThe grading was very reasonable(not EASY, reasonable), he explained how and why the grades were the way they were, acknowledged when things were unfair, took our feedback into account very well, and if you had a problem with this good luck at Columbia because the fact he even TOOK feedback was like, shocking, at this school.	takes an average amount of work, read the book to help keep up with the lectures(which is in fact an assignment!!!), if you're really struggling then consider dropping back down to 1004 or something because you do need strong basic programming skills to do the assignment. if you don't have them, it will make a moderately difficult class way harder.	27	7	42	2906
26835	January 05, 2012	If tl;dr, just scroll to bottom.\nOf the three CS classes I've taken so far at Columbia, this was hands down the worst of all of them. Prior to enrolling in the class, I read the reviews here on CULPA and figured that the people complaining about Pasik's teaching style and glossing over LISP and other concepts were simply whiners. It took me 3 lectures to completely reverse my initial opinion. Let me preface this review by saying that I'm not disgruntled because I did poorly in the class (even without the extra credit, I would've gotten an A). I'm bitter about enrolling in this class because it was nothing short of a waste of time and money.\nOver the course of the semester, I've come to realize that Pasik really doesn't put in that much effort into teaching. Here's why: of the 28 days that the class was scheduled to meet, 8 of them were committed to other activities (6 reviews, 2 exams). Of these review sessions, Pasik shows up to exactly one. While I thought the review session that he conducted was actually the best among all of them (probably because the subsequent reviews were horrific), he prepared no material and basically held an hour-long Q&A section. Moreover, he canceled one additional class, and ended at least 5 classes 20+ minutes early. So all-in-all, instead of using 28 days to teach, he effectively taught for roughly 18. The result of this is that we barely covered any material. A simple google search of Artificial Intelligence syllabi from top institutions like Stanford, CMU, MIT, etc, reveals that we covered about 1/3 of the material they did. And that's a generous estimate. I have one word for that: pathetic.\nOne aspect of Pasik's teaching that many of my classmates found irritating was the fact that he read directly off of his slides. In the past during my undergrad years, and even this past semester, I've had professors that used PowerPoint slides extensively. Sometimes, they even read off of the slides verbatim just like Pasik. This I have no problem with. What annoyed me the most was the dearth of content in those slides and how cryptic most of them were. This can be especially frustrating when some of the material he presents is not covered in the book, and the only source of reference you have is a figure of a rectangle with a few splotches of color that's supposed to represent the effectiveness of parallelism.\nFinally, a feature of Pasik's teaching that I found to be ineffective and even counterproductive was his insistence on going over code in class. I think the main problem with this is that code in LISP is not readable. The task of keeping track of what all the different built-in functions in LISP do in addition to the user-defined functions Pasik writes results in students being confused as everything becomes just one huge convoluted mess. I think that the time spent in analyzing LISP code would be better spent if the algorithms were presented in pseudo-code (mostly in ENGLISH) rather than actual code. Since the course is comprised of mostly grad students, converting pseudo-code to LISP code should not be hard once the students actually understand what the program is supposed to do. \nIs Pasik a nice guy? I wouldn't know since he has no office hours and is only transiently available before and after class. I stopped emailing him questions shortly after term started since his responses are one-liners and don't really answer your more complicated questions. Maybe it's because he's involved in many other activities that doesn't give him time prepare and do the material justice. I get it, professors are busy people. But there's a line between being a busy person and simply not giving a damn.\nBottom line: if your main objective is to get an easy A, this course is the one for you. If you want to actually learn something, take a different class.	3 Assignments - they take you about a weekend each.\n2 midterms - pretty straightforward if you understand the concepts\n1 final - very straightforward.	8	1	2508	26
26839	January 05, 2012	You've always wondered if you're secretly the next Mark Zuckerberg waiting to be unleashed. I suppose this is the class for you. You can do well, but I wouldn't say it's an easy A or B. For that, take astronomy. Don't consider taking this as a P/F, as then it won't fulfill prereqs. Drat.\nCannon is excited, smart and a pretty good teacher; it's hard to deny that. But he bizarrely spends more than half of the class lecturing on the basic components of computers and the capital-i Internet. Then he spends a lesson or two each on databases, SQL, XML and Python. Cannon prides himself on this tactic as it keeps students in the class past the drop date; he shouldn't. It should be reversed. Students learned little of import for the first half and either imploded or relied on prior ability for the second half. The workload seemed appropriate, however.\nKnowledge of programming and math isn't necessary, but will give you a major leg up.\nDon't forget office hours or TAs like I did. And spend time early on to make sure you ace the comparatively easy first few assignments. I failed the final, and this kinda saved my grade.\nNote: this class was previously known as Introduction to Computers.	1. 4 problem/hw sets every 2-3 weeks. Increasing difficulty. 40% of grade.\n2. An in-class midterm (fairly easy) and final (moderately difficult, on last day of class). Average grades were low Bs. 30% of grade each.\n3. Final hw assignment was a difficult Python program.\nFor new CS students, average at least a few hours of reading per week. Little to no extra credit.	2	1	515	6079
26844	January 06, 2012	Greatest professor EVER!!! AP is the nicest guy you'll ever meet. He really wants to give good grades to everyone in the class. As long as you go to class, this course is incredibly easy. AP doesn't mess around with tricks; he focuses on the core concepts and tests you on these same things. If you understand them, you don't have to worry about messing up on the tests.\nGetting near 100% is very doable, however AP reserves A+'s for those who also do the extra credits. Either way, if you go to class and make an effort, you should have no trouble getting a good grade.\nTAKE THIS CLASS.	5 homework assignments, written/programming sections in each. \nWritten = usually about 5-6 questions. Can be finished in 30 min - 1 hr.\nProgramming = any language, Ranged from 10 min - 1.5 hrs.\nMidterm and Final were straightforward and easy.	1	8	2762	3992
26848	January 06, 2012	Knowledgeable? Yes. Approachable? Yes. Nice? Absolutely. A good instructor? Hell no.\nProf. Collins definitely knows his stuff. However, he has troubles conveying it to his students. Admittedly, I'm not very good at prob/stats, and this course is full of probability. However, it is not a sign of a good professor when you're really excited to be there on day one but feel utter despair on your way out. My friend and I went to almost every single lecture but felt behind everyday.\nAlso, there were three assignments the entire term. Usually this would be a good thing. However, because you did not understand what was going on in lectures, we at least needed some kind of practice for the midterms (called quizzes because he's British or something). Alas, no assignment was released before the second midterm, and it absolutely pooped on us.\nHopefully, this cluttered and unorganized class will get better as Collins gets more and more experience teaching. However, if you can, try to take it with Prof. Hirschberg or someone who can actually make you understand.	3 HWs (5 were expected in the beginning)\n2 Midterms\n1 Final	4	36	10729	4903
26849	January 06, 2012	Prof. Edwards' sense of humor is really quirky. As the reviewers below noted, it could be quirky to the point of being a little bit embarrassing.\nHowever, I fundamentally disagree that his humor took away from his teaching. He is by no means a perfect lecturer. He isn't charismatic like Gulati, thorough like Vallencourt, nor approachable like Blaer. However, he still kept the lectures interesting and got the material through to the students. It definitely could be that PLT (which the reviewers below took) and fundamentals are fundamentally different in difficulty. However, if you see yourself having to take Fundamentals with Prof. Edwards, I would say go for it, but be ready for a barrage of quirky humor from your first day.	6 Problem sets, Midterm, Final	4	0	1637	4251
26891	January 11, 2012	You know how you imagined it would be supercool to actually learn algorithms from the S of CLRS? Well, its better than what you imagined.\nIf you want to learn algorithms from scratch, or just brush up the basics and then step into the more advanced Dynamic Programming / Graph algorithms, this is the class for you. Prof. Stein is extremely approachable, and very patient with the stupidest of questions. He will not take any Math background for granted. First few lectures can be boring if you know Big-Oh but he is really wonderful at motivating most of the "magic" behind the algorithms. Most of the assignments are difficult and you really want to get started as soon as they are out.\nMidterm was not too bad, if you had solved the assignments on your own and the final was downright easy.\nOverall, an extremely enjoyable class. Highly recommended.	Heavy: 7 assignments + 1 take home midterm + final	6	4	1342	4079
26895	January 11, 2012	Jae is my idol. He is such a genuine, honest, and open teacher. Jae loves his subject and knows EVERYTHING about it. Jae was very responsive to student input regarding class administration. The only reason the class was because of students who took advantage of Jae's niceness and petitioned for extensions on every lab, nearly all of which were granted.\nI learned so much from this class. Judging from past CULPA reviews, it seems barely anyone has been able to do what has been deemed even a "competent" job teaching this course, so the fact that Jae made this class so useful and well-run while dealing with such a difficult course is a testament to his teaching ability. The bottom line is: if Jae is teaching Advanced Programming, you should take it with him. No other professor has been able to do even close to as good of a job.\nJae taught well, tested fairly, and is a generally awesome person. What more can you ask for? I wish every professor would be like Jae. Jae deserves his gold nugget rating.	typical CS workload. 10 lab assignments, one of which took a little longer (the climax of  building the web server), midterm and final based on labs. fair grading. good teaching. that's all you need, right?	25	10	3509	4758
26926	January 16, 2012	Jae was a good teacher who cared about the students and put efforts in teaching, but as previous review mentioned, not mind-blowing.\nHe covered the C language very thoroughly and did an excellent job in teaching pointers--which may be one of the hardest part of C syntax. However, he spent almost half of the semester just teaching C language and as a result, the rest of lectures (netcat, building a web server, C++, etc) were very rushed. Many of my friends who had no knowledge of how web servers work struggled. Example codes and other references were provided but was hard to consume even after attending Jae's lectures.\nGrading was fair since there was no partial credit on midterm or final, but because of that, it did not truly reflect how much a student understood the material. Median grade for almost all labs were perfect grade--so labs did not affect your grade that much if you're in the top 50%, the average grade for midterm was very high while the avg for final was around 60, which made the final exam the only differentiating factor of the grade for most of the students. Also, even though the final covered materials from about 6~7 labs, the test only focused on 2~3 labs and *everything* was one word answer with no description allowed--no coding, no partial credit, etc, which penalized students who "almost got it" very heavily.\nOne thing that made Jae's class great was its clean organization. The organization of lectures (order, increasing level of difficulty, etc), mailing list, rubric for grading each labs, lecture notes and lab manuals were all very useful and carefully crafted. Overall, it was a good class and I did learn quite a lot.	10 labs\n1 midterm\n1 final	7	4	3509	4758
26944	January 17, 2012	Jay was great.  The course started a little slow and could have gone faster on the non-programming parts.  Because of the slow start and the time we spent on make and git it felt rushed by the time we got to c++ at the end.  The lectures (always sent out) were really clear and full of examples.\nHe set up a mailing list that ended up answering most of the tricky problems in the class.  From the questions the people in the class were split with some people advanced and a lot starting from a very very basic level.  Sometimes the advice on the list was really helpful and in depth and sometimes it just gave the answer with no explanation (or the wrong answer).  One of the TAs (Arieh) seemed to be really good and on top of the list.\nIt might be good to offer a weekly recitation for people who feel theyre running behind, or offer a basic and honors section of the class.	10 labs (one optional).  One midterm and one final.  Midterm was mostly based on the labs.  The final was two parts, one based on a lab and the other on understanding C, pointers, etc.	7	0	3509	4758
27177	April 27, 2012	This was probably the most fascinating course, which is saying a lot given that Pasik is the professor. Learned a lot but only because this is material that I hadn't been exposed to in other classes and I could have learned 3 times as much had Pasik not ended class half an hour early (on average) every class and skipped 8 classes for review sessions/midterms. Additionally, it should not have been required to learn LISP which wasted an additional 2 weeks at the beginning where we didn't learn any AI. He also cancelled a class at the end because he didn't have anything else to teach us. Overall, if you consider that he only used about 2/3 of the allotted class time, we had about 10 lectures on AI for the whole semester. How do courses at CMU, Stanford, MIT and Cornell manage to do fill a whole semester? \nAs stated in other reviews, all of his lectures are taken totally out of the book, except the knowledge representation lectures. In these lectures, rather than covering the interesting material on epistemic logic that the book had, he spent the entire time on algorithms for expert systems which haven't really been used since the 90s.\nHe also arbitrarily set his curve to a B-/C+ which would be fine except no other professor in the department does that.\nBasically Artificial Intelligence is an extremely interesting field and the fact that I am still interested in it despite Pasik is a testament to the material. However, if you can avoid Pasik, do so.	The three assignments we had for the course were all Lisp programming and took forever since we barely learned Lisp in the two weeks we covered it. I kept feeling like I knew what I wanted my program to do but I didn't know how to make Lisp do what I wanted. It would have been a much better test of whether we were learning AI if he had had us program the algorithms in a language we knew. These assignments also didn't cover any theory, which was really the important part of the course.\n4 pretty easy quizzes (except the Lisp one which assumed that you already knew a recursive algorithm for the towers of Hanoi problem) and easy final.	5	1	2508	26
26950	January 18, 2012	When I registered for MATLAB class, I was inspired by good reviews on Culpa. However, in my experience not all of them turned to be true. \nIf you are really new to programming, there is no way you can get an easy A in this class. Though, you will not fail if you show your effort. Pr. Blaer is relativly an easy grader, but he grades only part of midterm and final, TAs do the rest. So go to his office hours and make sure he remembers your face out of other 100 people. \nI am in no way saying it to discourage you, I learned a great deal in this class. However, even after putting increadible amount of time and effort, I can't say "I can programm now". \nPeace of advise, do yourself a favor and find homeworks from previous semesters or keep a friend who knows programming,then you easily will be close to the high average of 84%. \nI think problem is in description of this course that has no prerequisites and "assume no prior knowledge in programming", you need to know a great deal of Calculus and MUST understand basic programming for this class.\nGood luck!	5 homeworks: you have 2 weeks to complete them, but don't full yourself and start early. They tend to take a lot of you time. By a lot, I mean more than 15 hours in total for each homework.\n1 midterm. Easier than home works, but it doesn't change a fact that questions are connected and if you were wrong in first question, you can't be wright for the following 5. Though, have to addmit you do get a partial credit.\n1 final. Extremely long, and has lots of easy questions that you wouldn't expect, so do yourself a favor and review everything.	2	5	3409	4957
26971	January 19, 2012	This course was difficult for sure.  There was a lot of learning on oneÃ¢â‚¬â„¢s own simply because there was so much material, but there were resources there for use that could make oneÃ¢â‚¬â„¢s life a whole lot easier, such as TAs.  This is where I have to disagree with the previous reviewer.  Madhavan was a standout TA.  He stayed after his office hours by as much as three hours one time because people needed help.  When he was in the TA room attending office hours for his own CompSci classes, he would help 1004 kids who needed help.  No matter how many people came he would individually go through his studentsÃ¢â‚¬â„¢ code to find problems big and small.  He also didnÃ¢â‚¬â„¢t treat students who didnÃ¢â‚¬â„¢t know things like idiots which is more than can be said for some others of the TAs.  I would know, I went to pretty much every TAÃ¢â‚¬â„¢s office hours.  Madhavan was not an easy grader, but thatÃ¢â‚¬â„¢s because he knows his stuff and demands a high standard; if you donÃ¢â‚¬â„¢t want to be held to a high standard, donÃ¢â‚¬â„¢t go to Columbia.  The TA Matt was also awesome though he wasnÃ¢â‚¬â„¢t my primary TA so I donÃ¢â‚¬â„¢t know his grading styleÃ¢â‚¬Â¦  Cannon was helpful but impersonal, class of 300Ã¢â‚¬Â¦  You will feel accomplished after taking this class, but donÃ¢â‚¬â„¢t expect to sail.  But classes like this are why you come to Columbia, you work hard as hell, and then you get a ton out of it.	Punishing, but worth it.  Alternating problem sets and programming assignments.  Exams are straightforward and managable.  You do the time, and you will be ok.  Don't assume you are smart and will be fine.  Cannon says the first day of class, Engineers are made not born...	5	4	515	3807
27008	January 29, 2012	I actually took this class last year, spring semester but haven't got a chance to review it yet. Let me just say that there aren't many classes I'd actually feel obligated to review, but this is definitely one of them.\nThis is so far the best class I've taken at Columbia. This class gives you a great overview of Computer Science, and an unmatched introduction to programming. Somehow Cannon manages to fit in a ton of material while still giving a good sense of each topic. The only exception to this would be the section of the class on computer networks, which I honestly feel could have been narrowed down to just the information about internet protocols. \nLearning object-oriented programming has a learning curve, but once you've got it, you're just coasting from then on. That's not to say projects don't take a while -- you'll spend hours trying to find bugs in your program. But in general, I think there's only a few concepts in this class that are difficult to learn, the main one being OOP. Nonetheless, Cannon and the TAs make themselves pretty available to you, and the assignments are not unreasonable. That being said, pay attention to what Cannon says: if he wants you to understand a concept by a certain homework (e.g. what objects are) you should do it, and you'll be fine.\nI think the main idea I want to convey with this review is that the work you do, while heavy, is very meaningful, and you'll learn a lot about algorithmic problem solving and programming in Java.	As mentioned, pretty heavy, but the work you're given is very meaningful, and you'll have a far elevated understanding of programming and CS by the end of the course. Tests have tricks here and there, but if you understand the concepts they're pretty easy. I finished the final in about half the time.	14	17	515	3807
27126	April 11, 2012	I'm basically in love with him.\nI was so happy to find out that I had Swap instead of Kender. Swap is very entertaining to listen to, and a cool dude. Although his lectures were disorganized at time, you can always read the textbook to rehash the lectures and get a firmer understanding.\nHe also gives extensions on most of the homework, which makes him super awesome. The grading for the homework is also super easy. So far I've gotten 100% on all of the homework assignments.\nOverall, take a class with him. He's awesome.	Problem set every two weeks, with a theory section and a programming section.\nMidterm and final.	14	6	10725	2906
27128	April 12, 2012	Well, he already has his silver nugget, but let it be said: Cannon deserves it. His lectures are fun to go to, and he tries really hard. I usually feel bad when people don't laugh at his dumb jokes so I laugh pretty hard to give him some credit. I usually enjoyed going to lecture. I never brought my computer, though, because all his example code is posted on courseworks anyway. You can do your note-taking just as well in a traditional notebook, and if you know that you are easily distracted, I'd recommend not bringing a computer. The two lectures that I did bring one I may as well not even have showed up because I have no idea what happened.\nThe course itself is hard, for sure. This class is an introduction CS and programming class, so if you never took AP Computer Science in high school, you're going into a topic that you've literally never seen before, unlike most of your other classes. It's pretty satisfying, though, when a few weeks in you're already writing simple programs that can do tasks that you couldn't do a few weeks before.\nThe programming assignments are tough, especially compared to the homework which literally take maybe 1-2 hours tops. Programming takes probably 10ish hours. The singular most important advice is go to the TA office hours. There are like 8 TAs for the class. Obviously the TA hours the day before your assignment is due are going to be packed, so try to go earlier if you can. The ones in the middle of the week are literally empty so you could have one-on-one time to do your work with a TA sitting right there who sole purpose is to answer any questions you have and help with your programming.\nCannon also sets up an account for the class on this website, Piazza.com, that is basically a messaging board where people can ask questions and the TAs, other students and Cannon (occasionally) can answer questions. This is a really good resource because your question has almost always been asked by someone else, and you can ask questions anonymously.	1 programming assignment every other week (10 hours give or take 2 or 3), 1 homework every other week (1-3 hours), 1 midterm, 1 final. Midterm is multiple choice, definitions, a section of code to debug, and an algorithm with questions about it. Final from what I understand (class isn't finished yet) is the same as midterm with more multiple choice.	16	11	515	3807
27264	May 07, 2012	Professor Gravano is definitely one of the best professors I've had. His lectures are clear, precise, and occasionally humorous. He's very receptive to questions in class and often responds to questions both via e-mail and the discussion board, which is rare in my experience.\nHe uses slides (available online) for much of the introductory portion of the course, but often switches to the blackboard to work out particular examples. The latter half of the course was taught almost entirely on the blackboard. \nCorresponding book sections are listed for each lecture, but going to class or having a friend to take notes for you is important, as he sometimes he covers more or less material than is presented in the corresponding book chapters. The textbook (Ramakrishnan + Gehrke, 3e) is quite good, despite the many reviews you'll find online saying otherwise.\nWhile you will get a project mentor for your two projects, in reality there will be very little interaction with the TAs unless you seek it.	4 equally-weighted homework assignments (15%)\n1 large project + demo (15%)\n1 small project (5%)\n1 midterm (25%)\n1 final (40%)\nThe homeworks are light and occasionally add to the concepts covered in class. Projects are done in groups of two. The first project has multiple phases and takes place over a large span of time. The second project is short.\nThe majority of the class obtains perfect or near-perfect marks on the homeworks and projects. The exams will be the differentiating factor.	7	1	375	664
27277	May 08, 2012	From everything I can tell, he's a very different teach when teaching Data Structures and when teaching AI. I've heard and read so much about how he doesn't actually teach in AI, but for Data Structures that was certainly not true -- over the course of the semester we covered a lot of material even if it's less than you would in some other Data Structure sections. It is true that he only ends up coming to class about 2/3 of the time since there's 4 quizzes, 4 review sessions, and 1 final. When he's there though, he's very passionate and often quite amusing. I also found that between the lectures and the programming assignments I came out with a very thorough understanding of what he covered. Beware though that his programming style is extremely bizarre so you may pick up some weird habits.\nThe quizzes were kind of mini-midterms -- they took the whole class but only counted for 10% of your grade and only covered 3-4 lectures worth of material. Of the 10 points, 7 usually entailed coding and the others were either on theory or definitions.\nSince most of the class doesn't have a CS background (since the class isn't for the major) he spends a decent amount of time reviewing basics although if you really never understood Java at all, you'll be in trouble. One last plus about Pasik is that he's very organized: he puts up the class-by-class syllabus and all the homework assignments weeks before the semester even starts so the expectations for the class are unambiguous.	5 programming assignments (10% each and he takes half of your lowest grade and counts it as extra credit) + 4 quizzes (10% each) + 1 final on the last day of class (20%). The assignments can be tough but are never impossible if you're comfortable programming.	2	2	2508	4
27343	May 15, 2012	I was initially terrified to take 1007 because I thought I was going to get Professor Kender, but it turned out Swap was teaching it. He guest lectured for Professor Cannon's 1004 class and I thought he was a cool guy so I signed up for this class. At first it was a bit rough because I hadn't programmed over winter break, but the assignments are completely doable, and he helps us with them by giving us Halo quests which provide a checklist of things one should be doing (they're themed, so the last one was Doctor Who themed!). The TAs are awesome (shoutout to Don!), and Swap is very helpful during his office hours and through email. His lectures are sometimes disorganized, but as the other reviewer said, it's all in the book. And he also has us read cool things like the Law of Leaky Abstractions and things on Lisp. This class solidified my decision to major in Computer Science.	HW 1: Blog\nHW 2: BattleShip\nHW 3: GUI Restaurant Menu\nHW 4: Networking; Connecting to CIA World Factbook to answer trivia questions\nHW 5: Either DuckHunt or a personal project\nEach homework has a theory part. \nMidterm and final are completely fair. Averages around 75. \nHW: 40%\nMidterm: 30%\nFinal 30%	10	6	10725	2906
27365	May 17, 2012	Great prof. Excellent course notes, straightforward assignments. He's on top of his TAs to get stuff back quickly. The downside to this is that they are VERY sloppy. I was docked a ton of points (that they never responded to emails, or in office hours to discuss) for stuff they got wrong. Allen is fabulous, though. Really great at explaining the concepts, and he brought in some awesome lecturers in robotics. Overall, this speaks to his wish to get his students excited about computer science.\nNote: He's really, really arrogant (and really, really accomplished, but that doesn't excuse it). I've seen him tear students apart when they ask him clarification questions on homework instructions. (thankfully the TAs used piazza, so you could, and thankfully I did, do this anonymously).	Much lighter than excepted. 6 assignments - programming very starightforward, but the theory could be tricky. Lowest dropped. Midterm - time crunch, but doable. Final not cumulative.	11	4	37	1622
27367	May 17, 2012	The good: Dawn is incredibly fair and straightforward. The material was a breeze. Her exams were only somewhat more challenging than the homework, and lined up with what we did in class.NO problem sets, but there are potentially quizzes every morning. This keeps you on top of your game, though, and the problems come directly from the homework.\nThe bad: She's unbelievalby accomodating to her students (which is great), but this means she answers every dumb question in class...questions that are often too dumb for office hours. This is incredibly frustrating and holds back the entire class.\nOverall, I'd strongly reccommend her, though. She's a wonderful person and made this class unbelievably easy.	Next to nothing. No p-sets. Suggested problems instead, which showed up on quizzes the following lecture. If you pay attention in class and glance over the suggested problems, they're no problem.	7	2	11575	397
27368	May 17, 2012	DO NOT TAKE THIS CLASS WITH HERSHKOP. I'm not going to bother enumerating the reasons why. There are too many. The bottom line: he's incoherent, his lectures are a waste of time, and he doesn't go over really important concepts.\nThe upside, he's a super chill guy and very nice. This doesn't help when you can't figure out why your code won't compile, and it's ultimately becasue the code he requires you to use (and that he wrote) has a bug in it), or he forgot to tell you that one important details the you need to make your program run on the CLIC machines.\nThe TAs we had were fantastic, which made this class doable in the end. Somehow got an A+, but there is no way I deserved one (I guesss he's really generous with grading). I wouldn't hedge my bets on teh GPA boost, if I were you. Theer was no way to know before I got my grade that it would turn out so well. It honestly could have gone either way, and that's more because I had no idea what was going o in this class because of how unclear he was. I wanted to learn C and C++, and instead we spent 8 weeks on Perl. Just don't waste your time like I did. Take this class with someone who knows how to and wants to teach.	A lot because the instructions are unclear and the code he gives is always buggy. Labs can take 10 hours because of this, when in reality the level of difficulty and length should require about 4 hours.	10	3	1671	4758
27501	August 15, 2012	AI with Creamer is completely useless.  I will admit that he tries very hard to teach the material and he is a genuinely nice person, but that will not dismiss the poor teaching and unfortunate organization of the course.  The homework assignments are theory based out of the textbook, which is supposed to be the bible of artificial intelligence.  That part is fine - besides for the part that the HW is pretty useless also.\nThe redeeming quality of this course was the final project - this is a matter of how much work you want to put into it:  time in = amount learned.  The examinations are also fairly worthless.\nI am sure that this course is easier than Pasik's course.  If you have any desire to learn anything, suck it up and take it with someone who is worthwhile.	Depends on how much you want to learn.  Not much work at all - easy to get a B, besides for project.  Even easy to get A.	3	12	4205	26
27517	August 30, 2012	A really interesting computer graphics class with an amazing professor. In this class, we are given a glimpse to the realm of geometry modeling and geometry processing. As we live in the age that artists and product designers utilize 3D software such as Rhino or Maya or ZBrush, to digitally model their products before actualization into tangible objects, or to model cartoon characters that would appear in animated films, this class provides a great introduction into the technical aspects of how these 3D softwares work or should work. We study the fundamentals down to the level of so-called NURBS curves and surfaces, geometry processing performed on triangle meshes, and subdivision surfaces -- each with extensive mathematical backgrounds that consider how these structures give artists and manufacturers computational advantages such as desired degree of smoothness no matter what shape of the curves/surfaces are formed. It is a really fun experience to learn how design softwares are actually made of, and we also had a guest speaker from the industry to discuss how he actually uses the software to design real-world products.\nSo the class covers mainly three parts: the fundamentals of B-Spline curves and surfaces (as well as NURBS and Rational form), geometry processing (in particular, mesh data structures and mesh simplification algorithms), and Subdivision surfaces (e.g., Catmull-Clark). Each topic has extensive assignments associated with it to help us see how things are implemented. Some are really challenging, but Prof. Reed would give us extensions if needed. So we always have time to refine our assignments as possible. I'd say I'm very proud of the code I have done for this class, since they never look like a mess compared to other classes that I sometimes rush things through just to make it work. It's so organized, and beautiful.\nSpeaking of the professor, he is probably one of the best professors I've had for Computer Science class, personality-wise. He really took time to answer individual emails and discussion threads. He modified his assignments plan as the semester went, so we were given more challenging works since we did well as a class on the first few assignments, which helped me to learn even more. He was very approachable during his office hours or after class. So in a sense, you never feel isolated or helpless in this class. The only caveat is that his lectures sometimes may be a bit dry, but bare with them, and you will go a long way.\nSo, even with a slight interest in computer graphics in general, I'd recommend you to come and take the class, and you will be amazed how much you learn and have fun at the end.	3 Assignments, each covering main topic in the class, as mentioned above.\nIn actuality, it feels more like 6 assignments. The B-Spline one will be split into 3 parts, while the geometry processing is split into 2 parts. However, they aren't equal in length. Some will be shorter; others will be longer.\n1 Midterm. 1 Final. Totally reasonable and manageable.	2	0	2060	2767
27528	September 04, 2012	It wasn't until I began studying for the midterm exam that I realized how much I liked this class. That sounds like a really strange backwards compliment, but hear me out. Yes, Sidorsky is very old, yes, he can barely see, and yes he tends to move through the material rather slowly. As a result, some people gchat throughout class, some fall asleep, and some just don't bother showing up. But despite his slow pace, or perhaps because of it, Sidorsky presents concepts clearly and extremely organized. It's clear that he has been teaching this forever, and it pays off. Reviewing my notes, I realized how much I had learned, and I loved how organized and clear my notes were- a direct result of Sidorsky's lecturing style.\nIf you are interested in political philosophy, I would recommend this class to you. But if you prefer fast-paced, discussion-based classes, you probably won't love this prof.	Sidorsky let the class choose between either a midterm/final or a paper. My class chose the tests.	2	0	856	NA
27551	September 19, 2012	Great Professor. \nLet me first say, I did not actually end up taking the whole class - I had to drop it because of course load issues. \nNot taking the class in no way reflects on Prof. E Stolfo as an instructor. She is one of the few profs that lives and works in the real world in the 21st century. She responds to emails right away with helpful answers and is very proactive about helping students. \nShe is a particularly valuable resource thanks to her experience in the NY tech startup scene. She works for 10gen - the creators of MongoDb (which I would recommend over Sql any day)\nMoreover, she went above and beyond her Columbia duties. After I dropped the class, we continued to correspond. In the end she inspired me to learn RoR on my own. \nShe is a rare gem and a valuable resource.\nHopefully they can figure out a way to get her back next semester.	Reasonable	9	1	11574	6362
27561	September 28, 2012	I'm optimistically assuming that the computer science department has the sense to never let Professor Blaer teach this class again, in which case this review doesn't really serve much of a purpose.  However, given the finite probability that computer science continues to show the lack of judgment that they showed in allowing him to teach COMS 1007 this past summer, I feel justified in writing this review.\nI just got reminded this morning that I took COMS 1007 with Professor Blaer this past summer when I got an email that my grade arrived.  The date of the final exam was Thursday August 9th.  I had been checking Courseworks weekly since the end of the course, and this is the first time that I saw the grades posted for assignments 3-4.  I am currently enrolled in COMS 3137 and have completed the first two assignments prior to receiving my grades for the last two assignments and my final grade from COMS 1007.  There is still no grade posted on Courseworks for the final exam, and given that combined with the discrepancy between how well I did in the course and how poorly I felt I did on the final, I'm wondering if he even graded and/or counted the final exam.  This might sound like an outlandish accusation, but the classmates who I've talked to are  all speculating the same idea.  \nProfessor Blaer told us during the final lecture, on Tuesday August 7th, that he was setting the following Monday as the grading deadline for the TAs, and therefore that we should expect to know our final grades by the Tuesday of that week.  We were never contacted with notification of any delay.  At first I thought it was just me when my grade wasn't posted all summer, but then I got to COMS 3137 and found that several of my classmates who were in the summer class had not received their grades either, and we all had contacted him several times via email, telephone, and direct office visits.  Professor Blaer didn't respond to most of the emails or telephone calls, and he wasn't in his office when most people arrived.  However, whenever one of us did hear from him, he said that the grades would be up "by the end of the day."  \nThe lack of feedback and organization in this class was representative of the fact that the concern for students' learning was absent, which is a shame.  After all, isn't that the point of any class?  Professor Blaer's lectures were fine.  They weren't amazing, but they were fine.  However, in teaching a class in computer science, organization and feedback are at least as important as the lectures.  I'm my personal opinion, they're far more important because most of the true learning comes from working through and receiving feedback on assignments.	The workload consisted of four homework assignments (worth 50% of the grade), one midterm exam (average ~79 - and worth 20% of the grade), and one final exam that was said to be worth 30% of the grade, but most people are wondering if he ever graded/counted it, and the average was undisclosed.  The assignments were fair in their content, but they were timed pretty poorly, such that the last one was due the midnight before the final exam.	7	2	3409	2906
27633	November 14, 2012	Jae's class is carefully thought out.  Assignments are meticulous and error free.  He actually teaches material in class.  So you will learn things from him instead of having to teach yourself everything.  The entire class is extremely well executed.  You learn a tremendous amount from working through the assignments.  The class is incredibly rewarding.\nJae is very detailed and his lecture notes are previded which are a wonderful summary of the book and his lectures.  He answers questions in class but does not get bogged down.  He moves through the material swiftly but does not gloss over things.\nI can't say enough good things about Jae and his course.  I feel lucky to have taken it.	10 assignments which are paced well.\nMidterm and Final which are difficult but not unreasonably written.  The material is all covered in class but the assignments and exams are challenging.	11	11	3509	4758
27634	November 14, 2012	It is true that it is more likely for you to write a review on Culpa (or really anywhere online) if you had an extremely strong opinion one way or the other on the topic.  You may take this knowledge into consideration as my opinion gets away from me...\nFull disclosure I have not completed the course but am one month away from completing.\nProfessor Hershkop's class is a disaster.  He seems to take no responsibility ensuring that the material of the course is covered.  His assignments are riddled with errors.  These errors cause so much confusion that it is likely you will end up answering a question in 4 different ways just to be sure that you covered all the bases of his ambigously phrased question.\nHe missed several classes and did not make up them.  He frequently started class 5-10 minutes earlier than the scheduled time.  Occasionally he would end class early.\nHe consistently rushes through material.  What should be covered in 2 or 3 lectures he will literally cover in 10 minutes.  He must think that covering a topic is announcing a chapter title.  He has the absolutely infuriating habit of asking "if there are any questions" after every 2 minutes in class.  This may seem like he's open to questions but I really think he is just killing time because he realizes he actual hasn't taught any material and is hoping that someone will ask a question that gives him the opportunity to teach something.  Unfortunately it is my experience that fellow students are hungry for learning and don't know where to start asking questions because they have no base of understanding from which to start.\nBesides if you do offer a cogent answer to one of his questions don't bother.  He always rigs the question after you've answered it.  Like it's a game to show that he's the teacher.  When asking a question there is one obvious answer but he changes the terms of the questions after answer it thereby making your answer wrong.  Or his question was too ambigous to answer in the first place.\nHis programming assignments have an obscene lack of focus.  I spent 90% of my time working on object oriented design, file system apis, java language principals, java GUI apis and spend 10% of my time implementing the data structures and algorithms.  His assignments do a poor job of reinforcing the material meant to be covered in class.  The same lack of detail and error exists in his programming assignment.\nHis TA's informed us that it was not a policy of the class to reveal the average (or standard deviation, etc) of the grades of any assignment returned or the midterm.  I have no idea why this could be.  I can only speculate that the grades were disastrous because his teaching is disastrous and he's covering it up.  The grading process in general was a complete black box.  Assignments are never handed back with comments.  You're lucky if on courseworks there is a few comments (at most a sentence) as to what you got wrong.  You'll need to write the TA or Professor for that information.\nThis is the best Columbia can offer?  The professor should be fired.	He told us that there would be 6 theory assignments and 6 programming assignments.\nThere have been 2 theory and 2 programming.  He told us less than a month before the end of the fall term that there would be 3 more theory assignments and 1 programming assignment.  He consistently tells us that assignments will be returned, or Homeworks will be announced and then delays and inevitable something changes.  His work ethic is a total joke.	47	8	1671	1622
27660	November 22, 2012	Disclaimer: I got a very high grade in this class.\nI feel bad for anyone who was slightly interested in computer science before they took this course. The class is as boring as you could make it, and the teacher is awful. You would think he might learn a thing or two after teaching for thirty years but the practice didn't do him any good. He prides himself on making his code as compact as possible, squeezing as much stuff in to one line as possible, which is stupid. It would be like cramming this whole paragraph in to one grammatically correct sentence. Sure, it's still "right," but there's a reason no one does it, and that is because it is a fucking stupid thing to do.\nI took data structures at a different school a few years ago, and I thought I should take it again to brush up on the basics. It was a pretty big mistake; you would learn way more about data structures by skimming wikipedia for a week than taking this course. In fact, I would recommend learning the material elsewhere and then checking his slides to see the stupid shit he changes. \n If you're interested in CompSci, know that this is not what it's usually like.	5 assignments that take about two casual days of work if you know what you're doing, longer if you don't know what's going on. The tests are pretty easy if you know what to do and very difficult if you don't	3	3	2508	4
27710	December 11, 2012	Oh dear. I don't even know where to begin.\nConsider this review as a warning to all of you misguided souls who are thinking of taking this class under Swapneel. Consider this review a strong and heavy deterrent such that you may maintain and keep your sanity and save yourself the struggle of taking a class with arguably the worst teacher I've ever encountered in my entire life.\nSure, Swapneel is a nice guy and he's approachable. I'm sure he's great in the other classes he teaches; I don't doubt the accuracy of his other reviews for a second. However, ABSOLUTELY NONE OF THAT APPLIES TO ASE. Swapneel's ideas for this class go from mind-fuck stupid to borderline insane.\nAhem. There are five distinct reasons you don't want to take this class, four of which are a direct result of Swapneel's horrible decisions:\n1. This is a class about software engineering, and you will be doing a lot of busy work. You'll be doing a lot of reading. Now you MIGHT think that would make for an easy A but you would be grossly mistaken for reasons I'll get into in just a second. The material in the class is EXTREMELY boring unless you're actually into this shit. You could seriously learn everything in the class by either reading Wikipedia or holding down a programming job for a little while. The material is definitely not something to spend your tuition on because you are almost certainly going to learn it elsewhere.\n2. The Midterm. The midterm wasn't exactly difficult (even though the average was in the 60's) but there was a certain stipulation to the grading that didn't make any sense. Each multiple choice question was worth 3 points; missing a question not only cost you the chance at getting those 3 points but you would lose an additional point as well. What's the point? I don't know why Swapneel thought this would be a good idea; it's nonsense like this and the teacher's inability to know unequivocal rock-fuck stupid when the rest of the class sees it that will prove to be his defining hallmark in ASE.\n3. The "Implementation" assignment. You spend a good chunk of the class developing a piece of software using the class concepts to guide you along. There is a proprietary repository set up for the class where you can use Git to handle your code and there is also a website called Jira which allows teams to create and document project tasks. The skillful use of both of these tools as well as planning and executing software engineering strategies is crucial to your success and one would think that mastery of these tools and concepts would be critical in the grading of your project. WRONG. The majority of your project grade comes from a subjective analysis by the TAs. In order words, you could program a solid piece of software and demonstrate exemplary skill of all class concepts in getting your work done; however, if the TA's for whatever reason don't like your project, don't think it's cool enough, or you are a bad speaker and don't demonstrate it in a way that would blow their mind then it's going to hurt you. I can understand subjective analysis being a bit player when it comes to grading, but why the fuck do you make it more important than the objective analysis which is far more relevant to the intentions of the class?\n4. The third assignment. The assignment was out of 40 points with additional 20 points of extra credit. The average on the assignment itself was a 17; the average on the extra credit was a 4. Yes, that's a four. Given the horrible midterm average and the average of this assignment, I don't think it's a stretch to say that the class is at fault; that's the mark of a shitty teacher. Furthermore, the TA's took points off for things that weren't even mentioned in the assignment document. For example, part of the assignment required White Box testing on a hypothetical feature of a certain project. The assignment stated that all we had to include was our "general procedure" for doing white box testing. The TA who graded me took off points for only writing a "general procedure". What gives?\n5. The testing assignment. This one BY FAR is the worst offender and permanently turned me against Swapneel. This is by far the stupidest assignment I've ever done in my life, particularly because of one caveat of the grading. You see, the assignment itself was 200 points with 50 extra credit; 70 points of the 200 dealt with testing other teams' applications. Each team tested two other teams; you could get a maximum of 35 points per team. Before actually performing the testing, each team had to document as many bugs as they could in the aforementioned Jira website used in the class. Documenting a bug meant that it could not be used against you when other teams tested you; however, if a team found a bug that WASN'T documented it not only cost the tested team 2 points but the testing team would gain 2 points. In order to get the full 35 points for the assignment your team had to find 15 undocumented bugs and 10 documented bugs; 1 point per documented and 2 for each undocumented. Your team could not get more than 15 points for documented bugs and 20 for undocumented; even if your team found 40 documented bugs you could only get a maximum of 15 points by virtue of all bugs being documented. Furthermore, each team was only given 30 minutes to test each application. TO RECAP: In order to get a full score on testing a particular team, you had 30 minutes to find at least 25 bugs. Of those 25 bugs, EXACTLY 15 had to be undocumented and 10 had to be undocumented. Is it is easy to see how this is borderline impossible? Congratulations, you have more foresight than Swapneel Sheth. Furthermore, a team could get stuck with an application that had relatively little bugs thus harming their grade due to factors that are impossible to control; when the class was berating him for this possible outcome his only reply was a sheepish "Yes, it could be unfair, but that's why you get two teams to test.". The teacher deliberately knew the assignment could be unfair but went ahead with it anyway: if that isn't a mark of poor judgement then I don't know what is. OH....and if you happened to program a perfect application with ZERO bugs then the two teams testing you would get full credit (as long as the TAs couldn't find any either). The team creating the perfect application would get jack shit for having made such a fine specimen of software. I'm not even mentioning the infighting that occurred during the testing phase; the stipulations of the assignment encouraged teams to screw each other over by "finding" undocumented bugs and I saw several arguments in the testing room between whether or not so-and-so was a bug. Why the fuck would the teacher think this was a good idea? Does this sound like something you want to be spending your time and tuition on?\nThink about it. Save yourself. Go to SSOL and click that "unregister" button. You'll be glad you did.	I don't think the workload was any better or worse than a typical CS class; just lots of writing which can be highly mind-numbing.	59	2	10725	1616
27711	December 11, 2012	Too much workload that equivalent to, or even more than the rest three courses I take this semester. Besides the endless projects, you need to review others' homework which also takes up much time. The grading sheet is really harsh, you never know what parts will be deducted points according to the grading sheet. The homework instructions are ill-organized sometimes, you were not clearly told what were expected to do in order not to lose points.	Six projects, the first two are easier(compare with the latter ones), but the rest are hard. The last one conflicts with other finals, other projects and has earlier deadline. No grace days.\nMidtem+final. Some parts are at the corner of the textbook. By the way, the textbook is pretty useless for the 6 projects.\nAnyway, if you enjoy challenges and have plenty of time and mentally strong, this course is designed for you.	9	0	45	2384
27742	December 17, 2012	I cannot believe this guy has a silver nugget...\nPerhaps Prof. Gross has just become more puzzling as he gets older, because the class described by other reviewers is completely unlike the one I experienced. This guy can barely finish a sentence. He is actually pretty funny sometimes, but the material is unbearably boring and he does a poor job of actually teaching us anything. It is clear that he is an expert on the subject and probably a genius, but he's one of those professors that can't actually teach very well.\nMy biggest issue with the class is that the terrible lectures have almost no relation to the homework assignments, and the homework assignments have almost no relation to the exams. \nIt doesn't help that the TA's are complete sticklers about answers on the homework. They will take points off for almost anything they can. You will most likely heavily rely on solutions found on the internet.\nLuckily, Prof. Gross provides decent notes on the subject and posts the solutions from previous quizzes and exams. The exams are all open book.\nUnfortunately, Prof. Gross flies through the material. I only took the class because it is required for all computer science majors. I really wish it wasn't required.	6 HW assignments\n2 Midterms\n1 Final exam	7	3	40	397
27752	December 18, 2012	I actually took semester 2 of this course, semester 1 isn't a pre req though. \nActually a very good professor with well planned lectures and gives assignments that are relevant to his class. I really have no issues with him at all. Between him and the TA all questions were answered quickly and if you learn from your homeworks and pay attention to the material presented in the guest lectures the mid term isn't too bad. \nThe labs are interesting, and when they screwed up on the setup for a lab they understood and accomodated those that wanted to do the lab and those that didn't for time restraints very fairly. \nI'd take a class with him again. Jelena was a great TA as well!	The workload was a bit compressed but that is only because I took it over the summer. I'd gladly take a course with Gil again.	1	7	4210	NA
27769	December 20, 2012	Basically I was really excited to take this class because the other reviews were raving about Jae. When I saw he was teaching again after he got his PhD, I was like YES, and now at the end, I'm just like meh. \nWell, the start was good. He set up a listserv to encourage class participation where students could ask questions and interact with TAs and other students. Everything was explained slowly for people who have never been exposed to C, but then he started to get behind on his lectures. That was sort of when things started going down hill. The labs were fun, but he would not have covered the material for them, and so he had to rush in class to cover what we needed to know on the labs, rather than take a good amount of time explaining things. Inevitably, he would have to YAX (yet another extension) them so he allowed people a reasonable amount of time to finish them. He also changed the labs from counting 40% of the course grade to 15%, which in my opinion has hurt a lot of people. We spend A LOT of time on doing the labs, which is why I think they should count more. That's where we do most of our learning, and where we can demonstrate we have an understanding of the material. \nThe midterm was really hard. After he gave us the midterm from fall 2011, which seemed very doable, the actual midterm was a disaster. The average was a 50 with a standard deviation of like 23. As someone who did well on the labs, I figured I was going to be fine on the midterm, but when I saw the midterm, I panicked because it seemed incomprehensible. I feel like I could have done a lot better. \nThe second half of the class felt rushed. The C++ things seemed VERY rushed. The last two labs are C++ oriented. Honestly, I'm on the verge of taking the final and still don't feel like I know that much about C++.\nI think Jae was very stressed this semester with a class of almost 200 people and that detrimentally affected his teaching ability. Overall, I wasn't blown away by this class. I feel like I didn't really profit from his lecturing style, but I have to agree that the labs are very well designed.	10 labs, lab 8 is optional (15%)\n1 midterm, average in 50s with std dev of about 23 (35%)\n1 final, yet to take (45%)\n5% "buffer" points for people who actively participate in the listserv/did lab8/had beautiful code/other stuff that Jae thinks merits the 5% boost	13	3	3509	4758
27771	December 20, 2012	Your experience in this class will depend almost entirely on your team. If you come in with people you know and trust to be competent, you will be at a monumental advantage. If you sort into a random group, well... godspeed to you, brave soldier!\nThe professor's lectures were of extremely high quality, though the recordings are not. TAs were top-notch. The two books were, respectively, completely useless and extremely useful. You will be given problems from the extremely useless book, but should instead spend your time reading the book on kernel development for the homeworks.\n(45%) 6 homework assignments, lowest is dropped\n(15%) Grading on your reviews of peers' work\n(15%) Midterm\n(25%) Final\n(00%) Extra Credit\nNote: there were programming problems on the two exams.	Individual contribution will vary between 15% and 70% of each homework assignment, subject to group dynamics.\nAverages tend to be quite low on homeworks and exams. If you score between 50 to 60% on the assignments and exams, you're probably in the middle on the pack.	4	0	45	2384
27874	December 30, 2012	Feels like learning nothing but how to argue with TAs. Definitely not worth the tuition, and don't waste your money and time on it.\nThe grading is the most ridiculous part - no guildelines on how the answers are graded, and for some assignments even asking questions regarding the assignment description is forbidden. If you argue with TA, you'll probably be rewarded a lower score. Someone accidentally witnessed how the TA graded the assignments - it was in a pretty irresponsible manner. No surprise if you find the TA didn't actually read your assignment, and gave you a random number instead.\nSwapneel is a good guy and might be a good researcher to work with, but so sad that he just didn't take the teaching job seriously.	A group project (continues throughout the whole semester) and a few individual assignments. Most of them are reading and writing assignments.	35	2	10725	1616
27902	January 03, 2013	Worst person to take a course under. He wont teach you anything meaningful just like his boss Gail Kaiser. He tried to show off people how cool he is and come up with really stupid schemes for grading. Even assignments were as shitty as possible. Assignments were so many. He will just show off his shit masters project that only 3 persons like "He himself", "Gail Kaiser" and "Jonathan Bell".\nHe will speak things in generic terms in class and that was just common sense, no need to waste tuition for that. We tried to get this course waived, but he is an asshole and so is Columbia SEAS core course deciding committee.  Every year people complain but nothing happens.\nGrades were also bad and I guess that's Gail Kaiser and her department descendents policy, never give anyone better grades. Swapneel fits into that category. Even if you are in top 15 students in class, you might not get an A.\nStupid policies for grading and stupid grading rubrics that have no sense in them.\nHe will try to justify that this is how it happens in real world, but it doesnt happen that way my friend. you are just an asshole and equally dumb.\nYou could have come up with better grading rubrics, made grading more quantifiable and given better grades after doing all this shit whole semester.\nJust to add, Jonathan Bell will come as free TA for all his/Gail Kaiser's courses and he is another dumb fuck wrangler. If your style of writing displeases him, he will make sure you get B-, C or B max.	you would end up doing a lot than this course deserves. There is nothing interesting in either assignments or project to learn. Documenting stuff etc, will give you better grades and not actually learning something. Grading would be dictated by Gail Kaiser's policy i.e dont teach anything and screw grades, after all columbia will continue to pay her till she retires. Dumb fuck department and so are people connected to it.	38	1	10725	1616
27930	January 06, 2013	One weekend afternoon, Professor Sidorsky sits two feet away from me at Tom's counter.  He has to know that I'm a student of his, right?  No one else is at the counter.  People say he's afflicted with terrible eyesight but I did raise my hand once or twice in class.  Even if he doesn't remember anything else about me, I'm still wearing the same stupid jacket that I always wear in the third row.  \nHe orders the exact same thing I'm eating.\nWhat the hell is he getting at? Is he getting at something?\nWe sit together in silence.  I keep glancing over, hoping to make eye contact.  He smiles at the waiter but never looks in my direction.\nCan I tap him on the shoulder?  I'm afraid he'll break.  Sidorsky takes 30 minutes to hobble across College Walk.  They say he used to be a famously liberal scholar but I worry that he doesn't want to talk to a lowly non-philosophy undergrad on his time off. And don't old people want to wait before being spoken to?  I don't know.  I don't know.  One time I told him that he was miscategorizing anarchism and he didn't end the conversation but didn't really respond to me either.  I take out my cellphone and pretend to look busy.  I don't want to go through that again.  He wrote a funny comment on my midterm and called one response "interesting."  It was my favorite course of the semester so far and it could only go down from there.	There are six topics covered over the semester (authority, rights, equality, liberty, justice, democracy). All you have to do is purchase one $30 coursebook.  The lectures and readings complement each other nicely. Sidorsky takes attendance, although no one knows if this means anything.  Each class topic has 2-5 readings, none of which were book-length.  Relatively easy...I kept up with the readings for the first half of the class and did all of the second semester readings during reading week (not recommended).\nNo other homework, only an in-class midterm and final.  Even the philosophy majors were knocked on their asses by the tests.  Half of the class didn't finish within time limits, and the questions are interesting but difficult to study for (asking for your opinion on a subject instead of a summary). \nI got a B+ on both tests even though I have little prior knowledge of philosophy.  Grades ranged from B- to A.  Sidorsky isn't as harsh with grades as you'd think an older professor would be, and he bumped everyone up by a couple points as well.	1	0	856	NA
27933	January 06, 2013	First of all, W1007 is now Honors Introduction to Computer Science and no longer \tObject-Oriented Programming and Design in Java. If 1004 and the old OOP course had a baby, this monstrosity of a course would be the result. The course had no target audience. It was excessively basic for some, and impossibly difficult for others. In fact, this was evident from our midterm scores - the curve had two peaks!\nThat said, this was an exceptionally well taught course thanks to Professor Kender. This man can teach. Kender is truly silver (possible gold) nugget worthy. While the content of the course was not the best, (not Kender's fault - he has to comply with the CS department) Kender did an amazing job at teaching it. His lectures were a joy to attend. He is organized and methodical and teaches in the order of the chapters in the book. He has a great sense of humor and tells at least one awesome joke per class. He also gave us lots of cool extra information because this is "an honors class". Also, he has this strange, but fun obsession with the Principle of Least Surprise (PoLS).\nDon't let Kender's imposing figure scare you. He is a very approachable and reasonable professor who will take the time to help you out. If you're too intimidated to ask him a question in person, there's always the online solution. This course used Piazza which was great since it allowed us to ask questions anonymously and clarify doubts in the assignments. Kender is on Piazza almost 24x7 on the weekends before assignments are due.\nAssignments were of variable difficulty and length. Many of them were poorly worded causing some confusion. Some were very interesting like making a GUI game to play Rock, Paper, Scissors, Lizard, Spock with an AI engine. The assignments were usually graded within a week or two. The TAs were for the most part good. One TA (name not disclosed) was very stingy with grades and always screwed the assignments he graded. This unfair grading affected some very unlucky students.\nThe midterm and final were long but manageable. Note down everything he says in class. His tests mainly consist of questions from topics discussed in class, especially violations of PoLS. Grading was extremely fair - not easy, not hard. He takes a long time to get exams back because he corrects all of them himself (and he unfortunately had an ill member in his family this semester). He gave us candy canes during the final because glucose apparently stimulates brain activity. Needless to say, that was the most entertaining exam ever.\nAll in all, if you have a strong foundation in Java and design, skip this course. But try to take Kender whenever you can. He makes this course worth while with his godly teaching prowess and great sense of humor.	More than the average class.\n5 Assignments every 2 weeks (take anywhere from 6 hrs to 2 days to finish) (10% each)\n1 Midterm (20%)\n1 Final (30%)	25	1	42	2906
27938	January 06, 2013	This is hands down the most worthless course I have ever taken. After the entire course I didn't feel like I learnt a thing. I have two major complains:\n1. The class was ruthlessly boring and pointless. I had worked in the industry for five years earlier and I knew what this class was basically supposed to teach me, but it didn't. You are better off using Wikipedia or Google to learn this shit. And Swapneel was so pigheaded that he devised his own stupid waiver mechanism that almost everyone applied to because they didn't want to take this class and almost everyone was rejected because this smart-ass didn't want to bore just a handful of people and waste their tuition.\n2. The TAs were grossly incompetent. One of them was a guy fresh out of undergrad college who didn't know shit about what he was doing but just ended up getting the TA position because he was from the same undergrad university as Swapneel and was helping him with his research. I know through common friends that he cut a lot of slack for his friends that took the same course and this was just unfair but couldn't be pointed out in public since it couldn't be proven.	Not difficult, but worthless and boring.	39	0	10725	1616
27949	January 08, 2013	I am a math major and I needed some upper level courses.  Discrete Math had amazing reviews and I thought it would be easy as a class of numbers for a math major amongst computer science majors, right?  Wrong.\nYes, the material itself is easy (basic probability, number theory, graphs), and you don't actually ever have to learn it because all the tests are open book/notes.  However, all the exams are REALLY HARD and getting harder by the year (he gave us past exams for practice).  A LOT of proofs, hard graphs on the final, stuff you've never seen before so you can apply random stuff from your notes, AND DID I MENTION PROOFS?  So overall, this class requires virtually no work or studying and there's really nothing you can do to prepare for the exams because they are open notes, but the exams are really difficult.  I got a B in this course as a math major.	2 midterms and a final.  Homeworks are easy - there's only like 6 of them.  Don't do it all in one night	3	1	40	397
27982	\\\n          January 13, 2013\\	\\\n      I had pretty terrible expectations for this course since I am not a comp sci person whatsoever, but it surprised me completely. It was actually fun, interesting, and informative, and it was all because of what a great professor Apoorv was. He cared so much about his students and really tailored the class to our abilities. After seeing how terribly most of us did on the first homework, he slowed the pace of the class way down, which might have been frustrating if you had been really into comp sci, but let's be honest -- anyone who was would have skipped right to Java. For what it was -- a class that I was taking purely to fulfill a requirement -- it was really great. Apoorv is a genuinely nice guy, responds to emails almost immediately, and is always willing to meet with you if you're having trouble. He's young and cool and has lots of friends who work at Google. He also really cares about his students, and obviously wanted us to do well. Sometimes he isn't great at explaining concepts, but other than that, he's a seriously awesome professor and I would recommend his class to any humanities major who wants to get the Barnard Quantitative requirement out of the way in a painless (or possibly even enjoyable) way.\\\n\\	\\\n        Very reasonable. Bi-weekly homework assignments that I occasionally needed to go to the TAs for help with, a midterm, and a final. Don't worry if you mess up the final -- if you've done well on the midterm, he'll weigh that more. I screwed up and got a C on the final, but after completely panicking, I ended up getting an A in the class because I did well on the midterm and all of the homework assignments and did a ton of last-minute extra credit.\\	9	8	12599	6079
27986	January 15, 2013	I think it's already been made sufficiently clear that Professor Hershkop is an awful instructor his courses are disastrous messes, and the review dated November written on November 14, 2012 is an excellent summary of the class.  Rather than echo the points of that review (all of which were completely accurate), I'll add a few.\n\t1.\tHis answers to questions usually are along the lines of "well get to the answer to your question when we cover (insert topic here)."  Therefore, asking questions is almost never a sufficient way to clear up the immense confusion that results from him racing through topics.  The reason he races through topics was not because he had so much to cover, but rather because he missed six lectures during the first month for religious holidays, and five of them were simply canceled despite his promise to make them up.  The remaining lecture was covered by an undergraduate TA.\n\t2.\tThere are no published solutions to the assignments, neither for the benefit of the TAs or the students, and this hurts both of us.  If the TA misinterprets a question, the people who interpret it correctly get punished.  Because the assginments are often poorly and ambiguously worded, the probability of misinterpretation is high.  Furthermore, comments are rarely provided on the homework, so if you want to know where you went wrong, it's your job to email the TAs/professor.\n\t3.\tThe grading was ridiculously slow.  Before final exams, it took a minimum of a month to receive grades for any given assignment.  This wasn't because they were busy writing extensive feedback, as almost no feedback was provided whatsoever.  After the final, all of our assignments were magically graded within two weeks, which means that the TAs/professor weren't incapable of grading in a reasonable time fashion, but they just chose not to.\n\t4.\tNothing administrative that the instructor says is ever true, and by that I mean that everything is subject to change.  When he says that "homework X/practice exam Y will be posted tonight", that probably won't happen, and sometimes there's a lag of as much as two weeks (Sidenote: he likes blaming Courseworks when he claims he posts something but it never actually gets posted.  I find it funny that a professor in CS is my only professor to date to have these types of difficulties with Courseworks).  When he says that the exam is closed-book/closed-notes/in-class, he may very well change his mind at the last minute.  Sometimes you will receive notice that he changed his mind, and other times you will not.  \n\t5.\tWhile discrete math was listed as a corequisite, there wasn't a single mention of this in the class, and absolutely none of the material from discrete math was used.  Proofs by induction and recurrence relations might have been useful to learn (and are usually used in this class), but he decided not to mention them at all.\n\t6.\tPeople do not write bad reviews of Professor Hershkop because he is a hard grader.  To the contrary, the semester-end grading was incredibly generous.  People hate his classes because they are insults to people who are making an active effort to learn.	According to the syllabus, the grade was calculated by the following rough combination:\n60% Assignments and Projects - there ended up being 3 programming assignments and 4 theory assignments, all of which were very doable\n10% Midterm - this was an electronic take-home midterm that was ridiculously long but not difficult in the least, and the average ended up being a 115/128 (the professor does not allow his TAs to reveal averages, but some of them break that rule).\n25% Final - in class, open-book and open-notes, and about half the length of the midterm\n5% Random Numbers - he claimed on the first day that this is his subjective leeway.	27	3	1671	1622
27988	January 15, 2013	Dawn is really awesome.  There's really nothing not to like about her.  Some parts of the class were not incredibly exciting, but she was empathetic about this and admitted that some of the material wasn't the most exciting.  She was always well-prepared for lecture and seemed like she really enjoyed teaching the class.  She's also incredibly approachable and friendly, and makes asking questions during lecture very easy.  I am sorry to hear that people took advantage of this last spring in her Discrete Mathematics course, but that was not a problem this past semester.  \nThis class definitely teaches a lot of good material.  The material definitely compliments what is taught in COMS 3137 - "Data Structures and Algorithms," though there is no programming component in this class.  Some of the algorithms exist in a few variants (simplex, one-phase simplex, two-phase simplex, upper-bounded simplex) and it's important to keep these varieties straight in your head.\nThe homework was mostly out of the book.  Some of the problems were a bit of a pain, and a lot of tedious work overwhelmed the concepts that we were learning.  However, most of this is just the nature of the material.  The book itself is not very good, and I don't think it was a good choice for the class.  It has a good number of typos and makes the material so much more complicated than it needs to be.  For that reason, it is important to attend every single class and take good notes, as the alternative of trying to figure out the material from the book is much more stressful and time-consuming.	According to the syllabus, the grade was calculated as follows:\n25% Homework Assignments - there were a total of 7 graded homework assignments over the course of the semester\n35% Midterm - open-book and open-notes, similar in format to the practice midterm, but generally covers the topics that are not covered on the practice midterm\n40% Final - same deal as the midterm, but all the problems came from the second half the course, despite us being told it was cumulative exam	10	10	11575	NA
28022	January 23, 2013	Well, I am tempted to write this review because I dont want people to just live in ignorance that she happens to be from a great school/university and she can teach well.\nWELL NOTHING APPLIES.\n Also, because I am many of my friends got poor grades that costed me GPA and later job, I want to put my views/feedback/complains for all of you to view.\n1)This course can be done in 30 minutes essentially. What I mean is that you wont learn anything great here except simple synchronizations mechanisms, which if you do 1 or 2 good problems, you can learn.\n2) Whole purpose of "Vijay Saraswat' and IBM crap to teach this course is to get their language i.e. X10(that you are suppose to struggle to learn in this course) their research project @IBM famous in academia. NOTHING ELSE. There is not even documentation worthwhile reading for X10.\n3) They have no clue how to teach, but SEAS department is really dumb fuck department that allows such courses to happen even when intentions are very clear of parties involved in teaching.\n4)Martha kim is highly incompetent teacher. Her job in lecture hours will be just to sit back and reply to emails on her Mac. Once a while she would turn up to do announcements, afterall Columbia pays her for teaching.Really is that what she is required/supposed to do?\n5) Vijay Saraswat's bubble is to let people try 'TRICKY' problems and they will learn rather give tricky problems in quizzes or exams. Asshole, if that is what is required to be done, why are you in class and even taking this course. Is that how a course is supposed to be taught.\n6)I should say first Vijay and Martha should learn how to teach, take this course elsewhere say GaTech and then think about teaching.Assholes I just wasted my tuition hoping that I would learn something great. SHIT \nSeriously, I just feel so sad that Columbia being Ivy league could allow such cheap bastards to teach and even after complaints last year nothing was done ever to improve, except to remove exams from  course.\nNot worthy course to waste your tuition on.	If you are good programmer already, you will be able to do relatively well, otherwise you will struggle like I did. It seems this year they tried to reduce workload, but frankly speaking, they wont teach you anything worthwhile. You will repent later like me for having taken this course under Martha and Vijay.	20	2	4221	6026
28023	January 23, 2013	Well, this is one course of Columbia of which I am proud of.\nThere is nothing compared to this course that Columbia can offer and I guess Prof Nieh is THE best person to teach operating system course.\nProf Nieh is great teacher and goes in great details whenever required. His classes are great, even if you miss in person, you can view them on CVN later. It was really helpful.\nIf you are lazy to work because you have a job already and just want to pass this course, then you might not like working so much, but otherwise if you have genuine desire to learn operating systems, you will be grateful to Prof Nieh.\nAssignments are challenging and you will spend time reading linux kernel code. Best resource to get help is good TAs. For our course TAs were really good and helpful. I spent almost few hours with them before doing any assignment and it helped.\nCool thing about this course is that if you do assignments on your own and are able to finish it, you will become good enough to answer any question on kernel that you are expected to know and even more.\nMake good teams for your assignment. If you have problems with team mates better change team, hire or fire someone else you will end up struggling alone and that doesnt help.\nJust remain above average in exams, assignments and your grades will be great. If you outdo  average in all cases you will get a very good grade.	Heavy but worthwhile if you really want to understand your operating system well.	7	5	45	2384
28027	January 23, 2013	THIS.PROFESSOR.SUCKS.\nAlso proves that all phd's cant teach especially the smart ass ones. I would also like to remind him that just choosing people from his university as TA's wont improve your course especially when that TA is an irritating and stupid person who just grades his friends well. Stop doing favors and  improve your grading system. \nThe worst part is that everyone knows this professor and his TA's are shit and yet no one can waive it off because the sadistic professor wants to teach a bucket full of class which clearly are not interested in wasting their money for a course like ASE but for it being a core course.Please change your stream if you have to to avoid this course or else regret for an entire semester.\nI dont know how this professor is not in here. --> http://vandybubble.com/2011/10-professors-to-avoid-ratemyprofessor/	General as per a core course.	33	0	10725	1616
28028	January 23, 2013	All other reviews for the course Advanced Software Engineering by Swapneel Sheth have already pointed out how abysmal this course is, which I completely agree with. \nIn one word I would describe this course as 'vague'. Instructing staff was lazy and did not put any effort in making assignments or deciding the grading criteria, which can help students learn something. At times I wondered if  I was undertaking a core courses at one of the best computer science departments of the country or participating in a competition called SCORE. I think Swapneel made it mandatory for students to participate in SCORE so that he can improve his own resume and show how many teams instructed by him participated in the competition. This is what happens when you have a PHD students instruct a core course. I don't know how can the SEAS select such an under qualified person to take this course (he is not even a PHD yet!). Most TAs lacked sufficient subject knowledge. Although, Jon has knowledge about subject but he is more occupied with finding ways to screw students grades and feeding his big ego than imparting education. So, think twice before taking a course where Jon is a TA.\nMy advice: Change your track, change your university, drop out of college, do anything but don't take this course.\nAll views in this review are my personal opinion.	Not much. Do you even care now?	35	0	10725	1616
28036	January 24, 2013	Extremely arrogant, with the worst and rudest TAs (with the exception of Ashish Chhabria, who was very helpful and understanding), but a very effective teacher.\nThe class was very well organized, each class covering a series of slides. The slides are also extremely clear, with very good examples, although there are many small bugs in Pasik's code that you may find while reviewing for tests, which is confusing.\nDefinitely go to class - you learn so much so quickly with Professor Pasik, as much as you may despise being in his presence.\nHe also offers a lot of extra credit, so this class is an easy A/A+.\nAll in all, take this course even though Pasik's personality is awful.	five assignments (one optional, but half of the grade will go as extra credit)\nthree midterms\nfinal (during class, so it's super short and you don't even have to take it during finals week)	5	6	2508	1622
28037	January 24, 2013	Although he is adorable, brilliant and very nice, he is not very good at articulating or teaching. I can pretty honestly say that I didn't learn anything from him that I didn't read from the textbook after he already lectured on it, because he is that unclear and confusing.\nHis notes for the class (which he uploads on his website, and you should most definitely print out and bring to class) are wonderful. They are sometimes confusing, but you can always use the textbook to supplement your understanding of the material.\nThe grading of the homework is ridiculous, and the tests are so much easier than the homework.\nIn addition, when taking the tests, definitely read the textbook because chances are, by the first midterm, you won't know what's going on from the class and you will feel like an idiot.	roughly biweekly homework assignments\ntwo midterms\nfinal	2	4	40	397
28041	January 25, 2013	Disclaimer: I got one of the highest grades in the class. Don't think about that, however. It doesn't matter. I can promise you I objectively didn't do any better or worse than most of the people in the class. However, it stands to be asserted what a horrific failure Swapneel and his TA's were in teaching this class and how much it needs to ring out, loud and true, across every desktop of every student who is even thinking about registering for ASE under him.\nBe objective for a minute. Look at the other reviews for this class. All of them are negative. Only two people disagreed (perhaps the teacher himself and a TA?). What does that tell you? Ignore your feelings for a minute and let's focus on the facts. Looking at the other reviews and the overwhelming agreement that "Swapneel" and "ASE" should NEVER mix.................what does that tell you?\nIt tells you to fucking drop this class before you make the same mistake I did, you stupid fuck. Why? Read on....\nYes, it's a core class. You've got to take four. However, at least take a class where you will actually learn something. ASE is not that class. You will learn no new tools or technologies to aid you as a programmer. Software engineering as shown in this class is perhaps the most worthless and the lowest common denominator of computer science; if you can even call software engineering a science. I have no respect for anybody who seriously considers themselves computer scientists and decides to study software engineering as a specialization. I can sum up the entire class in two sentences. Ready? "Before you program a piece of software, take the time to plan it out and get an idea of what is needed and wanted. Then, after design and implementation take place, write lots of test cases to make sure everything works smoothly and correctly." That's it. I'm fucking serious. That's fucking Advanced Software Engineering. It makes me shudder to think of what regular "software engineering" is. EVERYTHING - and I mean EVERYTHING - you learn in this class can easily be picked up by landing a job and staying there for a little while. You are ABSOLUTELY wasting your tuition taking this class because - mark my words - you will eventually learn all of this material for free. There is no justification possible to convince me that the several grand I wasted on this class was worth it; there is no fitting label for this class other than "complete and utter rip off". Even if you take this review and the others with a grain of salt, I can promise you the class is still a waste of time because it's a fucking tautology you'll be learning this stuff anyway.\nWhich leads me to Swapneel and his merry men whom are the real reasons why you should avoid taking this class. Yes, even REALER than what I've mentioned above. Swapneel is approachable in class and outside of class. He responds to emails semi-frequently and the TA's were very available as per their office hours. This is all nice and fine but just because you do the bare minimum of what you are supposed to do doesn't and will NEVER make you a good TA and especially not a good teacher.\nI'll start with Swapneel's waiver policy. Once people effectively saw through him, many people tried to waive this class and nearly all of them were met with rejection. Don't ask me why. I can understand a few people here and there leaving due to the material not interesting them; rejecting a flood of people from waiving the class just to cover your own ass and to heavy-handedly "legitimize" your material is not only suspicious but a move worthy of only the most supreme of dicks. For this alone you have my eternal contempt.\nNext, the grading. Every assignment and lecture for that matter was excessively vague which is a stunning accomplishment for Swapneel given that just about everything in this class is complete fucking common sense. It was evident from the beginning of the semester that Swapneel had absolutely no idea what he was doing and, for many topics, no idea what the fuck he was talking about. The TA's were even worse with the material with the exception of Jon Bell. Jon Bell knew his stuff, but he is the special breed of asshole TA who likes to answer your questions with condescending questions of his own in order to, if I had to guess, feed his pretentious ego and perhaps make him feel better about excelling in perhaps the most worthless field of computer science. There was nothing about his actions that anybody could have mistaken for productive in a million years. I would pay Jon a visit from time to time asking for clarifications on grading or assignments in general and would be subjected to a barrage of condescension, pretentious remarks, and general smuggery. I eventually quit going to his office hours because I found his behavior so thoroughly revolting, disgusting, and perhaps most importantly, counterproductive. The other reviewers have touched on the other important aspects of the grading; generally the loss of points for unmentioned phenomena in the rubrics and the subjective, smug nature of the points. I won't bother to repeat what has already been said aside from the following: even if you think you've covered every possible angle of your assignment, you haven't. You have to look for the one stupid unmentioned detail that they're going to fuck you on and hammer that shit out otherwise you stand to lose points big time. If they ask for a test case, create multiple test cases. If they want a thorough explanation, give them an assload of words. If they want an example of something, include the example and a counter example. That's the mindset I had to take in order to get the grade I did in this class and I will re-emphasize it: look for the unmentioned details that COULD help you and fucking INCLUDE THEM because otherwise they will screw you out of a shitload of points.\nI'm getting the word out on this shit. Swapneel, Jon, Kunal M, Kunal G, and Priyank, I want you to read the above thoughts again very carefully. If you don't take these words to heart, you are going to destroy your chances of ever being worth a shit in the CS department again in regards to teaching. Not that the damage hasn't been done already; Swapneel and his TAs should NEVER, EVER be allowed to have the job running this class again. I'm fucking serious. You five are the worst I've ever fucking seen. I had a class at my old school with three teachers; a new teacher would come in after a test was given and none of the teachers communicated with one another in regards to what we had already learned. It was completely disorganized and the averages were abysmal since we were repeatedly tested on things the teacher thought we knew but we hadn't actually covered. All three of them were unapologetic in their grading policies and, when they didn't finish covering the units they were supposed to, told us to figure out the material ourselves and one of them even told the class to accept an solution of his "based on good faith" when he couldn't solve an example problem after two classes. You five were fucking worse than that class. The absence of this class is better than it's presence with you five at the helm, and just about anybody would be better at running this class than any of you ever would. You five are a disgrace to the department and I hope these words come back time and time again to forcibly separate you all from ever having the chance to teach again. Harsh? Swap, you once mentioned your grading policies mirrored the real world. Well, mine don't get any realer than this.	A lot of vocabulary and writing about common sense concepts. Fun! You also have a semester-long programming project that is graded primarily on l33tness as opposed to actual software engineering concepts.	36	0	10725	1616
28050	January 26, 2013	Top 5 (out of 1,024) reasons to avoid this course at all costs:\n1. No matter how much Prob/Stats or Linear Algebra or just MATH in general you *think* you know, you're not ready for this course (especially if you're an undergrad.. if you're a superstar Ph.D student, make your own judgement).  For example, on one of the homeworks, we were asked to perform vector calculus, which is usually not covered in any of the prerequisites. Another example is when we were asked to do multiple indefinite integrals of a particularly long formula, by hand, during a midterm as a problem worth 20% of the grade.\n2. He goes through very few examples in class, (and when he does, only a select few understand him) which means that most of the homework problems you have absolutely no idea how to do, even if you took the best notes humanly possible in his incredibly dull lectures. For this reason, academic honesty in its strictest definition (no looking through internet for answers, no collaboration on homeworks) is nowhere to be found, because it is impossible to do 90% of the workload in this class otherwise.\n3. He can't teach. I will leave it at this because no other words can describe how truly bad he is.\n4. Since this isn't an absolute requirement for any tracks (even for AI, you can take much better courses such as Spoken Language Processing), you can do yourself a favor and take this same course on Coursera or other excellent online alternatives if you would really like to learn Machine Learning. This is more ideal since Jebara's class is the least efficient place to do any learning.\n5. http://www1.cs.columbia.edu/~jebara/ Look at his picture. He is smiling smugly at the pains you will have to go through to survive in his course.	5 Homeworks (5-20 hours of RESEARCH, because you ain't solving these with what you "learned" in class)\n1 Midterm (Average was around 50)\n1 Final	19	13	1636	1921
28053	January 26, 2013	The below reviews would  have given a very clear idea about the course and how it was taught ...what is baffling is the fact that the course is a core requirement for MS students when anyone who has worked in the software industry or done an undergraduate in CS would already have done everything that is a part of the course ..The assignments defy all sense of logic ranging from "reading articles " and writing summaries to what seemed to be an experiment on the social behavior of individuals when they are made to test each other's projects..what followed was pretty disappointing and sickening to an extent when teams tried to raise defects in order to gain points...the grading rubric at any point was not concise ..the teaching assistants did try to keep up pace with all the chaos that was going through ...I would not comment if this was still better than what was being taught by the previous but this has to be the most stupid course I have ever had to take as a student	does it even matter	14	0	10725	1616
28058	January 26, 2013	Figuring out exactly what was expected from each assignment and project milestone was the main problem. It seemed like the emphasis wasn't on the software engineering process, but on satisfying very vague and irrelevant conditions as well as pleasing your TA overlords (many of which were visibly on a power trip). Having requirements and even definitions change on you after the fact is incredibly frustrating (euphemism: "clarified"). Lectures usually covered painfully obvious ideas.\nAlso... if you're going to illustrate a nifty connection between refactoring source code and factoring a polynomial, at least factor a middle school problem correctly? Swap wrote x^2 - 2x + 1 on the board and factored it as (x-2)*(x+1). Then he looked at it again and changed it to (x+2)*(x+1) ........................ Yep, this guy occupied a chunk of my semester. -_-\nConsider the following:\nhttp://www.youtube.com/watch?v=oKdYRjwc8T0\nskip to 1:10 for the good stuff.	Workload was average for a core class, but a lot of that effort and time went into seeking out the gotchas that would screw us over in the grading process.	18	2	10725	1616
28059	January 26, 2013	A benchmark class, indeed. I am happy that I took it and improved my "C" programming skills, especially in the OS domain. Prof. Jason Nieh teaches the course very well.\nApart from the skills and experience in the areas - Operating Systems, Linux kernel programming, this course demands a lot of your "C" skills.\nIf you are a HardCore "C" fan and would love to experiment at system level in "C", then read on!\nThis one class is for those who crave for "C" programming a lot! You will get your hands dirty while building crucial features of Linux kernel on an Android device in "C" involving Synchronization, Scheduling, Paging, File Systems, etc(as per the projects in Fall 2012).\nYou will fine tune your "C" skills yourselves mainly in the area of optimizing the usage of the kernel resources in terms of memory. You keep an eye on what each function ends up returning to determine its success or failure - this comes with practice if you aren't in the habit!\nThe grading rubric is the most comprehensive one I have ever seen in my life. For each of the assignments/homework, the rubric would cover every nook and corner cases that a novice "C" programmer for Linux kernel would definitely ignore.\nWell, in the beginning you would find each of your submission being bitten by checkpatch, for not abiding by Linux kernel coding style. But, with time, your "C" coding style becomes smooth and elegant if you start respecting what that seemingly strict master(checkpatch) says, trust me!\nAh, userspace programs for each of the assignments! Well, I enjoyed much by dwelling in "C" while building the user space test programs for testing the Linux kernel features implemented in each of the assignments. You would be asked to demo each of the Linux kernel features you would implement in each homework and during the demo, well, how dedicated you were in testing your code gets rewarded when the standard test code(which they would have in their repositories) completes without any problem and you hear TA saying, "That's cool!".\nTAs were very helpful in answering the questions we had. Sometimes, we had to bug them and get the information what we want - but, they were all nice and had good hold on the subject. Among them, I found through live and piazza discussions, TA - Alex to be damn good in the subject.\nI feel it's important to mention that the solutions they would publish are simply beautiful. The solutions implemented by Christoffer Dall were mesmerizing. No, am not exaggerating at all - his coding style is so pleasing to eye and his code looks very simple and precise!\nPeer reviews: Yes, you would get opportunities(or responsibilities?) to review and grade other people's code. Here, I was annoyed at certain times of seeing some seriously senseless code from other people. At other times, I had also the chance to look at some brilliant code. So, overall, there was a good exchange of knowledge and suggestions between our team and various teams.\nYeah, btw, try to form a good competent team - believe me, it's better to have arguments and come up with some kick-ass code which scores beyond the average code resulting from an average interaction or no interaction at all between you and your teammates. And this is from my experience!	Normal if you and your teammates are damn good in "C" and kernel programming, and heavy otherwise.	7	1	45	2384
28060	January 27, 2013	Well, I wanted to do my part of informing you ignorant folks, in case you happened to like this name 'Web enhanced Information Management', because the moment you hear this name(Just like I did), you start dreaming of learning something cool...like...Using web for managing data...something like Facebook ?....something like twitter ?....something Like Google Plus ....or say even Amazon....Google search engine....Bing...what not...?\nWell, wake up ignorant souls, THIS COURSE IS NOT WHAT YOU ARE DREAMING/THINKING OF, even when it should sound like that.\nThis course starts with a horrible professor telling you history of probably Internet and few technologies like HTML, Javascript, etc.Not for one lecture or two....but straight for HALF a semester....reamaining half..?SHE WILL DUMB FUCK SIT IN CLASS AND HEAR YOU PRESENT YOUR PROJECT AND GIVEN YOU A FUCKING GRADE....free ride...hmm....and WASTE OF TUITION?\nSo, you are just suppose to hear her speak or pretend to hear her for half a semester(good lord...there are points taken off if you happen to miss a class....WAW.....what a PROF...SHIT GAIL Kaiser)...say half of tuition fee of this course...telling what all happened and when? DO YOU INTEND TO LEARN THAT AFTER PAYING SO MUCH in this course at COLUMBIA ...an Ivy league university?\nYou will be made to produce a paper for mid term that constitutes half of your whole semester grade. This paper can be on any topic that you like and TA JON Bell likes. Oh good lord behold...if you did not write a paper in 2-3 weeks that is good enough to please "Jonathan Bell"...my my....you are getting a C for sure. You might think how is that possible, afterall you did every possible shit they asked you to do...like making 15 pages report. keeping font of this SIZE, SPACING between lines, inserting proper images as they asked ...cite them well.....with special reference method....they asked....still you get a fucking C or B- in paper grade. Afterall thats what  you paid for to learn at Columbia? (Do some scaling, lining, put references etc..and let prof speak some history for half a semester....) If you by chance happen to visit Jonathan Bell and ask for why you got a C or B or something in between, he will search through that report and say, your heading was bold when it should have been italic..or your paper is not strongly supporting this or that.....what the fuck...?You paid tuition for that?and after NOT LEARNING ANYTHING FOR A SEMESTER...you get a C to B. Another half of semester you will end up doing some project OF YOUR CHOICE and demoing in class what you did etc. TEACHER was suppose to teach and that never happened...and now you find yourself suddenly giving presentation in front of class on something....\nWaste of tuition and a poor grade. \nYou wont learn anything in this course, because she wont teach you. Moreover if you happen to not please them in presentation or in project, you will get a POOR GRADE that will cost you GPA and later jobs.\nJonathan Bell is an asshole TA who has a BIG EGO. He rejoices in screwing people's grades and nothing else. He can never agree to anything you say or propose. It should strictly adhere to what he thinks is best and what he likes. If that is not the case, you lose grade and points. Why does Columbia even allow Gail Kaiser to take classes? and what do students learn after taking her classes? All her courses share same story and I was victim....\nAtleast you dont become one....and please please drop this course....take something else somewhere if not at Columbia.....if you have to...but dont take this course....you will repent all your life for having taken this course under Gail Kaiser with Jonathan Bell as TA.	Not much, but I still question myself what I learnt in this course? Better I did not join college..or atleast not Columbia SEAS or dropped out of college....but I had no options....but you probably have if you are reading this...	10	1	1474	2869
28125	March 12, 2013	This class was a huge disappointment. Stolfo manages to ruin a topic that is actually incredibly interesting and useful. His lectures are mediocre at best, his sample code is buggy and almost entirely in LISP, and no resources are made available to prepare for the midterm or final. If you find yourself enrolled in this course, I suggest you spend plenty of time with the textbook. It's far more useful than any other resource available here.	Four Projects (~3-4 weeks each)\n1 Midterm\n1 Final	6	0	4213	26
28147	April 02, 2013	I am currently taking Comp Sci Theory with Choi, and I would definitely recommend him.  At first the class was boring, because he taught straight out of the book. By the first midterm, I only came half the time, because it wasn't interesting. Before the midterm, he did an informal survey evaluation to see what the class thought. I was in his office hours before the midterm (like most professors, his office hours are useful if you have specific questions). As we were packing up to leave, he said that the evaluations had been really bad, and he had to figure out how to change the class.\nAt this point, you might be wondering why on earth you would take this class. Here's the thing: he really listened to the evaluations! I came back to the first class after the midterm, and he had totally changed the way he taught. Instead of going through every proof step-by-step straight out of the book, he focused on the main concepts of the proof. He engaged in a dialogue with the class, asking how we would approach a certain question, and breaking it into manageable chunks. For example, he might start by asking what approach we should take (proof by contradiction, diagonal method, etc). It's amazing what a change there's been in the class.\nAs far as I'm concerned, if you want a completely formal, rigorous proof of every theorem, you can read the book. (I should mention that the book he uses is very good-- thorough, readable, with useful diagrams.) What Choi's been teaching us is far more valuable-- how to think about a proof, how to go about setting it up. In other words, his class is great for building your logical intuition. \nIt's also a fun class, and he makes it seem much more intimate and interactive than you would expect for a hundred-person class (as you would expect, about sixty people show up on any given day). There are twenty or so people who regularly ask questions, and he's learned all their names. It's a comfortable, yet productive atmosphere.	Very reasonable, especially for a comp sci class: 5 problem sets worth 20%, two midterms worth 20% each, and a final worth 40%. I took Discrete Math with Gross, and the workload is similar. (Unless you've taken a lot of formal, proof-based math classes, you should take Discrete before this class. Plus, Gross is amazing!)\nThe problem sets are spaced about two weeks apart, except for midterm weeks. They usually took my study partner and me 4-8 hours. If you really understand the concepts, the problem sets are straightforward. If you don't understand the concepts fully, expect them to take longer.\nOne last note: it's totally okay to get a used version of the textbook. He posts the entire question, so you don't have to worry about the numbers not matching up.	0	0	12619	234
28233	April 29, 2013	Without a doubt one of the worst instructors I have ever had the misfortune of encountering here at Columbia University. Unhelpful and inflexible in terms of grading, which was itself extremely harsh. Exams covered a great deal of material that was never taught/explained in lecture, and were extremely esoteric/pedantic in nature, requiring extreme depth of knowledge in these areas. Instructor read straight from textbook, except in a way that was more incomprehensible than the textbook itself (due to his limited English-speaking/comprehension ability), rendering lectures utterly without merit. Choi actively discouraged students from attending lectures or approaching him with questions. 11/10 would not take again; wait for Aho to teach the course,	- Biweekly problem sets (20%) (5 per semester) requiring 4-6 hours each.\n- 2 difficult midterm exams (20% each) (average = 40 - 70). Little to no partial credit, generous extra credit problem on each is definitely worth doing.\n- 1 Final exam (40%)	9	2	12619	234
78677	May 13, 2015	This class was fairly easy; I definitely think it could have gone into more depth. But it was not a joke: it covered a reasonable amount of material in a reasonable amount of depth. Papageorgiou is just an effective teacher, and he doesn't assign cruel problem sets.\nThe class covers only the basics of quantum computing. It's a CS class but it would be reasonable for a physics major to take it, if they had some very rudimentary CS knowledge (logic circuits, and the general idea of big-O analysis of runtimes). The fact that it was targeted at two groups limited the material we could cover. We couldn't really talk about complexity theory to avoid alienating the physics majors. And we couldn't talk about any actual quantum mechanics or real-world implementations of quantum computers, because that would have terrified the CS majors.\nYou definitely need to know your linear algebra coming in. The first quarter of the class is basically linear algebra review, to familiarize students with the Dirac notation used in quantum mechanics, and help them get used to working with complex numbers. We then worked through how operations on quantum states can be equivalent to Boolean circuits (proving that quantum computers are at least as powerful as classical computers).\nThe rest of the class was going over the famous quantum algorithms that are better than any known classical algorithm. Shor's factoring algorithm, which is the cool thing that everyone wants to learn, didn't really come in until the last few weeks of class (although much of the groundwork was laid before that).\nLectures were basically the professor working through problems on a digital board and explaining as he went. It was important to take good notes, because for some reason he would not post copies of these digital notes online. His lectures were quite helpful; they followed the general structure of the textbook but made explicit some parts of the book left "as an exercise to the reader". Normally I think this format is terrible, but there was something mysterious going on and I actually remembered most of what I learned. Perhaps it was the professor's mellifluous accent.\nThe professor and TA were both helpful and available during office hours. They were also both responsive by email, and generally very friendly in all their interactions.\nOverall, this is a great class. I didn't have to work that hard and I still learned a ton. It's the best of all possible worlds.	5 problem sets.\nHomework was not too time-consuming. There were simple but helpful written problems. Most assignments also required us to write a "simulation" of some quantum algorithm in MATLAB. These were totally useless: often you would pass in the desired answers as an argument to the function. But it was surprising how helpful it was to my understanding to write them.\n2 completely open-book exams (which includes any notes you want and even a laptop, for those students who pirate their textbooks).\nThe exams had very high averages. If you asked a clarifying question during the exam, the professor was extremely generous with his answers; he wouldn't be coy if a mistake had led you astray.	2	0	2762	5922
28254	May 02, 2013	I would really avoid taking this course with Stolfo. The subject is fascinating, the programming can be fun, but his lectures are dreadful. Out of a class of 100+, only a handful of students even bothered showing up towards the end. \nThis wouldn't be a problem if we had a remote idea of what material we were responsible for knowing. We were given literally zero resources to prepare for the exams - no sample exam, no list of topics review, not even chapters in the book that would be covered. Multiple questions posted on Piazza about the scope of the exam were left unanswered. This is after not having a single written assignment for the entire course. There was exactly one programming assignment covering material from the second half of class, but it was due the week following the final exam, which is just bizarre.\nThe exams themselves are a frustrating joke - 40% of the material on the midterm came from 4 one-word answers (two yes/no), with no partial credit. Stolfo said this was because it made grading easier.\nIf you do wind up suffering through this course, I really hope you don't give a shit about your grade. The AI tournament is worth as much as the final exam, and involves students programming a game-playing intelligence and playing against each other. While it's a cool idea, 20% of your grade comes form how well your program does in the tournament. It's a single-elimination tournament. Meaning that it's possible to have the second-best program in the entire course, but if you get paired with the first-best program in the first round, -15 points for you (there's a five-point "losers bonus").\nNot only that, but half the class is grad students, and there aren't separate tournaments for grad students and undergrads. Meaning you could get paired up with a Ph D student who's been working on their algorithm for a month because it's the only class they're in. I don't know a single undergraduate who made it past the first round.\nI think the most frustrating part of this course is that all of the above concerns were brought to Stolfo's attention multiple times by multiple students - he seems to either not care or not listen.	Midterm and final, 4 programming assignments	7	0	4213	26
28329	May 12, 2013	I have no idea how the previous CULPA reviews gave Professor Rubenstein such good evaluations. Lecture notes were riddled with errors, as were homeworks and homework solutions. Lectures themselves were very hard to pay attention to due to the multitude of conflicting information conveyed to us (Prof. Rubenstein had to correct himself and the slides during pretty much every lecture). He wrote on the board for maybe two classes, and those were probably the classes that I actually learned the most. \nHomeworks are very repetitive and students often dreaded doing them because the questions were updated with corrected versions; we still only had one week to do them, so more often then not, I chose to start later in the week waiting for all the corrections to come out. \nAlso he is very terrible at answering emails (I put 3827 in the subject line of all of my emails!). Sometimes questions to homeworks would be answered after the homeworks were due. \nHe has very strict extension policies. A couple of my friends just got 0s on their homeworks because they were sick/absent/had religious reasons for missing the deadline.\nAll in all, I don't feel like Prof. Rubenstein's teaching was effective, at least for me. But during the times I went to office hours, he was helpful. \nIt seems to me that in general, he gives no shits about his students. \nHe also said he reads CULPA reviews so I guess this is my honest opinion.	1 problem set a week; each take a lot longer than you expect (40%)\n1 midterm (35%)\n1 final (45%)\nTotals to 120% but he reduces your lowest category by 20%.	9	6	2427	4251
28348	May 14, 2013	There was not much I liked about the course taught by Rubenstein. The best days in class were when Edwards/Kim came in to sub for Prof Rubenstein when he was out.\nThe worst offenses:\n* He is not prepared enough for the lectures in order to make the material engaging or easy to understand. They consist of him reading off of his overly complicated slides and often not coming up for air.\n* He does not require a textbook but suggests two textbooks. His slides are basically reproductions of the books. I had the textbooks and did not think that the slides were enough to understand the material by. I think it's unfortunate that he uses two books when the course could be summed up in one book. He should drop the awful Mano and Kime book.\n* His homeworks are a mixture of totally tedious repetitive nonsense (adding binary numbers excessively) which teach little, to extremely esoteric circuit creations which also do little to explore your understanding of the material. Perhaps the course is meant to test your ability in solving puzzles through building circuits - if that is the goal then I guess I've misunderstood the intention of this course.\n* His homework policy is to allow for cheating. He allows people to collaborate on the assignments which in my opinion discourages anyone from doing their own work. For those that do their own work and do not compare answers before submission are just out of luck I guess. If you submit without comparing your answers and knowing you have 100% going in, I guess your'e a dope. If the whole class is allowed to collaborate why even give credit for the assignment?\n* His exams are insanely unfair in my opinion. After having done reasonably well on the homework assignments I felt unprepared for the midterm/final. There are some reasonable questions but then there are those that will boggle the mind how they accurately test my understanding and knowledge of the material. But again maybe I've failed to understand the goal of this course. His exams consisted of reading a mountain of text to explain the premise of creating some new fangled circuitry. Then having questions part b through d rely on your successful understanding and completion of part a. It doesn't help that in this mountain of text it is mostly incoherent explanation of what he is trying to express. My impression is that they were overly complicated and/or error filled.\n* I have had some minor experience with this course's topic before and usually find it fascinating but I found myself unwilling to participate towards the end.\n* The course covers too much ground and not enough of it carefully. There seems to be a theme that a lot of what we are learning is not necessary to know. That's insane to me. Everything we learn should be at least interesting and inform our future. Cut out the small extraneous that have no relevance.\nThe good:\n* He is a nice guy and office hours are very useful.\n* When he would work out a problem manually on the board this was a very useful exercise. Often I think he would realize the absurdity of certain questions when it would take him 20-30 minutes to complete.\n* He reads feedback and there was an adjustment to the pace of the class which at first was going a mile a minute for no reason.	9 homeworks\n1 midterm, 1 final\n20% reduction in the lowest scoring item	6	2	2427	4251
28352	May 15, 2013	I took this course with Edwards and Martha Kim in Fall 2012.\nThis is a review of Edwards.\nHis slides are simple and informative.  His lecture style is very straightforward: he is one of the most rational and simplistic presenters of complex material I have ever encountered.  If I had to take PLT, I would do so with Edwards.  He introduces LogiSim, which Rubenstein does not.  I told several of Rubenstein's students about LogiSim and it made their lives much easier.\nBut really I'm writing this review because of Edwards' personality and humor.\nEdwards is a geek's geek.  Perhaps he doesn't look like one, but he dresses like one and behaves like one.  I find this enjoyable in a professor, but for some it may be an acquired taste, like Scotch whiskey.\nSome co-engineers of mine have pointed out that he can be rude, surly, and dismissive.  I think these attributes seem to present themselves because he is rational above all else, and has a limited amount of time.  (~2 orders of magnitude below Temple Grandin. Let's say the average engineer is about 4 below, Vallancourt is 6 below, and the average art history major is 10 below.)\nI don't think he has ever been rude to me, but in the sense of being hyper-analytical without regard to feelings, Edwards has a tendency to do this.  And I personally find it liberating, assuming I am capable of keeping my ego out of the equation.\nI wouldn't say he equates human interactions to a set of logic gates, but in dealing with assignments and career advice, don't expect a lot of small talk or beating-about-the-bush.  Professor Edwards is one of the most direct human beings I have ever encountered.\nIf you need to prove to yourself that he has a soft/creative/dynamic side, keep in mind the following:\n * He modeled for McDonald's in Taiwan\n * He bought a vintage PacMan arcade machine and drove it to his office from AC\n * He makes bad jokes that pertain to driving even though no one drives in New York\n * He wears a fanny pack when he bicycles to and from Mudd\nI may not be the most adept engineer in SEAS, but I thoroughly appreciate Edwards' awkward and dryly amusing brand of brilliant.	Manageable and intuitive.  Exams test the basics.	5	0	1637	4251
28363	May 15, 2013	This was a great class - I only wish it were a whole semester!\nEmily is totally fantastic and has a really great practical perspective as a full-time Rails programmer at 10gen (the rest of the dept is great, but sometimes you want someone whose last time pushing production code wasn't in 1976).\nAsk her questions - she'll answer them in depth, no matter how elementary.\nRyder was a great TA - very responsive, came to every class, and was able to handle a group of 20+ students all of whom were learning a new programming language (some of whom, including me, learning the basic concepts of web programming for the first time).\nFor the final project, despite the fact that he had his own finals to study for, he was available via email and answering questions fully (which is in itself remarkable) and also without the usual rancor that accompanies responses to last-minute requests for help.	5 short programming assignments graded /10, 1 final project that builds on those assignments.	2	0	11574	6362
28395	May 18, 2013	Let me preface this by saying I received a C in the class but it's also the only C i've gotten at Columbia in 4 years (never even gotten lower than a B). In any case take, everything with a grain of salt. \nNow there are a factors here that contributed to this that are beyond Rubenstein's control and are my fault, such as the fact that I don't really have a background in computer science, I never went to his office hours (I did attend the TA's occasionally), and I'm a second semester senior.\nThat being said, Rubenstein's style is that of the prototypical SEAS professor. There's a certain level of irony to this, because in his lectures he comes across as personable guy, he speaks English quite well, and he has a great sense of humor, none of which are very typical for engineering professors I suppose. However, none of that means shit if you spend all your lectures expressionlessly reading off slides, do not provide a good text book and assign cryptic error-riddled homeworks expecting people to be able to solve them purely based on what you wrote on those self-same slides. These slides, as the previous reviewer pointed out are also often riddled with errors. Moreover, they are quite repetitive and there are only a few that are truly important in every lecture, whereas the rest seemed like useless filler. Then there are topics that show up that aren't covered very well in the slides on both homeworks and tests. \nGenerally speaking, I'm pretty sick of this en vogue teaching style where professors don't have to do anything except for recite from slides. It's not conducive to learning, and yet somehow the super-genius professors of SEAS still haven't figured out why people don't attend their classes. Or more likely they have, they just don't give a shit, since giving a shit about their students is not high on their priority list. This obviously wasn't the first class where this has happened, and I sincerely doubt it will be the last. The true tragedy here is that Rubenstein seemed well enough aware, occasionally stopping in the middle of his lectures to ask the class if they understood what he just said, and when less than half the class raised their hand, he would proceed to explain the exact same concept all over again in the exact same way.  This created the illusion of concern, while truly accomplishing nothing at all. \nAgain, it may be harsh or nigh impossible for me to claim he didn't care when I never went to his office hours; however, generally speaking, his lecturing style came off as lazy and unconcerned, which puts him squarely in the "average" range for SEAS professors. As far as attending office hours goes, he said that if we could show him we knew what we were talking about in office hours it could only help our grade. Unfortunately his lectures were often so devoid of content, I actually didn't learn very much, so I truly didn't know what I was talking about and probably deserved the C. \nSo I guess you should take him if you want a lecturer with an interesting personality and sense of humor and have a pretty good background in this stuff.	Problem sets that started out fairly easy but became pretty hard near the end. Reasonable-ish midterm and tough final that were open-book and open-note.	15	1	2427	4251
28400	May 19, 2013	I've had probably some of the worst professors at Columbia including (according to CULPA) "soul sucking professors" and "don't-take-this-class-unless-you're-an-econ-major professors," but I have never had a "I-want-to-kill-myself" kind of professor until I met Seung Geol Choi. On the first day of class, I came in to the lecture room ready and excited to learn about computer science theory. By the end of that hour and a half, I had already begun to dread my upcoming semester. I even wondered if I should have dropped the class that day, but I didn't and now I really wish that I had dropped it and waited for Professor Aho. To describe my experience in Choi's class would be analogous to describing how a pineapple would feel being slowly twisted into my anus. Choi discouraged us from coming to class under any circumstances on the first day of class. I thought he was joking, so I went to the next two lectures. Considering how awful they were (he paraphrased from the textbook in a very incomprehensible manner), I really should have followed his advice in not going to class. The problem sets were painful. I heard he was mean to his TAs. The midterms were pretty bad, but not as catastrophic as the final exam (which was worth 40% of my grade). I did pretty well in all of my midterms and homeworks, and managed to almost fail the class because of the final exam. I sat through the three hours of the final exam wondering when the pain would end and whether I should just kill myself on the spot because it would be better than finishing the exam. Don't take this class under any circumstances. Please. Save yourself.	- 5 problem sets (spend many hours on these and expect many typos that will be fixed in the last minute)\n- 2 midterms (you might think that you did well on these, but don't be fooled! You probably got them all wrong...)\n- 1 final (just YOLO that shit)	6	5	12619	234
28405	May 19, 2013	This class epitomizes the worst college class where you get a bunch of theoretical knowledge and NO application. We learned about functional dependencies within databases, and now I can show what a functional dependency is...but what is that within an actual database and how does this apply to SQL? We spent 2-3 lectures on the theory and underlying implementation of indexes....but didn't even touch how to actually create an index in SQL. We didn't introduce us to any of the numerous databases available (MySQL, Postgres, SQLite, ...) and had us play with a variant of an Oracle database that I'm pretty sure NO ONE uses in industry. And now I'm thrown out into the real world with a hammer and I have no idea how to use it. A month later I'll probably be nailing my finger into the wall by accident.\nBesides that, the professor creates slides that are basically copy-pasted from the textbook (and the textbook is horrible with typos, mathematical notation gibberish with no explanation, and no real-world application mentions). He hates taking questions, his TAs are half of the time absent from their OHs, and he obviously doesn't care about the class. I guess he's funny though (if you like "haha wow I can't believe I'm sitting in this classroom funny").\nIf you plan on taking this course I recommend the following advice.\n1) Never go to class, and just read the textbook.\n2) The textbook is horrible so find online slides, lecture videos, and other SQL/databases notes to actually understand the textbook\nWhat does this advice mean? Basically, if you take this class you will be paying a few thousand dollars in tuition to find and learn everything on your own.	Four hws where the answers are straight from the textbook (if you understand it). A project where you build a web app with an underlying database (he gives no tutorial on how to build a web app and the Oracle database you use is never actually used within industry). A final and a midterm where the answers are arbitrary (is this really good database design? is this really the best SQL query you could have used?)  or the answers are cookie-cutter (vocab, exactly like the hw or class example).	16	7	1442	664
82444	November 09, 2020	I highly recommend taking this course with Professor Malkin! Prof Malkin is extremely intelligent and this is clear in the way she presents her lectures. She is clear, concise and really makes the subject matter easy to understand. She covers all bases and encourages you to think in non traditional ways. She is also approachable and always answers questions.	Quite manageable. HW every 2 weeks and 3 non cumulative exams. Short quizzes (5-10 mins) due every week or so.	15	69	1621	234
28406	May 19, 2013	I have never been more let down by a Columbia class....ever. Artificial Intelligence is supposed to be the most interesting field in CS. Programming robot intelligence? Learning about machine learning? Discovering how your video games are so smart? Nope, but we will spend half of the semester on depth-first search, breadth-first search and other search algorithms. And then Stolfo will skim past everything you actually wanted to learn in AI.\nThat being said, Stolfo is the sassiest professor I've ever seen and a blast to watch on x2 speed (online lectures!!). Laughs will be chuckled, but by the end of the lecture you'll have a faint idea of what he was talking about.	Four projects, a midterm, and a final. I wish we got more guidance on what would be on the tests, and the project descriptions are vague which means you'll probably lose points unless you triple-check your program with TAs and the professor.	5	0	4213	26
28411	May 20, 2013	I took this class having little prior programming experience, having only learned a bit of MATLAB in Art of Engineering. For SEAS and particularly BME students who are required to take this class, having the background in MATLAB from AoE is pretty useful and allows you to slide through the first couple of weeks easily. However, as the class progresses you start discussing Big O notation, structs, object oriented programming, functions like varargin and varargout, and recursion, which were not mentioned in AoE but are really useful to know and require some more time. Later in the course when Blaer talks about histogramming images, you can again use some of the code you wrote in AoE in the homework for this class. Anyway, Blaer is a great professor. He's easily approachable immediately after class or in his office hours. Blaer holds review sessions before the midterm and final, which are really helpful. He tells you what he's going to test over, explains challenging concepts, and in some cases tells you the exact questions. The best advice I can give is to go to class, because Blaer's teaching really clarifies the concepts asked about in the homework. Often you will be able to modify code he wrote in class to solve homework problems. Furthermore, nobody usually goes to TA office hours, but they're really helpful if you're having trouble with a particular problem on the homework, even if you have to go to the crowded Comp. Sci. lounge to utilize them. \nOther notes:\n*You don't need the textbook for this class. Just take good class notes or get them from someone else. Blaer also posts all the code he writes on his website. \n*Also, you don't need any calculus for this course, but any coding experience will help.\n*Just go to class. It makes everything easier... Blaer always asks if people have questions at the beginning of class.\n*Blaer also tells funny stories about things like cat whiskers and building robots, another reason to attend class.	5 homeworks, each about 2 weeks to do, 6th homework is extra credit (a one question assignment involving GUIS). The first homework is super easy, average is 100. HW 3 and 4 are pretty hard, certain problems can take you a few hours to solve. Nothing too serious though.\n1 midterm that's after spring break. Pretty hard, 150 points, 90 is curved to B+, ~120 for an A.\n1 final, easier than midterm, 250 points.\nI got an A without too much stress, and you can too.	2	0	3409	4957
28413	May 20, 2013	This course is required of all CS, CE, and EE majors, however EE and CE majors will probably find themselves more prepared for this course.  This is because engineering students are already exposed to digital circuits in 1201, and are generally more comfortable with design at this level of abstraction.\nRubenstein's slides were very detailed, and I never once needed to look at the textbooks.  While his assignments and slides did sometimes contain errors, he fixed them right away.  He also posted several practice exams, which were very useful in preparing for the midterm and final.  \nI do wish that he worked through his examples on the blackboard instead of showing them on slides.  Also, it would have been nice if he could have found more ways to engage students during class.\nOverall, I'd say that Rubenstein is a good professor, since ultimately I learned a lot from his course.	Typical EE workload.  Weekly problem sets that take 3-6 hours, one midterm, and a final (Both are open book, open note).  The exams are a bit of a time crunch, so it's definitely worth it to do a lot of practice exams to prepare yourself.	1	2	2427	4251
28426	May 21, 2013	Do yourself a favor and take this class with Jonathan Gross to actually learn Discrete Math. He's not great, but he beats Dawn Strickland.\nDawn is probably the nicest professor in the whole of Columbia. She's like a pre-school teacher. This doesn't really help. She literally didn't teach us anything this semester. She teaches the very basics of theory and does some problems in class. She assigns problems from the textbook that are harder than what she teaches in class. Her exams have problems which are harder than the textbook. This is a recipe for disaster. I think math classes should be taught in such a way that students get loads of practice and are tested at a level equal to what they are prepared for, not more. We also missed 3 classes this semester, so we didn't cover a lot of material.\nIn the end, I didn't learn much from this class. I feel under prepared for CS Theory. I think Dawn should count the problem sets towards the final grade, and give us harder, more relevant homework, which will prepare us for the tests. The textbook goes into the subject in depth. You should read the more interesting proofs and theories from the text if you're interested in the subject.	60% from 2 highest midterms of 3\n40% final\nHW doesn't count towards your grade.	6	6	11575	397
28427	May 21, 2013	Advanced Programming is a great course which makes you a better programmer. It introduces you to C, C++ and some system programming. It also introduces the UNIX environment if you're not familiar using a shell or an editor like vim.\nJae started slow in the beginning, spending a lot of unnecessary time on C. He rushed through C++ in the end because of this. The class gets most interesting in the middle when you build a simple web server.\nThe labs take anywhere from 2 - 14 hours of work. Lab 7 is the longest. None of them were really hard, but he extends the deadline for pretty much all of them.\nThe midterm was just as hard as last semester. It's not bad though because the class average is really low (around 50), so you can get a good grade. The final was much easier than the midterm. A lot of people complain that this class is hard - it's not. It's of average difficulty and has an acceptable workload for a 4 credit course.\nJae's a great teacher, but he's not very approachable. He does care for his students, but he's very curt and to the point when you talk with him in person.	30% labs\n30% midterm\n40% final	9	4	3509	4758
28887	December 17, 2013	CS Theory as taught by Yannakakis is a good class -- it achieves everything you basically expect a class to, though it isn't outstanding in any particular regard. \nFor almost the entire semester Yannakakis follows the textbook ("Introduction to Automata Theory, Languages, and Computation"), and it pays to read the text ahead of time. The book is light on theory and heavy on examples, and you could probably get away with not going to class for the first 10 weeks or so until Turing Machine reductions start to be explained, because the book's explanations until then are always thorough enough. Lecture clarifies and sometimes expands a bit on the book, but not in any fundamental way, e.g. there might be a slower and a faster way to implement a given algorithm, and the book gives the slower one while Yannakakis will show the faster one in class. Once you get into Turing Machines, going to lecture is pretty important. The book sucks on reductions.\nAs a lecturer Yannakakis isn't exciting (it didn't help that this semester's room was poorly lit and had amphitheater style seating -- quite conducive to dozing off) but he is usually quite effective at going through examples clearly. He's been doing this for long enough to know which points people get confused about, and he makes sure to hammer those home. The only times I was truly lost in class were on a handful of particularly weird proofs that he demonstrated purely to make a point; they never came up on homework or exams.\nYannakakis is (as those of you who've Googled him will know), a pretty big name in the field with a prize or two to his name. There aren't many opportunities in CS Theory for him to show off his brilliance, but he is clearly in total command of the material in a way that not all professors always are. He virtually never makes mistakes on the blackboard (he's usually working from his lecture slides, which are excellent and available on CourseWorks), and will occasionally respond to a seemingly narrow question by tying it to much broader questions and answering those, too.	1 midterm, 1 final, 30% each. 6 homeworks, 40%, partly written, partly through an online service called Gradiance. The grading was usually pretty fair. One TA graded all problem 1's, a different one graded all problem 2's, etc.\nThe midterm and final are both pretty manageable if you go over the lecture slides and homework. No proofs, though there are occasionally slightly sneaky questions. Just know your conversion algorithms (e.g. regular expression to epsilon NFA) and their runtimes, as well as your language closure properties (and constructions for those properties) and you'll be about 90% ready.\nThe homework is 2-3 hours work each if you do the reading first, and Gradiance is perhaps half an hour. Gradiance allows unlimited retakes, which is pretty neat, though you have to wait 10 minutes between attempts. If you have a lot of time to burn, you can just retake Gradiance often enough to solve all the questions by process of elimination (there's a fairly small pool of answers, so after about 90 minutes you've seen them all).	6	1	2941	234
28432	May 22, 2013	These recent reviews are not entirely accurate. \nI took the course this semester, and received an A-. I was likely boosted from a B+. That happened because I attended office hours each week for assistance on understanding and completing the homework. Contrary to others' claims, I learned more in the class by having the opportunity to effectively discuss the questions and solutions to the HW with great TA's and with the professor. If you showed up with relative knowledge of the material, the professor or TA's would literally give you the answer if you couldn't reach it yourself. They sought to totally set you up for success. If you didn't take advantage of that assistance, that is your fault and I don't feel bad for you. \nThe criticism I have for this class amounts to concerns about interest by the professor. I don't believe Professor Rubenstein is teaching material he prefers to teach or learn. This results in a class that is less enjoyable, and is unfortunate at Columbia. His course would be 10X better if he enjoyed what he taught, and showed that. That being said, he showed he cares for his students' performance and puts in his stated time to assisting students. \nI wish I had purchased the book. I think the summaries he provided were at times challenging to understand. I also wish the course had a bit more of a clear connection and purpose between the first half of the semester and second, but we always have concerns. \nThe perspective is this - We can read, understand, draw, and design circuits that do cool shit. And if you can't, you screwed up in class and I don't feel bad for you. And you also probably cheated off someone else's homework so fuck you.	Day to day and a half of work per week when HW's are due. 1-3 days of studying pre Mid-term or Final.	13	10	2427	4251
28435	May 22, 2013	I definitely wasn't alone in that I had a lot of mixed feelings about this class.  I'll start by saying that is certainly the only viable option for taking Advanced Programming.  (Sidenote: If you're even thinking about taking Shlomo Hershkop's course, you're better off dropping out of school than wasting your tuition on an insulting elaborate practical joke).  However, I wouldn't call this class an amazing one that you absolutely have to take before you graduate, unless of course it's a requirement.  It really is just a programming class.\nFull disclosure: I have no plans to take OS and I'm not sure when I'm going to use C again.  The general theme of this course was "trust me - this will all be useful later."  As a result, the subject was as uninspiring as it gets, unless you happen to love learning about large amounts of syntax and technicalities of programing languages.  \nThe best part of the course was the labs (programming assignments).  They were very well written were never had ambiguities.  These assignments are the same every semester, and solutions are provided immediately after the deadline.  Though this technically makes it very easy to cheat, keep in mind that the labs are the core of this class, and there's no point in taking it if you're not interested in working through each of them.  Because they were so detailed, they could be a bit overwhelming to read the first time through, and it is very important to follow the instructions to the letter.  Ultimately, they were very enjoyable to work through, and I can honestly say I learned almost everything that I learned in this class from working through the assignments.  Rubrics were provided for each lab that clearly stated how points were awarded.  \nI personally didn't find the lectures that I attended all that helpful.  The ones at the chalkboard gave good introductions to topics, and I profited the most from these.  He'd often go over something too quickly, and then be asked to repeat it three or four times more.  Occasionally, he'd repeat a large portion of the previous lecture, though it was impossible to tell when he would do that.  Ultimately, it was clear that he made the effort, but had trouble keeping everyone in the large classroom on the same page.  There were a lot of times when he'd explain something simple, or say "you remember this from last time, right?" and then five minutes later someone would raise their hand and ask about it.  When he did hour-long demos from the computer with the lights out, I found it very difficult to focus.  I'd always try to follow along with him, inevitably miss one step and therefore be lost for the rest of the demo.  \nThe pacing was also strange, as the last three weeks were the only time we spent programming in C++.  Almost the entire first half of the semester was dedicated to the C language, and the remaining time was spent on systems programming in C.  I understand that the training in C might be important for people who plan to take OS, but for everyone else it seemed like overkill.  \nI really never got the point of the whole YAXing policy.  Looking back, the deadline for every lab besides the first one was extended, and roughly half were extended twice.  Sometimes, the announcement of the extension was within 24 hours of the original deadline.  Talking to previous students and looking at CULPA reviews, I see that he's been doing this same practice since he started teaching.  I can't help but wonder why.  It would make a lot more sense for him to just tell us how long we truly had for the assignment so that we could plan ahead.  At this point in teaching the class, he probably knows how long he actually plans to give the class for assignments. \nThe mailing list was something about which I seemed to have the minority opinion.  I was really not a fan of it.  It might've worked better with a smaller class, but for a class of 140 students it bordered on absurd.  There was so much showing off and subtle attempts to suck up to Jae.  Some attempts were not subtle at all; for example, when the final exam solutions were mailed out, one student sent out an email saying that the exam was very well designed, and that this was the best course he had ever taken.  People would also use the mailing list to tell the class about how they went further and did additional work.  \nThe worst part of this class, and by far the most frustrating, was the evaluation process.  Jae said on the first day that it is very difficult to write an exam that assess what we truly know.  After seeing last semester's exams, it is clear that he is making the exams substantially more difficult by the semester.    He always said that working independently through the labs was the best way to prepare.  As someone who did just that, I can frankly say I've never felt so unprepared for exams as I was in this class.  The issue wasn't my approach to the labs, nor was it that I wasn't studying hard enough.  The midterm was about the same length as the final even though the final was given during final exam period.  There were a total of 17 questions on the final, and every single one of them was either a (very) short answer or multiple choice, with absolutely no partial credit under any circumstances (and trust me, there were plenty of places to mess up).  Questions would be asked on code fragments that were as long as 3 pages.  Single short problems would often test 5 ideas at once and carried a high all-or-nothing point value.  To add insult to injury, there would be multiple questions testing the same trick.  It seemed crazy to me that single trick multiple choice questions carried the same amount of weight as entire programming assignments.  The only reason I didn't feel worse when walking out of an exam where I had to make a semi-educated guess on most questions was because I knew that no amount of preparation would've been sufficient.  \nUltimately, the final curve is very generous, with half of the class receiving at least an A-, and this will save you at the end of the semester if you work hard and have the right amount of luck.  The grades on both exams truly ranged from 0 (yes, zero) to 100, with the median on each around a 50.	30% Lab Assignments (9)\n30% Midterm Exam: Median 48 Standard Deviation 21\n40% Final Exam: Median 50 Standard Deviation 25	15	3	3509	4758
28438	May 22, 2013	This review is kind of hard to write because Swap is such a nice guy in person. He is totally willing to chat with students during office hours or whenever you need him, and the class environment is super relaxed. However, I was really disappointed in this class. Here's why.\nAs a disclaimer, I will mention that I took 1004 last semester and did quite well. Consequently, much of the material we covered in 1007 was pointless review for me (inheritance, interfaces, etc.). Worse, Swap is not a good lecturerÃ¢â‚¬â€œhis classes wander aimlessly, guided by broad topics and students' questions. It was much more efficient for me to read the textbook (readily available in PDF form) rather than listen to his lectures, and then use Big Java to review older material.\nHis homeworks were a mixed bag. Some were quite helpful: the GUI project was especially instructive. Others were incredibly stupid. One assignment involved crawling the HTML of various Wikipedia pages about the Academy Awards and retrieving data (e.g., who won the 1993 Best Actress award, stuff like that). Is HTML parsing useful? Yes, but this assignment literally took 20+ hours of tedious drudgery, because all of the Academy Awards pages are formatted completely differently from each other. Moreover, it didn't really seem relevant to what we learned in the class; the networking involved is extremely simplistic, no graphics, no interfaces, etc. Another assignment involved making a command-line (textual) version of Othello. Again, extremely tedious. Why not just wait to do the Othello assignment until after we had learned graphics programming? \nThe good news is that the topics are useful and important: graphical user interfaces, networking, interfaces, inheritance, file input/output, etc.\nThe exams were really easy. The average was ~80 for the midterm and final. As a result though, there was presumably almost no curve. I got a B+, which felt a little harsh considering how well I did in the class (81 midterm, 90 final, 92 homework average). I was honestly expecting an A.\nThis course is no longer required for the CS major if you've already taken 1004, and I don't recommend taking both. If you have to take it, go aheadÃ¢â‚¬â€œit's not hard, and some of the things you learn are really helpful, but it's often frustrating.	PSet roughly every 2 weeks (theory and programming parts), but Swap gives extensions on literally all of them (40%). Easy midterm (30%) and final (30%).	2	2	10725	2906
28440	May 22, 2013	Professor Choi, isn't a good teacher. He often looked just as confused in lectures looking back at us, as we (or at least I) certainly did looking at him. The material itself is very dense, extremely theoretical, and requires some familiarity with proofs based mathematics. Basically, no amount of coding skills will help you in this class, as it is essentially an advanced math class.\nThe homeworks and midterms are challenging, often requiring insights that are all the more difficult to achieve because Choi's "explanations" often you more confused than before the lecture. Be prepared to spend hours staring at a problem trying simply to decipher the meaning of the question. It is absolutely maddening, and yet, there's no better feeling than figuring out one of those tricky questions. The midterms have many true/false with justification questions with no partial credit, which Choi posts on his exams as T/F/J. I wish I had gone for the pure Justify, without ever definitely answering true or false - I would have done better, as the questions seemed to deliberately be exploiting flaws in common intuition and expectations. \nAll in all, this class was a slow, torturous slog through material that had the potential to be interesting, though I don't know if I would go so far as to compare it to the horrors faced by the unfortunate pineapple in the review below. Choi is an uninspired, robotic lecturer who always feels most comfortable reading from the book. There is no reason for anyone to be surprised at this, though, the man basically said as much when he himself advised us to skip lecture on the first day. However, to his credit, he did start to be more responsive to the class's questions and more active in giving us study materials after the entire class performed dismally on a final that he apparently expected to be easy. I think he became more comfortable lecturing as the semester went on, and while I don't think anyone would ever use words like "interesting" to describe those last weeks, they were at least tolerable. He gave a generous curve at end, and so, I think Professor Choi deserves at least a B for effort.	5 homeworks that are tough worth 20%\n2 midterms both tricky  20% each\nfinal wasn't as bad as the midterms, but long	2	2	12619	234
28443	May 23, 2013	I completely disagree with the two reviews below. I had no experience with CS theory before taking this class, but I had a great time and learned SO much, and want to take more theory classes because of this.\nYes, on the first day, and for most of the first two weeks, Choi taught straight from the book, and told us that we could learn from the book just as well as in class. But--and the book is great, don't get me wrong--this proved completely untrue. Over the course of the semester Choi grew a lot as a teacher (it was his first semester teaching!) and gave us his own examples, clear explanations, and answered questions happily. He also seemed to realize that telling students to leave was NOT a good idea, and encouraged us to send him emails and raise our hands in class. The material itself is often hard to grasp, but that's not his fault, and he usually found multiple ways of communicating complicated ideas.\nI thought his tests were fine. The final was hard, but was curved, and the midterms were very similar to the homeworks. They were totally doable. \ntldr; Take this class with Choi! He's a really good guy, just a little rough around the edges, who is really willing to help you out and learn from his mistakes.	Standard. Five problem sets, lowest one dropped, which took about four hours of real thinking. Two average midterms, hard final.	5	5	12619	234
28444	May 23, 2013	Ugh. I completely agree with the previous few reviews--Rubenstein is a really nice guy who comes to class unprepared to do anything but read off his slides. On the bright side, he gives great, challenging homeworks, and tests that you can't really study for except by doing these homeworks (a lot of people cheated on homeworks, which he acknowledged, but that became clear from the tests). I learned...something? from this class, but only from the homeworks, not from him. \nIf you can, take it with Edwards/Kim. Or hope that he posts his slides online but teaches by hand on the board instead (the days he did that because of technical problems we learned, for once). \nPro-tip: go to his office hours. He'll walk you through any problem you have, including those on the homework. He'll also boost your grade at the end of the semester if he knows your name.	9 great homeworks. Hard midterm, hard final. Drops lowest 20%.	5	3	2427	4251
29311	April 09, 2014	Really interesting content, not necessarily taught that well. Writing a compiler is an amazing experience, and if you start early, you should be fine. I went in with no functional programming experience, and really enjoyed learning OCaml and the functional paradigm. I'd definitely recommend the class: at the end you'll have written your own programming language!\nSTART EARLY, and really be selective in picking your team. A bad team will ruin the semester for you.	Very easy midterm and final, a few homework assignments that are actually very useful in preparing for the project. The project is massive, but you have all semester--so use all semester. Go to office hours early on.	0	0	1637	3105
82447	November 10, 2020	you better like cs. hope you're not living through a pandemic bc Kender will not be there for you. he will, however, ramble on for an hour and fifteen minutes twice a week so you can watch some truly unstimulating recorded zoom lectures. he is technologically challenged and weirdly obsessed with java.	psets are long and hard and long.	0	7	42	NA
82469	November 21, 2020	Taking Professor Ferguson's section of Intro to Databases was such a mixed experience.\nLet me start with the good:\n- Professor Ferguson is awesome.  He has an interesting sense of humor which some people find sassy, but I love it.  He's also incredibly kind towards students, always willing to help, and is one of the most understanding professor's I've had.\n- He also holds an insane number of OHs, which is really helpful around due dates.  It feels like he has an OH whenever he's free.  He'll only announce them a couple hours in advance though, so you'll need to keep an eye on your inbox.\n- His section of Databases is a lot less theory-oriented, which means less time spent memorizing arcane definitions, and more time spent on working through real-world examples.  At least for me, that's a big plus.  And because Professor Ferguson has such extensive industry experience, it provides an interesting perspective that some other CS professors don't offer.\nThen, there's the bad:\n- Lectures are dry.  Professor Ferguson admits it himself, so he usually skims through 200 slides in 20 minutes, skipping most of the concepts.  His expectation is that you Google it yourself when doing the homework, but this means you aren't learning the content systematically.  Instead, you'll be scraping scattered tidbits off of the Internet, which sort of adds up by the end of the semester, but the learning experience ultimately feels unsubstantive and hollow.\n- Homework assignments are incredibly vague and disorganized.  If all the instructions and expectations were clear, they would be pretty easy (at least compared to other CS classes I've taken).  But I ended up spending days trying to figure out what we were expected to do for each question and obsessively refreshing Piazza for updates.\n- This would be fine if at least the instructions were consistent. However, the TAs, Head TAs, and professor often seemed to be on different pages.  For example, for a homework question, a TA's clarification on Piazza would be different from what the Head TAs explained during recitation, which would be different from what Professor Ferguson went over in lecture.  This was pretty common, and incredibly frustrating because now I needed to spend even more time attending multiple OHs and scrolling through Piazza to gauge the "consensus among the TAs", as strange as that sounds.  I also often had to rewrite my solutions whenever conflicting "clarifications" were made by different people.\nAll of this isn't to say that this is a bad class, it's just poorly organized.  At the end of the day, I think I would recommend it because I did learn some useful things.  However, just know that all the inconsistencies and vagueness will be incredibly frustrating and anxiety-inducing, especially if you are a perfectionist type of person.\nGrade-wise, pretty fair, not too bad.  Not really a factor you should consider compared to the stuff I've mentioned above.	4 or 5 homework assignments, roughly one every two weeks\nTake-home midterm and final\n80% of the workload is clarifying what homework questions are asking for, 20% is actually doing the work	16	0	6653	664
28449	May 23, 2013	In this review, I'm going to be very careful to distinguish between the content of the course and the instructor.  \nI can't say enough good things about Dawn both as a person and an instructor.  She is an excellent instructor who definitely took her role of teaching this class very seriously and did a great job teaching it.  She was always very well-prepared for lectures, easy to follow, and enthusiastic.  She's also very approachable and will take the time to answer questions and help students who are having trouble.  In class, rather than just doing math on the board, she makes a point to write out (in words) the steps that she is doing when they are confusing, which makes note-taking a lot more valuable.\nThat being said, I strongly believe that the CS department needs to rethink content of the course.  What I'm about to say applies to any section of this course taught at Columbia.  It covers a wide range of topics, and therefore doesn't have much time to go into depth on any of them.  This alone is not a problem, but what is a problem is that the course is way too easy, almost laughably so, for anyone who has a decent background in math.  This really would be a good course to have an honors version and a regular version (with both countable towards the CS major and minor).  Regardless of who you are, you'll probably learn something in this class.  However, some people will learn a lot more than others, and the course attempts to appeal to students who have had a wide range of mathematical backgrounds.  As someone with a relatively strong background, some of the questions I heard in class were cringe-inducing and painful to hear.  \nA detailed day-by-day syllabus is provided for the course.  I definitely recommend going to the lectures for the material you're trying to learn rather than attempting to learn it out of the book.  The latter is possible, but it's probably harder and more time-consuming than trying to learn from the book because the book is not very good.   Homework from the book was assigned but not collected.	The grading was based on three non-cumulative exams and a cumulative final, and was computed by the better of:\n30% Best Midterm, 30% Second Best Midterm, 40% Final\n25% Best Midterm, 25% Second Best Midterm, 50% Final\nEither way, the worst midterm was dropped.  The averages on the exams were as follows:\nMidterm 1: 80\nMidterm 2: 66\nMidterm 3: 68\nFinal Exam: 80	8	4	11575	397
28457	May 24, 2013	Best professor I've run into at Columbia so far. \nAbout me: Took AP Comp Sci in High School, had Art of Engineering the previous semester so I knew some rudimentary Matlab. \nI found his lectures really clear and if you take good notes you shouldn't find anything a surprise in the midterm or final. Also he uploads the things he ran in Matlab at the end of lecture so you see what you kinda covered during the lecture. Definitely go to class. \nNo textbook required: i managed without it. You can also find a lot of the things on the Matlab website.	He has 6 problem sets and drops one. You should not wait until the day before its due because some will take a bit of time. Start early and do a little each day and workload isn't bad at all. Also, he often extends the due date for things which is always a plus for you procrastinators but don't try to rely on that. \nExams: He reviews what will be on it and reviews the exam after. \nExams go for "breadth rather than depth." Exams weren't too difficult at all. You shouldn't have an awful time. He's also quite friendly and approachable. I found he answers emails in an appropriate amount of time. \nOverall I recommend this professor!	9	0	3409	4957
28464	May 25, 2013	Firstly, as the previous reviews have stated, Dawn Strickland is one of the nicest professors you can have. She is very friendly and approachable and will gladly answer any questions you have. However, I have several gripes with the course (not necessarily with Dawn herself).\nTo start, the textbook for the class is garbage (Discrete Mathematics and Its Applications by Kenneth Rosen). It's full of convoluted examples with little explanation for how the problems are solved. The information is conveyed in the most elaborate terms, and once the material gets difficult, it is extremely difficult to understand. I think the textbook really needs to be changed. Just check out the Amazon reviews for it: http://www.amazon.com/Discrete-Mathematics-Applications-Kenneth-Rosen/dp/0073383090\nSecondly, the optional homework comes straight from the book. I'm certain that almost nobody did it, because (1) it's optional, and (2) the book is no good. There are no quizzes in the class either, so your grade is entirely dependent upon the exams.\nHowever, Dawn's lectures are well-structured and pretty informative. You can learn most of the easier material just by going to lecture. However, once the material got harder, I couldn't understand much of what was going on in class. To study for the exams, I pretty much just Googled what I needed to know from the book and then took her practice exam.\nMy last gripe is this. I actually did well on the exams and got a good grade in the class- however, I cannot say that I know much of anything about Discrete Math. I really don't feel like I learned anything from the course. If you asked me what Discrete Math is and why it's important, I couldn't tell you. I studied in a way that allowed me to do well on the exams for some reason, but I'm still confused about much of the material and really was not satisfied with the course.\nAs a whole, I don't think it's hard to get a good grade in the class. It just wasn't a very pleasant experience, and I feel like the course needs a major overhaul.	Optional homework, no quizzes. 3 midterms (drop the lowest one) and a final.	12	2	11575	397
28466	May 25, 2013	Previous comment said Dawn was a good teacher despite the classing being too easy, but I actually doubt if Dawn really taught well. She seemed to mess around with what she said in class: A frequented scene was she wrote on the board, stopped, and found out what she just wrote was wrong, and more wrong than a pen slip. I don't think this is expected of a good teacher. In fact, both the course textbook and a TA recitation session seemed to have better instruction than the class lectures.	Homework is not collected or graded, and you typically don't need to need do them (They have no value either in understanding the course material or in helping for the exams). If you don't understand anything, just read the book. Reviewing for midterms generally takes 1 hour, which makes me doubt if this is a 3-credit course.	9	8	11575	397
28467	May 25, 2013	Dawn definitely does not deserve a silver nugget.\nYes, she is generous with grades and is very friendly, but she does not teach! Discrete Math is a very broad and deep field. We hardly did anything in this class. She spent a lot of time doing basic probability and counting, and not enough time on more advanced concepts. We just brushed over loads of cool graph algorithms and problems, without actually solving one in class or seeing in depth proofs.\nDawn's tests were of decent difficulty, but she did not expose us to problems of that difficulty before hand, which was frustrating. This class should have an honors sequence.	40% final. 60% midterms	31	7	11575	397
28476	May 29, 2013	Funny in class. Kind of mean in office hours. A fair grader. TAs in this class really care and are helpful. However, going to a TA other than the one who is going to grade your problem set is usually a waste of time because the open-ended short answer problems are subjectively and sometimes harshly graded. For programming assignments, all the TAs are amazing and Cannon gives good advice during class. \nAlso there is a generous curve at the end, which is to be expected in a class of 200+ people	Heavy. Start early. Do all the reading. This class has more reading than two science classes combined, but the book is really helpful. If you do not read, you will not do well on the midterm or final.	8	3	515	3807
29312	April 09, 2014	One of the best classes I've taken at Columbia. Stein is a clear lecturer, and made all of the (already exciting) topics even better.\nThe homeworks were excellent. They were long and arduous, but you had sufficient time (two weeks) and plenty of office hours. I really learned a lot through the homeworks, and they prepared me really well for the midterm/final.\nIt's a huge class, so be prepared for other people to cheat, make noise, grumble, etc. Ignore it, and take the class anyways, because it's worth it.	Very time-intensive, but useful/well-written homeworks. Easy take-home midterm, fine final. You can prepare by really understanding the material and just applying it	4	0	1342	4079
28530	June 30, 2013	The Good: AC has a great classroom presence. He is enthusiastic and will immediately give an apple(the fruit) to someone who gives an answer, asks a question or makes any remark at all. This tends to create more dialogue and fosters a good learning environment. He is very knowledgeable. In the rare case that he canÃ¢â‚¬â„¢t answer your question in class, he will post a thorough answer on Piazza shortly thereafter. The book is clear and the slides that he uses from the authors can in some cases be used as a substitute for the book. On theory assignments, most of the questions are easy to moderate. There are questions that require Ã¢â‚¬ËœadvancedÃ¢â‚¬â„¢ probability, but these are worth a small fraction of the total homework grade. \nThe Bad: The programming assignments were poorly written. The second in particular was poorly designed. Once one was able to translate the second assignment into English, it was incredibly difficult to program. The second assignmentÃ¢â‚¬â„¢s sections had a lot of functional overlap, but this overlap was difficult to capitalize on due to unnecessarily unstandardized features throughout the assignment. ItÃ¢â‚¬â„¢s unclear if AC wrote the assignments or if the TAs did. Either way, most of the TAs were not nearly helpful enough in explaining the assignments. \nThe Ugly: For the spring semester that I had him, AT THE END OF MARCH, he changed the grading scheme as follows \n10% ->15% for Prog Assignment 1 \n10% ->15% for Prog Assignment 2\n25% ->15% for Midterm\nAC did not announce this change. Aside from a student posting this change on Piazza after it was made on the class webpage, the class might not have realized this until weeks later. \nI have never in my time at Columbia had a teacher so secretly and drastically make a grading scheme change so late into the semester.	5 HWÃ¢â‚¬â„¢s 4% each\n2 Programming Assignments x% where x depends on time(see above)\n1 Midterm y% where y depends on time(see above)\n1 Final 35%\n('AC' was used here for brevity. It is not customary to call him this.)	7	0	11579	4902
28536	July 07, 2013	I loved this class and I thought it was perfect for the level I was at. I originally was worried that it would be too advanced for me since I didn't take w1004 and I felt inexperienced with programming especially after half a year of not touching java, but when I told Adam Cannon (the 1004 prof) that I'd already gotten a 4 on the AP CS exam, he told me to take w1007 instead which led me here.\nSwap is a pretty good teacher, and a really great person.  The classes were fun and there was just a chill atmosphere there.  He programmed things like cheezburger cats and harry potter creatures.  I think it was structured pretty well, and it really helped me better understand OOP, especially since my teacher from my AP class in high school was pretty bad at explaining the concepts of inheritance, and words like static/final/public/private. At the same time though, I will also say that sometimes the class went off track or just really slowly (some of the stuff covered in the AP apparently wasn't taught to the 1004 class), so I spent a lot of classes coding for the hw assignments. I didn't have to take many notes... I feel like the textbook is pretty easy to read so it's easy to just look up what you need to know if you forget something.\nHomework took a lot of time to complete, but I thought all the assignments were pretty fun and the grading is straightforward. I think the best advice I have is to not wait until the last moment for starting your assignments. Instead, start them as early as possible. That way, when you run into problems, you have time to go to TA office hours. My TAs were amazing and super helpful, and I really don't know what I would have done without them.  I feel like with all the help offered, there really is no reason to not do well in this class, unless you procrastinate and just don't do the work or hand it in late. I'm not even that great at time management, but I still got an A in this class.  There's a lot of opportunities for extra credit and the midterm & final aren't hard as long as you look over the code from class and know your vocab.\nBasically this class gave the confidence to keep pursuing CS as my major. Yes, there were a lot of all nighters, but I enjoy coding all night (it kind of gives me a coding high? haha) so it was partially by choice. Do the work, and you'll be fine!	I'd consider this a pretty heavy workload but not unmanageable at all. There were 5 HW projects total. Each one is part theory and part coding (the coding takes longer). A midterm and a final (Part 1: multiple choice, Part 2: vocab, Part 3: Find errors in code, Part 4: open ended).	2	1	10725	2906
28582	August 17, 2013	This review is for Edwards and for the SUMMER version of PLT. There is no summer review of him on here so for those of you who were curious, read on!\nEdwards is, plain and simple, the shit. He is quite possibly the most organized professor I have ever seen. His website contains every class of PLT he has taught for the most part including old projects, slides, and documents. Furthermore, his notes are outstanding. In that regard, he has basically done all the work for you. The material is complex at heart but his notes and his descriptions in class make that material very easy to digest. Furthermore, it is evident in every shape and form that he absolutely loves and cares about the material. This man is among the nerdiest to ever exist and he definitely knows his stuff inside and out and forwards and backwards and I feel like he was very effectively in conveying this passion in his lectures. In addition to learning about making a language, you will also learn cool tidbits like C history, language history, or operational details you might not have known about various languages. Edwards is also a total language hipster and spent the first day of class openly trashing Java, C++, and many others (he called Perl an "abomination"). Therefore, if you are waiting for his endorsement of the "cool and underground language you haven't heard of, maaaaaan" then you will find it with OCaml (more on that in a second).\nThe summer class had two homeworks which were both incredibly easy. The notes will tell you everything you need to know and he doesn't pull any cheap shots; if you pay attention in class and understand the notes then you will be able to breeze through the assignments.\nHowever, the homeworks are only 10 percent of your grade. A whopping 50 percent of your grade comes from a massive project wherein you have to make your own programming language. The other 40 comes from the final exam (no midterm) which, while a little tricky, wasn't too bad.\nThe project itself MUST be done in a language called OCaml which I had never heard of before taking this class. OCaml is quite possibly the most annoying language you will ever use if only because it has the most frustrating and nitpicking compiler I have ever seen......but the good news is that most of the time once it compiles then it works the way you want it to. Personally, I prefer to write code that blows up, analyze it, and then fix it (and isn't that the purpose of test suites anyway?) but you will have no such luxury with OCaml. Furthermore, it has very unhelpful error messages; it is fairly difficult to ascertain the problem when the only indication of what you did wrong is something like "Syntax Error" or "Expression was 'a * 'b * 'c but was expecting type 'a * 'b list" (and what the fuck exactly is a 'b list?!?!? I just finished the class and I still don't know). If you thought "Segmentation Fault" was bad just wait until you get a load of this. Still, Edwards makes the point that OCaml is an easy language to write compilers in and once you start getting good at it you will see where he is coming from. The language itself is fairly powerful and you can do quite a lot with only a few lines. As annoying as OCaml was I am glad that we had to use it if only to a) learn a new language and b) gain the new perspective and discipline from programming in it. It is also interesting to learn a new language when taking a class dissecting what makes a language "good".\nSTART EARLY ON THE PROJECT. The class is 6 weeks long and goes by faster than you'd ever believe. My team and I were pretty good at staying on point throughout but I can very easily see how the project can be a nightmare if you wait until the last minute and doubly so if the team hasn't practiced with OCaml. There were other teams demoing with barely finished languages who appeared to make that mistake; don't let it be you.\nThe only complaint I have about this class is the time we spent covering Prolog. While it is an interesting language to learn about, I don't know why he spent the time he did covering unification and searching considering AI is already a class here. This part of the class seemed completely out of place and irrelevant next to anything else we had done all summer. There was even a Prolog question on the final exam. It seemed rather pointless to have this question on the final, which is supposed to test my knowledge of programming languages and translators, covering an AI topic and making it worth 10 points.\nLastly, a word of warning: Edwards is a very direct person and is quick to criticize or otherwise shoot down your ideas for your project. Don't take it personally. At first he hated my idea too.	Homeworks are both incredibly easy and are easily finished in a day. Yes, drawing automata can be time consuming but it isn't hard to do.\nThe project itself isn't too bad. My team was able to do it in 6 weeks. If we can do that then there's no reason for you to fear it. As long as you coordinate effectively with your team and you don't procrastinate it's a breeze. I can see how the contrary can easily become a nightmare.\nLastly, I want to clear up the misconception that PLT is one of the hardest classes in CS here. That isn't true at all (at least not with Edwards). The key to success in this class lies, as opposed to many other classes I've taken at Columbia, entirely on you. You've got to put in the work but considering the time it isn't that bad and it will pay off.\nI would definitely recommend taking this over the summer if you can.	3	0	1637	3105
28631	September 06, 2013	The WORST professor ever. His accent made the lectures hard for us to understand. Besides, when we tried to ask questions most of the time he wouldn't answer that but made fun of us. His class was totally not helpful. You could read the slides by yourself and don't have to waste your time going to his class. You'd better check if your teammate could follow up otherwise it's likely that you will understand nothing in his class. The curve is bad, many people had got C's.	Four homework + two projects + midterm + final\nThe curve is very bad.	7	8	1442	664
28650	September 23, 2013	Personal idea, this course should be considered as one of the simplest course for grad level, especially when you are in your last semester and want to spend more time on job hunting, or when you are dealing with other heavy courses like OS... Besides, 4111 now is a core! Should it be core earlier, why bothering get trapped by OS. (Holly #@$@$#!, although I admit one can really improve a lot by taking OS.)\nYeah, prof. has an accent, but you have textbook, read it! After all, databases system are not designed to confusing people. We are not at Kindergarten and need to be instructed with everything. The projects are not that hard. The homework are easy. The midterm and final are OK if you know what you've learnt throughout the semester. You don't really need prior experience with databases. Last but not least, firms do pay attention to the relational databases project you are working on, understand the project and explain well during an interview, it will land you a full-time job or internship. Of course, we have a lot of new generation databases like cassandra, MongoDB, etc. The relational database, however, just like ball pen, simple but remains powerful.	not that much, especially if you compared with other grad level course	6	13	1442	664
28664	October 08, 2013	This was a HORRIBLE class. The instructor does not explain the coding and his slides do not make sense. \nThere is no textbook for the class, so there is nothing else to use to understand the material. When asked about this, the Professor instructed us to use Wikipedia to understand the material. I think that this approach is ridiculous - Why pay for a columbia university class when you are told to use wikipedia to learn the material?!? \nThe instructor is very arrogant and spends more time talking about how wonderful he is than trying to teach the material. He belittles and embarrasses students who ask questions, telling them that what he explained was crystal clear and that there is no need for clarification. This is not a good learning environment and is not appropriate for a class at Columbia University, which should hold itself to much higher standards! \nThe material on the exams was not covered in class. Unless you have prior experience with data structures, I don't know how you can do well in this class with this instructor. I wish this class were taught by someone else, who would actually teach.	The homework assignments are very time consuming and Prof. Pasik doesn't teach you the material so that you can actually do the assignments!!!\nQuizes are not on material that was taught...and don't dare ask questions if you don't understand something, because Prof. Pasik will embarass you to the point of tears in front of the whole class.	9	11	2508	4
28667	October 09, 2013	Martha Kim is fantastic for several reasons:\n1) She is a VERY clear lecturer; she teaches directly from slides that on their own are very descriptive, and goes through them at a pace that is easy to follow. She is extremely eloquent and obviously very knowledgeable about the subject material, so it's really easy to follow and engage with what she's saying; she's not one of those awful lecturers who you have to really actively try to pay attention to for the whole class. She intentionally goes over slides with diagrams a little longer than other slides so that students who like to take notes have time to copy them down. There was one day when she had to rush through how Karnaugh maps worked, and in the next class she apologized for the lack of clarity and spent probably the first third of that class re-explaining them and really making sure everyone understood what was going on. If you go to class (and are at all awake/paying any amount of attention to her) you will understand the material. Point of the story: her lecture style is succinct and easy to follow and if you pay attention in class she will teach you the material.\n2) It seems like she really genuinely wants everyone to succeed. She holds more office hours than any other compsci professor I've had and every time I've gone she is really approachable and has seemed genuinely concerned about making sure I am not confused about anything (not to mention she's just super nice). She assigns a very reasonable amount of work because she doesn't want the class to be a source of unnecessary anxiety for students. That being said, the assignments are challenging enough that they definitely do make you learn the material to do them (which I think is a good thing). This is not an easy A class. You will have to do work. But she actually wants you to do well at it, which is definitely not true for every professor at Columbia.\nThe only bad thing I have to say about the class is that the problem set grading has been a little haphazard - on the first assignment, the grading was really harsh, which a lot of students made a big fuss about; then on the next assignment, the grading seemed really easy. But this discrepancy in grading tolerance seems to stem from the TAs more than Martha Kim. \nOverall, she is very intelligent and also very nice and I think she's been a fantastic instructor for Fundamentals!	Pretty much what you'd expect; Nightly readings which you don't actually have to do but can be helpful for doing the assignments, which are roughly bi-weekly problem sets that take about 3-7 hours (depending on how fast/focused you work on them), a midterm, and a final.	3	7	4221	4251
28677	October 27, 2013	TL;DR: Don't take this class. Seriously, just don't. If you've read all these reviews and you think "I'm a better, smarter wo/man than them -- I can do HONORS," well, I, too, once thought as you do. Learn from my mistakes, and stay away from this class.\nI'm taking this class with Professor Hershkop in spite of repeated and insistent advice from survivors not to take it (it can't be that bad!) and at present I can say without a shadow of a doubt that it's the worst class I've taken in 7 semesters of college-level study. Please note that I'm not saying this because I have a bad grade or some such thing -- I'm on track to get an A+.\nThere are three essential problems. \nFirst, Professor Hershkop is strikingly disorganized, and tries to disguise this with claims like "Courseworks isn't working," when a normal grown-up would take responsibility and apologize and have his act together the next time around. (The previous reviewer from a year ago mentioned the same excuse, which is why I'm confident that this is NOT an actual technological difficulty.) He also forgets what he's already taught us, and winds up reteaching it, or fails to teach something entirely (e.g. search algorithms) but then assesses it on the homework.\nSecond, Professor Hershkop's definitions of terms are frequently at odds with those used by... everyone else. For example, his definition of "tail recursion" is the exact opposite of the one used by Wikipedia, job interviewers, and the world of computer science in general, which wouldn't be a such a big deal if it weren't for the fact that tail recursion is a popular technical point for interview questions. When questioned about this in class he does not own up to the error (in contrast with basically every other professor -- Jae Lee, for one, is almost excited when students catch him out) and instead acts as if this is a major point of disagreement in the CS community, and then proceeds to continue using and testing us on the wrong definition. In case you think this is an isolated incident, he uses B-Tree and B+-Tree interchangeably -- you can check for yourself that these are completely different data structures.\nThird, the homework and test questions are typically ambiguous at a number of different levels. They often do not specify critical features of a data structure (is a given heap a min or a max heap?), which of multiple conflicting definitions of a term should be used (quadratic probing can be done any number of ways), or whether we should use his definition of a term or the normal one (in the cases of tail recursion and B-Trees), and they can even have grammatical ambiguities that make a crucial difference to interpretation. He tries to mask this by not giving assignments back, not offering comments, not providing solutions, and not providing definitive answers as to which of multiple interpretations of a question is correct.\nOh, and he also never responds to email, despite insisting that he'll respond promptly.	Nothing too bad. Shlomo tries to offset his incompetence with easy assignments, low-weight midterms (10% midterm, 10% final, 80% everything else), and a healthy contribution to Columbia's grade inflation problem.	25	3	1671	1622
28711	November 15, 2013	Prof. Kim really cares about the students and their learning. I appreciated her approach to midterms and homeworks - there is always ample material to help aid your studying, and she and the TAs are very responsive via email. She leaves a day to review before the midterm, and we could send in questions to help direct the midterm review session. \nGrading seems very fair, and solutions are explained in class when we receive our homeworks back. \nThe material is nothing incredibly exciting, but Prof. Kim does a good job breaking it down into understandable chunks so that it's not too overwhelming at once. \nThe midterm was an accurate assessment of what we were learning in class, and the average was something around a 76 I believe, with many people scoring in the 80 and 90 ranges. \nAdditionally, there is no required textbook, and she only expects you to know what she covers in the slides, which was a relief when studying for the midterm.\nOverall, solid class. I have no complaints.	Not too bad. 6 homeworks, lowest  grade is dropped. One midterm, One final. Homework assignments are somewhat time consuming but it is very manageable if you've been paying attention in class.	4	5	4221	4251
28733	November 19, 2013	User Interface Design w4170\nI took this course in my first semester as a grad student. And I learned how well coffee does at keeping you up. Most people doze through his classes or do their own work and he doesn't seem to mind that. Some lectures do get interesting but mostly there's not much interest generated by the professor.\nBut the assignments are really cool. Most of them use some form of APIs along with javascript and you get to build pretty neat stuff. You can look up the previous year assignments and projects. And you do see that there is some common sense required while building UIs and the common mistakes to avoid.	The lightest course ever. Gotta write a lot of reports and explain why you did something the way you did it. That's what matters.	3	6	39	663
28734	November 19, 2013	Well the professor doesn't really add much, but the course is a must itself. It puts you in a position where you need continuously keep solving his assignments. And there are a lot of them. One of the advantages we had was that Aaron Bernstein, his PhD student, was TA ing and he was really helpful in clarifying a lot of stuff. He might be late most of the time but he makes a lot of effort to explain stuff. He even helped solve a couple of assignment questions.... :p\nThe course doesn't cover any DataStructure though.	A lot. Loads of bi-weekly assignments, that will take up a lot of your time.	7	1	1342	4079
28754	November 23, 2013	This is the BEST course I've ever taken. Prof. Grinspun is talented, not only on his research, but also on teaching. It seems he can see through your mind, find your weekness and try to fix it with all the material he provides. This course is MUST for students who is in the graphics track or want to enter either the graphics industry or academia after graduation. In addition, I think this course is also a MUST for who want to be a professor in computer science to learn how to be a good lecturer and how to organize your material well in a 1.5-hour presentation.\nBesides coding and graphics, the course covers a lot in physics, linear algebra and differential geometry. Everything is self-contained so you can start this course even your math is only at high school level.	Light at the beginning, but heavier as time goes. Fortunately the assignments have a lot of fun and extremely clear. Each assignment contains some coding job, and designing a demo scene. Usually each assignment will cost you 1~2 days if you want to get an A+. You would become an experienced C++ coder after finishing this course even you don't know how to write a Hello World at the beginning of the term. The grading is partly democratic, say, your classmates will be in charge of evaluating your demo scenes in a double-blind manner, and the remaining part is graded with a robot checking your result.\nNo exam!	5	13	2480	6676
28793	December 08, 2013	I had AI with him. He is the least organized instructor I've ever had. He believes everything he said was right and is extremely vague on assignment instructions. He would make up tons of extra requirements about the projects in addition to the project instruction posted online and you wouldn't know them unless you keep track every post he answered on Piazza. The exams are unfair in the sense that he would test on very trivial points and if you don't know them, you are screwed. Never take any course with him.	About right. 10-15 hours per projects and 4 projects in total. No other assignments.	8	1	12727	26
28797	December 08, 2013	I took this class with Prof. Jonathan Voris.  I'm pretty sure he was roped into teaching the class right before the semester started, if that's worth anything when considering this review.\nQuick Summary:\nGood lectures (if a bit dry; depends on your taste)\nRanges from very approachable to completely unapproachable\nDoes not deal well with grades.  \nProf. Voris was a good, solid teacher.  He taught the material well, and was mostly light-hearted about the material.  He really seemed to enjoy the class when he took it (7 years ago I think), and he definitely transferred that joy over to teaching it this time around.  I liked his lectures, though sometimes they were a bit dry (often the material was at fault).  Basically, Voris is a good teacher.\nHowever, Prof. Voris comes with a special type of schtick.  The best approximation of an explanation of it is a mix of ego and paranoia.  When it comes to grades, he seems paranoid that every student is willing to kill him if that will give them a better grade.  This is not (much) of an exaggeration; he really is paranoid about this.  When it comes to anything involving grades, simple questions offend him like the deepest of insults, and he is completely unreasonable.  When handing out the midterm, after failing to get students to come up in an alphabetical order, he just dropped all the tests on the table, and sat back, calling the students "animals" and "disgusting" while everyone searched through the mess to get their tests.  Not cool.\nAlso, if he can't understand a question, he often assumes that the question is stupid, and sometimes even worthy of mockery.  He will always try to explain a question once, but if the explanation is not sufficient for the student, and he thinks that it was, he will make comments like "I don't understand what's not to get." or "This is pretty simple."  He is in desperate need of learning the phrase "Why don't you come see me after class?  I'll explain it then- we should move on".\nThis ambiguity often translates to the workload- the projects were good, but the formatting was often unclear.  Tiny details that made actually finishing the damn things a nightmare.  To be fair, many students just seemed to ignore what was actually written in the project assignments in regards to submission details ("Must run on a CLIC machine" seemed to be an oft ignored instruction for many students).  All in all though, the details just needed to be crystal clear, and they weren't.\nHis midterm and finals were VERY reasonable.  However, the grading of them weren't.  He hasn't posted our final grades, so it is unknown whether he will curve or not, but some of the ways he took off points were pointless.  The purpose of a test is to test our knowledge of the material, not our ability to decipher certain cryptic instructions.  The questions were good- they were actually really good tests.  But, like I said, the grading was off.\nAll in all, he was good for learning the material, and terrible for anything to do with grades.  Just a bit of a nightmare to deal with the schtick.  Not a bad person, just not adjusted to teaching (yet).  If he shapes up on the grading thing though, he could definitely be a really great prof. in the future!	4 projects(15%), a midterm(15%) and a final(20%). 5% class participation.\nAlso pop quizzes, but they are counted as 50% of class participation.  So NBD.	3	0	12727	26
83125	February 08, 2021	This class is a hot mess. I donâ€™t know if it is because itâ€™s online or just his teaching style but the lectures are super confusing. It seems that he just talks and talks and expects the information to naturally stick. Even worse, the textbook makes no sense and is very dense. Being the only DS class offered this semester I had to take it, but definitely one of the most confusing classes I have taken so far.	Midterm, Final, 6 Psets	15	23	3409	4
28824	December 10, 2013	I have no idea why this guy has a silver nugget. I've had a couple professors with silver nuggets who are great, but Professor Pasik is not one of them. \nPasik's class has a couple problems:\n1) his TAs. They are almost all jaded graduate/PhD students. In our case, 2 left throughout the semester, so as a result, all our assignments came back late. He did not hire new ones. They made TONS of grading errors, so make sure to go to office hours to check up on your quizzes. \nFinally, their rubrics are sometimes laughable. They award lots of points for the simplest things, and few for the most difficult parts.\n2) the structure of his class. He starts by covering a new topic with slideshow-supported lecture (slideshows posted on CourseWorks), consisting mostly of code and some text here and there. \nAfter each major topic (every 4 lectures or so), there's a quiz. Memorizing his code is a surefire way to get an A on these quizzes -- if you don't look at the code and didn't follow the lecture, expect to fail the quiz. Winging it is pretty tough. That being said, I failed two quizzes, but then scored significantly above the average for one I didn't study for at all. Why? No idea.\nAfter the quiz, you may or may not have a programming assignment. The programming assignment will probably be super easy.\n3) his code. Like people have said below, his code is extremely, extremely dense. He prides himself on brevity, but there is essentially a learning curve to reading his code (which shouldn't be the case, since you already know Java if you're taking this class). He teaches bad style that is not based on Java.\n4) him. Pasik is arrogant, but more importantly he doesn't hold regular office hours, so if you want to see him, either deal with his awful TAs or schedule an appointment.\n5) emphasizes weird things. We barely spent any time on hash tables and hash maps, but then spent tons of time on miscellaneous artificial intelligence topics at the end of the course, just because he enjoys them. You are learning the wrong material!\nTl;dr: please, please take a different section. This class is a crapshoot -- I never knew why I was getting the grades I did. I really regret not having actually put off data structures for another semester until another professor came along. This guy is no good.	Programming assignments are t understand how to study for them.	12	3	2508	4
28834	December 11, 2013	Martha is the kind of professor who doesn't mind reteaching an entire day's worth of material if students seemed like they weren't totally clear. She is also the kind of professor who takes in student feedback about ambiguity of problem sets, sends out the clarifications well before the sets are due, and changes how the question is worded so it will be clear for future classes. (Her slide sets are like finely aged wine.)\nShe gives eminently reasonable problem sets and tests (1 midterm, 1 final, noncumulative) and once got off an airplane to fix a glitch in her website that students needed to access for a problem set.\nShe also had a great sense of style, is genuinely and adorably amused by things like slow processors, and will explain things for you in multiple different ways until you get it. She's on par with Adam Cannon and Jae in CS-prof god(/dess) status. If you get her for fundamentals, be elated.	6 problem sets, 1 midterm, 1 final. All slides and psets are accessible online.	11	5	4221	4251
28841	December 11, 2013	I recommend _not_ taking this course. 70% of the work is document writing, drawing graphs, and typing stuff into JIRA, not difficult, but very tedious and boring. You do surprisingly little coding, which is ironic for a "software engineering" course. Writing "cool" software won't score you more points in the class. If you absolutely must take this course, do not be ambitious about the projected you will create. You won't receive extra points because your project is "cool" or "harder." Most of your grade hangs on the writing/documentation you do -- and you will spend more time on this than anyone would want to. So make your software easy to document and easy to test. You really only spend a month or two working on it, the rest is over-excessive planning you don't end up following anyway.\nThe midterm and final will have you writing so much stuff! The first of the three questions test you on vocabulary (!) terms from the lectures/book. The second one is short answers. The last one asks you to come up with designs for proposed software and ask you to write more than what most people can do in the given time. If you take this course, do the test backwards. Almost everything in the course is pedestrian stuff you know already: unit tests, version control, software testing, etc. The other stuff you might not have heard of, UML diagrams, burn-down charts, and spike testing, etc, are not complicated at all, and can easily be learned from the textbook. (http://www.amazon.com/Head-First-Software-Development-Pilone/dp/0596527357). In undergrad, I went to a much less prestigious school than Columbia, and I never had a course this boring, simple, and tedious. I was really in for a surprise.\nThe redeeming feature of the course is that the teacher an the TAs (the one's we had) were all nice people. (not necessarily easy graders though!) The textbook is actually read from cover to cover and is actually affordable. However, you shouldn't take a course just because the textbook is cheap and the teacher is nice.\nI was initially attracted to this course because I thought I would spend most of the time coding a cool project. I ignored the negative reviews. I regret it. Don't make the same mistake.	Complexity is extremely easy, but the tediousness of it made the workload medium.	10	3	1474	1616
28865	December 14, 2013	Machine Learning by Prof. Jebara was an excellent class. There are not many graduate classes at Columbia where you feel you have learnt your money's worth. Trust me, this is one class where you will feel challenged and inspired. Prof. Jebara is good with giving intuitions about many things, picking examples from Vision, Genomics, NLP. You many find this course "hard", or "uninteresting", if you thought ML is "cool", or the sole image of Machine Learning in your head is from ML class by Andrew Ng on Coursera. This is a very maths based course, and he mentions this in the first class, and urges people to drop if they can't handle it. I guess it is fair on his part, to announce that the maths will be slighty tough, I wouldn't say even tough, just different. This course will help you a lot, if you want to read Machine Learning papers, do research in the field, because there is some very odd notation involved and the course will teach you that. My vote is take this course, if you are ready to dive into hour long lectures of Mathematical Proofs, but if you are upto it, this will be a great course.	5 Assignments : Assignments are actually easy, programing ones might take time depending on how familiar you are with matlab\n2 quizzes, \nMidterm:easy	7	10	1636	1921
28873	December 15, 2013	I haven't written any CULPA reviews prior to this, but I feel compelled to do so now, because I am really quite surprised by how negative the two previous reviews are. I really liked Professor Pasik and didn't think he was at all arrogant. Yes, it may have been kind of inconvenient that he didn't have any formal office hours, but he was always receptive to questions during class and was also available before/after class. While going through code during most classes can get a bit dry after a while, some of his lectures/stories about AI at the end of the semester were really great. (And there were a few other interesting anecdotes he told throughout the semester.)\nAs the previous review mentions, it can be somewhat difficult to study for the exams; however. that isn't really a problem, but rather reflects the fact that as long as you have a decent conceptual understanding of the material and understand the code that is shown in class, you should be okay. Regarding Pasik's coding style, I don't think there's any reason to make too big of a fuss--it may be slightly different in certain aspects from how other people would code, but it really doesn't make things any more difficult.	5 programming homework assignments (can be somewhat challenging, but nothing extremely difficult)\n4 quizzes plus a final on the last day of class	4	9	2508	4
83368	April 19, 2021	Didn't learn shit. This class was terrible. A buggy script determines your grade for the coding portion, and the professor just reads off the slides that she got off somewhere else. Recitations were mostly not good either, with most TAs being bad, but there are some exceptions.	ok-ish.	6	4	13076	26
28888	December 17, 2013	Professor Gross's graph theory class is accurately described (by Professor Gross) as "drinking through a fire hose." You plow through almost every one of the 16 chapters in his doorstop of a textbook and it's a LOT of material.\nHow good this class is for you largely depends on what you bring to it. If you do the reading ahead of time as Professor Gross recommends (and which I did for the first 7 or 8 weeks), lecture is a good review of the reading plus a few new examples Gross works through and alternative problem-solving strategies he suggests. If you don't do the reading ahead of time (me for the rest of the semester) lecture is a waste of time. It's absolutely impossible to keep up in lecture because there are so many definitions, propositions, theorems and lemmas that if you're seeing the stuff for the first time you'll get completely lost. As I said, it's what you bring to it.\nIt's worth noting that this class is basically a math class, not a CS class, and the tests and homeworks are designed accordingly. They emphasize mathematical intuition and spacial skills more than regurgitating examples from the book in condensed form. Attacking some problems by brute force alone is basically impossible*, but if you can manipulate the graphs in your mind's eye just right you'll see the solution. In the final third of the semester this became somewhat less true because the final chapters of the book involve algebraic topology, which as the name suggests involves solving equations.\n*The best example of this is a question on the 2nd to last homework that requires you to find the 48 vertex automorphisms of the octohedral graph. If you do it by brute force, you'll never finish. A few friends and I spent a combined total of 12+ hours that way. But if you're a bit more systematic (e.g. finding the stabilizer for a given vertex, then composing some permutations with each other) you can solve the problem in 2 or 3 minutes.	2 midterms @ 25% each, 1 final @25%, 6 homeworks @ 25% total (lowest dropped)	0	1	40	4901
28910	December 20, 2013	After reading the rather poor reviews of Professor Stolfo's AI course, I was excited to take the course with his postdoc.  Unfortunately, he failed to meet expectations.\nVoris is a very nice guy, but was disorganized during his lectures.  Also his command of Common Lisp wasn't the greatest, and used code from Stack Overflow in his slides.  Thankfully, he only required Lisp for the first assignment.\nThe assignments were a little much.  I found that I was working on the implementation more than the actual search algorithms.  I spent weeks working on the game implementation for Gomoku and Sokobon, while rushing through the search algorithms hours before the assignments were due.  Also, he provides the easiest test cases possible, while using hard ones to grade.  Most of my assignments assignments passed all of the test cases, but I ended up doing poorly on them because the test cases used for grading were not even remotely as easy as the examples he provided.\nThe reviews from Stolfo's class mostly say that he skims over everything interesting in AI.  Voris wasn't much different, and we actually covered less material than Stolfo usually does.  We didn't even get to machine learning, and our last assignment was on logic, entailment via forward and backward chaining (which I thought was an extremely boring project that again, takes more time to write the implementation than the search algorithms).\nThe midterm was fair, but the final was rough.  Voris said that chapters 1-9 would be on the final, yet he ended up testing us on topics mostly before the midterm.  We did not receive any sample questions or past exams, and were unsure of what to expect on the exams.  I though the final was way to long, and Voris said he had planned to make it even longer.\nWe used Piazza as our forum for discussion and questions outside of class.  To be fair, some students did ask questions that could have been easily answered from a quick google search.  But that doesn't mean the instructor should respond to them in a sarcastic and demeaning way.  Some of Voris' answers to Piazza questions were very defensive and sarcastic, including "Uhh, you can run Eclipse on the clic lab machines?" or "I only posted the text file with puzzles because people complained I didn't post any examples" and "Guys, I've already made it rather clear that all of the material in the book chapters that we've covered is fair game."  He also would write something like "please see me in office hours if this is unclear" rather than post a response.\nBasically all the course material (lecture slides, etc.) was given to him by Stolfo.  There were mistakes in the slides, and he usually correctly them quickly.  Although I did hear him arguing with a student about ambiguity in a final exam question and Voris' response was something like "[Stolfo] has been using these slides for 20 years and I don't think he had this much trouble with grade arguments."\nOverall, I guess Voris was a better choice than Stolfo, but if you aren't required to take this class, I suggest avoiding it like the plague.  At least Voris made the tournament extra credit, and all who participated earned at least 5 extra credit points, even if they lost in the first round.	Four assignments: Pattern Matcher in Common Lisp, Sokoban Search Algorithm, Battle of the Gomoku Agents (and tournament), and Inference Algorithms (entailment with forward and backward chaining).\nMidterm - fair.\nFinal - too long.\nTwo pop quizzes.	6	1	12727	26
28914	December 20, 2013	Computational Linear Algebra with Papageorgiou is a pretty decent class. He's definitely one of the nicest professors you will meet at Columbia and is a lenient grader to boot. Apart from the actual teaching, this class is great. Linear algebra is a super interesting subject and has applications in every single field. Homework assignments are reasonable - not insanely hard or long. Tests are graded generously and he will tell you if you are right or wrong during an exam.\nThe class is essentially Linear Algebra + algorithms for matrix operations. It follows the standard Linear Algebra book by Strang. Papageorgiou generally starts his class with a 20 minute recap of the previous lecture followed by whizzing through the current material.\nHe has a strong Greek accent which can make class hard sometimes. He is an above average teacher, but his abilities are nothing to brag about. He wants you to understand the material and not monotonously apply formulae you don't understand. However, between his accent and bad handwriting, you can occasionally get lost and fall behind (I got lost twice this class - once during RREFs and another time during eigenvalues and eigenvectors). He sometimes doesn't really explain stuff properly and just says "Boom! Boom! You're done" which causes endless frustration. It's important that you go to his office hours and clear up doubts because all the material builds up (which makes studying for the final very interesting because you see how stuff you learned in the beginning of the semester all ties together).\nPapageorgiou makes tests low stress by acting as a check-guard during exams. At any point, you can go up to him and ask him to look over our solution and he will tell you if it's right or wrong. As long as you know the material, you can easily get high grades on tests by making him check the harder problems. He obviously won't tell you the answer, but you will at least know that you're missing something. It's very possible to get perfect scores on every single test in this class as a result of his checks.\nProgramming assignments shouldn't take more than 2-4 hours. Problem sets consist of 5-6 questions from the textbook. If you know the material, they can be finished in 1-2 hours. More often than not, you will have to read the material to solve the problem sets which makes them take more time.\nHe has 4 quizzes which consist of 2-3 problems which keep you up to speed. They count toward your midterm and final scores.\nThe midterm was straight forward. 5 problems - he gave us one of the problems a week before the exam (but it was a hard one) and told us that another problem would be solving a general system of equations. Pay attention to his revision sessions - he reveals the tricks needed to solve some problems on the midterms then.\nFinal was harder than the midterm and he didn't tell us any of the questions before hand. However, it was completely doable, especially since he helped students out during the exam. It also had some cool problems that made you think and appreciate the subject better.\nOverall, this was a good class and Papageorgiou makes it as easy as it can be. If you pay attention, do the work and take advantage of Papageorgiou's help, there is no reason you shouldn't get a great grade and learn a lot in the process.	5 homeworks (6 problems from textbook + 1 programming assignment)\n5 problem sets (he asks you to prove something)\n1 midterm (easy)\n1 final (slightly hard but very manageable)	10	0	2762	3992
28954	December 24, 2013	I agree in general with the May 22 2013 reviewer on some of the basics (don't go anywhere near anything taught by Shlomo Hershkop, the exams are a bit of a crapshoot, details on labs can be a bit overwhelming but the detailed specs are ultimately a net positive) so go read that and then I'll focus on a few points where we differ to some degree/where things have changed:\n- This not "just a programming class." Getting familiar with C means getting familiar with a lot of low-level system functionality. If you don't understand pointers and memory management completely intuitively, you'll never really understand what's going on in higher-level languages like Java. Jae Lee definitely gets you acquainted with pointers and memory management.\n- But you will learn a lot about real-world programming. For example: I hated the listserv early on and sent the professor a frustrated email about it, but I came around eventually. A lot of the big (and small) open source projects are built around listservs and all that comes with them. This class's listserv gets you used to the number and type of emails (including repetitiveness), the personalities that appear (the noob who asks a question he could've googled, the guy who replies to everything within 10 seconds but is kind of an asshole, the Benevolent Dictator For Life, i.e. Jae Lee, etc.), and so on.\n- YAXing (as many extensions as you want) is gone as of this semester. By all accounts, that's a big improvement. Also, we had two midterms this time around instead of just one.\n- I felt that the exams assessed the material quite fairly, although they generally played to my strengths and I did well on them without studying, so people who studied a lot and still did poorly likely feel otherwise with good reason.\n- Focus on the principles, not the details. C, C++, Unix and TCP/IP all have a really deep underlying logic and if you can wrap your head around it you're set. Everything is there for a reason. If you remember the reason you can derive the details on the exam. For example, in Unix and C "everything is a file" (external devices, actual files, other programs, etc.) so when you write to stdout you're writing "to a file." When you read from stdin, you're reading "from a file." Sockets can be treated exactly like a file. BUT because "everything is a file," a "pointer to a file" (FILE *) can't possibly be an ordinary derefencable pointer -- dereferencing, after all, is the act of visiting a location in memory and reading some information out, which you can't conceivably do with a web socket -- so if you worked through that logic, you wouldn't make the mistake some people did of thinking that a file pointer can be dereferenced. So, principles, not details.\nIn general, I liked this class a lot, though a grading dispute on the final exam made me seriously question Professor Lee's judgment/command of the English language. However, given that I did not witness any other such problems, I'll be charitable and assume it was a truly isolated incident.	30% final, 30% labs, 20% each for 2 midterms	10	12	3509	4758
28955	December 24, 2013	This was an OK class. CS Theory with Yannakakis is neither good nor bad. The subject itself is very interesting. It's just the presentation of the material by Yannakakis and the textbook (HMU) that is lacking.\nYannakakis is no doubt a brilliant man, but he's a mediocre teacher. He puts up slides of lecture notes on Courseworks and teaches directly off of them in class. This led to maybe 30 out of 87 students actually attending the class.\nThe textbook often has convoluted proofs and too few examples. It's the defacto textbook for automate theory, but I think it could be improved. Sipser is another book which has slightly better explanations.\nYannakakis teaches concepts in a reasonable manner given the dense material. Most people didn't attend class and just studied from the slides and textbook. His explanations are not much better than the textbook and you can learn everything from his slides.\nMy advice is to make sure you are up to speed with what's being covered in class. The material can be dense and hard to follow, so try not to get lost because it will lead to a disaster when exams come around.\nProblem sets (40% of grade) generally have 1 or 2 easy questions and the rest are hard. It is advisable to check your work with classmates since homework counts for 40% of your grade and you shouldn't lose too many points on it.\nDon't worry too much if you don't completely understand some complicated proofs (eg- NFA to Regex, PDA to CFG conversions). If you know the method that it proves, you'll be fine for exams. He never asked to prove something in an exam. Questions were along the lines of design a DFA, CFG, Turing machine, algorithm, do a reduction, etc. Some of them can be tricky.\nThe midterm (30%) and final (30%) consisted of 6 and 5 questions respectively and were both in class. They were manageable, but kind of hard since we got so little practice solving problems. The course is mostly theory with few examples and 4 problems per homework don't really prepare you for the tests. Make sure to study all the lecture slides and problem sets for exams. Read the textbook whenever you get confused by the lecture slides.\nGrading is fair. TAs grade both problem sets and exams. Final letter grades were also very reasonable.\nI wouldn't avoid Yannakakis, but neither would I recommend taking this class if someone better (like Aho or Malkin) were teaching it the next semester.	6 problem sets (4-5 questions + 3 online questions via Gradiance) (lowest dropped)\n1 midterm (medium - hard)\n1 final (hard)	5	3	2941	234
28958	December 24, 2013	Computer science theory with Professor Yannakakis is a pretty good class; definitely one of the better classes IÃ¢â‚¬â„¢ve taken in the computer science department.  There was nothing exceptional about it, but the fact that there was nothing strikingly wrong with it puts it well ahead of most other CS classes IÃ¢â‚¬â„¢ve taken. \nThe professor wrote excellent lecture notes which he posted online, and followed them closely during lectures.  He also handled questions from the class very well, and it was clear that no question ever came close to phasing him.  His progression through the material was both organized and logical.  If I had any criticism, it would be that we went rather slowly through details of proofs and constructions that didnÃ¢â‚¬â„¢t seem very fundamental to the course, and we couldÃ¢â‚¬â„¢ve gone through a bit more material if some of this was streamlined.  \nThe assignments for the course were very reasonable in scope and they did a good job enforcing the important points for each topic.  It seemed that he actually chose the problems based on what he covered in lecture and thought was important.  They were assigned and due every 2 weeks, and each consisted of four problems of varying difficulty.  Solutions to these were posted after they were handed in, and graded problem sets were returned a week after completion.\nThe exam were also pretty fair.  Some problems were more difficult than others, but nothing too ridiculous.  Both exams were during the 75 minute class period, so the scope of the problems was not very large.  The median on the midterm was 73 and the median on the final was 63.	40% Problem Sets, of which there were 6\n30% Midterm - median 73 standard derivation 15\n30% Final - median 63 standard derivation 15	5	0	2941	234
28959	December 24, 2013	Jonathan Voris was hands down the worst professor I've had in the Computer Science department (although I suppose I use the term 'professor' lightly here, because I believe he was a post-doc who was teaching Artificial Intelligence for the first time), and among the top 3 worst professors I've had at Columbia (which is surprising since he speaks perfect English).\nThe Good:\nThe first day, I was rather excited to be taking this course, because Artificial Intelligence is a subject of great interest to me, and I was pleased to find that Dr. Voris was very enthusiastic about the subject matter, and the first three introductory lectures, while sometimes rambling, were at least engaging. \nThe Bad:\nUnfortunately it was all down hill from there: it became incredibly difficult to determine what information from lectures was relevant. As a result more than half of the class stopped attending lectures (Voris began giving pop quizzes in class around 3/4's of the way through the semester).\nThe Ugly:\nProgramming Assignments: The programming assignments were long. I mean incredibly long. The assignments consisted of single page pdf files describing a task in vague detail. There were no suggestions for completion strategies (fine, you don't get these in real life) but more frustratingly, there was absolutely no framework given. The projects often required large amounts of infrastructure (e.g. coding of 5 search algorithms) before any part of the conceptually interesting portion of the assignment could be tackled (algorithm design, heuristic/evaluation functions). Voris was a hard-ass about deadlines, which is reasonable, although perhaps less reasonable was his choice to assign the 4th project and the in class final due 4 days apart. \nExams: The material on the exams was not very difficult, however the exams themselves were incredibly confusing. The midterm was almost as if he had never before written an exam, for practically every question it was difficult to tell even what the question was asking. On top of this, the TA's couldn't answer questions because only 1 of them could speak reasonable english, and the Professor refused to answer questions because he might give away the answer. The final was in class on the last day, and the questions were more clear, however the exam itself was pretty long and somewhat tedious in nature.\nMiscellaneous: The professor, in my opinion, had a patronizing tone throughout the class and routinely treated students as if they were stupid. On top of that he did very little listening and a whole lot of talking when students expressed their concerns. No review or example materials were provided for any assignments or tests. And, more of an annoyance compared to the rest of what was going on, the Professor would often engage in pointless discussions (read: arguments) with students about a very specific point of no importance that would last for 10-20 minutes.\nJonathan Voris is clearly knowledgeable and passionate about Computer Science, but in no way qualified to teach this course.\nOne Caveat: I don't know how much he changed the material from Professor Stalfo's version of the course. It is possible that the assignments and lecture notes were entirely the same. This does not change the fact that Voris was an insufferable asshole, who seemingly refused to listen to his students and insisted on wasting class time on pointless and pedantic arguments with students.\ntl dr: Course was horrible, Professor was horrible. If you value your time and sanity I recommend you steer clear (although I don't know if it is being offered again, so it's probably a moo point.) I give this course a 1/10.	4 Programming Projects: Incredibly unclear on the specifications, disorganized and time consuming. Unless you exclusively code in your free time you should get started sooner rather than later.\nMidterm: Incredibly simple material, incredibly confusing test. See above.\nFinal: In class final. Still relatively easy on the material, but still confusing and above average in length.\nTest Averages: Mid 60's	17	1	12727	26
29313	April 09, 2014	Pretty bad class. Incredibly easy, but I walked out feeling like I wasted a semester. It's required for CS majors, so you'll probably take it anyways, but be warned: you will not learn as much linear algebra as you should. He repeats all the material at least three times, rather than moving forward. The homeworks are a waste of time. \nHe's an incredibly kind man, and will explain anything you want to you, anytime. Definitely worth talking to outside of class and gong to office hours. He'll also help you on exams, if you ask.	Very light. A few problem sets from the book, a few easy programming assignments, and a midterm and final that he gives you the answers to beforehand (so it's worth going to class the day before the exam).	4	7	2762	3992
81510	October 07, 2019	I took this class Spring 2018\nProfessor: I think that professor Ansaf is great. Really, despite all the comments written below I still think that it is unfair to moke professor only because she is a naturally kind person. She was always approachable and her course was extremely well organized.\nOrganization:\n- first of all, you can see all the topics she is going to cover on courseworks from the very first day of the class\n- you can also see the dates of upcoming exams/midterms to organize your schedule (you may think that it is always the case but once you get more experience with Columbia, you may realize that it is NOT)\n- there were always availability of lecture notes handwritten and typed (also very helpful and rare at Columbia)\n- there are two books for this class which cover all the material but students usually do not notice the existence of the second one: it is only for "inference topic" but you do not have to buy it. All of them are always available at the library \nOHs:\nI personally never went to OH and I cannot say anything about TAs for this class, but the overall organization was so great that I even didn't have to! Everything was in books and lecture notes. \nExams:\nMidterms were great: you can have a cheat sheet with formulas you may forget. Then you do not need to study formulas: you basically have to UNDERSTAND the material. Moreover, it consists of numerous small problems: it never happens that the problem is worth 40-50-60% of the exam (as it happens in other classes: but you realize it again only with more experience at Columbia).\nThat is why when you cannot solve something - you still will be fine.\nOverall feeling:\nIt was the only course where you didn't need to stress out and be scared as hell before exams if you missed a lecture because everything was organized so well that another student even didn't need to go to a lecture. Probably, that is why everybody decided not to attend lectures and then to complain.\nTeaching style:\nThis class is big: one section is around 150 students. And it is always hard to explain material if there are so many people. \nIf you go to the lecture and keep attention to what the professor explains - you will definitely enjoy her teaching style.\nIf you stay in the last row and spent half of the lecture on facebook - you probably will not enjoy her teaching style.\nThat is why to enjoy this class I would suggest to go to the lecture and try to listen to the professor, to attend her OHs: \nit is the only way you will really enjoy the Discrete. Believe me, Ansaf is great: you just have to keep attention to what she is saying. \nIn any case, if compared to other classes, you always will be well equipped with all the materials needed.	Depends on your background: can be very easy if you have one or hard if you don't have\nHowever, all the prerequisites are written in syllabus \nAssignments (40%):10 assignments. \nExams (55%): 3 in-class midterms\nParticipation in class (5%)\nAs far as I know, the class was changed and now it is the following formula:\nAssignments (~40%)\nCoding assignments (~10%)\nMidterm  (~25%)\nFinal (~25%)\nThey added coding and I find it amazing. \nPython is really needed for AI class but the only class offering it before AI is COMSW1012, \nwhich you have to take before Java Intro if you are unfamiliar with coding.\nIf I could, I would like to take this class again:)	7	1	13076	397
28972	December 25, 2013	Adam Cannon is a pretty solid teacher. He knows his stuff, and is very organized when teaching. With this in mind, Intro to Java is probably one of the most challenging and time-consuming classes offered at Columbia. Unless you have to take this class for your major, be sure you REALLY want to take this class. There are much easier ways to learn coding and Java. When Cannon tells you at the beginning that this class will take at least 10 hours of work per week, he is telling the truth. Many times, the work requires a lot more than 10 hours/week. \nThere is a lot of information that Cannon tries to teach in this course. You will learn both theory and programming in this class. Because of the amount of info he tries to teach, Cannon skips over a lot of basic stuff that he expects you to learn on your own. I had no experience in programming coming in so I wish he would not have skipped over stuff. For this reason, I would only recommend this class to someone who has some experience or background in coding. Talking to many who were in the same boat as me, we had to play catch-up throughout the semester. This class is already considered difficult to those with coding backgrounds, so it makes life even more miserable when you have to put even more work into an already difficult class.\nThe TAs for the class are usually pretty helpful. I would recommend getting help from the TA that grades your assignments since some of the grading, especially the written assignments, can be very subjective. I also went to Cannon's office hours. He does not come off as the nicest or most personable person ever, but he does try to help you out. He definitely does not try or care to get to know students (at least in this class). I will give him props for his cheesy jokes that lighten up the class.\nIn the end, you really have to decide if you are willing to do the work for the class. If you just want to take this class because you think coding will be "fun" to learn, do not take the class. Learn coding on your own at a pace where it can be fun, exciting, and addictive. Besides those who are majoring in CS, only those who are serious about learning Java and the theory of programming in a rigorous and often cutthroat setting should take this class.	The HW alternates between a programming assignment and written assignment. 1 midterm and 1 final. At least 10 hours/week is needed to do well in the class. Make sure you read the textbooks since he glosses over some stuff in class. Attendance is not mandatory, but you're only screwing yourself over if you skip classes.\nHeavy Workload	12	1	515	3807
28979	December 26, 2013	This class is definitely one you should take for the following reasons:\n1. The book is very good and the teacher, who helped write it, is very good at describing the chapters intuitively.\n2. The class covers a lot of material and, as a person without much of a background in CS theory, I really learned a lot.\n3. This class really gets intimate with the particulars of certain algorithms and you leave the class with a sense of what works where and why. At least I did, anyway. The problem sets you will be solving reinforce this way of thinking, as many problems ask you to devise an algorithm and you will get a lot of practice of what "pieces" to use in the "puzzle".\nJust about any CS concentration will find something to use from this course and in general just provides some good information.\nThere are still problems with this class:\nFirst of all, it seemed like everybody was cheating. The average on every assignment was always absurdly high and, given the challenging nature of the problem sets, seemed too good to be true. It was almost as if the people who did the work honestly were punished for doing so. No less than six times in class did I witness a student in front of me pulling up the solutions on his/her laptop. The same problem extended to the midterm because it was take home. You weren't supposed to collaborate but people did anyway. Seriously, Google "CLRS 3rd edition solution manual" and let me know what you find in the first result on the first page.	Really heavy. The homeworks are HARD and will take you a lot of time. Don't make the mistake I made and mix this class with other heavy classes (OS, Animation, etc)	5	0	1342	4079
28985	December 27, 2013	I took the course - Introduction to computer applications in health care under David Vawdrey. I hate to call him a Professor since he is downright crazy. \nHe is very unfair with the grades. I scored full 100% on all 6 home works, 90% on the midterm but screwed up the final getting 60%. But I still managed to score 79% on an average, and he gave me a C. \nWhen asked for an explanation, he says (doesn't write it down in emails, I guess he fears putting things on record so he prefers talking) -- " Scores in the 90s get an 'A', those in 80s get a 'B', and those in the 70s get a C."\nSpare yourself from the misery. Avoid this Professor and course at all costs!! I'd be happy the day Columbia fires him.	Too much - 6 Homeworks + 1 Midterm + 1 Final	3	0	9471	6706
29021	January 03, 2014	Feiner seems to be passionate about user interfaces. His lectures, however, betray this notion because they are extremely boring. I found his assignments to be great tools for learning Javascript and how to interact with APIs. The final was ridiculous. He basically asked random questions about anything from the lectures to the grossly large amounts of assigned reading. If you wish to do well on his exams, MEMORIZE EVERYTHING, otherwise you are screwed. I find it to be of poor taste when professors give assignments and exams that are completely unrelated and that rely, not on applicative knowledge, but pure memorization. He seems to be a man of habit, so I'm not counting on this ever changing.	Relatively easy compared to most computer science classes. Probably 3-4 programming assignments with detailed descriptions. Some are group assignments. We only had a final but you might have a midterm, both of which would require large amounts of reading and memorization.	16	0	39	663
29022	January 03, 2014	I agree with the review below that Martha totally puts in 110% effort to give good feedback and make sure the class runs as smoothly as possible. A further example is that when she found out that her final letter grade script had a bug in it, she sent personal emails to anyone who contacted her about it (within 24 hours on top of that) and promptly fixed the issue.\nWith regards to her teaching, I would say that she is not quite on par with Adam Cannon or Jae yet. However, in looking at her previous reviews and comparing it with my experience with her this semester, it appears that she has improved a good amount. My guess is that if she keeps refining her teaching skill, she can eventually teach at that level.\nOne thing that others have not mentioned is that you will be programming in MIPS Assembly Language for one of the psets. My suggestion would be to take AP (3157) before or at the same time as this course (I did the latter) since AP really gets you thinking in terms of lower level computing, which makes the assignment much easier. On the whole, AP and Fundamentals really seem to complement one another, so try to get AP in first or at the same time.	6 problem sets (5 theory, 1 programming) with lowest score dropped\n1 midterm\n1 final (non-cumulative, only second half material)	7	5	4221	4251
29446	May 11, 2014	Great lectures, Prof S is explains things well and knows his stuff. Would be even better if he made slides for all lectures and posted them. Very poor logistics and not enough TAs - grades took forever to get back, room overcrowded in 1st half of semester, not much help on Piazza, etc. Early HWs did not really relate to the test much and were long, later HWs were more reasonable. Far too much reading was assigned, but you didn't really need to do it all anyway. Doesn't let non CVN students view the lecture videos online which is unfortunate.\nHopefully he'll keep teaching the class, and improve on the TA and logistics in future semesters because the core of the class - his lecture ability - is solid.	7/10. 4 problem sets of varying difficulty, 1 midterm 1 final (both closed book). Tests are a bit hard but not totally unreasonable.	2	3	3429	5392
29026	January 03, 2014	I agree with the previous reviewer on almost every account.  I just want to elaborate on how some of the administrative details.  I ultimately really enjoyed the course and learned a ton.  That being said, IÃ¢â‚¬â„¢m hesitant to recommend it to anyone who is taking it just because someone told them it might be a good idea.  The workload is too heavy to undertake the course out of casual interest.\nUnfortunately, with an enormous class size, the course had a heavy focus on evaluation without much benefit.  The class had all the symptoms of a cash cow class for the masterÃ¢â‚¬â„¢s program.  For the whole semester (except on days when homework was due), there were students filling every seat plus the stairs of the room.  The first time homework was handed back at the front of NWCB 501, the entire class fought like idiots around the tables to get their papers as quickly as possible.  Eventually, I realized that getting my homework back was pointless, as each problem rarely had any information other than the score I got on the problem.  If the score was something in between full score and no credit, they often wouldnÃ¢â‚¬â„¢t even bother to underline or cross out the mistake.  This is a great way to give grades really quickly, but not much else.  These problems extended to both the assignments and the exams.\nThe professor gave a speech on the first day about the academic honesty policy, and how using the internet to help us with the homework is not allowed.  He said that violations would be treated harshly, and that there are no exceptions this policy.  He even implemented a policy to encourage us not to waste time writing anything for problems we did not know how to solve, which was to award 3 points out of 10 for leaving the problem blank.  That all seemed fine on the first day, until you realized that nobody gave a fuck and they were all just gunning for perfect scores, regardless of how they attained them.  The bottom line is that any incentives to prevent cheating were completely unsuccessful.  Yes, people who were honest were inevitably penalized. \nThe fact that such excessive amounts of this took place makes me question whether the expectations for the class were unreasonable.  I think most people thought to some extent that the workload was too heavy.  I think the workload did detract from learning for many students.  Yes, this is a class where doing the homework requires significant insight beyond what is presented in the lectures; this is a good thing to a certain extent but sometimes it went overboard.\nUnfortunately, the exams didnÃ¢â‚¬â„¢t necessarily do a good job normalizing for who was most sincere in their homework assignments.  I've been in classes before where people who cheated on the homework got killed on the exams; this was not one of those classes.  The main reason for this was that the midterm was take home (and obviously everyone collaborated).  This exam was a great deal easier than the homework assignments, but the expectations are generally a rather unclear, and the grading was much harsher than homework assignments.  Also, many of the more difficult theoretical problems did not really have anything to do with the exams.  Basically, the problem sets were so extensive that the exams werenÃ¢â‚¬â„¢t representative of how well students understood the assignments.  For example, much of the beginning of the course and the first two homework assignments are devoted to developing mathematical techniques, but none of this comes out on the exam.\nFinally, I think there should be some coordination between this class and data structures.  To put it bluntly, data structures here is a complete joke.  I think every undergrad in the class couldÃ¢â‚¬â„¢ve benefitted from some attention to the more advanced data structures.  IÃ¢â‚¬â„¢m not saying this because the background was necessary or even helpful for the material we covered.	30% Homework Assignments (7) - Difficulty and length varied substantially from week to week.  Don't be fooled by the small number of assignments.  Overall, these were some of the longest homework assignments of my life.  Some of the problems were really great and I enjoyed working through a lot of them, but it definitely was excessive.\n35% Take home midterm - This was 3 problems that was generally easier than the problems on homework assignments, but some of the expectations were very unclear.  For example, when we were told to give an efficient algorithm, there was one case where the most efficient algorithm was DijkstraÃ¢â‚¬â„¢s algorithm.  We hadnÃ¢â‚¬â„¢t covered DijkstraÃ¢â‚¬â„¢s algorithm yet and it was on the syllabus for a later date.  That being said, I think every CS major knows about DijkstraÃ¢â‚¬â„¢s algorithm.  The truth (according to the solutions) was we were expected to use a less efficient algorithm than DijkstraÃ¢â‚¬â„¢s algorithm because it hadnÃ¢â‚¬â„¢t been covered.  These types of ambiguities werenÃ¢â‚¬â„¢t a factor in the homework assignments because they usually indicated the runtime of the algorithm we were supposed to devise.  Also (perhaps due to unclear expectations) the grading was harsh.  The average was a 45/60 and the median was a 47/60.  \n35% In-Class Final - A bit of a crapshoot, and completely impossible to prepare for.  The average was a 39/60, unsurprisingly the lowest average of the semester because it was the only in class exam.  The problem with the exams wasnÃ¢â‚¬â„¢t that they were unfair so much as if you made one wrong assumption about a problem, this made it incredibly easy to mess up.	11	1	1342	4079
29031	January 04, 2014	I have mixed feelings for this course. My final grade is satisfactory but I'm still quite disappointed with the course. AI is supposed to be a fun class, and there are plenty of interesting topics that can be covered in a semester long course. However, at the end of the semester, you would find what you had learned was just a bunch of search algorithms plus some machinery that helps you play with logic expressions. I think if Professor Voris had spent less time(or none at all) on giving pop quizzes, explaining the solutions to the pop quizzes and reiterating some of the petty uninteresting concepts, he would probably have had time to cover some more interesting and important topics such as  reinforcement learning and applications of AI in robotics/vision/nlp, etc. But I gotta say this is the first time Professor Voris have taught the course and he did try to teach the course as best he could. He did not come across as a sloppy instructor, it's just that he needs to gain more experience in teaching.	4 programming projects, the first one must be done is Lisp, the rest can be done in any language that supported by the clic machines(Actually only C/C++, Java, Python and Lisp are valid options) , 15% each. The projects were probably the most interesting part of the course, but they can be time consuming, so start early.\n1 midterm(15%) and final(20%), both during the class period. You should have no problem if you understand the materials covered in class.\n2 pop quizzes. It seems they were just to check attendance and had very limited impact on your final grade.	9	2	12727	26
29032	January 04, 2014	The lectures were not very interesting, and I think those 60 students who seldom showed up in class would agree with me on this. But Professor Misra was really a nice guy and he was very patient to answer every question in class. The workload was okay, though the programming assignments could be time consuming, but Professor Misra was always considerate enough to give extensions due to popular request. Plus, you have 3 late days, which really came in handy when you were overwhelmed by the crazy workload of some other course.	3 programming assignments(20%). Can be very time consuming, if you have no prior experience in socket programming and multi-thread programming. But you did learn a lot from those assignments.\n4 written homewok(20%). Relatively easy. And there will be an extra makeup written homework for students who might fail the course.\n\n1 midterm(25%). Hard, way harder than the sample midterm. \n1 final(35%) Not as hard as the midterm, about the same difficulty as the sample final.\nThe midterm and final were open book, you could also bring your laptops/tablets. The exam problems were like those homework problems in the textbook, which required you to apply what you had learned to solve real world problems.	0	0	2089	4902
29033	January 04, 2014	I'm going to cut Shlomo some slack and say that this is a slightly below average, but not god-awful, class. I've had worse (*cough* Dawn Strickland *cough*) professors in the CS department. This class covered all that it should cover. You will gain a functional knowledge of all basic data structures. He also gave us a high level overview of more advanced data structures like AVL and Splay trees, Cuckoo hashing, rainbow tables, min-max heaps, max-flows, etc. The number of topics this class covers makes dealing with Shlomo worth it. You will definitely learn more in this class than in 3134.\nShlomo is a poor to average teacher. He often rushes through explanations and sometimes gets facts wrong. His teaching is good enough to understand the subject though. You will learn a good deal about cool data structures and algorithms, though it can be painful putting up with Shlomo.\nWhat makes this class a mess is the fact that he is totally disorganized. He initially told us that we would have 7 theory and 5 programming assignments - we ended up with 5 and 3 (which was plenty of HW given the length of each assignment). Homeworks were often vague with lots of errors, though you can clarify doubts on Piazza with TAs. The theory assignments usually took about 3-5 hours and the programming assignments took roughly 7-12 hours if you did all the extra credit and GUI stuff (I have no idea why a course on data structures makes you to waste time on Java GUIs). Grading was lenient, with plenty of bonus points and extra credit. Most of the HW was graded very late towards the end of the semester, so you really didn't know how you were doing till then. He also doesn't release HW solutions, so that might be a problem if you don't get 100s on the HWs (which isn't hard to do).\nThe midterm was straight-forward and grading was ridiculously generous. He even gave people partial credit for totally wrong answers. The average was a 76 on 83. The final was open book and much, much harder, though grading was still stupidly lenient. He told us the test was non-cumulative, but it was actually cumulative. It didn't matter much since it was open book, but still... Also, pay attention to special data structures he mentions in class since they all showed up on the final.\nThis class is as easy A+ if you're reasonably smart and do the extra credit. You will learn what you need to know and you can always supplement your learning through the textbook which is pretty good. The hard part is dealing with Shlomo's totally disorganized attitude towards the class. I postponed data structures to sophomore year because I was trying to avoid Shlomo, but ended up taking him anyway. It wasn't all bad, so don't worry too much.	3 programming assignments\n5 theory homeworks\n1 midterm (10%)\n1 final (10%)	11	21	1671	1622
29449	May 11, 2014	If you find Itshack Pe'er teaching Machine Learning, avoid it, unless you know most concepts of ML in advance. \nWeekly assignments wasted most students hours and hours without any progress. The wording of assignment was very vague. To make situation worse the TAs were constantly unresponsive so you can't get clarification in time (and after the midterm they closed Piazza). \nThe two quizzes, contained T/F questions, suffered same vagueness. \nThe midterm question is interesting and good. although the grading of midterm is not very fair. it was OK. \nI have not taken the final exam yet, but the mock final seemed completely different to assignments and quizzes, to the extend that you might think it was for another course.	weekly assignment (not easy!) + 2 quizzes (with 1 page cheat sheet) + 1 final + 1 mid	8	4	4057	1921
81816	January 14, 2020	Prof Stein is a genius. He is witty, has pretty good lecture slides, and explains them in a very thorough manner. This course was taught 'alongside' Prof Andoni's Analysis of Algorithms 1 course, and twice this semester Prof Stein couldn't teach and he had Andoni fill in with his own slides. After experiencing both professors, I can confidently say that Stein is much more concise, thorough, and more familiar with the material. I mean, he is a co-author of the textbook...\nAs far as workload, there were 6 problem sets with the lowest one dropped. These took a substantial amount of time if you actually go through the process of thinking and devising/modifying algorithms to solve them (the alternative is to google them and either find the solution posted or something similar that you can pull off as a sort-of answer). Two midterms for 25% each, and one final for 35%. First midterm I did terribly, second I did average, and final I also scored average. On the homeworks, I started off scoring 2 SD's below median, and slowly worked my way up to the median/above. Constant and steady improvement is definitely key, as I walked away with a B. \nThe material is challenging, but office hours are helpful. Reading the textbook is a must... especially if you miss class, you have everything you need to know in the textbook. Stein follows it perfectly, and it is written in the same language he teaches in (duh! he wrote it!), so its easy to follow along.\nThis class was extremely helpful for interviewing. I took it Fall 2019, as I was applying to full-time CS roles. Definitely helpful for analyzing runtime, using algorithms, modifying algorithms, optimization, etc. I recommend taking it, the topics taught in this class are extremely helpful to someone looking to be a good programmer, engineer, algorithm designer, etc.	6 HWs, 3-6 questions with 1-4 subquestions each. Usually a mix of proofs, modifying algorithms, or analyzing\n2 midterms, cumulative (but focusing on the material from that portion of the semester), 25% each\n1 final, cumulative (but with strong focus on last 1/3 of semester), 35%	1	5	1342	4079
29045	January 05, 2014	This is a fun and informative course worthy of your time if you are interested in information retrieval/NLP/machine learning/network analysis. Professor Radev was very knowledgeable and approachable.  The course materials were not hard and the workload not heavy compared to other graduate level courses. But, do go over the materials THOROUGHLY before the final. The final problems were not difficult in nature, but some of them were either hit or miss, namely, if you failed to recall the formula or evaluation method, you would probably have no choice but leave it blank. The slides were not terribly helpful for reviewing the course materials and could have been more organized. But the textbook is like THE book on Information Retrieval and is of very good quality, so read it.	3 programming assignments(30%). The first one was building a document retrieval system, which was the most time consuming of the three. The second one is sentiment analysis for movie reviews, which was a competition on Kaggle. Your rank on Kaggle would count towards the grade, but don't worry if your rank is not very satisfactory, as the impact it has on the grade is very small. The third one was actually not a programming assignment, and it was the easiest and lightest of the three.\n1 final project(30%), can be in the form of a research paper or a software system. \nFinal(30%), like I said above, please do spend time reviewing the materials thoroughly, especially pay attention to ALL those formulas and matrix computations, and make sure you understand how they work.	2	0	4226	6719
29054	January 07, 2014	I know he has some bad reviews here, surprising, but I felt compared to lot of other lecturers, he was funny, entertaining and engaging. He seemed keen and interested and in love with the various aspects of security. Also felt his research shone through his lectures as well as his breadth of knowledge in different aspects of networking (like knowledge of SIP) and security. \nI felt the course was interesting in a whole, covers crypto, javascript attacks, firewalls, SPAM analysis etc. I felt though there could have been more emphasis on OS attacks, overflows especially since the Prof. Angelos was the lecturer for Operating systems too.\nIn terms of languages C/C++ was the main choice for the first couple of assignments, then there was some javascript and then some shell scripts for firewall and spam analysis (AWK scripts etc.). \nThe TA (Georgios Kontaxis) was very sharp too, and had super fast response time to emails even at the most odd hours of the night. Good on him.\nI would rate this class 5/5 and the professor 5/5. I would also think its a great elective to take even if you are working on some other major. I think you would get a great overview of different aspects of security, and I think this is probably better than lot of other courses, in terms of interesting assignments and great lecturer.\nI thought the mid-term and final were decent, the final being slightly harder (its more about understanding the different concepts in security rather than any regurgitation).	The first couple of assignments were challenging (the hardest part was deciphering the crypto APIs and working through them, the APIs can be sometimes very obscure with poor docs until you plow through them for a little), but the first assignment was fun especially the crypto file transfer part !!!\nSecond was more on javascript and XSS attacks, so there were some tricky situations there but super interesting. Good on the professor for setting this up.\nFrom then on the next few assignments were pretty straight forward Linux scripts were all pretty straight forward, but interesting neverthless. \nThe grading curve seemed very fair too.	13	1	1472	2401
29083	January 08, 2014	I would recommend this class to anyone except the following two groups:\n1) You hate programming in C/C++\n2) Thinking "outside the box" and "thinking like the bad guy" isn't your thing.\nOtherwise, I heartily recommend the course. Professor Bellovin's lectures are entertaining -- I actually looked forward to going to the lectures. His lectures are obviously well prepared; he seems to reuse the same slides but updates them the night before to keep them relevant. The lectures are organized and lively -- with a nice touch of sarcasm. \nThe assignments are mostly about building a secure program that manages files. Watch out -- just because you "meet the specs" doesn't mean you will get full credit (or even a good grade). Unlike other classes where the professor would promise "you can assume you will get proper input," here you can assume the graders will be very creative about how they can cause your program to produce errors. You have to validate inputs like crazy. Writing the actual program isn't hard, but you will use some unusual/unfamiliar c libraries so don't start too late because you need a day or two to familiarize yourself with the documentation. Definitely do assignment 0 to get your C/C++ up to scratch (and you WILL need it for assignment 1). If you start a week early on pretty much any assignment, it will be a breeze. If you start 2-3 days before the deadline, you will be pulling consecutive late-nighters. The assignments aren't cakewalk, but they aren't complicated or ambitious either.\nThe midterm and final are subjective (and easy), but graded fairly. They accept a lot of answers if the justification is good. They are still published on earlier versions of the course website if you want to have an idea of what they are like. If you know the lectures, can mix the concepts together, and can "think like a bad guy" you will do well on the midterms with little studying. If you pay attention in lecture and go over the slides, you will do well on the test. \nOverall, this is a really solid course, interesting, and not burdensome. I recommend it.	On a scale of 1-10 with 10 being the hardest, I'd say 3-5 depending on your background and how interesting security is to you.	6	2	3366	4907
29091	January 08, 2014	First off I enjoyed the course and think Prof. Stein is an excellent teacher. His lectures do a good job of explaining some very dense material and he also is engaging and manages to keep a relatively light tone despite the large class size. He seems well prepared and obviously is a master of the material. Sometimes when you take a course where the teacher is also the textbook author you might as well just stay home and read the book; however with this class Prof. Stein manages to add a lot of value despite covering mostly similar material to the book. The book itself is pretty good too although occasionally too terse.\nThe material itself is critical to any advanced CS study - either research or advanced development - and so I would recommend it to anyone looking at or already in grad school or who wants to get a highly competitive job at a top company. That said, if all you want to do is get a decent entry level CS job this material is more challenging than what you need to know.\nSpeaking of challenging material the class is VERY hard. Primarily this is due to the HW. With one or two exceptions each of the seven problem sets is extremely long and difficult. And (as has been pointed out) cheating is rampant. If you want to get the mean or better without cheating be prepared to invest at least twenty hours on each HW.\nI actually thought the midterm was great. Since the questions were brand new you couldn't cheat from the internet and so I felt the long hours I put into it were rewarded with a good score above the mean. This is in contrast to the HWs where no matter how hard I worked I generally got an average grade.\nI also thought the questions on the final were fair although I was surprised at my grade (which wasn't bad but wasn't good either). C'est la vie, you can't win them all. Certainly the questions on both the midterm and final are easier than on the HWs.\nOverall I loved the class although I think it would be even better if they reduced the amount of HW and used easier questions written from scratch each semester so people couldn't cheat from the internet. I do understand this would be a lot of work for the staff. As it stands right now hard work on the problem sets will help you learn the material very well, but can be frustrating due to sheer volume and the fact many people cheat/collaborate.\nCurve seemed fair to me but I haven't discussed grades with anyone else in the class. Overall TAs seemed pretty good. Some logistical hiccups (not nearly enough seats in lecture hall, HWs returned via huge pile/mad rush method) but generally grading was quick. Feedback on Piazza questions a bit skimpy but not bad.\nTL;DR - really enjoyed the class overall, particularly the rigorous material and good lectures. Prof is high quality. Have mixed feelings regarding the huge HWs. Textbook is relatively good.	Extremely high primarily due to HW. 7 HW problem sets (30% total), one of these is half size but the others are all pretty brutal. Very fair take home midterm and fair in class final (35% each).	3	0	1342	4079
29092	January 08, 2014	Hard but not as hard as everyone says. Not very enjoyable but I've had worse classes. If you are a strong programmer with experience in C you will probably do well. If you are a weak or inexperienced programmer you are going to have a bad time. The class could be greatly improved if they reduced the focus on android hacking and emphasized concepts more. The good, mediocre and bad:\n---The good:\n- Professor Yang is well-intentioned and prepares for lecture\n- All class notes and materials are easily available on the website\n- Expectations are clear\n- Problem set portions of HW are pretty straightforward\n- Very fast Piazza response\n- Midterm and final are reasonable and open book\n- Exposes students to research (via required paper reading referenced in both lectures and tests, and via frequent observations by Prof Yang during lecture about what are current research topics and how previous topics were explored over time)\n-QEMU/vx6 combo is clear and good to learn from (unfortunately only used in 1 of 6 HWs)\n---The mediocre:\n- Modern Operating Systems textbook is a bit out of date and loaded with thinly veiled opinions, although it's not bad\n- Lectures try to pack way too much material in. Luckily they aren't very relevant, since you can pretty much learn from the slides (and watch portions on CVN if needed) so you don't need to actually go in order to get decent grades on midterm and final. Much of the lecture material is irrelevant to HW and tests \n- Some of the TAs' attitudes to students are borderline insulting (although others are good and very devoted on Piazza)\n- A lot of students seemed very upset about the grading/curving on Piazza at the end although personally I thought it was fine. Prof is reviewing results in response to the outcry (as I mentioned above, it seems he does actually care about the class, even if some aspects of the class are problematic)\n- Group projects. Ugh\n---The bad:\n- Largely useless programming assignments that generally amount to copy pasting and then hacking up existing kernel code. You spend much more time wrestling with various dev tools, resetting your tablet for one kernel crash after another, dealing with complete lack of kernel debugging tools, etc than actually learning OS concepts. The class should really be called "android hacking" instead of "operating systems"\n- Way too many technologies/tools involved. QEMU emulator, vx6 code, linux kernel code, adb, x86, ARM, complex macros, makefiles, gdb, git, android bootloaders and VMWare just off the top of my head. So again you wind up getting bogged down in tool specific details and spending way too much time on that rather than fundamental OS concepts\n- Extremely slow grading\n- Little relationship between HW (both code and prob sets) and tests\n- "Interactive" code grading sessions with TAs. They are intended to encourage fair work-sharing among group members but do nothing of the sort. TAs are not comfortable dealing with the students in person and in fact just skipped doing these for latter HWs\n- Kernel development textbook is bad. Hardly any actual code examples to show how one might add features to the kernel. Mostly high level overviews that are only partially accurate and copy-pastes of comments and headers from existing kernel code (which you can look at on your own without the book)\n- HW4 (scheduling) was painful. Much much harder than other HWs. They let students drop one but they should just get rid of this HW since almost everyone winds up dropping this one anyway and it is by far the worse offender in terms of being useless kernel hacking. Spent the most time on this one, learned nothing I didn't already know and ended up dropping this grade anyway. ADVICE: If you take this course and ace the first three HWs don't even waste a single minute on this one	Heavy although I think the reputation is worse than the reality. 6 HWs (50%), lowest score dropped, with both problems and code in each HW. Problem set portions are medium-easy. Code difficulty varies from medium-easy to very hard. HW4 (scheduling) and HW6 (file systems) by far the hardest, especially HW4. Most code portions are frustrating regardless of difficulty. Open book midterm (20%) and final (30%) aren't too hard.	2	0	4214	2384
29124	January 13, 2014	First off, there are 2 types of people that take this class: those who have programmed before, and those who have never programmed before in their life.  If you fall into the latter group, like myself, I HIGHLY recommend reading up a bit on Python before you take the class because the learning curve is steep.  This review will come from the perspective of someone with no former programming experience:\nIntro to Comp Sci for Eng/App Sci is still in its 3rd year of infancy, so Adam Cannon is still developing the curriculum for this class.  Adam Cannon is a really nice guy who often makes the types of sardonic jokes that provoke a chuckle or two, verbally assumes that his class hates him, and gives riddles at the beginning of class to those students who already know the material and can afford to spend the duration of class pondering the riddle, life itself, or if they should attend the next class.  Lectures consisted of him going through topics rather rapidly (for someone who knows nothing of Python) and explaining examples of programs posted in CourseWorks.  For people with programming experience, the feeling of rushing may not have been the case, but some topics he introduced--especially for the homework--could be quite challenging.  We did not have a textbook, which I think would have been helpful, but I believe he is getting one next semester.  Often in class, Professor Cannon would ask if there were any questions and be greeted by silence and blank stares, to which he would respond, "If 1 of you doesn't understand something, that means 10 more of you don't understand it either," sigh, and move on, so ASK QUESTIONS if you don't understand something.  Those afraid to ask questions will be extremely grateful that you did.\nHomework consists of bi-weekly projects that can be very tricky, so try not to procrastinate on these because Professor Cannon will answer questions about/go over the homework in class sometimes.  That being said, he will not baby you and give you the answer, only try to lead you on a path to finding the right answer, both in class and in office hours.  The TAs are all awesome and extremely nice (even if they are all really busy), and I highly recommend going to their office hours.  Both the midterm and final are written and doable, but you should study for them, no matter what programming background you have.  Overall, although this can be a challenging class, Adam Cannon is a satisfactory teacher, but it is up to you--the student--to ask him for help if you need it.	35% bi-weekly Homework projects - can be more time-consuming than they appear, so start early!\n25% Midterm Exam - written\n40% Final Exam - written	5	0	515	6732
29467	May 14, 2014	First off, Jae is a fantastic lecturer. If you go to every class and pay attention (which isn't too difficult to do), you'll learn a ton about C, C++, how the internet works, etc.\nThe material itself is quite difficult. C is a low-level language, so you'll be doing a lot of stuff that you probably never did before (especially in 1004/1007). You have to worry about memory, how pointers specifically work, and every other minuscule detail that gets done for you in higher-level languages like Java.\nIt's interesting that you start at C, but build up to C++, which shows itself to be strangely similar to Java (Java was built off of C++)... so you kind of do a full-circle.\nOverall, would absolutely recommend this class, but make sure you take it in a semester that you aren't too overloaded with other stuff. You will do a crapload of work, but you'll learn a lot.	10 labs, drop 1. labs=30%.\n2 midterms, each 20%\n1 final, 20%	3	2	3509	4758
29131	January 13, 2014	The rest of the reviews are pretty accurate about this class but I figured I should add in a bit to just explain Prof. Voris. Let me start by saying Prof. Voris is a terrible human being and might be one of the worst people I have ever met. He would often belittle students for asking questions related to class material or about class policies. His assignments were based off what we learned in class with the majority of the difficulty coming from the insane amount of fluff put on top of them. Like he gave us games to encode a solver for and I must have spent 1% of the time on the solving algorithm (the important part of the assignment relevant to the class) and 99% of the time dealing with the absurdly detailed rules of the game that had no reason to exist beside to waste our times. Now back to the real problem Voris. Every time a student asked him for something, like if he could post the blank midterm online after we got it back so we can study it for the final, he would answer in the most demeaning way ever. Every question he felt was a personal attack on himself. Now I am by no means a psych major, but I would say he had a huge fear of being seen as inferior. He would oftentimes go on rants about how in his college, which is some local school that most people have never heard of, he had it so much harder and how Columbia students were entitled and a bunch of cheaters. This rant about how much harder he had it occurred so many times and he would constantly belittle Columbia students as a whole. He clearly was trying to somehow prove his superiority to a bunch of kids who never saw him as inferior in anyway. All I can say is that he has some deep issues and probably would be better suited to teaching at a community college where he does not find the need to always defend himself even if the students are not attacking him. My favorite example of him being an ass if when he was trying to hand out the midterms and basically put them all in one giant pile in the front and told the students to come get it. Of course everyone got up and was gathered around the table. Now what does Voris say? He starts repeatedly yelling (for like 10 minutes straight) "You all are animals and you should be ashamed of yourselves! I never saw this when I was in school". He clearly has no idea what he is doing and I hear Columbia is looking to hire a real AI teacher (Voris can't teach very well either so this is a good thing) so hopefully he will never teach a class again. But Voris if you are reading this please go see a Psychologist you have some issues that need to be worked out.	Easy midterm and final (Although Voris will be an ass during them so yay?)\nAssignments were unnecessary tedious, but the AI parts were easy	12	0	12727	26
29145	January 15, 2014	If you're only going to take one Comp Sci course take Java with Professor Cannon. He is fully aware that most people have never coded before and provides very structured ways to allow people to easily understand coding. He doesn't start off too quickly and provides tons of sample code which is usually very similar to the homework he gives. He is very open to peoples comments and asks for questions. Probably one of the best classes I've taken at college so far.	Alternating programming problem sets and written problem sets every week. Anywhere from 2-8 hours for the programming problem sets depending on how comfortable you are with the topic. About 2-3 hours for the written problem sets	6	3	515	3807
29153	January 15, 2014	I took this class 1.5 times. I started as a sophomore, shortly after 1004, with the mindset of "let me just make this program work." That mindset led me to a 50% by the time the withdrawal date came around (which would've been a B-, but I thought I was failing) so I withdrew.\nI enrolled in the class again 2 years later, this time with the programmatic maturity to understand what the class was really about, and why that information mattered. Although the classwork takes the format of programming assignments, they are really about the underpinnings about C/languages (e.g. memory management, pointers, etc.). If you want to learn it well, you should break things! Rewrite your labs in different notations (e.g. array vs. pointer) to learn the differences. Become intimate with C. \nThe reason I mention my backstory is to help advise students who are on the fence about taking the class now or later. Some people can handle AP early on. But two years ago I honestly didn't care about freeing memory or understanding where my variables were stored. I gradually developed that interest after taking a few more CS courses/ being asked such things in interviews, and I am very happy I had the opportunity to take AP again. I got a lot more out of it, and the class was immensely more interesting.  \nThe class has 10 labs, of which 1 (lab 8) is optional. In the past, Jae had a policy of only granting class-wide extensions and every lab would be extended. He has changed his policy, for the better, to allot everyone 7 penalty-free late days each, to be used whenever (with a max of 2 late days for a given lab). This is a great policy, since it allows you to manage your time a lot better.\nThe class also has 2 midterms and a final. The all-or-nothing nature of many of the questions means the grades are relatively polarized--you could do extremely well or extremely poorly, for missing 1 simple thing. If you get above a 90, you really know what's up.\nSo I mostly wrote this review to call out the author of the last post (December 2013) regarding handling of the final. To give readers some context, several people in the class missed 5 points of a 20-point question for different reasons and proceeded to somewhat aggressively mail the list-serve arguing over which wrong answer was "less wrong" and deserved 2 extra points. Several TAs and Jae explained the reasoning to the rubric in response. \nTo insult Professor Lee's English, when he so eloquently and rationally addressed each concern from the email chain in a class announcement, is incredibly rude and borderline racist. Full disclosure: I missed 10 points of the same problem for a different reason, and though I disagreed with the severity, I had the decency to not make personal attacks.\nThough I found grading in the class sometimes tough, and I did not do as well I as would've liked, I learned *a lot* and became a much better programmer. Much of this is due to Jae. He is one of the few people in the department devoted exclusively to his students. I have personally experienced how he uses student feedback to iterate on his teaching from semester to semester, in order to better serve his students. He organized a class hackathon this semester, complete with pizza, Insomnia cookies, and t-shirts, to help students connect on an informal level. He stayed there the whole time, until 5:30 am, making sure he chatted with everyone at least once before he ran off to take his son to soccer. He learned my name despite the large class size (I never attended office hours or anything either).  He is one of the best professors I have had in the department, and I would recommend taking his class to anyone mature enough (as a programmer/student/person) to handle it.	Typical of a CS class. 3 exams, 10 labs.	21	8	3509	4758
29178	January 21, 2014	One of the best, and also one of the hardest, most time-demanding classes I have ever taken. Grinspun is a very well known and accomplished professor who is passionate about his work, as well as an enthusiastic and organized lecturer. Take this class late in your CS career - the more programming experience you have, the better.\nHomeworks are difficult, but you are provided with a code base that provides visual debugging tools, as well as a grading script with numerous tests that gives you an accurate idea of the performance (and final grade) of your code. All homeworks come with a PDF explaining the physics concepts behind the code for that week, and although there were some errors, the PDFs were for the most part very helpful, especially if you happened to miss a lecture. (In the case of mistakes in the PDF, extensions were often given)\nTo prepare: learn linear algebra, refresh your knowledge of differential calculus (mandatory), be a strong C++ programmer, and, although it is not listed in the course requirements, I STRONGLY recommend some kind of physics background. While Grinspun does go over this material in class, if you start with at least one college-level physics class under your belt, the lectures and homeworks will be much more comprehensible, and you won't waste time learning elementary physics.\nGrading: I include this section to discuss some grading policies I disagreed with. 85% of the homework grade comes from the "bot", or the test suite mentioned earlier. The other 15% comes from a mandatory creative scene, built by you to showcase the elements developed for that weeks milestone. At the beginning of the class, Grinspun said you do not need artistic skill to succeed in this class. However, I disagree. If your code works 100% according to the script, you could still get a B on the assignment if you fail to produce a good creative. These creatives are then judged by your peers, who determine the remaining 15% of your grade. Humorous creatives can outweigh visually pleasing creatives, so if you're in a time crunch, go for that. The professors and the TA's weigh in on these grades, so they may give you more points if they see technical ability not easily recognized by your peers.\nExtra credit is awarded for the top 5 creative scenes, and sporadic extra credit is offered throughout the semester on the homeworks (when it is offered, it is a lot! Do it!)\nExams: None. There is a final project worth the weight of two "milestones"/homeworks, which is left up to you. You could modify the code base to produce an extravagant creative, implement a technical paper, or implement algorithms from the class in an external software - whatever you want.\nBottom line: If you have any interest in computer graphics or animation, take this class. It will either weed you out, or light a fire under you to go farther in the field. It's a love-it or hate-it class, since you will have to really commit, but if you want to be in this field, you cant miss this opportunity.	Heavy. Weekly homework assignments, containing a program and a creative. The programming assignments tended to take me 4-5 days, and the mandatory creative scenes took up the rest of the time until the deadline. Obviously, the more time you spend on the creative scene, the better your assignment grade, so this system favors students who can complete the assignments faster. It is not easy to get an A in this class, but it is possible. Grinspun only gives A+ grades to exceptional students who he believes have gone above and beyond.	5	0	2480	6676
29182	January 22, 2014	Shlomo is a nice guy. Shlomo isn't a particularly terrible lecturer. Shlomo is, however, terrible at evaluating students.\nHis lectures are mediocre, but certainly not the worst I've had at Columbia. They're occasionally wrong, and very often frustratingly ambiguous, but in general I they're not the biggest problem.\nThe biggest problem is that his assignments are a poorly made Ouija board. The number of assignments wasn't what he said at the beginning. The due dates weren't what he said (although I appreciated the Thanksgiving extension!). They were often very ambiguous about fundamental questions, like whether we had to write our own data structures, or whether a GUI was required.\nI felt the programming assignments were just a filler, and didn't enhance my understanding of data structures at all. The theory problems were better, but grading was unclear and didn't help me learn.\nGrading wise it seemed like the TAs and Shlomo did the only thing they could do, give everyone lots of points so they wouldn't complain.\nThe midterm was very easy. The final was easier, and at the last minute he decided to make it open book/open note. \nThe textbook we used, Weiss' Data Structures and Algorithm Analysis in Java, was pretty bad. Often they gave meandering, incomplete Java code instead of explaining an algorithm. Sometimes they'd focus heavily on Java specific junk, rather than explaining general data structures. It was generally useless, and wikipedia was a better textbook.	3 fairly time consuming programming projects, but really not that bad considering. Easy exam.	5	2	1671	1622
29183	January 22, 2014	Professor Gross has retired and probably won't be teaching again.\nCULPA wants me to write more. Let me say simply that he taught this class for ~30 years, and it shows in ways both good and bad. His lectures were polished, sometimes a little too polished and he was more focused on the small talk and jokes than the materials. However with his lecture slides, and the fairly good textbook, it mostly went well.\nHis exams are what you expect, and since they're open book they are much lower stress than you might otherwise think.	~7 problem sets. 2 midterms and a final. All very standard, he gave out practice stuff from the 90s. You can see it on the website.	0	0	40	397
29192	January 23, 2014	In short: Dr. Servedio is the man. He absolutely deserves the gold stud.\nI've never had a professor who was as approachable as Rocco. Of all the times I went to speak with him he was never short with me and was always genuinely interested in helping me learn the material. The man has a clear and present passion about what he teaches to the point where he seemed like he didn't want to hold back in his explanations (and thus divulge too much information about a particular problem I was having issues with). At one point he offered to meet with me since I wasn't going to be able to make his office hours that Friday. I can't imagine any of my other professors at Columbia doing the same thing.\nHis teaching is impeccable; no lazy PowerPoint slides here. I've always appreciated the teachers who give explanations to the class as they write; this level of engagement has always made learning feel much more natural and Dr. Servedio is very gifted at doing this. Every class he writes the notes and explains them at the same time and in general the process is paced very well and feels incredibly engaging.\nAll that being said, this class is HARD. Unless you have a passion for theory and machine learning, DO NOT TAKE THIS CLASS. This class is not for those with a superficial interest in either of those areas. I took this class because I had a passing interest in both fields and I had heard good things from classmates who had previously taken his class. I needed a class to fill out the rest of my semester and so I chose to take it; I chose wrong. The above words are not meant to be taken lightly; if you are not grounded in theory or lack the passion for this material, I assure you in the utmost that this class is not for you.\nThis class was meant to be my crash course in CS theory and I had not had much exposure to it outside of discrete math from my undergraduate school. I was also taking Algorithms at the same time. If there was ever a class that needed a pre-requisite, CLT might take the cake; some background in theory and notation would have, I believe, made worlds of difference for me. Rocco does have materials on his website that are meant to help you brush up on the basics needed for this class but the preparation seemed to fall very short of where I needed to be to do the assignments (more below).	The workload for this class does not seem intimidating at first. You have five homework assignments, a final paper, and he now gives a final exam. Each homework assignment is only 5 problems. Do not take that number lightly; these assignments will break you. Expect to spend very considerable time doing each one; the problems are not only extremely challenging but you have to do everything in Latex. I made the mistake of taking CLT during a semester where my workload was very severe; do not make this mistake or you will be burned.\nThe problem sets are by far the hardest I have ever done in my life. Every once in a while there would be a problem I could solve completely but most of the time I felt like I was taking shots in the dark. We're talking problems that demand an utmost intimacy with the material; there are no problems even remotely close to a freebie here. You will spend hours upon hours gazing at your notes, just trying to make sense of everything, and even longer trying to make sense of the material in the context of the problem you are solving. Furthermore, partial credit is difficult to obtain at best; unless your solution is meticulously detailed and bulletproof, you WILL lose a lot of points. The average on every assignment as such was always absurdly low; I think only two of them were higher than 25/50 (all homeworks are out of 50 points, 10 points per problem)\nAs good as Rocco is at teaching, I did not find that the lectures really prepared me for the problem sets; that is why I think a decent background/passion in CS theory is necessary for this class. Virtually every problem demands some degree of intuition which isn't easy to obtain without the right background and only comes with experience. Taking this class in the context that I did oftentimes felt like being a fish out of water. I will reiterate: only take this if you have a decent CS theory background and/or a passion for the material.\nThe final exam wasn't too hard. Just about every problem was an identification question testing whether or not you paid attention in class. They were largely some variation on "What were we talking about when we discussed ______?". The last problem could have easily been on the problem sets which, given the time we had (1.5 hours; the exam was the last day of class), wasn't attempted by many.\nThe paper assignment was enjoyable and is supposed to be an opportunity to learn more about an area of computational learning theory that wasn't covered in class. I thought it was a smart move on Dr. Servedio's part to assign this in order to give students some freedom in exploring areas of interest. The stipulations of the paper were fairly light; all we were really required to do was to read a paper on some topic of computational learning theory, summarize the main ideas, and ultimately convince Dr. Servedio that we understood what we read.	8	0	1724	2287
29290	March 31, 2014	Adam Cannon is not a good profesor for this class. He is undeniably good for the Intro to Java, but my experience in Python is negative. He knows his stuff, and while excuses have to be made since this is only the 3rd year this course exists, he is still refining the curiculum. However, while the cotent of the lectures was interesting (read: sometimes, other times not falling asleep was hard) they were only vaguely related to the homework, and most of the time, were it not for online documentation on Python, me and all my friends in the class would have failed. Although he leaves time in lecture for questions, his sometimes sarcastic answers and interactions with students discourage many from asking. Oftentimes, he will not actually answer the question posed in class, just tells you to "deal with it" in a roundabout way, or gives a non-sensical answer. His office hours dont help: although he holds the same amount of office hours as other professors, he is teaching about 400 students at a time, so there is always at least a 10-20 student line waiting to talk to him during office hours. To be fair though, there are about 5 TAs, though they often are not clear on the specific requirements of the assignment and will sometimes give you wrong information if you ask a mildly specific/complex question on the problem sets. Desperate emails sent the day before the homework is due dont get answered until after the dealine (though to be fair, he warned us that he would take minumum 1 or 2 days to respond due to the impressive amount of emails he gets). \nOverall, although Cannon is a good teacher, he is not good for this course. The learning curve is very slow for the first 3 weeks, and gets incredibly hard after that. While about half the students in the class have programmed before, for the half who have not, the problema set take significantly more hours tan the 8-12 Cannon gives as reference. So start early. DO NOT LEAVE IT UNTIL THE DAY BEFORE OR YOU WILL NOT FINISH. \nAvoid this class unless you actually have to take it or you are pursuing a mayor/minor/concentration/ect in computer science or related fields. Takes up more time tan what is justified for a class that does not related or is not required for your degree (it is ridiculous how much time it takes away from studying for those clases which actually count towards your degree)!).	35% - biweekly problem sets, usually 12-15hr if no experience (sometimes he will split it into phase 1 due after 1 week and pahse 2 due in 2 weeks to make sure students do not leave it until the last minute)\n25% - midterm, multiple choice, relatively easy after doing the problem sets\n40% - final	4	3	515	6732
29326	April 14, 2014	The homeworks are relatively easy, the projects are "fun" (in that nerdy way that CS kids love), the classes are not really necessary to go to after the linear algebra sections have been covered, but the midterm and final are kind of bullshit. Allen only gives you a general overview of what might be on it, without a practice test, and the questions on it are weird; often testing cursory knowledge of subjects not covered in any assignment or project. It felt like the final was "trying" to be harder than the rest of the class just to achieve a nice grading curve.\nThat said, here are the pros:\nYou get to program for an actual, real-world machine, which is something you don't really get to do in many other classes. It's a different kind of debugging when you have to find out how slippery a certain floor is and factor that into your motion calculations to account for drift. \nYou also get to use linear algebra in a very practical way, (It really cemented a lot of the fundamentals I had only weakly grasped after taking intro to Linear Algebra). Lastly, it also serves as an intro to Computer Vision as well, some of the later homework assignments require you to mount a camera on the robot and do image processing to solve certain puzzles.\nIn summary, it's a class that kind of feels like an easy-A class despite having a respectable work-load (the projects) and arbitrarily difficult exams. Allen is a lenient grader for the projects, but not for the midterms. This is definitely an "application" class, not really a "theory" class. Take it if programming a Roomba sounds like something you would like to do; for all its flaws I enjoyed it well enough.	Respectable; it's a class with a programming workload, expect to be submitting things at 11:55pm on the night they're due at least once or twice.	14	1	37	2403
29335	April 15, 2014	Spring 2014 is the first time Simha has taught Computer Architecture. He didn't have a lot of slides, and used the blackboard for a majority of the course. Nevertheless, he is a good teacher: he takes times to explain concepts clearly, and actively takes questions. However, he doesn't employ nearly enough TAs, due to which assignments and exams are returned horribly late. Moreover, half the assignment just lists textbook exercises -- and the exercises in the Hennessy & Patterson are really ambiguous and poorly designed. The other half is a group portion that involves either reading papers or running simulations, which is not bad. The exams are very sensible and test exactly what Simha taught in class.\nOverall, I enjoyed the course and learnt quite a lot.	6/10. 4 assignments, 1 mid-term, 1 end-term.	1	0	3429	5392
29349	April 18, 2014	Disclaimer: In the progression of my CS courses at Columbia, I was supposed to have taken this class two semesters ago, so when I started this course I had already taught myself/had experience with a lot of the data structures in the course curriculum, so my perspective of the material may be a little skewed. BUT WITH THAT SAID...\nI strongly disliked this course with Allen for two reasons:\n1) A good chunk of the homework was focused on Java GUI's as opposed to actual data structures. There was minimal to no assistance in constructing these GUI's, which meant you had to spend large chunks of time scanning tedious API documentation to try to figure out how to do things, instead of spending time actually learning and implementing the data structures. Also, I found this frustrating because Java GUI's are increasingly becoming an antiquated form of user interface in industry, which spending the time to teach them to myself seem irrelevant. In my opinion, it would make a lot more sense to include extensive implementation of Java GUI's in W1007.\n2) Professor Allen is actually condescending to students. There were numerous Piazza posts where students would ask questions that were fairly reasonable and his responses would be incredibly and unnecessarily snarky (i.e. Student: "Can we assume ___ about problem X?" Professor: "Can we assume gravity exists?"). In class, this attitude discouraged students from answering/asking questions.\nSomething I love/hated about the class was that his lectures were literally him reading through his class notes, which were posted on the course website. This meant that going to class always felt like a waste of time (you could literally not go and just read the slides and be fine), which was simultaneously awesome and terrible.\nOverall, I do feel like my knowledge of data structures has improved since the beginning of the course (specifically with Trees and Graphs), but if I could do it again, I would definitely take this course with someone else.	Biweekly assignments consisting of a non-programming part (due in class) and a programming part (due at midnight that day). Assignments actually do take a fair amount of time, if you start them the night before you'll probably end up having a really late night. Midterm and Final.	3	16	37	1622
29361	April 23, 2014	This was definitely one of the best, most rewarding classes I've taken at Columbia.  \nWhile the huge size of the class was definitely not optimal, Stein has mastered the art of teaching a large class.  The class definitely covers a lot of dense material, but the instructor did a great job picking out the important ideas without getting bogged down and trying to cover every last line of the textbook.  He's without question one of the best lecturers I've had at this school.  I know that often taking a class from the author of the textbook can mean that lecture notes seem like copies of the textbook, but that is not the case in this class.  I found his presentation a bit friendlier and more streamlines than the book, and he was also quite funny and brought great energy to the class.  The book could be terse, but it was definitely helpful to refer to after lectures for more details.\nAs people have mentioned previously, the workload is intense.  Each of the seven homework assignments are incredibly long.  I don't think I've ever spent so much time on homework assignments for a class.  I learned a ton from completing them, but they definitely could've been a bit shorter without compromising much value.  With that in mind, this is definitely not a class to undertake lightly.\nThe exams were much more straightforward than the assignments, and if you put a lot of effort into the assignments, it would be reflected on the exams.  It was very frustrating that so many people cheated on homework assignments for perfect scores.  I don't really have a good answer to this, as I too was very frustrated by it.  Seeing as this happened, giving a take home midterm might not have been the best idea.  The grading seemed fair to generous, especially for undergrads who were curved separately.	Extremely heavy workload.  7 massive homework assignments worth 30% of the grade, and a take home midterm and in class final each worth 35% of the grade.	5	0	1342	4079
29392	May 02, 2014	(I'm the author of the December 17, 2013 review of CS Theory with Yannakakis.)\nIn general, my take on this semester is the same as my review of CS Theory with Yannakakis, though this time the lecture hall wasn't so sleep-inducing. Yannakakis is not exactly an exciting lecturer, but charisma aside, he does everything he should: he chooses a good textbook, assigns homework that reinforces and expands a bit on the material, has a TA who grades fairly, provides good lecture notes online, and so on and so forth. My only real complaint is that the class overlapped a lot for the first month with CS Theory, but given how many people were confused by really basic issues about Turing Machines, I guess that wasn't Yannakakis' fault.\nI'd definitely take a third class with him if the opportunity presented itself.	Homework every other week (not terribly difficult), no midterm, a take-home final.	2	0	2941	462
29398	May 03, 2014	I was apprehensive about taking this course since I had no experience with programming or computer science.\nAs I look back on this semester, I have come to the conclusion that yes, it is possible to take this course without prior knowledge of programming. However, it will require a lot of work on your part. If you're up for a challenge, this is the course for you.\nIn terms of personality, Cannon is quite friendly and cracks pretty good jokes in lecture. In his office hours, I found Cannon to be quite helpful and not at all sarcastic, in contrast to what other reviewers have said (but that might be because I came on a day in which very few students were asking him for help). \nCannon is a decent lecturer, although he goes through concepts and examples very quickly. If you don't ask questions or follow up his lectures with your reading, you will get left behind. Be sure that you keep up at all times! (also, the textbooks for this class are quite helpful).\nFor problem sets and programming projects, do not procrastinate! They take much more time than you think they do (he's not kidding when he says that the class will require at least nine hours of work per week). If you get stuck, go to office hours, ask a CS friend, or use Piazza (the online messaging board) to get your questions answered. \nOverall, I'm glad that I took this course. It was challenging and I might not get the grade I want, but I'm glad that I learned something new.	Each problem set is due after a week and each programming project is due after two weeks. Get started ASAP and make sure you do a little bit of work each day!\nMidterm and final are difficult. Make sure you review the code presented in class (he might present a different version of a concept than in the book, so that's an added incentive to go to class) and read the books!	4	0	515	3807
29472	May 15, 2014	One of the better CS courses out there. It's truly inspirational how Jae teaches (Sidenote:  Chris Mulligan and Jonathan Balsano, the head TA's are also a plus for this course; they know everything and they will go the extra mile to make sure you know the way Jae wants you to know the material). The labs get progressively harder (lab 2 is particularly challenging for those that only know Java and thinks they know everything).\nJae hands out a bunch of very clear yet brief set notes for every topics. The listserv is very useful and you won't have to wait more than a couple of hours before a TA responds to your questions.\nThe bad part are the exams. For all the thought Jae puts into the labs and lectures, I feel he hasn't figured out a way of writing exams that aren't so unforgiving yet as challenging as the ones he cooks up. No matter how many hours you spend studying for the exams, you will be challenged. There are no easy questions. You almost certainly will need to go through an overly-complicated program that makes you follow 10-15 logical statements that intersect and go through overly-complicated loops. Almost always the questions will be either right or wrong, and there aren't many questions (usually 10 in midterms, 20 in final). Normally this wouldn't be such a problem, but each question usually tests for 3, 4 or 5 things at the same time. So even if you knew everything there is to know about 4 concepts, if you missed the one, you won't get the answer right (guessing here is really, REALLY bad) and you will probably end up losing a bunch of points. His exams are all or nothing, meaning that you won't get partial credit over anything. You truly are as strong as your weakest topic.\nThen again, if you want to be a programmer or you want to do something related to programming later on, take this course. You will learn more in 3 months than you could expect in a year. If you are not a programmer, nevertheless take this course. Programming is all about getting rid of any assumptions you may have and think logically and methodically and CS3157 makes you develop those skills more than you ever thought possible.	If you are not a good programmer, ~10hrs per lab\nIf you are a good programmer ~7hrs per lab\n2 Midterms\n1 Final\n9 compulsory labs.	6	1	3509	4758
29493	May 17, 2014	Rubenstein's a pretty chill guy, but not the best professor. He often gets confused by his own typo-riddled slides. You would expect a professor who has taught this class several times in the past to know his material by now and have error-free slides. While some of these mistakes were corrected, there are still plenty of typos in his lecture slides, so be aware of that when studying from them. Also, logistics are poorly organized with HWs being posted late and taking forever to be graded.\nStarting with basic logic gates, the course slowly builds up towards creating a CPU. You learn about the underlying hardware behind a simple computer and how the programs you write actually work. The material in the first half of the class can be a bit boring, but you see how everything comes together when discussing the MIPS architecture, which is pretty cool. I was bored because of the slow start (I took Intro to EE and CS Theory before Fundamentals, so the first month was just a rehash of things I already knew). Hence, I never participated or really cared about was going on. Rubenstein would also give students points for discovering errors in his slides, and I felt like it detracted from the class because it "gamifies" education. Sometimes I would notice mistakes in the slides and not bring them to his attention because I didn't want to partake in his silly point system. Also, the homeworks were super tedious and didn't teach you much. They aren't representative of the harder yet more thought-provoking questions he asks on his exams.\nThe midterm was hard. It was longer than the practice tests, and it was nearly impossible to finish within the allotted time. It also had a couple of typos. His exams are open book, but it doesn't really help much because the questions he asks on exams generally require you to extend circuitry covered in class and solve problems creatively. He has good intentions for his exams. They are designed to make students think by asking non-trivial and interesting problems, but they're poorly executed because of the often long and winding questions or just because Prof. Rubenstein didn't think the solution through enough leading to a different answer than what he expected. Partly because of my attitude towards class and because of the difficulty of the test, I did pretty badly on the midterm.\nIn the second half of the class, I made an active effort to pay attention. I found the course much more enjoyable (may have been because the material became more interesting) and Prof. Rubenstein a much better teacher. He's pretty helpful in Office Hours, so please go to them if you get stuck. The final was better than the midterm because I actually cared about the material and also because of the extra time we had. In the end, what you get out of this class depends on how much effort you put into it. Rubenstein's not the most inspiring teacher, so unless you take the effort to ask him good questions, classes can be pretty boring. You have to push him to take an interest in teaching you.\nI think, overall, it might be better to take Fundamentals with Martha Kim for now. Rubenstein's not bad, but there's a lot he can do to improve Fundamentals. (He also reads CULPA reviews, so I hope he makes the class better in the future).	8 HWs - take between 2-6 hours each (can be very tedious)\n1 midterm (hard)\n1 final (very doable)	4	3	2427	4251
29500	May 18, 2014	Computational Complexity with Professor Yannakakis is an excellent class.  This was my second class with him, the first being CS Theory in the fall, and with that said, I am confident that he is a good choice for any class he is teaching.  I will definitely take another class with him if the opportunity comes up.\nWhile he might not be a dazzling speaker, he is always well-prepared with very structured lecture plans and does a great job presenting the material.  The material is very well-motivated and he involves the class in his lectures by frequently asking questions.  He is able to thoroughly answer any question that comes up from the class.  There are few to no errors in the lectures, and detailed lecture notes are posted on Courseworks.  The textbook is the bible for the subject and it is well-written, but he doesnÃ¢â‚¬â„¢t strictly follow it, so itÃ¢â‚¬â„¢s really not necessary for the course.  \nThe homework assignments were also very well-written and unambiguous, and ultimately at the heart of the course.  I definitely learned a lot from working through them.  While this class is the natural follow-up to CS theory, one difference is that there are fewer formulaic problems that simply require following an algorithm.  Usually a bit of thought is required for most of the homework problems, but theyÃ¢â‚¬â„¢re manageable as long as you donÃ¢â‚¬â„¢t leave them until the last minute.  Hints are generously provided for more difficult problems.  \nI agree with the previous review that the Turing Machine topic at the beginning of the course couldÃ¢â‚¬â„¢ve been shorted.  Much of that material was familiar for CS Theory, and it was without doubt the least interesting part of this course.	Very reasonable.  There were 6 homework assignments, containing 5 problems each, worth 60% of the grade, and a take-home final exam worth the remaining 40% of the grade.	4	0	2941	462
29503	May 18, 2014	Possibly the most difficult class in the CS department. \nProfessor Nayar is also possibly the best professor in the department. Great lecturing style, clearly super intelligent, and genuinely does his best to make sure we understand the material. That said, we cover a lot of material in this class, and preparing for the exams is hellish. The exams generally cover some of the easier concepts in the class, but it's also easy to lose points on proofs and there are also quite a few questions where you just have to remember a specific detail or some model which you otherwise can't derive on the spot. No way around some of this stuff unless you put a lot of time into memorization of the material.\nHomeworks are great! They're done in MATLAB now (I think he said they were in C until a couple years ago), so they're constantly evolving - Nayar admits as much himself, especially that he put a lot more material in the class and on the HWs this semester. This is not a class you want to procrastinate on (nor can you afford to). If you start the night before, you may stay up all night, and just not be able to finish due to the difficulty of some of these homeworks. You should start at least a few days before so you have time to consult the TAs because you will inevitably run into MATLAB bugs, amongst other issues with understanding the Vision algorithms themselves.\nYou should probably attend every class because Professor Nayar doesn't post any of the material on courseworks. The TAs print out all the lecture slides and you pick up one of these packets at the beginning of each class. These are literally just printouts of the slides, so you'll want to take miscellaneous notes and comments based on what the professor says while presenting each slide.\nWe didn't receive any information about the distribution of grades this semester, so I can only comment that my grade was definitely lower than expected. A few people have said the same thing about their grades, but we can't make any generalizations. Just know it's a hard class - if you get a low grade, don't worry too much about it because this is one of the best, most useful classes you'll take in the CS@CU department, from one of the best professors around.	5 homeworks (1-3 non-programming, 1-2 programming problems per HW). HW is 50% of your grade. Midterm (15%), Final (35%). Homework could take anywhere from 5 to 40 hours per assignment. Writing the skeleton code for basic functionality doesn't usually take too long if you understand the algorithms/concepts to use, but there are always faster and better ways to implement certain things. Whether it's MATLAB vectorization or clever use of convolutions, you have to think things through pretty well to attain top marks. This takes time, and can cause problems if you're not already familiar with MATLAB syntax and other tricks.	3	1	1812	2386
29513	May 20, 2014	So Jae taught this course in Spring 2014 because the normal OS professor was on leave. I'm not sure when he will teach the course again, but I wanted there to be a CULPA review so that people can go into this well-informed.\n--- The Course ---\nI learned a ton from this course, though I didn't necessarily realize it as I was slogging through. Jae reformatted the course and taught it with undergrads in mind, which was appropriate given that the class had many more undergrads than in past years (no doubt because of Jae's popularity). As such, much of the first half was actually an extension of AP (lab7/http-server) used to teach OS concepts such as concurrency, memory sharing, and inter-process communication (user space programs to teach kernel stuff). It again demonstrates Jae's theory of teaching, using previous knowledge in order to bridge the gap to new concepts. With regard to content, Jae put a great deal of time into UNIX programming compared with hardware knowledge / kernel hacking. Jae explains that the earlier stuff is more applicable and the latter stuff is changing (e.g. we didn't cover hard disks, probably because SSDs sort of shift that paradigm). I buy his explanation. The pacing of the course wasn't great, with probably too much time spent on UNIX programming on the front and too little systems/kernel work at the end. Of course, this is understandable given that this was Jae's first time teaching OS and that he completely restructured it.\n--- Homework ---\nA few individual assignments (that are pretty easy) with mostly group projects (up to groups of three). Having a good group is obviously helpful. All the projects run on Arch Linux, which you will set up on VirtualBox. The assignments usually didn't involve much coding, but rather a lot of understanding how the code runs and scouring the internet. In other words, frustrating yet also good practice for the real world. The assignments have good underlying structure, but still need refining (again, should get better over time). Sidenote: the listserv from AP carries over as well, and will save you hours of struggle if you follow closely.\n--- Exams ---\nI got destroyed on the midterm, but in hindsight it was one of the best crafted CS exams I have ever seen. It definitely tested your ability to read code and apply the concepts we learned. The final was very different and a bad evaluation of our mastery in my opinion: 25 multiple choice questions about very specific things we covered (i.e. very un-Jae-like). Both exams unfortunately do not provide room for partial credit.\n--- Lectures ---\nNot incredibly interesting, but still important to really ingrain the material in your head. Jae mostly worked off of powerpoints, which I found ineffective. The few times he used the board were better. For me, printing the notes/slides beforehand and taking notes directly on them worked best.\n--- Grading ---\nJae curved to a high B+, which I consider pretty generous. Just be very VERY careful to follow homework instructions exactly as stated. Lots of times grading occurs on scripts, so the slightest problem could send your grade down just for not properly following basic instructions.\n--- TAs --- \nJae carried over the best AP TAs and I assume he would do so in the future as well. There was also a contingent of Chinese grad student TAs who were friendly, but generally less helpful.\nI doubt I've covered everything, but hopefully someone after me can fill in any missing gaps. On the whole, I would say to take the class with Jae if you are an undergrad (and if he ever teaches it again).	"7" assignments (meaning trivial HW0 and HW1, followed by HW2, HW3(a-c), HW4(a-b), HW5(a-b), HW6(a-b)), 40%, not all are graded\nMidterm, 25%\nFinal, 35%	7	1	3509	2384
29519	May 21, 2014	If you've never had any programming/Computer Science, your first class will be a bit rough, but Cannon warns his students of this. For me, the first month or two were not too challenging, but mid-semester I hit a wall. Try to to the TAs before you feel confused, and if you feel the slightest bit confused, definitely go the TA or get a tutor. Makes life much easier in the long-run. Cannon is a great lecturer (especially for python!) and throws in a good number of jokes (that are actually funny!!) He is approachable and tries to make his introductory classes challenging for all but also accessible to people who aren't taking his class for the major. He also stresses the importance of improvement, and is willing to work with you if you scored really badly on the midterm as long as you improve on the final. The TAs for both intro. classes are great! For Java, study your vocab. A LOT.	Programming Project or Problem Set (only in Java, not Python) every two weeks. Midterm and Final.	4	2	515	6732
29522	May 21, 2014	Prof. Pe'er is really well-intentioned, and it's clear that he cares a lot about his students. I took a lot away from this class, even though it was a struggle. That said, DO NOT take this class if you're not remotely interested in machine learning - it's _not_ worth it. There are several other breadth/AI track courses that are (possibly) more interesting. If you _are_ interested in the subject, however, I'd definitely recommend taking this class with him instead of with Prof. Jebara. \n1) Teaching: If you have trouble staying awake in classes where professors speak really slowly/if you've ever been in one of the Mudd classrooms and know how boring they are, BRING COFFEE/TEA/anything that keeps you awake. Prof. Pe'er speaks really slowly, so much so that when you play his lectures at 1.5x speeds (they're all on CVN, which is great), it sounds like most people speaking at a normal pace. \n2) The material: While the class is very math-heavy (as are most courses on machine learning), Prof. Pe'er is very generous with his use of examples to provide better intuitions for the concepts/algorithms covered, and even tries to do live demonstrations to help make the math clearer. Some lectures and topics have a very steep learning curve even if you have the prerequisites covered, but I learned a tremendous amount from this class and I don't think I would have gotten that much from Prof. Jebara's far more theoretical approach. \n3) Homework: The homework is time consuming, not because each individual assignment is long, but because there are assignments EVERY WEEK. The assignments are hard, so starting in advance is essential (which means you're usually working on ML assignments 4 days a week at least), and responses on Piazza from the TAs are erratic and come in waves, so they're not reliable. Prof. Pe'er does allow group work with some constraints, so that usually makes working on assignments easier. But START EARLY. The assignments are also usually vaguely worded, which was a pain to deal with.\n4) The tests: This was the most confusing part of the class. I think Prof. Pe'er experimented with a lot of testing styles because it was his first time teaching this class. (Either that, or he always throws 4 different testing styles at his students in all his other classes too because he thinks it builds character.) \n- Quizzes: multiple choice, where any number of choices could be true or false, and you lost points for either answering wrong or not answering at all. (So really, you had a 50% chance of getting it right anyway..) The questions on the quiz were theoretical and just requierd you to know the concepts, and some involved doing some basic calculations/inferences.\n- Midterm: Easily the best test in this class. It was take-home and entirely programming, with 50% of the grade going towards an explanation of your approach. I think the grading was pretty fair - you got graded on the performance of your approach for the programming part, and the quality of your approach for the explanation. Very straightforward and doable in the 4 day timeframe given.\n- Final: This came out of nowhere - the questions on the final ranged from proofs to algorithm creation to calculations - basically a very, very difficult exam. He gave us a practice final that, as it turned out, exactly resembled the actual final, but it still gave us no way to prepare, given that all the testing methods we'd had before were so different. It was almost impossibly long (though challenging and very interesting, required you to actually apply knowledge to real-world problems).\n5) The curve: VERY generous curve. Another reason to definitely take this class with him and not Prof. Jebara. I think he really recognizes how hard he makes the class (in terms of workload, learning curve, difficulty of final) and curves to a high-ish B+. A large percentage of the class got A-range grades. \nAgain, this is a professor who really cares about his students and the effort they put in, and isn't just looking to make this class frustrating and impossible. In general, he's very very responsive to feedback, even takes reasonable requests for class-wide extensions, and always tries really hard to make sure ever single student understands. I haven't had many 4000-level classes where that's the case, so this was refreshing. The class is still extremely frustrating, but ultimately rewarding if you like the material and put a lot of effort into the work.	Homework: 10 assignments (1 really simple setup assignment which includes a small Matlab script), 1 per week, all in Matlab  (25%)\nMidterm: Programming with an explanation of approach (25%)\nQuizzes: Two (a few weeks before and after the midterm) - multiple choice with any number of true/false options, theoretical (20% total)\nFinal: Impossibly long and very challenging final with lots of application- and theory- based questions. (30%)	13	5	4057	1921
29624	June 08, 2014	Vision was the most rewarding class by far. Prof. Nayar is funny, smart and makes lectures very interesting. He has an answer to all of your questions. He likes discipline, mind you, but is not that fanatic about it.\nYou cannot miss any of his lectures as the slides will stare at you when you prepare for the midterm or final. You get printed slides so you just need to take down additional notes (if any).  In Spring 2014, he tried a lot of new material and so the overall workload increased exponentially after midterm. He also took feedback post midterm and in the last class to update the class materials. There were review classes in the lecture before the tests which were quite helpful, if at all you started preparing!\nIt helps to have a study group as making sense of each slide takes up a lot of time although everything seems like a breeze during the class. TA's were very helpful. Thomas was a little picky in giving points but used to explain important concepts easily. You won't understand where exactly you lost points but they do indicate the relevant challenge number. Though programming in MATLAB seems easy, debugging is a headache. Make sure you proceed step by step. Just a tip: avoid built in functions unless you are completely sure of what they return. Getting a working solution was not enough to secure full points. You need to provide a 'smart' solution.\nI was taking Computer Graphics along with it and I must say a lot of my fundamentals got cleared through this class. His 'Math Primer' slides were just mind-boggling. Everything was explained in such an elegant manner. Overall, "you get a lot for the tuition you pay" in Prof. Nayar's words!	Heavy. 5 Homeworks (1 Theory, 4 Programming + Theory) + Midterm + Final.\nYou generally have more than two weeks for each HW. No late days. First assignment had basic MATLAB intro but some challenging theory questions. Second one was the toughest for me and I lost a lot of points since I started just the night before. Rest of the HWs were decent and rewarding provided you start early i.e. the previous weekend or so. You implement a panorama stitcher, refocusing app...how cool is that!\nMidterm as well as the final were not tough but there were few challenging questions to identify people who could think a little out of the box. Overall the avg was quite high ~ 20/30 midterm and ~ 35/48 final.	8	0	1812	2386
29625	June 08, 2014	One of the best and most helpful professors I've ever had. His class is not easy, but if you can get through his class you'll make it through cs. He presents the material clearly. Keeps the class engaged with humor while not coming across as a goofball. \nDo the assignments, don't expect perfection and read the text. Start early you won't finish projects if you start the night before. Recursion, writing compression and encryption algorithms, red/black trees, definitely a gateway to the more heavy duty programming classes. Much harder than the intro to cs classes. If you tap out of cs this is where you'll probably do it. But you shouldn't Prof. Blaer is very helpful. It might not necessarily lead to a high-flying gpa but its a great class to put on the books.	heavy	0	4	3409	1622
29529	May 22, 2014	Seminar course with approximately 20 students, mostly graduate students. Belhumeur is very chill and makes it clear that this class is all about producing a mobile app to be presented at the end of the semester. He proposed a couple of ideas related to his own research (extending the BirdSnap iPhone app developed in his own lab, or another app related to to identifying birds by their calls). Most students (usually working in pairs or groups of 3), came up with their own ideas, involving some elements of CV or ML topics in their app.\nFor the first half of the semester, each class period was split half and half in terms of CV/ML lecture from Prof. Belhumeur, followed by a guided tutorial to iOS app development led by the TA, Michael Yang (who was excellent). About halfway through the semester, we moved away from this format, and basically started demoing the progress that each group had made. \nOverall a fun and low-stress class, where you have a ton of freedom to be creative and explore new CV/ML methodologies. \nSome mobile dev knowledge is preferred (you can do either iOS or Android, doesn't matter), but most of the class was pretty new to mobile development and learned things as they went. In the end, most of the actual work happens server side, so your mobile app's frontend will likely be fairly rudimentary.	As much as you want it to be. Your grade is determined from participation (it is a seminar/discussion based class after all, so provide critiques and comments on others' ideas), and your final app + presentation/summary report. It would be smart to have your app mostly functional a couple weeks before the end of the semester so you aren't rushing to finish it on top of the millions of other projects you'll be dealing with at the end of the semester :)	2	0	1777	6779
29538	May 22, 2014	Ah, Rubenstein. He spent the first lecture telling us how last year's culpa reviews were all wrong, and at first I thought it was going to be okay but then...\nOkay, okay. So he's not the worst. It could always be worse. I survived the class and learned some cool stuff. And yeah, he's a nice guy and a great person. But when every sample final exam that he gives us has at least one mistake in it, and when he doesn't even know the answers to his own homework problems... It makes me pretty worried.\nI actually don't think that he was that bad of a lecturer and I didn't really mind that the slides had some typos (though I'd maybe recommend not scribbling all over the whole slide in red... I heard someone got him a stylus but I don't think that helped much). He was decently helpful during office hours too, and he does seem to really care about us learning.\nThe main problems were the homeworks and exams. As a previous reveiwer mentioned, homeworks were posted late and graded late and sometimes tedious, but that wasn't even the worst part. Towards the end, some of his homeworks would ask questions to which he didn't even realise the answer, until a student pointed something out to him in office hours. He then tried to say that it was still an answer too but, c'mon, when the question asks "How can you minimize stalling?", "you actually can't" shouldn't be the answer.\nOur own midterm had a few very significant typos in it (he gave an example of how his state machine worked and his example contradicted the instructions) and our final had a few errors too. Luckily, he grades on a pretty good curve. I didn't think I was doing amazing but I ended up with an A.\nBasically, if you're stuck taking this class with Rubenstein, it's okay, just keep up with the material, go to office hours if you need to, and find some friends in the class to cry with when you can't handle it. And hope that he's a bit more organized next year. If you have a choice though, I'd recommend trying Kim.	Roughly 1 problem set every week or every other week. The homeworks weren't spaced out that well, and sometimes the homework would not be posted until a few lectures after the one that it was based on. The previous reviewer's estimate of 2-6 hrs per problem set is pretty accurate-- it's hard to say. The early homeworks were easy but tedious, while the later homeworks were difficult but only had maybe 5 problems each. 1 midterm and 1 final-- these are somewhat unpredictable.	5	4	2427	4251
29540	May 22, 2014	This class is amazing. Jae is amazing. The TAs are amazing. There's not much bad to say about it other than... Oh. Right. The tests.\nLet's start with the good. Jae's lectures are interesting and helpful. I thought that he went at a perfect pace. The homework assignments can be somewhat challenging but everything is so well organized. All you need to do is pay attention in lecture, go to recitation, and give yourself enough time to do the programming. I was almost terrified coming into this course, from the horror stories that I heard from upperclassmen. I heard that the labs would get harder halfway through the course, but I didn't feel like there was that significant a change. I will, however, say that if you don't know the material from the first few labs, you will likely struggle with the latter ones.\nAlright, so the tests. The tests are pretty unpredictable. All I can say is try to study as much as you can and beware of Jae's trickery. Do the practice exams to get an sense of what the problems will be like. You might not ever be fully prepared... but good luck, and hope for a good curve? (it will be pretty good.)\nSomehow, despite how awful I felt when struggling through the tests, I still really enjoyed the course and I feel like I can look past those. You will definitely learn a lot either way.	10 labs total (one of them is optional). Give yourself maybe 5-12 hours (really depends on the lab). Try to start early. Go to office hours if you need to. There's also a recitation (1 hour) every week.\n2 midterms. 1 final.	14	4	3509	4758
29556	May 23, 2014	If you are taking computer science first time and have had very little or no experience with programming, you will have a tough time in the class. Cannon's lectures on the programming component aren't helpful at all; the best way to deal with programming assignments is to start early, read the Big Java book, and attend office hours. \nHis lectures on the conceptual component of Computer Science are useful, though reading the book would give you the same information, but it can be more time consuming since it has a lot of unnecessary information.\nHis first midterm includes a lot of memorization and not a lot of programming examples. The programming component isn't related to the assignments at all but to the simple principles of object-oriented programming. The other component was mostly memorization. (There were questions asking the size of the 'short' data type, for instance.) The final has less questions based on memorization and can help you bump your grade since it's as long as the midterm.\nHe makes a lot of trashy jokes that most people seem to like. He also wastes a lot of time on unnecessary questions such as "I would like to major in Computer Science; when should I take Discrete Math?" in class. His lectures are very unfocused, and you can do fine even if you skipped some lectures. How you do in the class depends more on you and very little on lectures.\nI still do not understand why he is in charge of all the introductory computer science classes when he cannot clarify basic but important concepts.	6 problem sets - very hard to get full points on\n5 programming assignments - takes a lot of time, TAs will pay attention to silly things like whether you used spaces\n1 midterm - lots of memorization\n1 final	16	13	515	3807
52303	November 17, 2014	She is without a doubt the worst professor i've ever had at columbia. She was rude in person, would constantly screw up proofs in class, and would generally explain poorly. Everything I learned from this class, I learned from the (somewhat lacking) textbook. Avoid at all costs.	Optional textbook psets - 1 per week\nPop quizzes(?) (not in my section, but she said she had done it before)	4	8	11575	397
53393	November 19, 2014	Well organized notes, very straightforward exams - very similar to the practice questions she provides.  Probably one of the nicest professors on Columbia's campus.  Office hours incredibly helpful.	Bi-weekly homework assignments (~8 hrs each). Midterm, final exam.	5	0	13004	234
29559	May 23, 2014	Xi is a pretty decent teacher. Going into this class, there were no previous CULPA reviews on him and the only thing I heard about him was that he was "not bad". I would say Xi's a bit better than "not bad".\nTypically, classes like Algorithms go really fast, leaving most students lost and confused. Xi is good in this sense because he teaches at a slower pace so it's easier to understand the long proofs and sometimes dense material. The drawback of his speed is that we didn't finish the syllabus. We missed 2 classes because of snow days and another 3 classes because Xi was overly ambitious to cover so much material at his teaching pace. He also posts excellent slides online so you don't have to worry if you missed something in class.\nThe class itself is pretty hard. The book CLRS, while excellent, is quite dense and detailed. Homework was almost completely assigned from the exercises in the book, which are nearly impossible the solve. The HW averages were pretty high (around 55/60). This is because solutions to problems from CLRS are available online if you search carefully enough. I highly recommend you don't do this since you will get screwed come exam time. Xi is super helpful in Office Hours and you should go to him if you get stuck on HW (because you will, trust me). He will walk you through any problem and give you an outline of the solution. Sometimes, the problems are so hard, that Xi himself can't solve them on the spot (not knocking on Xi; he's really smart. I'm just saying the problems are that difficult). \nThe midterm was much easier than the problem sets, but still far from easy. One question on perfect hashing which worth 20 points could be solved only if you remembered a proof from his lecture slides. Most people didn't get it, so remember to read his slides thoroughly. Grading was fair, maybe a bit strict.\nFinal was similar to the midterm in difficulty and was a bit longer, but you had 3 hours which was plenty of time. I thought the final was easier, but I ended up getting a lower score on it than the midterm, so I don't know what to make of it.\nThe class had roughly 8 undergrads out of a 100 students, so be prepared to be lonely. There are PhD students in this class, so don't expect to ace it, though getting an A shouldn't be a problem if you put the effort into this class. I'm not sure if he curves undergrads separately.\nOverall, it's a good class. You will learn a lot and become much better at constructing solid proofs and thinking algorithmically. I think Xi is just as good as Stein, so feel free to take this class with him.	7 Homeworks (40%) : incredibly hard, take 20+ hrs each\n1 Midterm (30%) : medium-difficult, average was roughly 66 I think\n1 Final (30%) : similar to midterm	14	0	12932	4079
29567	May 26, 2014	I'm sorry but this class is just not on par with the equivalent classes offered by other top universities . While you learn basic (extremely basic) proofs, a bit of probability and counting, and some graph theory - you learn very little of all and you only learn it at a very practical level. Professor Strickland will stop to take every question and it's a large class so expect to spend a lot of time listening to things repeated over and over again. The homeworks are pretty easy and all done through CourseWorks so a textbook is not necessary unless you want to do the practice problems she recommends, which are only worth it if you don't have a decent math background because the homework and test questions can all be solved using the same techniques used on examples in class. If you're the kind of person who prefers to read the textbook - just buy it and don't go to class. The tests are pretty easy if you enjoy math and more than enough time is allotted. An honors class in the subject really should be offered but in the meantime, enjoy the easy A if math is your thing. And don't look at the homework given by many other schools or you may find yourself depressed it's way beyond what you were taught.	Really light\n~7 psets with 7-15 questions, many of which are multiple choice\n2 Midterms\n1 Final	6	2	11575	397
29586	May 27, 2014	Machine Learning by Prof. Pe'er was an excellent class. The course was well structured, however the course load was pretty heavy. Nonetheless, the assignments and mid-term made you learn a lot. \ncons :-\n1. The problem explanation in the assignments were vague at times. The TA's were irresponsive most of the times, thus most of the times went struggling with the problem statements.\n2. It was difficult to follow prof in class, but hey, the lectures were recorded on CVN!\npros :-\n1. The prof was very approachable and cared for his class.\n2. He atleast tried to make sure that everyone gets the concepts right.\nIn a gist, i'd recommend this class to anyone who wants to learn machine learning in a way such that the intuition and math behind the concepts is both clear.	~12 assignments(weekly) + 2 quizzes + midterm(take home, was sheer fun) + final(impossible)	10	26	4057	1921
29610	June 03, 2014	Machine Learning is a fascinating subject and is clearly a very valuable subject to know about. However, our class was very unfortunate to have been taught by Professor Pe'er. He is by far the worst professor I've ever had in my academic experience. To add insult to injury, he is very unapologetic about the way he manages things and treats his students unfairly. \nAssignments:\nEvery assignment included grammatical errors and unintelligible sentences in addition to mistakes in the problem descriptions. As a result, 1-2 day assignment would turn into a week-long affair. Future assignments are also based on answers to previous ones even though the class was not given the solution to the previous assignment. As a result, students who might have had incorrect answers in the previous assignment would unknowingly have errors in the next assignment.\nMisinformation:\nProfessor Pe'er likes to portray himself as a fair individual but time and time again did he prove us wrong. Our first quiz was multiple choice test where correct answers were given 3 points and incorrect negative 2. However, the class was not told that leaving answers blank would result in negative marks too. Another example of this kind of behavior was demonstrated when he ran a poll to decide whether assignments should be due on a Friday or Wednesday. >80% of students who voted, voted for Friday yet the Professor appeared to have conveniently forgotten to tell the class that over 60% of the entire class needed to participate in the poll for it to be deemed valid. Something he decided to tell us after the fact. \nSadly there are many more examples of this kind of behavior which is simply unprofessional. \nI can't speak to how Prof Jebara might teach this class and whether it's any better. But my main advice would be to stay away from Prof Pe'er, simply because you'll waste more time clearing up any confusions than being able to dedicate time to the actual subject.	Weekly assignments - mostly time-consuming due to the fact that they had mistakes in them\n2 Quizzes\nTake home mid-term\nIn-class final	17	8	4057	1921
29612	June 04, 2014	This is an acceptable course, but I have mixed feelings about it. Let's establish some baseline. Dr. Gravano is undoubtedly a capable lecturer, able to explain concepts lucidly. He occasionally told jokes that made the classroom laugh (sometimes). I'm pretty certain he genuinely cares for his students. You will almost certainly learn a lot of new and useful stuff while taking this course. Overall, the course was planned and executed well.\nIf you are on the NLP or ML track Ã¢â‚¬â€œ or you have a strong interest in search engines or big data, you should certainly take this course. This course definitely falls squarely in that domain (I mean hey, the free textbook was on the NLP part of Stanford's website...). I suspect the facts you will learn will be very relevant to you. However, if you are on the software track taking this course just because it has good reviews and fulfills a requirement, I'd suggest giving other courses stronger consideration. I don't exactly regret taking this class, but I think I could have chosen better.\nDr. Gravano curves the median to a B+ or A-. You may be thinking Ã¢â‚¬Å“Sure, I'll just score above average!Ã¢â‚¬Â but in a 90 something class full of smart people and easy assignments and tests, this is tricky to do Ã¢â‚¬â€œ and there is a good component of luck involved.\nThe two tests which comprise 50% of your grade are themselves comprised of about 40% (each) true false questions. That's 20% of your grade roughly!  I felt that some of them were vaguely worded and it's pretty hit or miss if you remember the specific fact the question tests you on.\nYou'll either need a very good memory or be very planned and careful how you review the lectures, because you really could get tested on any bullet point in them. It's fair and doable, but that's not my style. I'd rather be tested on my ability to apply what I learned to solve problems than my ability to simply remember details about stuff I could recall by referring to the textbook or my notes (neither of which are allowed on the exams).  Oh, and the readings are often straight torture. Thankfully, I don't ever remember seeing a question that was in the reading but not the lecture. Much of the writing was by authors showing off their ability to encrypt simple concepts into Latex strings. Dr. Gravano's lectures blew the textbook out of the water.\nThe rest of the tests involve manually carrying out an algorithm he discussed in the lecture. The tests are easy, but I'm really not a fan of easy tests because mistakes will cost you a lot more. But that's obviously my opinion... you might think otherwise. \nThe HWs (java or python) certainly aren't trivial, but they aren't complicated either. The class generally averaged 9/10 on them with a very small standard deviation. I think I learned more about Python than I did about search algorithms or the subject matter of the class while doing the assignments. The first and last project implemented an algorithm that is probably only a step or two above the complexity of what you would encounter in an undergraduate data structures class at a reasonably competitive school. The second project mostly involved string formatting and learning how to use the API to google's open knowledge database. Personally, I found it pretty tedious. \nThis is not to say the assignments can be finished in two days. The API in the second project took forever to figure out, but I'd really rather invest my energy somewhere other than learning an API I won't use again in the foreseeable future. \nIn the grand scheme of things, this is not a bad class. Good for some people, less so for others. As you can tell by the other positive reviews, some folks do enjoy it. I see where they are coming from. Some of the things I don't like about the class are a matter of personal taste. I hazard to say you will likely get your tuition's worth on this class. If you are NLP or ML I think you almost certainly will. I'm just saying this class isn't for everyone.	The workload is medium-light. If you are taking some insanity classes like OS or cloud computing, this might be worth using to pad your credits to full time so you don't overstress yourself but still learn a few things -- but again, give other courses some consideration.	3	0	375	4956
29616	June 05, 2014	This was definitely one of the most fun times I had at Columbia. I took this class without prior knowledge in Machine Translation, but I had some exposure to classifiers and machine learning. Still, Professor Nizar made this class really fun and laid-back. The hands-on lab was a great way to introduce the students to the SMT world and get them excited about the course.\nThe class format hasn't changed much from the last review (I took the class last year). The workload was also almost the same, additionally we were asked to write up a summary of the papers presented every week. But don't let this intimidate you, in fact, this exercise forced us to actually read the papers before the class and it made listening to the presentations more fun and the discussions richer. Also even though some papers were advanced-level and difficult to read but that will not really affect your grade, you will still learn something out of them if you attempt to read them.\nOverall, this was really fun and laid-back class. Definitely consider it!	1- Fun hands-on Lab\n2-  Research project (8-page final paper to be submitted by end of semester) + a presentation - we worked in teams.\n3- Two presentations: One about a language of your choice, and one about paper set of your choice\n4- Weekly Paper Write Ups: 1-page summary every week, 4-papers per week.	0	0	10197	5794
81867	January 27, 2020	Really excellent overall professor: clear, well organized, understanding. If you're interested in DB he is a great choice of prof	Fairly average for a CS class, projects take more time than you'd expect so definitely start in advance	4	0	375	664
29645	June 21, 2014	Pros: I thought the assignments were good, but super time consuming and there was one every week, that will squeeze all the time out of you, but in a way you learn.\nMidterm fair and final was ok. Grading was reasonable.\nCons:\nThe worst classroom delivery I have ever seen in my entire life including school anywhere. Machine learning is no doubt fascinating but does require some foundation, but his classroom delivery is some of the worst I have ever seen, stammering, stuttering, is ok for CS 101, in a community college but totally unacceptable for a graduate level course in such a esteemed institution where the pay for professors is high and the fees are exorbitant.\nOn top of his inaudible and cringe inducing voice the material is complex but no doubt interesting. Professor needs to desperately address this and take a look at videos of himself on how to improve for future classes or otherwise just stay a researcher and not lecture.\nJust look at the how well Andrew Ng did his course in Coursera on Machine Learning.\nBecause of the above it felt a waste of the money we spend on course here. I think Jebara would be much better, understandable and you would feel your moneys worth.\nBut if you can bear and listen to him maybe the course is made for you.	Pretty tough but fair I thought for the scope of this course.	21	5	4057	1921
29653	June 30, 2014	Professor Hershkop's class is a great class to take if your intention is to make it into grad school. Shit, after taking this class as a postbac, I was accepted to both Columbia and Penn for a Masters in CS, so I guess it worked out. His class will give you the A or A+ you need, presuming he grades you properly and submits appropriate grades. For me, that presumption turned out to be false. \nThe issue involved the professor giving me a B+ when I deserved and had been graded with an A. The reason for this problem was minor - I had been granted a written extension to turn in a final project, I turned the assignment in based on that timeline, and had received a zero by error of the professor. The professor agreed that I deserved an A for the class after grading my final assignment.\nDespite multiple communication attempts with him and spending over two months on the issue, the professor did not submit a grade change. He acknowledged the grade I had received was an A, but was either too busy/lazy to change it over basically the entire summer. This created deep stress for me, and concerned me, especially because I intended to apply for masters programs the next semester.\nAs a result, I brought my advisor in to help resolve the issue. After she confirmed the appropriate grade with the professor, she waited several weeks for the professor to resolve the issue. He didn't. She fixed the issue herself by submitting a document to change the grade.\nI believe this professor is an unfortunate member of the Columbia community, and is one of several reasons why I decided to attend Penn instead of Columbia for my masters program. His work ethic on administrative issues important students is completely insulting.	So light that I can hardly believe it actually counts as a class.  In fact, I was in advanced programming at the same time, and because I spent so much time programming in C for that class, I barely remembered how to program in Java by the time the final programming assignment came around.	13	0	1671	4
29669	July 14, 2014	I took Data Structures in Fall 2013 with Professor Pasik and it was one of the worst decisions I could have made. He starts off the class by letting the students know that he codes differently than most professors and has his own styles. This "style" is pretty much squeezing your entire program into one line of code for no reason. We had quizzes that consisted of regurgitating exactly what was on his slides for class. The worst part was that there was no textbook to supplement the lecture. He very much minimized how horrible his teaching style was by saying that if you attend class you would get an A. This class is only for people who like to teach themselves through other classes textbooks or magically understand this secret coding style that he has created.	Homework, Quizzes, Final	1	1	2508	4
29690	August 05, 2014	This review is for the summer session Discrete Math class with prof. Robert Holliday. He only teaches in the summer, and apparently he has been teaching at Columbia for many years. He seemed really nice in the beginning, but that turned around quickly. He doesn't care about the students actual learning the material; every lecture felt rushed.\nThe homeworks were very long. However, they made up mere 20% of the final grade. I thought it was unfair given the  amount of work you had to put in in them. The midterm was very easy, too easy, I'd say. He gave us a study guide and said that what wasn't on the study guide would not be on the exam. That wasn't true: one problem asked to use a formula that didn't appear on the study guide. The final was much harder than the midterm. It seemed that he made it so intentionally to force a better grade distribution. \nIf he's the only option for the summer, don't take it. Just take the regular class in the fall or spring.	20% problem sets, very long\n40% very easy midterm\n40% not so easy final	4	10	12959	397
29745	September 06, 2014	Took course over the summer. Very solid instructor, lectures were clear. Managed to make 3 hours of lecture bearable. Assignments really helped understand the material and were time-consuming, challenging, but not unmanageable. The reviews below apply.\nWhy am I reviewing then, if what I've said above has already been said before? If you are taking THE SUMMER COURSE, expect to receive your final grade VERY LATE compared to the usual standards. Class ended in mid-August, and I received my grade early September, about 3-4 weeks after the end of the course. \nWhen I took Intro to MATlab with him during the year a long time ago, grading timeliness was never an issue at all, so I'm not sure where the disconnect lies.	See reviews below.	0	0	3409	4
41449	October 30, 2014	The class moves pretty slowly for a 4000 level CS class and covers the qualitative components of Computer Science (planning, group dynamics, etc). Don't let the name fool you, there is nothing "advanced" about this course. It is interesting that we get to work on a project of our choosing over the course of the semester, but the amount of documentation we have to provide beforehand is a little infuriating. You end up spending 3x more time writing out requirements, risk, etc than writing code. \nYou will probably have to take this class because it is required for Software Systems, and let me say that this is not a "bad" class. You still learn concepts like design patterns, but ultimately you will learn MUCH more if you take a class like Operating Systems or Computer Networks.	Medium (bunch of periodic group assignments that don't take too long)	4	3	1474	1616
45002	November 06, 2014	Overall, I recommend not taking this course.\nThe ideas behind this course are simple: think in terms of the customer and plan your project accordingly. Unfortunately, a lot of the documentation we do is not really meaningful, and the pace of the class could be faster. We spend several weeks on design patterns, and another several weeks on "bug testing", which is stuff you pretty much already know. \nIf you want to challenge yourself on your road to becoming a fully-fledged Computer Scientist, don't take this class. If you are looking for an easy course to take on the side, while knocking out your tech electives, you might consider ASE. This class is not really "Advanced Software Engineering", it should be called "Software Project Planning for Enterprise". \nThe midterm reflected the course. It was pretty easy, with just definitions and written explanations of concepts. But at the end of the day, how much did you learn compared to a class like OS or Algorithms?	Bi-weekly assignments for the first two months with documentation for your project and other scenarios\nSemester project using a web framework (Django, Rails, etc.)	7	6	1474	1616
57045	November 24, 2014	If you want to learn anything avoid this professor at all costs! He is completely disorganized, does not respond emails and does not show up for office hours.\nHe gets to class completely unprepared, then he spends around 10 minutes writing in his laptop and when he finally starts the class he shows the students he just came up with some assignment (that he wrote fairly bad in a Google Docs document). Then he spends 40 minutes trying to explain what he wants us to do, but nobody understands because he did not plan the assignment and frequently end up changing the assignment while he tries to explain. \nWhen it is finally time to start class for real he just starts talking about a topic, but often he gets confused and then decides to open the Wikipedia page of that topic to see if he can solve his confusion.\nHe nevers go deeper than the Wikipedia page of a given topic, then spends the final minutes of the class basically just listing books and websites we should read for next week. That's right BOOKS. He once suggested we read 3 300 pages long books for the next week. \nOf course nobody reads a single page of that books and the professor doesn't even remember he suggested us to read the books afterwards.\nAnyway it is a really depressing course. I registered thinking I would learn something about building scalable systems and Hadoop and stuff. The most advanced thing we learned was the first most basic example of doing a wordcount with Hadoop. That was basically the last assignment as well.\nAnd the final project? Well it is something you will spend dozens of hours but you will only use what you already knew before. Basically building some web app that is hosted on Amazon and uses DynamoDb.	Homeworks everyweek. The professor just comes up with them on the fly. The can be quite laborious since he doesn't think before asking, but you won't actually learn anything that matters.\nMy syggestion, learn to use Amazon services by yourself. You will do it anyway, in class or out of class.	14	0	10198	NA
62351	December 04, 2014	Despite what past reviews have said about Dawn, there's another perspective that's worth considering. Which is that she is an incompetent teacher w.r.t. teaching concepts that students are not already familiar with. For students with a strong mathematical background, this is no problem, because, as previous reviews have mentioned, this class covers more breadth than depth. But because of the increase in CS majors, there's a corresponding increase in students in the class who haven't had as rigorous a math background. For us, Dawn's explanations leave a lot (everything) to be desired. She frequently backtracks, corrects herself, and equivocates when answering questions, e.g. (in response to a student's question) "Well, you're right if we're on the same page," which is a non-answer, or "If you're confused just try the practice problems on this at home," which defeats the purpose of going to class. \nThe fact that the class seems to be split into students who have seen everything except graph theory before and students who have seen none of it means that, at least this semester, the latter were afraid to ask questions, which Dawn read as comfort with the material rather than confusion about the concepts (and/or the motivation for them). Disappointing, because I feel like the subject could be rewarding as taught by a teacher good at working with large audiences.\nAvoid Dawn's section of this class if you can.	2 midterms and a final. These bite if you're not careful.\n6 relatively easy problem sets.	5	3	11575	397
65630	December 08, 2014	The class was basically a walkthrough of AWS. By the end you will have seen a bunch of different AWS services and this is kind of interesting but it should be approached as a teach-yourself-as-you-go type of class.\nProfessor Sahu is an ineffective lecturer. He does provide a list of interesting papers to read, and recommends several other readings which are good, but I took away almost nothing from his lectures. I would recommend never showing up on time because nothing ever happens in the first 20 or so minutes. Additionally he missed several lectures, and had other guest lectures where clearly he had dropped it on the person at the last minute. I got the impression he had a lot of other things going on and this class was not his priority.	7 or 8 reading summaries, a 3-part project that extends over the course of the semester, a final project where you design and deploy your own app. You can kind of decide how far you want to take things so the project size can vary. The one good thing about how disorganized Professor Sahu is, is that the workload would probably be worse if he got his act together.	17	0	10198	NA
70144	December 15, 2014	Prof. Collins did a flipped classroom format this semester, and I learned more in this class than I've ever learned in any other upper level CS class. I enjoyed the class and I'd recommend it. I also wish that every CS professor would switch to flipped classroom.\nEvery week, he assigned about an hour and a half of video lectures from Coursera. These lectures are incredibly clear and the great thing about them being online is that you can watch them 80 times over until you understand the material. I usually space out during CS lectures, so this was invaluable for me. Then you attend a weekly (~10 people) discussion session where you do problems taken from previous exams. This was more like him handing out the questions, everyone staring blankly at them for a few minutes, and him explaining the answers. Repeat for an hour. These discussions were led by him and the TAs, and they usually felt awkward, but they were useful. They were supposed to be mandatory but he stopped taking UNIs after a few weeks, and I don't think they really ended up being mandatory. Toward the end of the semester, a lot of people stopped going. He posted textbook style notes about the lectures as well as classroom questions and solutions online after each week.\nAs someone whose programming skills were rusty and mediocre at best, I found the homework to be challenging but not at all impossible. I recommend using Python, and if you don't know it, it will be easy to learn. For the programming, you're literally just implementing the algorithms that you learned in class, so it's not so much thinking about how to solve the problems as it is deciding what data structures to use and being careful with your code. They were sometimes unusually time consuming though.\nThe TAs were usually pretty helping during office hours, and not as helpful on Piazza. Prof Collins did not hold office hours, and he explained that the flipped classroom would be the time for office hour questions.\nDefinitely come in with solid knowledge of probability. You'll need a little bit of calc and linear algebra toward the end. Which really means if (1) you can take a derivative, and (2) you know what a vector is and how to take a dot product, you'll be fine.	weekly online lectures (1-1.5 hours), weekly discussion section (1 hour)\n4 homeworks (35%) - each had a theory part and programming part, due separately\n1 midterm (25%), 1 cumulative final (40%)	7	0	10729	4903
73149	December 19, 2014	I don't have much to add to what previous reviewers have said, but I'm posting this mostly to say, yes, Rocco Servedio is still (Fall 2014) just as great as he's apparently always been. He's the first professor I've had who is an articulate, charismatic lecturer AND teaches a genuinely interesting, deep and challenging course AND is passionate about his subject. I've had two out of three before (e.g. Jae Lee, charismatic and passionate, or Yannakakis, challenging and passionate) but Professor Servedio is in a class of his own.\nMy only complaint is that this is the only class he teaches. I'd take anything taught by him.	5 homework assignments, all quite challenging -- START EARLY; no, really, start the day the assignment is sent out -- with averages around 50%. A final exam that covers all the material and isn't super-challenging (no trick questions), and a final paper (~10 pages) on some topic in computational learning.	4	1	1724	2287
73150	December 19, 2014	Professor Kim does a really good job with this class. If you have a decent CS background it shouldn't be too challenging -- you don't even have to go to class if you read the textbook, because she follows it very closely -- but it's pretty neat finding out what happens below the level of the level of C code. Professor Kim is a good lecturer and really good at explaining tricky concepts to the greener students.\nIf the class hadn't been at 10 AM (waaaay too early for this senior) I would've gone more often and likely gotten a lot out of it. When I did go, Professor Kim would mention neat factoids not covered on exams but still good to know, like (my favorite): Intel kept adding more stages to its pipeline in the '90s so it could ramp up its clock speed, and had to change its advertising strategy to deemphasize clock speed when it turned out fewer stages was optimal and clock speeds decelerated as a result.	6 reasonably easy homework assignments, lowest 1 dropped. One of them is coding in assembly.\nMidterm and final, equally weighted, both fairly easy. If you paid any attention in class you should do fine on these.	1	13	4221	4251
73351	December 19, 2014	Traub founded the CS department at Columbia and has contributed quite a bit to the field of numerical algorithms. However, he's a bit senile these days.\nThis course was pretty light for a 4000 level CS class. We literally did nothing the first third of the semester. Traub just rambled on about super computers and Moore's Law for 2 weeks. The rest of the semester was ok, covering complexity theory for numerical algorithms, multi-dimensional integration, solving PDEs and solving arbitrary systems of non-linear equations. I learned a bit, but could definitely have learned way more if Traub made the class harder.\nHe assigns 12 HWs - each is either one programming assignment (definitely under 200 lines in any language) or a single problem/proof. He often makes multiple HWs due at the same time which is annoying. Most of the assignments were towards the end of the semester. Some of the Extra Credits involved reading papers and articles and writing short essays on Discrete Fourier Transform or Moore's Law which is really stupid for a CS class.\nThe midterm and final were pretty easy. If you pay attention in class and read your notes, it shouldn't be too hard to get close to a 100. Traub doesn't use a text book or post notes online, so make sure you take diligent notes - it's the only thing you can study from for the tests! Pay close attention to pros/cons of algorithms and definitions. He likes asking at least one or two of those on the exams.\nHe gives out an A+ to anyone who gets over 100% out of 106% in the class overall. The 6% is from the Extra credit assignments that everyone does just like normal HW.\nAlso, a shout out to our awesome TA, Polina. She brought an actual broad sword to class. It was pretty cool.\nIf you're in the Foundations track, you have to take this class. It's a stark departure from other killer classes in the track like ML, Algorithms and Complexity. However, if you're looking for a light CS class and want to learn how to discretize math problems and easily solve what math majors spend entire semesters on, this is the class for you.	12 HWs 30%\n6 Extra Credit Assignments 6%\nMidterm 30%\nFinal 40%	2	0	1028	6815
73369	December 19, 2014	Paul Blaer is an excellent professor. His lectures are generally very clear and straightforward. Don't hesitate to ask questions if you don't understand something, since he is very good at answering questions both in-class and through emails. Occasionally he'll tell a few stories about his research. Overall, a cool and funny guy who definitely deserves the nugget.\nThe learning curve might be a bit steep in the beginning (it wasn't too bad for me, but some of my peers thought it was), but once you can get over that initial hump everything works itself out. Just be sure to start early on the programming assignments or you will have a terrible time (no joke). In contrast to the 1004 TAs, it seemed that the 3134 TAs were more lenient on the style of the code - if the code works, you get a 100% regardless of how ugly your code looks.\nTL;DR Excellent class. If you put in the work and pay attention in class, you will do well.\nReviewer's grade: A	Homework: 50%\nCombination of both written exercises from Weiss's Data Structures in Java and programming projects. DO NOT PROCRASTINATE! Due every 2-2.5 weeks. Total of about 5-6 homework assignments (there were six this semester, but he only took the top 5 scores - the last was somewhat optional)\nMidterm: 20%\nUnlike the multiple-choice exams in 1004, the exams either require you to write a short answer, pseudocode, a short Java method, or walk through an algorithm (e.g. Dijkstra's) step-by-step. If you pay attention in class and study your notes/book, there should be no surprises.\nFinal: 30%\nSimilar to midterm, except longer.	8	2	3409	4
73898	December 20, 2014	I imagine this class would be very difficult to succeed in with no programming background.  I took AP Computer Science in high school, so I expected Cannon's class to be cake.  However, it still did require a good deal of effort and I felt appropriately challenged throughout the semester.  As past reviewers have mentioned, the learning curve is pretty steep, with problem set 1, and programming projects 2-4 being among the most stressful.  Cannon is not kidding when he says that the programming projects will require 10+ hours of work -- they really do!  Your best bet would be to start early on the projects and attend TA office hours whenever you hit a major rut.  \nLectures are helpful, but only as a brief summary of what you need to know.  To rely on lectures alone would leave you poorly prepared for the assignments in this class, but I think that for any technical class this goes without saying.  The two recommended textbooks are both very good resources and will be relied on heavily throughout the course.  I found that the lectures and problem sets were representative of exam content.  The programming projects, however, were not.  \nThe class is well organized, with a very clear outline of covered topics and assigned grading groups to expedite grading.  There is an entire army of TAs who rotate on a schedule to grade your problem sets/programming projects and who send you detailed grade reports VIA lionmail (more on the TAs later...).\nOverall, I think the course does a good job at its ambitious task of introducing students to the fundamentals of computer science and programming in Java.  In addition, you will also be introduced to software like: Pico, CUnix, CyberDuck, Eclipse, Vagrant VirtualBox (maybe), and Gimp.  Professor Cannon has a good sense of humor and tries to make even the duller aspects of computer science interesting.  If you commit yourself to doing all the work, the takeaway is enormous.  My only major complaint:\nTHE TAs (well, some of them):\nThe TAs are a mixed lot.  Some are truly wonderful and are willing to help you with all your NullPointerExceptions, while others seem plain butthurt about losing points for inane reasons back when they were COMS W1004 students.  Between the 6 problem sets and 5 programming projects, you'll come into contact with at least 11 of the TAs.  \nAs I mentioned earlier, your grade reports are sent to your lionmail by your TA of the week.  Frequently, students will respond to the grade report emails to ask for suggestions or for a more detailed explanation of how to improve code.  As I have heard from other students, and as I have experienced myself, this sometimes results in the TAs correcting your grade to a lower score.  What I mean is this: when the TA sees your grade report again in your reply email, they might see that they made a mistake in grading you and then will lower your score by the appropriate amount.  \nUntil the TAs start grading things without error, or until some sort of "grade-is-set-after-sending-to-student" policy is put into place, you should not ask the TA who graded you for pointers.  I repeat DO NOT ASK THE TA WHO GRADED YOUR ASSIGNMENT ABOUT THE ASSIGNMENT--THEY MIGHT SPOT SOMETHING THEY DIDN'T TAKE OFF POINTS FOR AND THEN PROCEED TO TAKE OFF POINTS FOR IT.\nTo me this seems rather messed up.  Isn't the best person to learn from the professional who was paid to read through every line of your code?  As things currently are, it is impractical to talk to this person because they could easily spot a mistake in their grading and then make a last-minute change on CourseWorks.  In no other class I've ever taken in my academic career have assignment grades been so impermanent.  I overheard other students in the help room speak of "avoiding" the TA that graded their most recent assignment in fear that they could have points deducted.  I hate to think I could have done better in this class by NOT asking the person who graded my assignment for help...	6 problem sets (cover various aspects of computer science) - take about 2-4 hours \n5-6 programming projects - take 15+ hours (not including time spent on the optional extra credit portions) \nfamiliarizing yourself with Pico, CUnix, CyberDuck, Eclipse, Vagrant VirtualBox, and Gimp - time varies\n~50 vocab terms to memorize for midterm\n~100 vocab terms to memorize for final (lots of overlap with midterm terms)\nmidterm exam with vocab terms and multiple choice q's\nfinal exam with vocab terms and multiple choice q's	11	4	515	3807
76278	December 23, 2014	Very underwhelming class. I chose to take CS Theory with Aho due to his fame...in hindsight, this was a bad decision for me. I'm sure there are other people who feel differently, but this was my experience:\nLectures- Aho seems to think that the material is a lot easier than it actually is, often failing to adequately explain simpler concepts in favor of complex proofs, etc. that never appeared on homeworks or exams. This is probably due to the fact that he pretty much invented a lot of it; however, for most of us, this was our first experience with theoretical computer science.\nAho also just plainly isn't an engaging lecturer. Listening to him lecture is a lot like listening to your great-uncle drone on about the Great Buckwheat Shortage of '68 (if your great-uncle is a great storyteller, then ignore this). Occasionally, Aho will talk about having dinner with Stephen Wolfram or working with Kernighan and Ritchie at Bell Labs, which is always cool but doesn't necessarily make the class worth taking.\nHomeworks- hard, but doable. There were five problems per problem set. They were problems that you had to do out and solve, which turned out to be useless because:\nExams- both the midterm and final were 10 true/false questions (with brief explanation). I just don't understand how ten true/false questions can adequately assess your knowledge of CS Theory. For the midterm, I studied all the algorithms and the workings of automata, but I did poorly on the exam (far below average). Many of the T/F questions were tricky (average was a 45, std. dev. of 22).\nFor the final, I didn't bother to learn how to solve any problems or do any proofs, because I knew they weren't going to be on the exam. Didn't really know much about Turing Machines. Bad mindset, I know, but I just studied the general concepts and did much better than the class average (which was a 75).\nIn conclusion- my recommendation? Take this class with someone else. I was not impressed...I'm not trying to be disrespectful towards Aho, but he is a professor that should be known for his accomplishments, not his teaching ability. Apparently he got a Great Teacher Award from Columbia at some point, but I feel like that has a lot to do with his legacy. I dunno, someone might come along and say something different, but I found the class dull and uninspirational.	5 problem sets, drop 1: Hard but doable. Problems never showed up on exams.\nMidterm: 10 true/false questions. Mean of 45, std. dev. of 22. Tricky questions.\nFinal: 10 true/false questions. Mean of 75, std. dev. unknown. Much easier than midterm.\nAverage weighted overall score was 67.3. Average letter grade was a B+.	8	2	1891	234
76546	December 23, 2014	I fail to understand the negative reviews about Dr. Traub, although granted I'm reviewing a different class than the\nothers here. I suppose there must be a huge difference between them.\nI found the lectures to be quite engaging. He makes a strong effort to get students to participate in the class and\ngoes of on interesting tangents. I was rarely bored in class. Many people found the class to be quite easy, but others \nfound it to be difficult. I never saw it plotted, but I suspect there was a bimodal distribution on the exam curves. \nUnless you are comfortable with non-discrete mathematics, you are likely to struggle in this class. Despite my strong \nbackground, there were still a few rare lectures where I had to focus really hard to follow him. Even then, I don't think\nI really understood the material until doing the homeworks or studying for the exams. My suggested prerequisites:\n1. You need to have taken Calc I and at least remember how to differentiate and integrate.\n2. Know about differential equations. If you haven't taken it before, read the first two chapters of some introductory\nbook, do a few problems, and that should be good enough.\n3. You need some notion of set theory, functional analysis, or some high order math. No need to take those courses, \nbut if you can vaguely follow the wikipedia pages, you are good to go.\n4. You better have precalc down or you're going to have a bad time.\nDiscrete math, probability, and graph theory won't help you in this class.\nMost of the homeworks are quite easy, and can be done in 3hrs or less even if you aren't paying attention. No proof\nis more complicated than simple algebraic manipulation, and the programs you write are spelled out in the\nhandout (in pseudocode) and easy to reproduce in any reasonable language you chose. I was able to implement many of the\nalgorithms without understanding what I was doing at the time. Oh and don't even think about skipping lectures, much\nless not paying attention without recording it or something. The homeworks are almost impossible to do without learning\nfrom the lecture. But if you do, they turn out to be quite easy.\nThe exams basically test if you did the homework and paid attention in lecture. Some questions were easy enough to\ninsult your intelligence, and others were intentionally harder to prevent a large fraction of students from getting\n100%.\nIt's probably the easiest CS class I have taken at Columbia. However, most of the material was quite\nunfamiliar to me at first (seriously, who studies algorithms for differential equations?) but I felt like a grasped\nmost of it pretty well at the end. I wish the class had a bit more breadth in it, but I'm glad it wasn't like those\nother CS classes that dump so much material on you that you have to pick and choose what you are going to learn and\ncross your fingers that the other topics won't appear on the tests. I think Dr. Traub struck a perfect balance of theory\nand application in the class. Overall, I recommend this class. \nSeriously, if you have enough self-discipline, learn regular algorithms (4231) on coursera and save your money. The content is\nthe same. Take this class instead because you probably won't get an opportunity to see this material elsewhere and this\nclass is less stressful (yes, I've taken both).	Pretty typical: 40% final, 30% midterm, 30% hw, 6% extra credit hw. All are easy if you understand the material. Time commitment is certainly below average, but never skip lecture.	2	1	1028	NA
78545	April 21, 2015	This class was probably the most immediately applicable class I ever took, and it's easy, too.  Jae teaches you C, much like in the Advanced Programming Course, with an emphasis on the subtleties of memory allocation and pointers.  In the last 5-ish weeks you make the transition to C++ and focus on references and object-oriented structure.  During all of this, you're also learning about fundamental data structures like linked lists, trees, and graphs.  It's a crash course in everything you need to know to get your foot in the door for programming and helps a lot for physics, chemistry, economics, or whatever you're trying to do (if you're not a comp sci major).  Highly recommend it.	5 programming projects. The first is easy, second is hard, third easy, fourth hard, fifth kind of hard.  He may have added an exam since I took the course.	3	17	3509	6869
76938	December 24, 2014	Radev's a jovial guy and a decent teacher. However, I didn't learn much in this class since Radev focused a lot on useless topics. We literally spent 60% of the class studying logic of some sort. I would rather have learned more about search algorithms and machine learning. Radev coached the International Linguistics Olympiad team so he's a big fan of linguistics and it shows in his teaching. He spent a lot of time talking about gramamars and outlining NLP at a highly impractical level which I really hated. I think you can learn more about AI by taking a MOOC online from Coursera or Udacity.\nThere are 4 programming projects which are all very time consuming. He gives you 2 weeks for each and they take at least 6-8 hrs. There's no upper limit since you can improve the assignments as much as you want in an effort to get the very generous extra credit (up to 20 points on a 100 point assignment that counts for 20% of your grade). Only 2 of the projects had anything to do with AI. The first one was to be coded in LISP which has the dumbest syntax ever - it's like a poor man's Haskell with a lot of parenthesis.\nAll in all, can't recommend taking this class since it doesn't really cover much. Radev's a nice guy and probably the best teacher for AI you're going to find but the class itself is pointless.\nTests are ok. If you read all the slides you should be fine. If you understand all the algorithms and definitions, you'll do great - there aren't any questions that require a lot of thinking and being clever. He just test how well you know the material. Be warned that some of the slides kind of stink in which case you might want to refer the textbook. Don't waste time reading the entire textbook like he asks you to - it's just a scape goat for him to ask you anything he wants and for you to not complain that it wasn't covered.\nGrading was decently generous. He added points on the midterm and final since the average wasn't as high as he wanted.	4 projects - 20% each\n1 midterm - 15%\n1 final - 20%\nclass participation - 5% (totally arbitrary)	8	1	4226	26
76954	December 24, 2014	Stay away from Edwards, go with Aho. Edwards recommends Aho himself. Also, Aho's famous because he's the A in AWK and wrote the Dragon book. The only thing you'll miss in Aho's class is Edwards' sense of humor.\nEdwards is the snarkiest, most sarcastic, immature professor you will meet in the CS department. He tells some really great nerdy jokes and his Facebook wall is hilarious since he belittles all his students publicly on it, but I don't recommend taking his class. Don't ever email him with an excuse or stupid question since he will publicly shame you (name removed though) on Facebook.\nI didn't learn much in the course. The material was pretty straight forward, nothing really complicated like you would see in more theoretical CS classes. You sort of get a high level understanding of how a compiler works and that's about it. If you did most of the work for your project, you will learn more mostly by reading on your own to save your project and not because you learned anything from this class. \nHis exams are reasonably easy but the problem is everyone gets high scores. The median on the midterm was like a 94. If you screwed up even a little bit, you were done for. You don't have to know all the material in the slides - most of it is to build the compiler. He posts review slides the class before the exam. You just need to know the stuff on them. Check out the last semester slides on his website to peek ahead. Grading was harsh and he often cuts points for really dumb reasons. Make sure your HW is perfect if you want a good score.\nThe project is KILLER. In all likelihood, you will fail if you don't assemble the Avengers to be your team. Make sure you put together a strong team which has time to commit to this project. The project is structured such that one person (the most responsible or the least busy) always ends up doing over 50% of the work. We've looked at other groups and previous teams and this is the case through out. I think Edwards should take a look at this and somehow fix the project so that it's more fair.\nSome tips: Start early!!! Get the scanner and parser out of the way quickly. You can copy most of them from last year's groups and just modify them to your liking. He doesn't really teach you enough to write the compiler till 3/4ths of the way into the semester but don't wait for that since you'll get screwed. Semantic checking and code generation take a ton of time to complete. Start early and be sure to pester the TAs for help. Also, half of you team will be slackers and you will lose all faith in humanity. You just have to deal with it.\nHe doesn't make expectations on the project clear at all, so I'm going to break it down for you here. You need to turn in your proposal 2-3 weeks into class. Get started with the scanner and parser ASAP. Then turn in your language reference manual which says what your language will look like. Then code up the rest of your compiler and put together some tests. Our group ended up writing 70% of our language during reading week and finishing the slides for our final presentation and the project report during finals week. Needless to say, my other exams got screwed in the process.	3 HWs (10%  total)\n1 midterm (20%)\n1 final (30%)\n1 MASSIVE project that will KILL you (40%)	14	8	1637	3105
78250	January 04, 2015	Professor Blaer is a great instructor. He is clear, able to command a large lecture hall without much trouble, and able to explain concepts in a fairly simple manner. I honestly don't understand why some people chose not to attend this class because I found the book to be average at explaining concepts, while I found Professor Blaer to be exceptional at explaining the material. I rarely referred to the book after his lectures because I either understood the material from his lecture, or was able to understand is after digesting my notes. I think this is a sign of a great teacher. \nEven in a 200+ person class, Blaer was able to captivate the room with his large voice and abundant personality. In addition, he managed to encourage student participation, which kept the class interactive and engaging. In addition, occasionally, Professor Blaer would drive home the importance of a particular concept with a story about his research, which usually involved a hilarious and catastrophic ending involving multi-ton robots ramming into buildings or almost running people over. \nProfessor Blaer's exams are fairly straightforward and he essentially tells you about 50% of the exam, so these are fairly low stress endeavors. I found the final harder than the midterm, but still fairly straightforward. Not much to worry about here. \nMy only complaint with Professor Blaer is an organizational complaint. He would usually claim he would post the HW by a certain date and note post it till 3 or 4 days afterwards. He also granted classwide extensions in unecesarry situations which made the last HW assigned and due during reading week, which was poor planning on his part. Lastly, I feel that the first 15 minutes of class, where students as clarification questions on the HW, is a waste of time. If he wrote his questions in a less ambiguous manner, and used this class time to teach more material, that would be more efficient. Apart from those organization things, I can't complain about this professor. I would recommend his class to anyone in a heartbeat.	6 HW Assignments, top 5 counted. (50%)\nMidterm Exam (20%)\nFinal Exam (30%)	13	2	3409	4
78264	January 06, 2015	Be warned: Cannon does not hold your hand. He assumes that everyone in the class is wicked smaht and tailors his lectures, assignments, and exams accordingly.\nBut I strongly disagree with the reviewer below. I walked into Cannon's class with no programming background, but I found his class enjoyable and occasionally challenging. The only prerequisite you need to succeed in Cannon's class is good time management.\nStart on your assignments early, and ask questions on Piazza or during office hours when you get stuck. Read the assigned chapters BEFORE you go to lectures: Cannon does an excellent job clarifying tricky material in class.\nAim for comprehension - make a serious effort to understand difficult concepts as well as your mistakes on the assignments - and you will do very well in this class.\n--\nI do agree about what the other reviewer said about the TAs. The VAST majority of them, especially Zoe and Anusha, are just the sweetest people you'll meet on this planet, but yes, a few of them are unbelievably rude and disgustingly condescending.	6 Problem Sets, 5 Programming Projects, 1 Midterm, 1 Final	12	2	515	3807
78270	January 07, 2015	I agree mostly with the reviewer below me. Basically, Augustin is very enthusiastic about the material, teaches energetically, and is fairly approachable in person and happy to discuss research topics. The main issue is the lack of organization.\nHe seems to be a pretty busy researcher, as he had to cancel two classes and was often not reachable by email/Piazza. It seemed like he kept pushing back assignments/the exam. At one point he scheduled a make-up class on a day that we are not scheduled for, and we finally had our midterm the last day of class.\nAlso, the grading scheme was not very clear, and the exact percentages were definitely never announced until he sent us a note at the end of the semester. We got very little direction for the final project, which is basically a very condensed 2-page paper that is supposed to have interesting, novel, and relevant results in a research area. This was by far my lowest grade, but in the end he curved the class quite highly.\nI would say the workload was quite heavy, relative to how much we learned in lecture. By the way, there's no textbook - only recommended reading from A LOT of papers (some from sociology). Note that this class is very math/theory heavy, so you really need to be comfortable with probabilistic analysis and graph concepts. I came from this background and still sometimes felt challenged. There are also "data challenges," which basically are exploratory problems with real data. The stressful thing was that our programs were graded relatively to each other, so performance was normalized against the best performing program.\nFinally, the TAs were not that helpful, and we always got back grades very late. I felt like I was in constant anxiety the whole semester and too busy to really appreciate the material. I spent half of my vacation working on the research paper, which in the end, was graded  harshly. Augustin knows his stuff and is overall a nice guy, but the way he managed the class made it very stressful.	60% HW - including two large "data challenges" - heavy\n15% "Midterm" the last day of class - not difficult\n25% Final Project - difficult to do well	2	0	11579	6810
78271	January 07, 2015	Eleni is such a nice prof and great lecturer. She teaches very clearly and has very well written slides. She will often use the blackboard to go over a proof or concept more carefully. There were also two guest lectures from researchers at Google and Facebook on Ad bidding and MapReduce, which were nice treats and quite interesting. This material is not tested.\nThe only thing is that this class was the "Data Science" version of the normal Analysis of Algorithms class. This meant there were a lot of IDSE students, who didn't have much CS background. This really, really slowed down the pace of the class, with all the questions that were asked. If you come from a CS background, you would be better off taking the normal Algos class.\nHomework was a combination of theory and programming, however, which is nice. Any language is ok, although Python is preferred, especially for the linear programming. TAs took a long time to grade the homeworks and offered little feedback.\nExams were comprehensive, and essentially tested understanding of the main results that were showed as well as algorithm design/analysis. Averages were very low, but I think that's normal for any algos class. Final is easier as long as you understand NP-completeness and reductions.	40% Homework - theory and programming, manageable\n30% Midterm - difficult\n30% Final - not as difficult as the midterm, but still difficult	1	0	13070	6811
78578	May 01, 2015	TL;DR: Hsu is a solid professor if you're a math-y sort of person who wants derivation, proofs and (by CS standards) rigor. But if you want an easy ML survey course, go take AI, which is pretty much that.\nThe good:\nProfessor Hsu is by no means the most charismatic lecturer at Columbia, but he teaches a solid ML course. His lectures are thorough and rigorous -- he does not succumb to the temptation to use teaching a survey course as an excuse to skim easy topics at a high level -- and the online lecture notes are quite good. \nAlso, it was really nice that the two textbooks the course uses are both available online for free, legally, and that he provided us links to them, unlike so many professors who assign the $300 latest edition of [insert textbook] without giving students' finances a second thought.\nI was absolutely amazed how fast he responds to Piazza questions; he was single-handedly more responsive than a crew of about 8 TAs in another of my classes. The responses, always within a few hours, are sometimes not what the poster is hoping for (monosyllables aren't unusual: quite a few questions get a "no." and no more, particularly if they're stuff like extension requests), but the question is invariably answered in full. And that means stuff like "what should we review for the final?" gets answered with a 28-point bulleted list.\nThe bad:\nNo floating late days. There's a reason almost every CS class offers them, and it's both because they avoid all the whining on Piazza from people who put their work off to the last minute and because they provide a way to grant a bit of deadline flexibility without being unfair to anyone. Professor Hsu, if you read this, you really should consider having a few floating late days.\nThe first midterm was to a considerable degree just a speed test (caveat: I didn't feel that way; I mostly missed points for not being able to remember material. But everyone else I spoke to felt it was a speed test) and the curve was, by CS department standards, fairly tough.\nThe lecture hall (the huge one in NoCo) was dimly lit and has poor acoustics, which didn't make staying awake through lecture any easier given that Hsu isn't exactly lecturing at John McWhorter levels of energy most of the time.	The homeworks (5 of them, max 5 hours apiece) weren't particularly hard, and there was a fair bit of hand-holding on them. Personally, I liked the hand-holding because it reinforces the material in a way that blindly guessing your way through a multi-step problem does not, but mileage may vary. Each homework had a programming component, to be done in MATLAB, but Hsu provided code to handle a lot of the tedious/extraneous stuff (e.g. rendering two images side by side); I found the programming to be a really effective introduction to MATLAB, which I'd never used before, and liked being able to focus only on the ML parts of programming.\n2 in-class midterms.	27	45	13116	1921
78681	May 14, 2015	I feel kinda bad writing a harsh review because Papageorgiou is a really nice guy and cares a lot. He's the professor who looks over your shoulder while you're taking the midterm and tells you where you've made a mistake. (This boosted my score by at least 10 points.) He's the professor who absolutely glows when people do well on the homework. When he says his door is open, he _means_ it. Really means it.\nSo I'm not going to shit on him because I don't like him. Or because my grade will probably suck, because that's my fault for losing interest and not doing the work past March or so. I'm going to shit on him because despite what a wonderful person he is, his teaching has thoroughly earned it. Before I launch into that, though, here's my recommendation if you want to learn about quantum computing: read Scott Aaronson's book, "Quantum Computing Since Democritus". I bought it and chipped away at it half-heartedly for a few days in February and it taught me more and explained things better than Papageorgiou did in a whole semester.\nOk, now that we've got preliminaries out of the way:\nThe class really is as close to an out-and-out waste of time as I've had at Columbia. Each lecture starts with a 10-30 minute review of the previous lecture (generally closer to 10 minutes, but 30 happened a few times), so you're getting maybe 2/3 of a lecture. And then during that 2/3 of a lecture, the class covers very little material. For a sense of how little: it would be generous to say we covered 1.5 chapters of the textbook during the second half of the semester. And we only managed that by skipping all the tough material and glossing over the particulars of a lot of the easier material.\nJust to be clear, this isn't an "easy" class the way some with little content are. There's just a lot of time dedicated to intense study of trivia. A personal pet peeve: an inordinate amount of time was spent on how single qubit quantum gates can be decomposed into rotations. The textbook devotes maybe 10 lines to this, tucked away as a side note in the end-of-section exercises of an introductory chapter, but we dedicated many hours in class to example after example of this decomposition. One of the five questions on the final was decomposing a single qubit gate into rotations. And it came up during the final review. And on the quiz before the midterm. Papageorgiou kept coming back to it, guessing his way through the decomposition, explaining how he intuited every step, filling the whiteboard up top to bottom... all for a decomposition that can be solved quickly and directly by the algebraic substitution techniques you learned in middle school.\nWhile that's an extreme case, it's gives a sense of how the class worked and why we got almost nothing done. Papageorgiou can't seem to explain the "big picture" -- he drills down into particulars very quickly, and gets lost in them. There are professors who, at the beginning of a lecture, can tell you what you will learn today and what its place is in the course. Papageorgious can only do the former. As a result, at the end of the semester, the material you know is a fair  approximation to what you might know if you lifted 30 random paragraphs out of the first 4 chapters of the textbook and then studied each intensively for an hour. You'd know plenty of factoids but have little grasp of how they fit together. My working hypothesis: Papageorgiou never sat down and worked out a theory of what this class is supposed to be.\nAgain, an example, which I think is representative: a physics major in our class was confused by the proof that sets of quantum gates are universal. He objected that the proof didn't address the efficiency of constructing an arbitrary gate from the universal set. Flustered, Papageorgiou brushed this off, saying roughly "In quantum computing, we don't care about efficiency!" That might make sense if there weren't so much fuss about the efficiency of Shor's and Grover's algorithms. The "big picture" explanation that was never forthcoming: quantum computing, like the deterministic variety, happened as a progression from proofs of computability (in this case, universality of gates) to proofs of efficient algorithms for specific problems (e.g. Shor) to...\nAh. Another sore point. We never got the next step, "proofs that quantum computing algorithms form families," the quantum complexity classes. The book, which is 15 years old, barely knows quantum complexity classes exist. But they do, and what I've read about them on my own (e.g. Aaronson's book, Wikipedia) is really really cool, and it was very disappointing and frustrating to go through a whole semester and not (as far as I can recall) hear BQP mentioned even once.\nOk, I'm going to stop now because you've probably gotten the point. :P	5 homeworks, not very hard but sometimes tedious. Make sure you know your linear algebra. Each has a programming component to be done in MATLAB. Again, not hard but usually tedious.\nTwo quizzes (one each before the midterm and final) that give you bonus points towards the exam grades. Midterm and final that are open everything -- no joke, you can use your iPhone if you want -- and are really just regurgitation for the most part. Like the gate decomposition thing, or "derive an algorithm to do X," where X is almost verbatim the description of some algorithm we covered in lecture and because the exam is open book you can just copy it out of the book. It is advisable to go to the midterm and final review sessions because *hint hint* the actual questions MIGHT be used as review examples, or simply given away outright by Papageorgiou. (I learned this the hard way.)	0	12	2762	5922
78296	January 12, 2015	I took this AI class with Ansaf. I like her teaching style and her class. She focus on the searching algorithm and machine learning for most time which are quite interesting to me. It is not easy to cover all the machine learning algorithms in less than half semester so that she taught a little bit fast in the machine learning part. The after class studying will be necessary if you want to grasp these algorithms. I also like her homework. She have assigned four homework, all programming in python. Most of them are very practical problem(for example to program a AI for 2048 game) and some of them are very challenging. \nIt is hard to say the importance of this class to me. Honestly I expect more in this class because firstly I have taken machine learning before and I want to have a systemic understanding about how to build up an AI. But after taken this class, what I have learn and what I can understanding is not clear enough. I cannot say that I have a clearly and systemic understanding about how to build up a practical AI. Maybe it is because the artificial intelligence is a quite wild field that cannot be cover by only one class in one semester. If I can arrange the topics in this class, I will set this class as a higher level class and the machine learning class should be required before this class. Then the professor may discuss more in AI rather than take most of time to discuss machine learning and algorithm. \nAll in all, Ansaf is a quite instructive teacher. For those students who haven't taken machine learning before, this class is very useful and you can learn a lot in this class.\n(written by Z.H.)	4 homework+1quizz+1midterm+1final\nThe overall aggregation is as follows: \n45% *HW  +   5% * participation_class +  50% * MAX(midterm,final)	2	0	13076	26
78321	January 16, 2015	Prof Ansaf is very friendly and the class was interactive. There was a good balance of traditional AI topics such as agents, search algorithms, CSPs and logic with a focus on machine learning in the second half of the semester. The prof mainly used her slides but there were some chalk board sessions as well. The slides were very well prepared and Prof Ansaf takes you through the math in a very simplified manner. The slides are sufficient and the text book can be used for any reference reading.\nThere were four assignments and all of them had Python programming. Basic programming knowledge is sufficient for this class as Python is easy to pick up. There was a Python recitation taken by one of the TAs in the beginning of the semester and it was very helpful to get started. The assignments were interesting (application of AI to games like 2048, mazes etc) but time consuming - as you can keep trying to improve the performance of your program. Definitely the best way to understand the intricacies of the algorithm though and the prof was kind enough to give additional time on the assignments when required. There were a lot of opportunities to score extra credit if you needed to catch up on a bad performance. We had one quiz and a lot of suggested reading material if you were interested. The course covered a lot of topics - AI and ML related. But the midterm and final were both open notes so you could focus on application rather than memorizing formulae or algorithms. The exams definitely made you think but as long as you understood the content it, the problems were solvable. The final grading formula was very generous and took the best performances into account for most students.\nThe TAs were helpful during office hours and on Piazza. Especially close to exam time, the response time of the prof on Piazza was great which helped a lot.\nThe professor balanced heavy course material with lighter "historical moments of the day" and current events in AI which made the two and a half hour class easier to get through. We also had a guest lecturer in the last class. All in all the professor really cared and took great initiative to give us more information than strictly the course content and made the classes more fun.	Weekly lecture 2.5 hours + 4 Python programming assignments (45%) + Class participation (5%) + Midterm/Final Exam (50%) + lot of opportunities to score extra credit.	7	1	13076	26
78367	January 22, 2015	This is for the flipped classroom in fall 2014. We were assigned small (10-15 person) sections, and each week had about 60-90 minutes of coursera videos to watch before hand. At the session he would spend 20 minutes recapping the key points from the videos, then maybe 30 minutes we'd be doing questions (very similar to the exam questions), and discussing the answers with him. Lots of opportunities to ask questions and talk with him, especially if you get a less crowded session. (Note that his original plan was that he'd only do 2 of every 3 weeks for each section, and a TA would do the other. However it seemed like he abandoned this after a while, and combined a few sessions so he could do all of them himself.)\nI really enjoyed the format. Keeping up with the lectures before your session was a bit difficult when you have a million other things to do, but pretty important. I fell behind about 3/4ths through when we switched away from machine translation, and it took me a while to catch up again. It was also a little disappointing that you almost never saw who else was in the class, since a bit of discussion about the homework with other students was quite valuable. \nThere is no textbook, but he has a set of classnotes online that's basically an alpha version of a textbook, along with the slides he used in the coursera video.\nThe biggest issue I had with the class was general non-responsiveness on Piazza. There were a LOT of questions about the assignments, and the TAs just generally didn't respond. The TA led discussion sections were also basically useless for me, although the TAs also seemed nice and were trying hard, they just weren't up to Collins' level.	5 homeworks. Each was split into an analytical and a coding section. The analytical weren't too bad, but the coding was quite time consuming. You had to implement certain algorithms to produce specific output. There were generally hundreds of tiny bugs you could make that would drive your performance on the task from like 91% to 3%, and it often felt like a bug hunting exercise. Starting early enough that you have an intelligent design for your system is highly recommended, since you'll generally iterate on part1 in part2. Each one was probably 10-20 hours of coding.\nmidterm + final, both of which were quite doable. However, the types of questions he asks are mostly of the "do something with a toy grammar" type that you're asked in the flipped classrooms. Which means that often understanding the bigger picture is less important that seeing the tricks in the toy examples. Still, with the flipped classroom exercises + cheat sheet, you should do ok on the exams.	3	0	10729	4903
78368	January 22, 2015	Professor Kim was a great, engaging lecturer. She was clearly working hard to make sure everyone in the class understood the material, and showed a level of commitment to teaching that's unusual at Columbia.   She offered very clear and thorough explanations of topics. She took many questions during lecture, and answered them quite well. She was incredibly patient, including spending lots of time in office hours answering questions.\nI didn't work with the TAs much, but they seemed to all be pretty decent, and were generally very responsive on piazza.\nI felt like this class was the easiest in the CS core, along with CS Theory. However it was useful and I found it kind of fun. I would have actually appreciated slightly more workload, and slightly harder exams, since a tiny mistake could have cost you a lot given the structure.\nOverall I highly recommend Kim.	6 homeworks. Most of them were quite easy, one took under 30 minutes.\n2 "midterms" this semester - I think due to her pregnancy she didn't have a final, but had a " second midterm" on the last day of classes. Both were easy, which very averages of like 90%+.	2	32	4221	4251
78371	January 22, 2015	I'm much more lukewarm on Servedio than most folks here. I'm an ML type undergrad, not an algos type, so without taking analysis of algorithms or similar I was maybe underprepared for this class. A bit of probability is pretty key for the PAC model in the middle half of the class. \nThe material was kind of interesting, but it's very much intellectual exercises with very little real world implications (which isn't exactly a hidden fact). The book for most of the semester (Kearns and Vazirani) is ok, at least it's nice and concise. \nIn lectures Servedio was generally clear, but I found that his answers to questions were only so-so. I think part of it is that the class was huge this semester, and it seemed like he wasn't scaling well from 30 students to 100, but maybe that will improve.\nThe problem sets kicked my ass, I rarely got more than a few points above the average, which was typically 20-30 out of 50 points. They require a huge amount of thought, and almost all required some novel proof technique. Some questions were from research papers from only 5 or 10 years ago, many were papers Servedio wrote 10-20 years ago.  In retrospect I think those who did well were focusing much more on these problem sets earlier, and spending a lot of time in office hours. \nThe "final exam" wasn't bad though, don't worry about it.	5 absolutely brutal problem sets.	6	1	1724	2287
78662	May 12, 2015	Definitely take this class. Blaer is incredible and hilarious. You don't really need to go to the lectures to understand this, especially because the book does a great job of explaining it but its good to go just to hear Blaer talk. The class is not too difficult and is a great introduction to Java, very interesting and I learned a lot. If you are on the fence about it you should for sure take the class.\nThe homework assignments can be challenging sometimes but he gives you a ton of time to do them and there are so many TA's for this class that it makes everything very doable.	1 midterm 1 final ~9 homework assignments	1	0	3409	3807
78389	January 30, 2015	This is one of my favorite classes at Columbia. This is one of the very few classes where both theory and application of computer science comes together. And the manner in which Professor Edwards teaches this class is incredible. Professor Edwards is very organized and well prepared for lectures. His slides are very comprehensive and lectures are very clear. On the side note, he also brings in "Stephen Colbert" style humors in class which can be quite entertaining at times.\nThe project is the centerpiece of this class. It allows you to build a programming language on your own from scratch. This can be a great experience because you are dissecting every component of the building blocks of a modern programming language. \nMuch has been written about OCaml which is the language used in the project. But half way through the semester, everyone realizes that due to its very important features like pattern matching and strict type referencing, OCaml is simply the best language for building a programming language in a semester long period. There is also a huge inventory of past projects done in OCaml in the class website that can be very useful reference. Some people who had taken this class with Professors other than Edwards often ran into challenges due to lack of resources and reference materials. \nI highly recommend taking this course with Professor Edwards. Make sure to find  good teammates and make use of past projects as a guide. You will end up with a great project and your own programming language. The things that are learned in this class such as project management, teamwork, testing, leadership have applications for rest of the CS career.	3 Homework : With the exception of 1st homework (first opportunity of use OCaml), other homework assignments are fairly simple.\n1 Midterm : Fairly straight forward, mostly first half of Theory of Computation \nFinal: Can be slightly tricker than the midterm.	10	0	1637	3105
78390	January 30, 2015	In short, Rocco is the best professor I had in Columbia so far.  He is kind, clear, and intelligent. He made a difficult subject accessible and interesting.\nThat said, if you hate proofs and theory, maybe this class is not for you, but this is not his fault. He already tried his best to focus on the concept rather than the details.\nI donâ€™t think that the class has no applications. Itâ€™s basically an algorithm class, but on algorithms that can learn. If you think algorithms have no real world application, then I am not sure what to say.  Itâ€™s cool to see that a seemingly simple-minded algorithm can learn complex concepts well, on par with humans (maybe it is how human brains work).\nThe homework takes a long time, so start early so that you have enough time to get help. He wonâ€™t tell you the solution directly, but at least can tell you if you are on the right track. A lot of times, people are just completely off the track because they have misconceptions. For me, I think part of the homework difficulty comes from my unfamiliarity with the area, so the 3rd and 4th homeworks turned out more difficult for me, but by the end of the last (5th) homework, I had already seen enough proof strategies that they became a bit like old tricks  (Iâ€™m not saying they are easy, but just more familiar to me).\nAs a previous post said, the final project turned out to be an educational experience for me. But I guess it depends on what paper you choose. I chose something closely related to what we learned and also not too ambitious, and it turned out to be a good choice.  I am glad that I was able to understand at least some parts of an original research paper in the field, which depends your understanding of class material but also adds onto that.\nAbout latex, I have mixed feelings. Itâ€™s really a pain to type in latex. I feel I spent close to half of my homework time on typing up in latex. But I understand that it makes things easier for TAs, who already have a lot of work. Also, some other classes (e.g ML) may require latex.\nIn summary, I learned a lot without too much stress. (the homeworks can be stressful/frustrating , but overall, the amount learned/stress ratio is much higher than an average CS class at Columbia).	5 homeworks and a final project (read a paper and explain it)	6	3	1724	2287
78401	February 10, 2015	Eleni is such a nice prof and great lecturer. She teaches very clearly and has very well written slides. She will often use the blackboard to go over a proof or concept more carefully. There were also two guest lectures from researchers at Google and Facebook on Ad bidding and MapReduce, which were nice treats and quite interesting. This material is not tested.\nThe only thing is that this class was the "Data Science" version of the normal Analysis of Algorithms class. This meant there were a lot of IDSE students, who didn't have much CS background. This really, really slowed down the pace of the class, with all the questions that were asked. If you come from a CS background, you would be better off taking the normal Algos class.\nHomework was a combination of theory and programming, however, which is nice. Any language is ok, although Python is preferred, especially for the linear programming. TAs took a long time to grade the homeworks and offered little feedback.\nExams were comprehensive, and essentially tested understanding of the main results that were showed as well as algorithm design/analysis. Averages were very low, but I think that's normal for any algos class. Final is easier as long as you understand NP-completeness and reductions.	40% Homework - theory and programming, manageable\n30% Midterm - difficult\n30% Final - not as difficult as the midterm, but still difficult	5	1	13070	6811
78418	February 22, 2015	Very relevant and cool class with really interesting material. Professor Geambasu is one of the top scientists in her field and recently received a Brilliant Ten award. \nHowever because of her busy schedule, do not expect much interaction with her and the projects and course material will be outsourced from MIT. Projects will be buggy, slides might be jumbled. \nThere is also a 15% participation grade which is basically a random number and she does not hesitate to hand out 0%, 25%, etc..	Medium/high workload - all projects were in c++	0	0	11580	6844
78469	March 25, 2015	I'm writing this before the first midterm so I won't be biased by how well I do on it (i.e. I think I'll do well, and I don't want that coloring my opinion of a fairly bad class), but if last year's midterm, which we were given as study materials, is anything to go on it'll be comically awful. A good chunk of that midterm dealt with advertising engines' business decisions -- roughly, if they conduct their auction at time X, how does this impact their revenue? -- which has literally nothing to do with networks. In the case of another question, the correct answer was "sledding in Morningside Heights." (Don't ask.) \nI think the core of this review can be summed up in a single sentence: "The lecture slides are in Comic Sans." That fact captures the combination of a) trying a bit too hard to be cool (the professor has a pony tail) and b) totally failing to adhere to normal standards of professionalism.\nAnyway, on to the review.\nAs others have noted, Chaintreau is an entertaining lecturer but very poorly organized. His assignments are poorly written to the point where virtually every question contains important ambiguities, and important terms and concepts are poorly specified, e.g. we are asked to find property X of a system, but there are multiple conflicting definitions of X and despite repeatedly being asked, the TAs and professor staunchly refuse to pick a particular one. \nThe first programming project (a chat room) had virtually no networking component because you could just use Java or Python's network API; the whole thing amounted to basically just writing lots of switch statements to handle the umpteen-gazillion different chat room commands. \nThe TAs try to be helpful, but their mastery of English is below what's needed to communicate effectively. (NB: This isn't true of just one or two. It's almost all of them. And students from past semesters tell me that's how it was then, too.) Whoever writes the problem sets has the same problem, which is probably a source of some of the ambiguity. That, or sloppiness. Often there are just words missing in the middle of a sentence. They also don't respond usefully to Piazza posts; a non-trivial share of posts get responses like "well, I think X", when what we want is not "what do you think?" but "what is the official expectation for students in this class?"\nAs best I can tell, grading is arbitrary -- I'm doing well, so that's not sour grapes talking -- and the solutions are poorly written enough (and dependent enough on particular interpretations of ambiguities in the questions) that it's basically impossible to argue your grade.\nOh, and did I mention that the textbook sucks? It feels like one of those high school chem textbooks, in that it both doubles nicely as a doorstop and is jam-packed with unnecessary verbosity and cute little asides about real-world applications. There are glossy graphs, and maybe an equation every 30 or so pages. Not coincidentally, the book seems like it's written for a high school student, or maybe a smart middle school student. It is decidedly not written with the time constraints and intellect of a college student in mind, particularly not those who have spent enough time immersing themselves in CS to be taking a 4000-level class. Protocols are never proved correct, elementary concepts like a hash function are explained at length, and so on.\nWhat this class needs is a big dose of rigor, not to mention a more disciplined professor. So, please, Columbia, can you get Jae Lee to teach this class, too? Give him a time-turning or something. I'm sure he'll do it.	Not much. The programming assignments are big, but there are only two of them, and the homeworks don't take long.	9	7	11579	4902
78497	\\\n          April 12, 2015\\	\\\n      This review is for the course project COMS E6901.\\\n\\\nApoorv Agarwal is the most unprofessional person to work with. He has absolutely no proper schedules when it comes to working with project students, and is very demanding and inconsiderate towards other priorities such as coursework.\\\n\\\nHis goals kept shifting during the project and was different from what he discussed at the start. He is very disrespectful and rude. He is quick to blame without proof and sends impolite emails without giving you a chance to get back and reply. The meetings that are scheduled, usually left me waiting. He would change deadlines as per convenience and would expect you to work through vacations, and entire nights. In spite of communicating results, etc through emails and documentations, he ignores those and continues to ask for the same multiple times, which is annoying for the other person.\\\n\\\nHe keeps shooting work giving short notices and when asked for some time due to other coursework conflict, he would intimidate saying grades would be affected. He asked for writeup, other questions about the work I did after the semester ended. These are not clarifications  but those which had been explained during the semester. Though my deliverables were timely and documentation to support it, he still had many questions, often asked with sarcasm and insults.\\\n\\\nHe gets a lot of his work done from students for his PhD. Being a student himself, he treats students working with him with such disrespect. His advisor Owen Rambow was not involved at all in the project, but ended up coming on the research fair as if it is a project with him or at least you would expect he would be involved since he showed up and spoke with you, but that was not the case in reality.\\\n\\\nIt is a horrible idea to do a project with him in my opinion, it is a waste of your tuition money! It is like paying to do work rather than getting paid! I would strongly suggest taking up coursework rather than a project with Apoorv Agarwal. My purpose was to have a good research and learning experience, but was completely the opposite! \\\n\\	\\\n        More than 20 hours a week for 3 credits.\\	6	2	12599	6857
78676	May 13, 2015	If you have previous experience in coding, you most likely will not have trouble with this class. If this is your very first exposure to computer science, be forewarned that this is a challenging class. It will be much more rigorous than most likely any other introductory course in other fields. That being said, if you put in the effort, this class is very doable. You will be spending hours studying, as it requires learning both a language (java) and a general science (CS theory). If you do you not intend to be a computer science major, I would suggest taking a different course that involves coding (like a applications course that teaches Python with another subject, or a coding course for nonmajors). If you do take this course, be prepared to do a lot of googling & research on your own to figure out how Java works. It would really help you to do some basic tutorials to get the gist of it before you head into the first lecture. \nBlaer is an excellent professor, and his explanatory style is very clear and concise. He gets very distracted in his lectures, and it's pretty hilarious and adorable--which always made them a pleasure to attend. His expectations for tests and homeworks are always very clear. He does, however, have a tendency to underemphasize how difficult/important topics will be. For example, when listing topics to go over on test, if he mentions something in passing, you should know it pretty much backwards and forwards. Another example, the second to last homework we used a hashmaps, FileReaders, and PrinterWriters--all of which he probably talked about for like two seconds and never explained. \nAdditionally, the TAs are beautiful, wonderful human beings. James Lin the head TA/(and I quote) "aspiring Little League Coach" is the best thing to happen to 1004 probably ever, and he was very encouraging and generally super kind in all his emails and communications. They are all very helpful, just be sure to find one who you get along with and remember their office hours (there are like a 11 TAs, and like always office hours). Piazza is also a great resource, with under 15 min response times. Usually all of my questions were already answered there before I even needed to ask anyone.	10 total homeworks, half programming and half written problems (basically one a week). Both are challenging, although the relatively diffictulty from one assignment to the next varies greatly. Allow yourself the time to fully explore them. Recitations are largely unnecessary/extra. One midterm, one final.	1	0	3409	3807
78599	May 03, 2015	Prof. Malkin is the best. Not only does she understand and explain the material very thoroughly, she also makes a genuine effort to learn her students' names and engage the class. She has this one-liner which she uses when nobody raises their hand: \n"You either do not understand and should ask a question, or you understand and can give me the answer." - Prof Malkin's honesty/authenticity shows through in one-liners like this one. \nLecturing style - probably one of the best lecturers in the department. She does this thing where she gives a hand-waving, intuitive explanation of something, and then shows it formally. \nShe is extremely approachable and very open about how grading is done in the class. Prof. Malkin and her TAs put in an try very hard to make the course fair, always retroactively applying a policy change to all students if one student brings it up, and I think that this attitude starts at the top with Prof. Malkin setting the example.	A written homework every week. Some of them are easier than others - the hardest ones might take you a few hours to do well.	26	27	1621	234
78600	May 03, 2015	Prof Rubenstein is clearly very smart - it shows because he makes really good slides that explain things well. But every lecture, he gets onto the stage and fumbles for 75 minutes. It is frustrating for students who do not come in with a lot of knowledge about computer organization, because he appears unprepared. \nThere were quite a few times where I skipped the lecture because it was more helpful to spend the time studying the slides on my own. Ended up doing just fine on the homework and exams.\nIt's not as bad of a class as everyone says - just that if you come in w/ less knowledge, you have to put in the work to make up for that gap (and Rubenstein isn't helpful for that). Talking to the TAs makes a big difference because many are knowledgeable and good at explaining stuff. But again, you need to do that on your own time if there's something you don't know, so depending on whether you think you will do that, maybe reconsider taking it with Rubenstein.	~1 written homework weekly. Depending on how much prior knowledge you have, it can take anywhere from an hour to several to complete.	5	8	2427	4251
78610	May 04, 2015	Professor Bauer was a really nice guy and very approachable and helpful one-on-one but he failed to command the attention of the class. It was a bit hard to understand/hear him when he taught and his class was severely boring. That being said, if you take the time to attend his office hours he is very patient and will sit with you and explain things you don't understand. The homeworks he assigned were much harder than he realized and took several hours to complete- often dealing with little Java technicalities such as generics which were usually much more involved than Bauer taught in class. Additionally, the textbook for this class absolutely sucks but for the most part Bauer's slides were helpful. Overall, for a class that is so important for computer science majors, this class did not meet my expectations. I do think Bauer learned a lot from teaching this for the first time and this class will only improve.	6 problem sets (each composed of a theory and programming section)- lowest one dropped \n1 midterm (20%), final(30%)	16	3	11572	4
78639	May 08, 2015	The only reason not to take this class with Daniel Hsu is if you already have a full workload for the semester. It's great but pretty difficult.\nThe overall curriculum of the course is heavily mathematical. There is relatively little concern with "real-world" issues like cleaning data or choosing good features. There were some students who sounded like they wanted a course that would teach them how to apply canned algorithms from sklearn or something. It's more about how to implement those algorithms.\nThe first half covered classification problems of various kinds, followed by some learning theory. There's some statistics which comes from a really interesting and unique perspective. It's the first time I've felt statistics wasn't boring. The second half covered unsupervised learning (clustering, etc.) and Markov models. Sprinkled throughout are theoretical discussions of optimization techniques used to fit various models. Finally, the last few lectures were just topics that the professor thought would be enriching, most notably a lecture on how rating prediction systems like Netflix actually work.\nThe class structure is pretty normal -- readings (that you can get by without doing), lectures, and problem sets, plus two exams.\nThe course had a Piazza board, which the professor was always watching. He would give clear, excellent answers, even at weird hours in the middle of the night. He also remained available the night before a problem set. I thought it was nice that he didn't pretend we had good time management skills, although I agree floating late days would have been good, or at least penalties for late assignments rather than refusing to accept them outright.\nThe lecture slides are all posted online and are detailed and excellent. I didn't need to take any notes. But this doesn't mean it's not worth going to lectures! Prof. Hsu is a good lecturer, although sort of quiet. His explanations perfectly complemented the slides. When students asked questions, he listened carefully and gave very clear and cogent answers.\nWe covered a ton of ground, at a decent level of mathematical sophistication. I think perhaps the professor overestimated our mathematical competence. However, those high expectations along with his good teaching skills made this a great class. Hopefully Columbia keeps him around.	Problem sets were difficult but not insanely so. They were usually a mixture of "easy" problems to test basic understanding, programming problems, and one or two proofs. There were never any problems that were unsolvable without knowing some kind of trick or having a deep insight -- hard work was always enough to get them.\nThe programming problems were in MATLAB, and usually consisted of training a classifier on a dataset that had already been "cleaned" into a nice format. Getting the code to work correctly was usually easy, but the datasets were large enough that efficiency was actually a serious issue, requiring lots of MATLAB tricks.\nExams were another story. There were two non-cumulative exams, both in-class. There was not enough time for the first exam, and the questions for both were quite difficult and often required a lot of creativity under time pressure. It was not enough to just recall the lecture material -- you had to really understand everything on a gut level. The median was very low for both exams.	5	16	13116	1921
78646	May 09, 2015	I've reviewed two previous classes with Yannakakis (December 17, 2013 and May 02, 2014 reviews) both of which I liked. Approximation Algorithms was more of the same -- he may not be super charismatic or exciting, but he's a thorough, and incredibly knowledgeable professor (the course covers quite a range of topics, but he's up to date on the latest in all of them; it's not unusual for him to say, "we'll be discussing this version of the algorithm, but 6 months ago researchers X and Y came up with a much better version..."). He posts great lecture notes, gives interesting homework and has TAs who grade fairly. The homework in particular deserves a shout-out, as it felt much more like puzzle-solving than the drudgery most CS classes force you through. The final research project was a lot of fun, as someone who hadn't done one before.\nAlso, I found the CS Theory -> Computational Complexity -> Approximation Algorithms sequence with Yannakakis worked very nicely (the assumed background knowledge matches pretty closely to what he's taught in his previous courses), and I'm guessing if I'd taken Algorithms I with him, too, it would've been even better.	Final 15 page research project (start EARLY), and a 4 homeworks that will take a full evening at a minimum. No midterm or final exam.	6	0	2941	6886
78650	May 10, 2015	Oh man. What a terrible, terrible, terrible class. What a truly frustrating experience. I'm aware that Rubenstein is not teaching fundamentals next semester, but I don't care, because the world needs to know how fucking terrible he was for fundamentals, so that hopefully nobody will have to go through it if he ever teaches it again.\nTHE LECTURES:\nProf. Rubenstein reads from his slides. Word-for-word. The lectures are aggressively boring, to the point where Rubenstein himself would get boredâ€“â€“at which point he would tell a bizarre and completely unrelated story ("So this one time I had a 6AM flight, and I was staying at the airport, so I told my friend I could wake up at 5:45 and make the flight, and then I actually did it, just to see if I could, but I forgot that security still takes like two hours even if you're sleeping in the airport, so I ended up missing that flight. Anyway")â€“â€“and then get back to some of the most amazingly uninspiring lecturing I have ever witnessed. I can't believe I consistently went to this class. It's a waste of time.\nTHE HOMEWORKS:\nAlways tedious, and the questions are often extremely unclear. Unfortunately, the homeworks are only tangentially related to the slides/the classes, so 80 percent of the work you'll be doing on these homeworks is figuring out what he actually wants you to do. There were 8 graded homeworks this semesterâ€“â€“there were supposed to be 9, but somehow, even though we do literally nothing in class, Rubenstein fell behind, so that there was a 9th ungraded one (but it was still fair game for the final!)\nTHE TESTS:\nAs annoying as the homeworks are, the tests are a worse version of the homeworks. Completely unrelated to the tasks you do for the HW and the slides, these tests are difficult, confusing, and don't really reflect your understanding of the material. Every question introduces a new concept, so that you will be scrambling to read through his (often error-riddled) questions until you figure out the game for that particular question.\nTHE MAN HIMSELF:\nThe thing is that I actually kind of like Rubensteinâ€“â€“he can be funny and he's kind of a goofball. But he is just a truly bad teacher.\nPlease, for your own sake, don't take fundamentals with him.	Average for a second-year CS class. Whatever work you end up doing will be tedious and deeply frustrating.	21	27	2427	4251
81873	January 28, 2020	Computing in Context, in case you are unfamiliar, is a class lectured primarily by Adam Cannon but has different sections, much like UWriting. There are three undergrad contexts available: Humanities, Finance, and Biology. I was under the naive and optimistic that, as a biochemistry major, the biology section was going to teach me useful skills and techniques in Python that I could use to both complete the class and do better as a scientist.\nUnfortunately, Pe'er is the lecturer for the biology context. I should have seen the first red flag for what it was: when Cannon informed us that there was only one recitation section (per week) and one TA for the bio section, while humanities and finance have at least 15 of each, due to the lack of people who choose to take the bio context. I thought it was because not many people in the class are interested in bio, but of course that doesn't make much sense considering CS is a STEM field. Instead, it turned out to be because Pe'er is undoubtedly, unequivocally, the worst lecturer I have ever had the displeasure of witnessing.\nOf the 6 or 7 lectures he gave throughout the semester, not one was well-thought out or lectured intuitively. He seemed to not know where his own PowerPoint was going, and was entirely too often surprised by what the next slide showed. He has a heavy accent, which in itself would not be a problem if he didn't have a voice that suggests he smokes two packs of cigarettes a day. He truly sounds like his voice is actually two voices, screeching alongside one another a semitone apart. He sounds like he has strep throat, the kind where mucus gathers in the back of your throat, but he refuses to clear his throat. The cherry on top is that he can barely string together two words before adding an obnoxious EHM,,, URHM,,, every 3 or 4 seconds. All of this combined made him the most unbearable person in the world to listen to.\nLastly, the material he lectured in class rarely if ever had anything to do with the three projects he assigned in the class. Each project was due two weeks after being assigned, meaning that we had two of Pe'er's lectures and two TA recitations before the project was due. I ended up going only to the recitations, because in lecture Pe'er would go on and on about techniques that were fascinating IF one were interested in his research. We spent maybe 4 lectures on DataFrames and Panda, and neither of those were used in the third project, which I ended up turning in a week after the deadline because I didn't know that we weren't supposed to use those techniques. Apparently, the TA used dictionaries instead, and never made that explicitly clear (he said it in what sounded like an off-handed comment during office hours), but those of us who started from scratch and followed his method finished the project successfully. Pe'er spent all of lecture talking about DNA sequencing and weird, opaque Python commands and it was the most boring class I ever had to sit through.\nAnother thing: the projects were supposed to be relatively easy except for one; for example the Humanities context had the "hard" project on their second one, and the Finance on their third. For Bio, Pe'er made the first almost outrageously difficult, and the other two got exponentially harder.	6 projects, 3 easy ones before the contexts start midway through the semester, then 3 context-specific projects of which one is "supposed" to be harder than the rest. for the bio section, the 3 last projects are much harder than anything seen in the rest of the class.	1	2	4057	7068
78711	May 16, 2015	If you're in the Foundations track, you should definitely take this class. The course covers approximation algorithms often touching upon some state of the art stuff in the field. It's quite an intellectually challenging with plenty of opportunity to really dive in depth into the subject matter if you choose. There were a surprising number of undergrads (at least 6 out of 35) for a 6000 level class so you'll have plenty of company.\nYannakakis is not the most exciting lecturer but an expert in the field and as such can answer any question you throw at him. The class was 2 hours long so it was often hard to concentrate for the entire duration. If you get lost at any one point in time, you're pretty much screwed for the rest of the class since it all builds up.\nEach class generally consisted of us studying a specific problem and different techniques to design approximation algorithms. A lot of the material can be found in the textbook Approximation Algorithms by Vazirani. It would be useful to brush up on common problems like max-cut, flows, TSP, etc. to get the most out of the class.\nHomeworks were generally difficult and required some time and deep thinking. I worked with a friend and it took us maybe 10-15 hours on average + attending office hours where one of the TAs would pretty much go over the gist of the solution (which was very much appreciated). \nYou have to write a 15 page research paper on any topic of your choice within the scope of the class. He gives you a month for it and I suggest you start early. I put together a pathetic excuse for a paper 3 days before it was due and was not happy with the results or my understanding of the problem I was studying.\nOverall, a solid class that's only offered once every 2 years. 100% recommend taking it.	3 HWs 60%\n1 Research Paper (15 pgs) 40%	7	0	2941	6886
78756	May 22, 2015	Professor Drinea is a solid pick for Algorithms I and she has taught for the past two spring semesters. Here is what you are in for:\nLecture--\nProfessor Drinea is an okay lecturer. I had some trouble understanding her sometimes because of her accent and the fact that she is somewhat soft spoken. This was exacerbated by the horrible acoustics of the classroom (Mudd 833). That being said, she is quite good at explaining things, though you will need to review some content afterwards (as well as do some reading prior to lecture) to learn the maximum amount. All slides are posted on the course wiki.\nContent--\nWe covered a ton of content this semester (and according to my roommate, more than most Algorithms I classes cover). This included increased coverage in Linear Programming, P/NP Reductions, and a bit of Approximations. There was also a hackathon early in the semester that went over applications of various algorithms for those of you who are more programming focused.\nHomeworks--\n6 assignments that ranged from really easy (graph algorithm pset) to crazily difficult (dynamic programming pset). They are due every two weeks.\nExams--\nClosed book midterm and final. Midterm was incredibly long and difficult. Final was more reasonable length, but still pretty difficult. Averages were pretty low.\nOffice Hours--\nTA office hours are a mixed bag. Sometimes TAs don't know the answer to questions or have trouble explaining it. Being able to speak Chinese with them is actually a huge plus. Professor Drinea is very helpful in her office hours, so definitely go to her. On the whole, these are very important for succeeding in the class (unless you are absolutely brilliant).\nGrading--\nVery reasonable. I slacked the first half of class and finally picked up my game in the latter half (went to OHs and lecture). After all was said and done, my scores were a tick below the mean and I ended up with a B, so the curve appears to be the standard B/B+ for mean.	6 Homeworks - 40%\nMidterm - 30%\nFinal - 30%	3	3	13070	4079
78787	May 30, 2015	This was one of the best classes I have taken at Columbia.  It is a topics course on approximation algorithms, mostly for NP-Complete optimization problems, and there is a brief discussion of online approximation algorithms at the end of the course.  The emphasis is on the design and analysis of approximation algorithms, and some time is also spent on hardness of approximation results.  This is a definitely great class to take if you enjoyed Analysis of Algorithms 1.\nProfessor Yannakakis is an excellent instructor who has an unbelievable command of the material. He always has comes to class with a very well-structured lecture plan, and is able to give very thorough answers to studentsâ€™ questions.  He also posts great lecture notes online, which are very helpful, as is the recommended textbook â€œApproximation Algorithmsâ€ by Vazirani.  For many of the lectures, he begins the lecture by introducing an optimization problem (or a family of closely related optimization problems) and then spends the lectures going through different approximation algorithms for the problem in increasing order of sophistication.  The class met once a week for two hours, and while these lectures were a bit long, it allowed for the material to be covered with a good amount of depth.  He is also very up to date with the material and able to put the results we cover in context, sometimes telling us about recent improvements from the past few months!  While some of the reviewers have correctly point out that he is not the most exciting lecturer, he does a great job of engaging students in lectures.  He is definitely one of the best professors I have had, and I believe he is by far the most underrated CS professor.\nThe homework assignments were some of the most interesting and well-designed that I have seen.  They are very relevant to the material that is covered in lecture and strike a great balance between rigor and accessibility.  Every problem is interesting and somewhat substantial and there are no boring filler problems.  I definitely had a great time working on these, though I suspect it would have been much less enjoyable had I left them till the last minute.  We were given a good amount of time for each problem set and I recommend taking advantage of that.  For the last month of the class we had a research paper instead of problem sets, which required to write a 10-15 page paper on a relevant topic of our interest.  The assignment is pretty flexible and I thought it was a great experience, especially since none of my other CS classes had a similar assignment.	3 Homework Assignments were worth 60% of the grade and the 10-15 page research paper was worth the remaining 40%.  We had at least 2 weeks for each of the problem sets in addition to 4 no-penalty late days.	8	0	2941	6886
78788	May 30, 2015	Augustin is super-friendly and probably one of the nicest professors in the CS department. Everything else about this class is mediocre or stinks.\nYouâ€™ll basically learn how the internet works at each layer of the stack. Thereâ€™s a large discrepancy in the level of understanding imparted via lecture in class and the level of understanding required to do well on the homework and exams. His Comic Sans slider are also sans of deep material. They basically cover the textbook at a highly abstracted level. I just read the slides for exams which turned out to be a big mistake.\nAugustin is more than willing to go over concepts again for you and answer all your questions. However, heâ€™s too accommodating and ends up not finishing the lecture since he wasted time answering a bunch of not-so-great questions. It would also have been nice if he went over some topics in detail (though he expects that kind of detail in tests)\nLogistics for this class were a mess. Homeworks and exams took forever to be graded. We had Piazza but didn't get responses for 4-5 days at a time which was frustrating right before deadlines. The TAs were also generally not helpful. HW questions were often poorly worded. The exam is just a bunch of hw questions put together.\nAt the end of the course, youâ€™ll have some idea of how the internet works, but all the material could have probably been covered in a third of the semester. I felt like I didnâ€™t learn enough and that a lot of the classes were wasted.	5 HWs: 7-10 questions, takes a few hours to complete based on whether you know the material\n2 Programming Assignments - both take quite a bit of time. First one was to make a p2p chat app. Second one was to simulate a network and implement routing algorithms with file transfer. Each takes about 2 days to complete if you do nothing else. Not hard conceptually, just a lot of grunt work.\nMidterm - quite hard\nFinal - really really hard and the room was so cold I couldnâ€™t feel my fingers	0	0	11579	4902
78796	June 05, 2015	Everyone kind of sits on the continuum between weeding out people, and helping them learn. Professor Pe'er is definitely on the latter. Here's why:\n1) Only 80% completion of your homework is required, i.e. an 80% translates to 100%. Now, I'll caveat this by saying these assignments are done weekly for the first half, and some of them are pretty tough if you weren't paying careful attention in class.\n2) Feedback, feedback, and feedback. Every homework assignment you turn in gets notes meant solely for you. Your final project will have presentations, and you will get feedback from both classmates AND the professor and/or TA, each time.\n3) A steady/reliable pace with a very welcoming attitudes towards questions. He leaves his cell phone, personal email, and allows skype sessions over the weekend - just to help you learn or get help with your project.\n4) Cameron (the TA) is super nice and adopts the same attitude as Professor Pe'er - he only wants you to learn.\nIn addition to that, this course is heavily front-loaded - it's going to be a sprint the first half. I can't speak for everyone else, but I really appreciated this - it gave me more time to work on my project (the last half of the semester), and deal with the impending deadlines for all my other classes.\nNow, some caveats:\n1) His lecture style is pseudo-interactive, or at least tries to be. He asks a lot of questions to check comprehension, and there were plenty of awkward moments where nobody answered a very obvious question (albeit, I'm not sure if it's because we were all scared because it wasn't obvious at the time or because nobody cared. Likely the former).\n2) I see other people complain about his voice, his stuttering, blah blah, but if you're interested in the material, then you'll likely pay attention naturally (and you should; it's interesting stuff).\n3) The material -can- be hard to follow. It's -a lot- in roughly 2/3rds of the semester. Some of it is almost hand-wavey. This is especially true if you've never had exposure to genomics, or even biology. That being said, I came in here with 0 biology background, and was okay.	Brutal once we got into the thick of things for about 3-4 weeks, then tapered off significantly so we could work on our projects. Lots of material to study, especially if you pore through CVN videos like I do.	5	3	4057	1967
78819	June 13, 2015	Augustin is super-friendly and probably one of the nicest professors in the CS department. Everything else about this class kind of stinks.\nIn this class, youâ€™ll basically learn how the internet works at each layer of the stack.\nThereâ€™s a large discrepancy in the level of understanding imparted via lecture in class and the level of understanding required to do well on the homework and exams. His Comic Sans slider are also sans of deep material. They basically cover the textbook at a highly abstracted level. I just read the slides for exams which turned out to be a big mistake.\nAugustin is more than willing to go over concepts again for you and answer all your questions. However, heâ€™s too accommodating and ends up not finishing the lecture since he wasted time answering a bunch of not-so-great questions. It would also have been nice if he went over some topics in detail (though he expects that kind of detail in tests)\nLogistics for this class were a mess. Homeworks and exams took forever to be graded. We had Piazza but didn't get responses for 4-5 days at a time which was frustrating right before deadlines. The TAs were also generally not helpful. HW questions were often poorly worded. The exam is just a bunch of hw questions put together.\nAt the end of the course, youâ€™ll have some idea of how the internet works, but all the material could have probably been covered in a third of the semester. I felt like I didnâ€™t learn enough and that a lot of the classes were wasted.	5 HWs: 7-10 questions, takes a few hours to complete based on whether you know the material\n2 Programming Assignments - both take quite a bit of time. First one was to make a p2p chat app. Second one was to simulate a network and implement routing algorithms with file transfer. Each takes about 2 days to complete if you do nothing else. Not hard conceptually, just a lot of grunt work.\nMidterm - quite hard\nFinal - really really hard and the room was so cold I couldnâ€™t feel my fingers	3	0	11579	4902
79127	May 09, 2016	I came into this class having taken a basic programming course in high school.  It wasn't completely a breeze, but very doable and I came through with an A.  With such a basic CS course, there is a lot of information out there if you get lost, and you should utilize it.  The book is very useful, office hours are a big help, there are many resources online, and other students can be helpful with the homeworks if you don't know where to start.  Blaer is a great professor - entertaining, funny, and makes things very clear even when they're difficult concepts to grasp.  Having taken 1004 and 3134 with him, I'm sad to not have him as a professor next semester.\nMake sure that you read the book and get help early if you think you might need it - the concepts you'll learn build on each other so it's important to not get lost or it will take a while to get back on track (same with all CS courses, IMO).  If you're new to CS, expect a struggle in the beginning since the most basic concepts are covered pretty quickly, but it will get easier for sure.\nGet started on the homework as early as you can and things will go well!	10 total homeworks (half programming and half written problems) which often took quite a few hours, midterm and final	0	0	3409	3807
79129	May 10, 2016	Grading is very opaque and partial.	Not so much	3	0	1957	27
78828	June 16, 2015	tl;dr: This isn't a easy class if you have no compsci experience. However, if you insist on learning Java, Blaer's the best class to take. Problem sets are a bit of a struggle, exams are reasonable.\nBlaer's a fun guy. He's down-to-earth and isn't pretentious. Expect a lot of tangential stories though. There are a lot of TAs, and they're for the most part helpful. Recitation is usually staged more of an OH though, they take questions & don't really have a set plan. You must go to the first recitation--that's when they go through how to set up pico so you can actually code, and it's a million times easier seeing them do it in front of you than trying to read the tutorial.\nIf you're like me and go into the class w/o knowing any compsci, you're going to spend the first few classes going "what the FUCK is going on." Be good about reviewing notes and reading the textbook though (and doing a lot of googling), and eventually you'll catch up.\nBefore each exam he'll usually go over what will be tested. Make sure to go to at least one of the TA's review sessions--they'll usually cover something a little more comprehensively than Blaer. Exams are decent. Often I just read & reread the textbook and that was enough. The final covered way more content, but to make up for it it was also easier. \nAlso, use Piazza religiously. Questions are almost immediately answered and any question you might have will probably already be up there.\nAn A is definitely doable, no matter your past experience; you're going to have to put in some work & effort though.	10 problem sets, half written/half programming. Takes some time.\nMidterm \nFinal	1	1	3409	3807
78853	July 18, 2015	I am about to say some things that will scare you, but when it comes down to it, you should take this class.\nDaniel:\nDaniel is an expert. This is both good and bad. It is bad because he will sometimes explain things as though we are all on his level, when really no one else is. Additionally, the homework problems can be very challenging and overly mathematical. However, Daniel is more than happy to answer any questions during lectures, so make sure to ask if something gets glossed over. Additionally, you will really understand machine learning after taking this course. I recommend that you print out the slides and take notes on them, as for me they were useless without commentary (because I am not on Daniel's level). \nTAs:\nOur TAs tried really hard, but a few of them fell very short. They often could not help with homework and were unable to answer questions about exams. However, homeworks were graded fairly leniently to make up for this. I was fine with the compromise as I still learned a lot, though it was very frustrating at times when trying to complete difficult homework problems. The best thing was there were a lot of TAs and there were at least one set of office hours each day.\nHomeworks:\nMost homeworks involved a MATLAB component that was never too difficult, and was always my favorite part of the assignments. It was cool to actually apply everything and have a classifier that had a low error. Some people thought that these parts relied too heavily on understanding the tricks of MATLAB, but I always just had long runtimes and didn't bother too much with optimization. I never got points taken off for this. The written parts of the homework could be too mathy for me. Additionally, everything had to be typeset so you couldn't just write it out and then take a picture of it, which always added at least an hour to the write-up. \nExams:\nThe first exam was extremely long. I don't think anyone finished early. It was tough but I think it worked out pretty fair with the curve. The second exam wasn't so long but I thought it was extremely hard. There were some questions that were straight linear algebra without even having an ML twist on them, which I thought was ridiculous as I had taken CLA 2 and a half years before. However, the curve on that ended up okay too and I think the curve overall was also very fair. I did put in at least 90% effort into this class, but I still ended up with a higher grade than I expected.\nReadings:\nThere is a statistics textbook that I couldn't even read it was so over my head. However, the actual ML textbook can be very helpful and is great to read after lectures to clarify things. There weren't as many readings in the second half of the class and I pretty much stopped doing them after the first exam.	I took this class with 3 other classes with relatively light workloads, so I found it to be very manageable. I would not recommend taking this course with more than 1 other class with a heavy workload. 5 homeworks, and 2 exams covering the first and last half of the class, both in-class. 40/30/30 distribution I believe.	4	9	13116	1921
78899	August 13, 2015	NEVER EVER EVER TAKE A CLASS WITH RUBENSTEIN. If you do anything right in your 4 years at Columbia it will be to not take a class with him. This was the worst and most frustrating class I have ever taken at Columbia. At first he seems all buddy buddy with the class, but don't let this fool you. He is an awful lecturer and an extremely lazy teacher. It takes forever for the TAs to return hws. His assignments and tests are impossible to comprehend, filled with typos and convoluted sentences. The TA's rarely understood the hws themselves. Most of them took the class with Martha Kim and did not understand why Rubenstein would teach the material the way he did. They had to spend half the time you met with them just figuring out what he was asking. The averages in this class were extremely low. Yes, averages are often low in comp sci courses, but in this class it wasn't simply because of the difficulty. It was because no one understood the material because he can't teach!!!! After the midterm grades came back he came in front of the class and said that we shouldn't complain about the average being so low because we're columbia students and tests are supposed to be hard at Columbia. He constantly tells you not to worry about grades because they don't matter, which is just annoying. I learned more from a 10 minute youtube video than from 75 minutes in his class. I would go into more detail about the class, but he's not worth my time. I wasn't smart enough to listen to the reviews. Save yourself. Don't take this class or any other class with Professor Rubenstein.	I'm not even going to bother telling you because you shouldn't take the class and therefore don't need to know the workload. Take it with Martha Kim!!!	20	24	2427	4251
78966	September 24, 2015	Fantastic professor. He was extremely clear throughout every lecture, and took time after every lecture to answer every question you have, even if that means reviewing what he went over in class. If you're taking CS courses in the summer, definitely consider this one to knock out your requirements.\nThe problem sets didn't take too long, and as for the midterm and final, he gives out a study guide that will indicate pretty much what *exactly* will be on them. The workload is very, very light, and the exams are very fair if you use the study guides he provides. Honestly, you can spend very little time preparing outside of class for the exams if you pay attention in class and sometimes stay after class to ask questions because he's that clear (some will say slow-paced, but the concepts are very well-elucidated). He largely covers the textbook, but I never found myself really needing to turn to it.	-Weekly problem sets (should take at most 5 hours for each one)\n-One midterm\n-One final	6	2	12959	234
78972	March 25, 2016	This was the most rewarding class I have yet to take in CS. Extremely interesting material and very good teacher.\nThe first half of the course is more foundational: some basic proofs about Turing machines, time and space hierarchy theorems, NP completeness, non-uniform complexity, and randomized complexity classes. This is all neccessary knowledge for anyone interested in theory of computer science. But after that, we dove into some more recent results: interactive proofs, circuit lower bounds, and probabilistically checkable proofs. These topics were exciting and provide a more in-depth look into complexity theory.\nThis class is all proofs. So clearly do not take the class if you are not ready to do rigorous proofs in class, on the problem sets, and on the exams. \nBut if you have the mathematical maturity to face them, don't let the proofs scare you off! Each class focused on proving a different result from complexity, and each proof was interesting and rigorous. Professor Chen is very good; he always presents clean and rigorous proofs. He doesn't dwell on trivialities, but if someone asks, he will always clarify details, both in class and office hours. He is a very clear and helpful teacher.	5 very hard problem sets\n2 exams are slightly easier, both open note	12	0	12932	462
78974	March 27, 2016	If you have no experience with Java, it's OK. The world is not going to end, but it won't be easy neither. I'm not a fan of reading but Big Java, Late Objects is one of the best books out there to learn Java. I gave my full attention to Blaer, but sometimes I would wonder off. But, it always came to taking some time to read the book and get the hang of it. Some of the answers of the Problem Sets are in the book itself. It's really important and useful that you read the book. Going to recitation doesn't make that much of a difference, unless you want to ask a question. And then again, they may even not answer them, but tell you to wait until Office Hours, since you're not the only one there. \nI had no experience with Java, got an A on the course. I am tech-savy, but it doesn't mean it's not achievable. Once you get the hang of it its pretty awesome! I do recommend taking the course with Paul. He is very funny and very lenient (we got our homework deadline extended like 3 times during the course). \nThe problems sets are not that hard. Just make sure you take notes during class so that you can do your homework with them.\nNot an "easy A", but its not impossible to get an A.	11 Problem Sets - varied with just programming, some written, all written, etc. (1 was dropped)\n1 Midterm - avg of 106/150 so great curve\nFinal	1	0	3409	3807
79594	December 20, 2016	Tip for the Final: shallow understanding of concepts would not work, make sure to read the papers and spend hours fully understand them. Three of four projects involve HTML, CSS and JavaScript.	2 individual projects 2 group projects final is hard	4	0	39	663
79146	May 13, 2016	Professor Yannakakis is a very capable lecturer. Although he has a soft voice and a slight accent, his explanations are very clear and so are his answers to questions. It's not a super exciting class, but at least you won't be confused. \nHis problem sets are also reasonable and do not contain anything he hasn't taught. \nHis exams are trickier, since they require not just walking through algorithms but also understanding concepts on a deeper level. Definitely read over the lecture notes very carefully.\nFinally, he actually answers questions on Piazza!\nTake Yannakakis if you get him.	Problem Sets - 40% of the course grade, lowest one dropped. There were 6 problem sets, due every two weeks. Definitely doable.\nMidterm - 25% of the course grade. Combination of walking through algorithms and true/false questions and free response.\nFinal - 35% of the course grade. Like the midterm, but slightly longer (although definitely not twice as long as the midterm).	4	0	2941	234
79147	May 13, 2016	Professor Gravano is an excellent lecturer. His lectures are very clear, and he does a good job of answering questions. He is also very friendly and helpful during office hours and maintains an active presence on Piazza.\nThe only thing I didn't really enjoy was that he recycled some of the old databases lecture slides, which are sometimes unclear (his own lectures are much more helpful). Definitely show up to class, since the textbook, while helpful, contains more than you need to know and the slides are not very helpful on their own. Also, he offers homework and project grace late days which, while helpful, were not always allowed to be used on certain homework and project parts, which kind of defeats the purpose in some way.\nDespite my nitpicking, Gravano is still a great professor!	Problem Sets (15%) - Not too difficult, although be sure not to make silly errors, since most of the class does well on the problem sets.\nMidterm (25%) - The first question requires you to define database terms in at most two sentences - the rest of the exam are free response questions asking you to write relational algebra expressions, write a query, etc.\nFinal (40%) - Like the midterm, but slightly longer.\nProjects (20%, 15% for project 1 and 5% for project 2) - The first one is the longer one and each part is spread out over a couple of months. Definitely start early and pick a good partner, or you will suffer. The second one is much more manageable.	2	0	375	664
79166	May 15, 2016	You would be wise to take this class. Professor Ross is very well-acquainted with the material. Lectures are well-organized and follow the textbook. The material is pretty tough, but you are given the tools to learn it. Topics covered are extremely relevant to software engineering today.\nProfessor Ross is a slightly awkward guy who definitely doesn't play favorites. I'm not sure he particularly likes any students.\nOne TA was a star. His name was Wangda and his response time on Piazza was incredible. The other TAs were okay. They tended to give away pset answers rather than help.\nBonus tip: you should probably buy the textbook because the PDF online has lots of errors. The Eastern/Indian knockoff edition is only $30.\nBonus bonus tip: Ross video records all his lectures. But you can't access them unless you go sit in the stinky TA room with a TA and watch them.	There were 5 problem sets. Each one took many hours. I suspect lots of people cheated, because the textbook answers were sometimes online. Exams were 'fair' in that they closely resembled the material covered in class and found on problem sets.\nThere are 2 projects: a 50 page databases paper on 3 topics of his choosing and a C programming project. The former took much longer than the latter, but both were very useful exercises.	5	2	47	6973
79203	May 19, 2016	I would not recommend this professor or course. A brief summary of two takeaways:\n1. The course is artificially difficult exacting rote memorization of content delivered verbally rather than quantitative skills or abstract thought.\n2. Timely feedback was not provided, grading seemed arbitrary and contradicted the syllabus.\nSethumadhavan is knowledgable and encourages discussion during class. He waits for students to think through the examples he gives, entertains follow up questions and does not rush through the material. The midterm was challenging and a good opportunity to apply cache optimization techniques to a benchmark of scientific software. \nSethumadhavan verbally delivered the majority of the content for the course. During this time he drew hundreds of rectangles on the blackboard to illustrate the interaction of different computer hardware components. This often seemed frivolous and distracting. Lectures were sometimes obfuscated by sloppy or incomplete handwriting. Slides might help to organize and deliver important concepts clearly and concisely. \nGrading seemed arbitrary and feedback was delivered late, if at all. No comments were provided on the implementation section of the midterm and the grade was returned the day before the final. After the course finished in May, the homework was decreased by 10% of the total grade and the midterm was increased by 10% of the total grade contradicting what was stated on the syllabus and on Canvas throughout the semester. \nCS is a broad field. Some courses may be challenging due to inherently abstract or mathematical content. This is not the case with computer architecture. If you study computer systems or are an aspiring computer architect you may enjoy certain aspects of the class; others may feel that the difficulty is contrived and the course lacks substance.	Three homework projects with both group and individual portions (textbook questions, summarizing papers, running profiling tools and modifying C programs), one take home midterm with two parts (proposing and implementing software or hardware optimizations) and an in class final (multiple choice and short answers).	7	2	3429	5392
79206	May 21, 2016	Have mixed feelings about this class. Took AP with Jae many years ago and can say that it was significantly better run and more structured than OS. He seemed much less prepared to teach this class. The content wasn't terribly interesting. We spent a lot of time on UNIX APIs and not enough time kernel hacking. It was an 8:40 am class so no one really showed up. It didn't really matter since Jae would just talk about a couple of functions from a man page for an hour any way. Most of the learning is done on your own by reading many chapters from 3 textbooks.\nThe first midterm was poorly written and essentially required you to know random facts from the textbook and didn't really test conceptual thinking. The second was slightly better but still overall not a great test.\nThe HWs were hard. Required a lot of reading of man pages, kernel code and experimenting. Doing it on your own was a miserable experience that led to many sleepless nights. Always felt pressed for time on the group projects. I never felt intellectually challenged by any of it but did feel like it was a lot of worked. There was never an aha moment where I appreciated the beauty of an operating system. It's just a mangled mess that we deal with since that's how some bloke decided things should be done many decades ago.\nEnsure that you form a good team. They don't have to be incredibly smart, just very hardworking, sincere and accountable. Mine didn't do any work which led to a lot of incomplete homeworks since it's kind of impossible for one person to finish the HW on their own unless they're willing to devote well over 10 hrs/week to it.\nOverall, I was slightly disappointed in this class given that I thought AP was fun and easy. Jae needs to step up his game here. You might want to take the class with Jason Nieh who is an OS researcher and will focus more on kernel programming, but be warned that his workload is even worse. I do think that every CS major should take OS. It's surprising that Columbia doesn't make it a requirement. That said, I begrudgingly took it.\nTAs for this class were great fwiw. A+ to them for their hard work.	Heavy\n2 midterms - average was around 60 for both\n8 HWs - 3 were individual, rest were group projects	5	2	3509	2384
79212	May 21, 2016	I have mixed feelings about this course. It repeats a ton of material from Data Structures, more or less on the same level. There is some new material, but it doesn't feel like a semester's worth. Overall, the material was not particularly interesting. I guess you learn all the standard algorithms you should know: the theory of divide-and-conquer and greedy algorithms, then some classic sorts and graph algorithms. \nThe lectures were fine. A little slow, but presented reasonably. The slides are online, which is nice, and the textbook is pretty standard. The level of rigour was adequate.\nHowever, the homeworks were painful. The problems themselves were not hard, but the TAs were brutal. They often complain about a supposed "lack of rigour". In a good math of theory class, you're supposed to write however much you need to show what you know. But in this class, you're supposed to write however much you need to show a toddler how to do it themselves. This felt like a waste of time for the students and the graders.\nThe exams were graded much more forgivingly, though.	5 homeworks, lowest dropped. 2 exams.	1	3	13004	4079
79213	May 21, 2016	A standard introductory data structures class. Professor Blaer is pretty good, although his proofs could be a little more rigorous. The class felt slow to me, but maybe it was the right speed for an introductory class. The "Honors" nature of this class consisted of learning a little bit of Ocaml, which was interesting.\nMy one complaint is the textbook: Weiss Data Structures and Algorithm Analysis in Java. It is a expensive and terrible book. Both the code and the proofs are lacking.\nThe homeworks were easy, easier than the ones in 1007. The exams were fine.	6 homeworks, lowest dropped. 2 exams.	0	0	3409	2006
79214	May 21, 2016	What a fun course! Each lecture, professor Malkin presented an overview of a recent cryptography result. Very interesting without getting caught up in tedious details. Here [http://www.cs.columbia.edu/~tal/6261/SP16/] is an overview of the topics she did this semester, although it changes from class to class. \nLecture was only a small part of the class. The main event the project. The goal was to read up on an area of cryptography, discuss an open problem, then attempt to do original research in it. Professor Malkin was very helpful in the process, and she put a lot of time into helping groups find papers and work on results. It presented a glimpse into what crypto research is like. Everyone presented their work on the last day of class.\nThis class assumes a background in cryptography and theoretical computer science. You should be comfortable with proofs, especially the proofs of security used in cryptography.	1 problem set, weekly readings, and 1 project. Grades were not a focus, I'm assuming everyone did well.	5	7	1621	2867
79226	May 23, 2016	This review ended up rather long, so TL;DR: this class is hard and confusing- do not take it!\nUnfortunately, I strongly do not recommend taking this class. It was probably my least favorite class I ever had to take at Columbia (disclaimer: I just took it as a second semester senior so I may be biased, but I still think this is a very honest assessment). I wanted to avoid taking Machine Learning because I was trying to have a chill semester, but I wish I had instead.\nProfessor Peâ€™er is an extremely nice guy, which makes me hesitant to write a poor review, but I had a very bad experience with this class. The material is hard, but what truly made this class truly difficult is the lack of resources to learn from. Usually, I can rely on the lectures, class notes, or the textbook to learn the material for a class. However, I could not understand the lectures due to Professor Peâ€™erâ€™s delivery and stuttering, the class notes were confusing and extremely difficult to study from, and there was no textbook.\nProfessor Peâ€™er has an accent, but it is the stammering and stuttering that made it almost impossible for me to understand what was going on in class. He also spoke through a microphone which further distorted his sentences. Iâ€™m not trying to exaggerate, but it took intense concentration and patience during lecture to make sense of each sentence for me (moreso than any lecture Iâ€™ve ever had). Eventually, as a second semester senior, it was just too much effort for me and I was mostly zoned out during class.\nThere was no textbook to learn the material from. Thus, I was left with learning from the class powerpoints. The slides did not contain full explanations of concepts and diagrams, so they were very hard to decipher. I mostly ended up googling topics and watching Youtube videos to try and learn the material. This class is a mix of computer science, biology, and statistics and the material is unsurprisingly very hard to understand.\nThe problems sets were long and extremely difficult (8 in total). Most of the questions were worded poorly and required extensive clarification on Piazza before you could understand them. Given that the material itself was difficult and confusing, they took me hours and hours to complete. After a couple problem sets, I just stopped caring and scribbled down whatever work that looked okay because it wasnâ€™t worth the time stressing over it.\nFor the midterm, you had to answer 3/8 questions. Not surprisingly, it was hard as well- the average was a 64. It was open book/note, but I didnâ€™t even use anything I brought in. Afterwards, he gave us an extra credit assignment where we had to solve 3 more of the midterm problems (full credit received half the points between your grade and the highest class grade). If you do take this class, I would just focus on learning on 2-3 of the main topics that will appear on the exam (BWT, HMMs, etc.).\nThe project was okay. I was worried our project was too simple because everyone elseâ€™s sounded complicated, but most groups didnâ€™t come close to getting good results so donâ€™t overexert yourself.\nIn conclusion, this was one of the most frustrating and challenging classes I took as an undergrad, and unfortunately it was during my last semester here. Avoid taking it, unless you are truly interested in the subject- just take ML!!!! Sorry Professor!	8 problem sets (30%)- need to get 80% for full credit over the semester. They are long, confusing, and difficult!\n1 midterm (30%)- open note, answer 3/8 questions. Difficult, but he may offer an extra credit assignment.\n1 project (30%)- done with a partner. Don't need to make it too hard, but probably should be somewhat substantial.\nClass partication (10%)- barely anyone participated, there were a lot of awkward silences.	12	1	4057	1967
79241	May 27, 2016	Prof. Blaer really reached out to me in a personal way to make both Intro to CS and Data Structures meaningful courses for me. Blaer is an expert in the field of computer science (also, has special interests in robotics programming), speaks [loudly and] clearly during lectures, has a dry but relatable sense of humor, and is generally an approachable friendly human.  \ntl;dr I highly recommend Blaer for CS major courses: 'Introduction to CS in Java' and 'Data Structures in Java'.	Don't expect it to be easy. Consider Blaer's courses as the main stakes underpinning the rest of your schedule (perhaps, along with one other mainstay/major course, e.g., Discrete Mathematics).	11	3	3409	7002
79266	July 05, 2016	This review may not speak to the content of 1007 so much as the culture, but I would like to note to incoming students that this class has a surprisingly pre-professional and competitive atmosphere. I remember on the first day, Kender listed a number of languages - Perl, Python, C++, and asked students to raise their hands whenever they heard a language with which they had experience. I immediately felt so lost; I'd signed up for the course knowing just what was required to take it. I was, in fact, prepared for the course. I'd taken AP Java in high school; I'd done well; I for the most part continued that trend in 1007. But there wasn't a moment of this class I didn't spend questioning my abilities or worth as a CS student, even when I did quite well on the assignments. \nThere were a lot of things Kender could have done to abate or eliminate this competitive aspect of the class, but instead he seemed to constantly make choices that worsened it. First of all, he'd post a list of the naked grades (everyone in the class' grades stripped of names) after every assignment. Seems whatever, but he did it in a way that each row would represent a person, and each column their grades on a particular assignment. To me, this seemed like an overabundance of information; Kender could have released the mean and perhaps standard deviation for each assignment, like most CS classes do, and that would've been enough information to know your approximate standing in the class. Second of all, after every naked grade set was posted, some guy would post in-depth stats on Piazza on the grade distribution, which was pretty unhealthy, grade-focused BS. I wish Kender had shut that down.  Third, at the end of the class, Kender sent an email to all students naming those who got an A+, as well as saluting certain members of the class who he felt had made significant contributions (like Piazza posts etc.). This is something I've never seen a professor do before -- if you do well in a class, you should know it without the professor emailing all your peers. The email also privileged certain modes of achievement in a field that, right now, desperately needs a diversity of thinkers and personality types. I'm not saying those students that Kender singled out don't deserve praise; but it would have been much more appropriate had Kender kept those thank-yous and A+s confidential. \nThose are just, to be clear, a few select examples of a trend of competitiveness that pervaded this class. Oh, and by the way, after all of this Kender had the nerve to complain (in that same final email) about how our class seemed more pre-professional than usual, as if he hadn't contributed at all to the atmosphere. When I read that, I actually laughed out loud. \nIn terms of the course itself, I have few complaints. The material was truly interesting, and genuinely helpful to me as a programmer. Kender was a great lecturer, happily supplied all kinds of interesting supplementary information on Courseworks, and patiently explained concepts in person and on Piazza (even on the weekends). The class was difficult at times, but I learned so much about good design and feel like I have a great grasp of object-oriented programming now. I find myself applying design patterns + strategies I learned in this class all the time. In fact, I can't imagine where I'd be as a programmer without 1007. That's why it's such a shame that the class atmosphere was so unwelcoming. I'm not asking for hand-holding, but I don't think it's unreasonable to request an environment where the professor isn't implicitly supporting a culture of "who's best" or "who's worst" or "what's the grade distribution" or "who wants a professorially-sanctioned way to brag about how much they know about multithreading even though it's mostly irrelevant to this class." Anyone who signs up for Kender's class and sticks with it has already demonstrated they deserve to be in 1007, even if they didn't get an A+ on homework 3 or couldn't work up the nerve to raise their hands that one time in lecture.\nTake this class and ask a lot of questions; what you'll learn is worth it. But do your best to block out the competitiveness, and know the class is not representative of what CS culture should be.	Four or five time-intensive homework assignments, a midterm, and a final. I for one did very badly on the first homework â€“Â I found the instructions confusing and didn't know what was expected of me (heck, I didn't even know you had to compile javadoc; nobody told me! I thought it was enough to leave it in the code). My main advice for that would be to ask a lot of questions on Piazza and to the TAs. Don't feel embarrassed for not knowing some things. After that first homework, the other homework assignments were challenging, but doable, especially if you sought help. \nThe midterm was difficult, but fair if you paid attention in class and studied your notes (he'll say he might pull concepts from the textbook, but your notes are really all that matters). The final was a little harder but also fine.	25	3	42	995
79290	August 06, 2016	Proffesor Edwards' is a world-class lecturer! \nHe has complete and absolute mastery over his material (feel free to ask him about any possible tangent, he'll answer you).   \nHe is refreshingly down to earth and very humble, all around a gem of a human being. \n It is  obvious that he loves lecturing, and puts himself fully into it. \n Lectures are somehow very easy to pay attention to as he's always able to keep it exciting.\n     -A huge fan!	No opinion, sorry!	8	3	1637	4251
79296	August 13, 2016	Material was hard to understand. \nEasy material was covered until the registration deadline. \nOnce the students are registered the material becomes hard. \nThere is a group of shree's favourite students who will get good grades.	Too much work.	1	10	1812	2386
79301	August 16, 2016	I think Biliris is a fairly strong professor and, given that it was a 2.5 hour class, I enjoyed it as much as I possibly could. As with all professors he has his pros and cons.\nBiliris is a ball or energy and a personality in the classroom and undeniably cares about his students. He responds to questions on Piazza fairly quickly, made a point to get to know people in the class. He even joked that we could call him if going through a breakup. \nHe is very energetic and enthusiastic about the material and the examples, and he tends to be good at making things quite simple, so the combination is good. He also continually involves students of the classroom. He will ask for suggestions on how to solve something, ask someone else to point out flaws, etc. This keeps the room fairly engaged for a class that is 2.5 hrs long. \nBiliris welcomes student questions in lectures and will always stop to answer a question before moving on. This both a pro and a con. Sometimes I feel like the class got stuck because we would keep harping on an issue that was either not extremely relevant or simply repetitive. However, the good news is that, if you are willing to raise your hand, you will always walk out of class knowing what is going on. Unfortunately, Biliris sometimes either struggles to understand a student question or misinterprets the question. As such, you have to be persistent with rephrasing till he understands the question, at which point he usually does a solid job of answering.\nThe workload is quite light. There are 4 light homework assisgnments, two projects, a midterm and a final. The first project is significantly more in depth than the second, but the time allocated for the projects reflects that. The midterm is exactly the same in structure as the practice midterm, which makes it easy to study for. No practice final is given, and the material was harder and more technical, so make sure to spend time on Query Optimization when studying for the final. \nHis grading tends to be fairly generous in my view, and I think the level of CS ability in this class is lower than most other CS classes, since it is required for OR undergrads and many masters students seemed to come from weak data structures backgrounds (we spent 30 minutes discussing the complexity of a hash table). Overall, assuming you go to class and pay attention, this is a low workload class apart from projects and exams.	4 homeworks (very light and quick)\n2 projects (1st has 3 parts, second has one time consuming part. Start early)\n1 midterm\n1 final	7	5	1442	664
79304	August 17, 2016	Cliffâ€™s class was overall a solid, low workload course. While I donâ€™t find Production Scheduling an inherently exciting topic, I think Cliff did a good job of trying to keep everyone engaged.\nThroughout the class you simply look at different scenarios and consider the best ways to schedule things to meet certain objectives. The provided textbook is quite awful, and Cliffâ€™s slides are quite bare, so you will definitely want to go to class.He mostly uses the white board in class, and uses the slides just to remind himself of the example he is about to work through. That being said, he is good at providing the intuition of how to approach the various problems, and is surprisingly good at providing a silly metaphor to help you think through the logic (e.g: â€œif we are running a race, and you are both faster and start closer to the finish line, it is obvious who will winâ€). \nHe is also very aware that this class in in senior spring for most students, so he spent some time talking about job stuff, Columbiaâ€™s basketball team, etc. \nHis exams arenâ€™t super difficult, but they also are not boringly algorithmic. He isnâ€™t just going to give you a type of problem you have seen and ask you to apply the algorithm found in class. That might be part of the problem but then he might modify an assumption or ask a more conceptual question, so you will have to synthesize learning from other algorithms to make a slight modification to the one at hand. This shouldnâ€™t be difficult or shocking for anyone, but I guess it is slightly annoying for those in senior spring who would rather just chill out. \nHe has 1 homework set a week that is not particularly difficult, and usually taken less than 3 hours to do, if not less. There is a final project for this class but you define the scope of it, so to some extent, it is as much work as you want it to be, subject to limitations of course. Overall this is a somewhat boring topic, presented in a clear way, by a good professor with a low workload.	Weekly homework, 15%\n1 midterm, 30%\n1 final project, 20%\n1 final exam, 35%	0	1	1342	NA
79305	August 17, 2016	I don't have too much to add to Xi's previous reviews, but I did want to emphasize that this course really is very tough. Xi is a pretty good lecturer, and a very nice guy, but do be prepared to spend a ton of time on the problem sets.\nWe had 4 or 5 problem sets throughout the semester. All of them very heavy proof-based. They easily took me 20+ hours each. There were some really smart people taking this class so maybe it took them less time, but the problem sets are no joke.\nThe midterm was pretty easy compared to the problem sets. The final was not; it was basically like the problem sets except you couldn't spend a whole week on it and going to OHs.\nOverall a solid class, but don't think this is CS Theory part 2. It's more like CS Theory on steroids.	Heavy. Problem sets extremely hard. Midterm was ok. Final was brutal.	7	0	12932	462
79340	September 21, 2016	I took this course with Prof. Blaer, but often went to Prof's Bauer's office hours. He is SO kind an helpful, always taking the time to patiently explain any difficult concepts.	Same as the other section.	11	1	11572	4
79347	September 29, 2016	Apart from his teaching, Jae Lee is the worst human being I have ever had as a professor. All the other professors in the computer science department genuinely care about you learning and being successful. This is not the case with Jae. I hope that the way he treats his students comes back to bite him in the ass one day.	Very Heavy, be prepared	142	44	3509	4758
79432	November 29, 2016	Maybe Eugene Wu is a good professor or a good researcher, but apparently not a good teacher. He always makes simple things confusing in his class. There are many times I couldn't get his points. But after class, I always get handle of those puzzle quickly by searching related info in Google. Many of my classmates faced the same condition. Therefore I don't recommend this professor.	The workload is not too heavy but also not light for people who learn DB first time. 2 projects and 4 HWs. If you never built a website, project 1 would be interesting for you. And there will be 2 exams.	6	1	13292	664
79535	December 12, 2016	Security Architecture is a great idea for a course, but I don't like how such an important topic gets watered down so much. In lecture, we just go over a bunch of security concepts like permissions and buffer overflows at a high level. Prof. Bellovin seems to avoid going into technical details when possible, so the lectures are not very information dense. (When I miss class, I usually watch at 1.25x and that speed feels about right.) Some lectures, Prof. Bellovin brings out his funny side and cracks a bunch of jokes, which is pretty nice.		1	0	3366	4907
79536	December 12, 2016	This is a super interesting class for those interested in learning how everyday image processing algorithms work. It provides a comprehensive survey of vision algorithms from the ground up: from lenses and sensors (hi, photographers!) to basic 2d stuff to algorithms that reconstruct depth from multiple points of view to neural nets in the last lecture. With Deep Learning(TM) being billed as the one algorithm to rule them all, it was interesting to see how many simple, interpretable models have good performance without less complexity and faster run times.\nProf. Nayar's lectures are fun and engaging -- he applies his sense of humor and PowerPoint animation skillz to make CV easier to learn. You don't need any books since the slides have all the formulas, derivations, and examples you need to do homework. (I wish we could get electronic copies of the slides, since it's in a computer **vision** class, sometimes you need to see the colors in a diagram/picture for things to make sense. And videos in the slides are completely lost in translation. But it doesn't sound like he plans on making the change any time soon.)\nI really dislike how the teaching staff handled office hours. It felt like every other week, they were held at a different time and place. As a TA for a similarly large class, I know that it's hard to teach and study at the same time. But there is a minimum quality of service that we need to provide our students.		4	1	1812	2386
79571	December 16, 2016	His Lectures are well organized, relatable, he stays on topic, throws a few jokes to keep you awake, but he can be intimidating.  \nMy advice to overcome the wall between you and Jae is to go to the Hackathon and introduce yourself.  He's actually nice if you get his attention.  It seems like he prefers a student that doesn't need their hand held (which is the intimidating part) but pestering him is a good way to show him you care/will work hard.  I think that could be why some students don't like him as a person.  If it's really that bad, then hire a tutor (I did).  Your tutor is pretty much your employee at that point.  If you can't hire a tutor (a good CS tutor is $$$$$), then you need to make sure this is the only difficult class you are taking because you will live in the TA room.  If you can't either see Jae, hire a tutor, or be in the TA room for almost every OH, then you are probably cheating in order to do well.\nMy advice for the cheaters is that you will get caught so proceed with caution.  You could lie (most cheaters are also liars), but you'll get caught!  I can't stress this enough.  Jae says this in the beginning too and people still think they can do it. \nMy advice for if you don't cheat (i didn't but I almost regretted not doing it), just let it go.  I think Jae pretty much hit the nail on the head when he said those people who cheat like that won't make it very far in the world of CS.  Just worry about yourself and try your best to have fun.  There was an intrinsic reward in the end.  I did become a better programmer after this and real world programming made just a little more sense.  \nGo to every lecture and don't bother opening your laptop.  The notes are posted to the server so stop pretending you're taking notes and just watch what he does.  Read over the notes later.\nUse the drops and extensions strategically.  You will need them, but try not to drop any of the ones right around the midterm.  I think around lab5-8/9 (can't fully remember) is when you really should focus.\nThe exams are tricky.  If you don't like your grade just argue a lot.  I will say that if you KNOW how to do the homework, then you KNOW what he's asking in the exam.  You'll be able to argue for your points (all points matter) if you KNOW.  Also, his exams are pretty much from the lectures and old exams.	IMO they aren't doable if you don't get help (or cheat).  \nWhat is a curve? A curve doesn't do anything for anyone if nearly everyone cheats.  Don't rely on the curve to save you.\nMidterm is from the class notes and a few from lecture\nFinal is basically questions from your midterm and past exams plus a lab question.  Literally he will ask you about the lab.	1	34	3509	4758
79576	December 17, 2016	Solid and enjoyable class. The course essentially surveys different areas of database systems (e.g. information retrieval, OLAP systems, data mining etc), beyond the relational paradigm that is covered in 4111. We typically spent 1-2 lectures on each topic. While that meant we weren't necessarily able to go into too much depth, Prof Gravano does a great job explaining everything and I personally felt like I got a lot out of the class. \nProfessor Gravano is really nice, in addition to being a great lecturer. The readings were helpful, but his lectures are really clear and I found them to be most helpful for learning the material. He was very responsive on Piazza too which is always helpful. He seems to care about his students, and did a good job answering questions in class.\nOverall, highly recommended course.	Not too bad. We had three programming projects which took a bit of time, but if you start early you won't have any issues. A midterm and final (not cumulative), neither of which were terribly hard. Of course there's a curve so it's all relative	4	0	375	4956
79577	December 17, 2016	I'm surprised this course doesn't have more positive reviews. It should. It's a lot of fun and you learn a good amount. The course essentially covers the whole spectrum when it comes to building a secure computer system. We touch on everything from buffer overflows, to real world cryptography issues, to social engineering attacks. This gave us a good overview of what security is about in a computing setting.\nProf Bellovin is great. He's clearly extremely passionate amount the material and does a good job presenting it. He's a bit of a legend in the computer security world, and so has lots of great stories to tell; some of them even made us laugh. \nDefinitely recommended.	Not too bad. We had four assignments in total. 3 were about building a secure program (each assignment focused on a different aspect of security). The last assignment was hacking a program which was fun.	0	0	3366	4907
79584	December 18, 2016	Probably the best class I've taken at Columbia so far. Definitely not the easiest way to fulfill your science requirement for the Core, but I'd guess probably one of the most fulfilling/meaningful options available, especially if you're someone who has little to no experience programming (as was the case for me). His lectures are coherent and well-planned, the TA's are helpful and accommodating, and his lateness policy is really generous (he gives you 170 grace hours for the whole semester, which you can use to submit assignments after the due date without any penalty). Like I said, not immediately easy material for sure, but really worth the temporary struggle for what you get out of it. You'll learn a lot. This class blew my mind. Take it.	Pretty average for a 4-point lecture, maybe a bit heavier to be honest. Programming projects once every two weeks and three non-cumulative midterms (he curves all three afterwards and drops your lowest grade). If you show up to the lectures, the homework assignments aren't really that bad at all.	15	5	515	7068
79641	December 24, 2016	Jae is an excellent lecturer who is very clear about his explanations. Even though his lecture notes are already quite good, it's definitely worth it to come to lectures, since Jae provides useful supplementary information and also runs sample code so one can see how the code exactly works. \nThe TAs are also very willing to help you with the code (as long as you put in the effort, of course). The recitations are more or less just review of the lectures, but if you want more practice or sample code, it's good to check them out.\nThe exams are quite tricky. The best way to prepare is to definitely read all of the lecture notes very carefully (VERY CAREFULLY), understand exactly what each line of code does, understand how each lab works, and read K&R or the C++ book carefully. It might even be helpful to write and run your own code to ensure you know what is happening. Furthermore, Jae might reuse exam questions from the previous midterms, so definitely learn from your mistakes. \nThe labs vary in difficulty. As long as you have the proper prerequisites (Data Structures, some familiarity working with UNIX commands and hopefully Vim/Emacs, and good coding habits) and as long as you follow along in class, the labs will be straightforward. Pointers are actually not that difficult if you follow along and draw pictures. The hardest lab is lab 7 in which you have to write a web server. It's not difficult conceptually, but it's difficult because there are many parts you have to keep track of. Make sure you debug your code constantly (instead of writing the whole lab in one shot) and get started early! Be sure you do well on the labs, since the averages for labs, unlike those for exams, are usually very high. \nPersonally I thought the listserv was a giant clusterfuck. However, if you care enough to look through all of the emails (questions about the labs, questions that have already been asked, emails from TAs exasperated at people who repeat the same questions), you can gain some useful tips for finishing labs or figuring out exam questions. Just make sure you search for your question before you create a new email, and don't reply-all to announcement emails. It's essential that you set up an inbox filter to filter all of these emails.	Two midterms and one final exam, all of equal length and each worth 25% of the grade.\nThe 10 labs are cumulatively worth 25% of the grade. Lowest one (raw score) is dropped.	7	22	3509	4758
79652	December 27, 2016	Her class was my absolute favorite in the CS core. \nHer lectures were crystal clear and the workload felt like the perfect amount. It was challenging enough that it would genuinely help me apply my knowledge of the material, but it was not overwhelming like in many of the other CS classes.\nThis is definitely one of those CS classes you can use to balance out your heavier classes. \nThe first half of the class is said to be easier for the Engineering people, and the second half of the class is said to be easier for the CS people. However, I found the first half to be easier (and more interesting/fun), and I am a CS person. So, this may or may not apply to you. \nProfessor Kim makes all of her slides available online, so you can take a peek at the material beforehand to get an idea of what the class will be like.\ntldr: The class is one of the lightest in the CS dept. She is a clear and approachable lecturer. Take a class with her if you can!	Psets and tests, one HW with MIPS	2	40	4221	4251
79653	December 27, 2016	This was hands down the hardest and most time-consuming class I have ever taken at Columbia.\n It was also my favorite. \nIf you really enjoyed AP and think you would enjoy getting into the nitty gritty details of Linux, take this class. \nJae is a good lecturer, but it seems that he is still figuring out how to teach operating systems, so his lectures are not as great as his AP lectures. Still, it shows that he put a lot of thought into the way the class and assignments are laid out. I found the order of the material to be pretty natural and easy to follow, but I'm sure the syllabus is still changing every semester as he figures out how to teach this class. \nAlthough I found the lectures and readings easy to follow, my team and I really struggled with the homeworks. However, I'll admit that part of the reason that we struggled so much was that we did the readings right before the tests rather than before attempting to do the assignments. So, if you want to make your life easier, do the readings before you get down to coding. There will still be some shooting in the dark involved, but not nearly as much as if you only rely on your knowledge from the lectures. \nThat being said, what made the class truly enjoyable was having an amazing team. None of us knew each other before OS, but we became close friends by the end of the semester because we were spending close to 40 hours/week with each other for this class. It seems like an exaggeration, but I promise its true. We got pretty decent grades on most assignments, but we made very little progress on other assignments (despite the crazy amount of hours we dedicated to working on them). \nThe tests are classic Jae-style trickiness. The curve was pretty generous though. \nIf you are interested in the material and aren't afraid of some hard work, go for it. You are only at Columbia for so long, and you can get a lot out of this class.	HEAVY\nHEAVY \nHEAVY\nSuper-long & tough Homeworks\nTricky tests	8	1	3509	2384
79656	December 28, 2016	I mostly agree with the reviews below but would add that Bellovin curves down (almost the entire class would have gotten an A or A- this semester based on numerical scores and so to change this a 93 was downgraded to a B+). \nA larger issue not mentioned here is that the assignments lacked foresight and the grading seemed arbitrary. There were several instances when instructions had to be clarified at the last minute before something was due or the rubric itself was incorrect and the grade assigned needed to be revised. \nA fourth homework was assigned during the week of final exams which should have been announced earlier or released during the semester. I also think it's better policy to make the course requirements more challenging and curve up than to make the requirements trivial and to curve down (this is especially true when based on the results of a final that students cannot see since the semester is over).\nNot an incredibly demanding course but not particularly substantive or rewarding either.	four programming assignments in c/c++ that take a fair amount of time, midterm and final are open book/open notes	1	0	3366	4907
79674	December 31, 2016	Ansaf is a strange breed at Columbia. I've never seen a teacher care so much about the academic and personal well-being of her students. Step into office hours and she exudes warmth and happiness.  Her and the TAs were very responsive on Piazza, and also very willing to listen to arguments for grading changes. Lots of partial credit on exams as well. Overall pretty easy class.\nHowever, the actually teaching quality has a high variance. I think she does a fine job of explaining stuff, but she goes extremely slowly and there is almost 0 value to actually showing up to class, when you can just skim the entire week's powerpoints in 20 minutes and have caught up on the material. \nOverall, I would definitely recommend this section. However, if you want a rigorous understanding of Discrete, and also to be challenged in class, I would look elsewhere. Jessica Ouyang taught a concurrent section the semester I took the class, but she was less popular simply because she offered those things and people (including myself) were too lazy and just wanted to get out of a requirement.	very light. 1 homework every 10 days. Homework takes about 5 hours to complete. 3 midterms (20% * 3 midterns + 60% HW grade)	4	8	13076	397
79709	January 09, 2017	Given the last review for Professor Nieh was written in 2013, I figured it is worth to share some more thoughts on this class.\nThis class is everything they say it is. Nieh will teach you everything you need to know about Operating Systems, and then some more. His lectures are fast-paced, dense and sometimes difficult to keep track of. However, he is a very good lecturer with an impressive command over the material. He will answer several questions during class, which sometimes gets frustrating as he digresses. If you pay attention, you will learn a lot, but you will often have to back up the concepts with the textbook to actually master the material.\nAnd then there are the homeworks. Oh God. Nieh will talk about the concepts in class and he will talk about the homeworks a little bit, but to be honest, you are all alone. They involve writing code into the Linux kernel. Not only do you have to read A LOT (I mean, A LOT) of C code to figure out what you need to do, you also have to be really good at C to actually implement what's expected of you in a reasonable amount of time. Expected to spend 10 hours figuring out what you actually need to do before you write a single line of code. Expect to actually skip homework on other classes to finish these assignments. They will make you a great coder (especially if you want to be a systems programmer), and you will actually master reading Linux source code by the end, but it's a ridiculously rough patch. You will also have to demo your completed homework to a TA after it is done.\nHere are the breakdown of each of the programming assignments:\n   - Writing a bash shell. This one is the only individual programming assignment and also the only one not involving kernel programming. It is probably the easiest to do, but it'll still take around ~10 hours to finish. I see this more as a weed-out assignment for the students who aren't as confident in C.\n   - Writing a system call to keep track of Android's interprocess communications. This is the first time you will write code for the Linux kernel and also the first time you will write a system call. It's not actually that difficult, but takes a lot to get used to the programming environment.\n   - Writing an interface that sleeps selected Android processes and makes them wait on designated light intensity levels. The main emphasis here is concurrency / synchronisation. Starting from this assignment, you will actually be using a physical Android device, which Nieh makes you buy. Expect to pay a total of $200 as a group of three. \n   - Writing a process scheduler for Linux. This is easily the most difficult assignment in the class. Most of the teams actually didn't do it and dropped the assignment. My team spent over 30 hours and still got a failing grade. I'd still recommend you to attempt it, since you may be tested on the homework.\n   - Exposing process memory to the user. This is the assignment that has to do with memory and paging in Linux. Conceptually can be a pain to figure out, but it's not actually a lot of lines of code. There are some weird Linux-related bugs which slowed us down, so expect to find hacky ways around them.\n   - Writing a file system for Linux. This wasn't that bad because the TA's set the homework up pretty well, but just like all the other homeworks, it's again a lot of time.\nDon't expect the grading to be nice because the homeworks are hard. We were constantly tested on weird edge cases that we didn't think of. Nieh expects the highest of you despite how difficult it is to even set up the groundwork for a lot of these assignments.\nTA's: Some are very good and some are very bad. Don't expect office hours to be helpful, they are overcrowded and if there are students scheduled to demo their homeworks, you won't get to even ask questions.\nTextbooks: There are two. One is very helpful for programming for the Linux kernel, especially early on. The other is helpful for the written components of the homeworks and for studying for the midterm and the final. If you could get one, get the Linux programming one.\nBoth of the tests are also difficult, with class averages around 50-60 percentiles. You may be asked on anything you did for this class, from the lectures to the homeworks.\nFinally, grading is OK with a mean around B+, but you leave feeling it could be more generous given how much work and patience this class expects of you to even get a score around the mean. Despite all of that, if you do your work, you will learn an incredible amount about operating systems, C, Linux, systems programming, concurrency, and even more.	(50% ) 6 homework assignments. There's a group component, which focuses on programming for the Linux kernel, each of which takes easily more than 20 hours of your time to finish (and often more). There's also an individual written component, which actually takes a maximum of 2 hours to finish.\n(20%) Midterm. Included writing out programs and short answer questions. Doable but not easy.\n(30%) Final, included programming, true or false questions and short answers. Final this semester was ridiculously difficult.	24	0	45	2384
79716	January 09, 2017	I really enjoyed this class. I had some programming experience in high school, which was very helpful, but there are lots of people who donâ€™t have experience and still do well. If you are interested in the subject and willing to work hard, this class is very doable. Cannon wants you to succeed and so do all the TAs. There are tons of office hours, which you should go to right away if you are confused, especially at the beginning of the semester because computer science builds on itself. My advice is to start the projects early (seriously, look at the prompt before class and then try to do half of it by the next class and then finish before the deadline) and get help often. You might want to look at some online coding courses before hand, but it isnâ€™t necessary. Many people take this class having never looked at code before in their life and are fine, but it is definitely harder because coding is a new way of thinking that might not work for you. Also, it is important to go to class because there were several questions on the final that are based on programs we went over in class but werenâ€™t explained in the textbook.	Heavy (8-10 hours per week)\nAlternating problem sets and programming projects\nMidterm\nFinal	3	1	515	7002
79735	January 12, 2017	Advanced Logic Design is a very thorough, very well structured, and meticulously planned course - exactly like Nowick, who teaches it. \nNowick goes through every topic in excruciating detail, but in the process tries to make sure that everyone in the class is following. This can sometimes cause him to be repetitive and boring, but that is just how he teaches. In fact, Nowick is one of those old school, proper chalk and blackboard kinda instructor who likes using multicolor chalks and handmade diagrams to explain his subject matter. I found this approach to be very useful as an effective learning tool, although I know some people who would disagree with me. \nThe course covers an entire range of topics and starts off at the most basically level, quickly yet steadily building up to more advanced concepts in Digital Logic Design. It is an essential course to take if you are interested in digital circuits especially hardware design.  \nNowick is particularly helpful during office hours, always willing to go over concepts with you. In class, he encourages questions and one can see that he wants every single person in the room to follow what he is trying to explain. \n4 Homeworks - 15%\n1 Midterm - 15%\nProject 1 - 15%\nProject 2 - 20% \nFinal - 35%\n1. The Homeworks are not terribly difficult but do take up your time. \n2. Midterm and Finals are both logic based. They take a concept discussed in class, and use it in a new way or put a twist on it. The exams are open book, open notes. \n3. Projects are extremely time-consuming, considerably difficult and have a lot of annoying documentation work along with them, which Nowick insists upon.\nIt is not an impossibly hard course but is very competitive, with class averages always very high for all homework assignments and tests. One small slip can often cost you your grade, since the competition is so fierce.	Fairly doable in the first half of the semester. Gets a little crazy, towards the last few weeks. On a scale of 1 to Digital VLSI (where VLSI is 10), I'd say the workload for this course is a solid 7.	2	0	46	6038
79772	January 19, 2017	The class is all about using AWS services to make web apps. You just need to make things work and show them to get marks. Lots of time is wasted in debugging and doing silly things that don't teach you cloud computing, but just DEBUGGING.\nThe cloud concepts are somewhat covered in lectures partially and you are expected to learn yourself too through readings assigned every week.\nOverall, a good but unorganized course with more workload than it is supposed to have. You will definitely learn about many cloud technologies and will be able to make simple cloud apps that can impress someone.\nIf you have time to code and do a super project oriented course in a semester, take this course!	10 papers\n2 quizzes\n3 small projects\n1 final project	10	0	10198	7022
79782	January 24, 2017	One of the worst classes to take- strongly advised against taking this course.\nThe faculty initially starts with a study-plan that seems great on paper, but is seldom followed as promised. One of the key points of the class is said to be "REVIEW SESSIONS" - where the professors help the students come up with business Ideas.\nNot only were these sessions unfruitful, they were often confusing; with the professors' changing their stance on an idea every alternate session. The professors require that we come up with innovative ideas, yet they outright reject any direction that they think may not be interesting.\nRather than having a discussion about an idea, or even giving a new direction to the same, the faculties insist on changing the proposal - even up till the last few weeks!\nThere is hardly any incentive on the amount of hard-work given in the class, as your grade only depends on whether the professor likes the final presentation or not.\nMore often than not, it seems that the professors make a call by the mid-terms about every group and barely change their grading, despite the amount of effort put in.\nThis is not only unfair to people who are not grasping the ideas taught outright but also rewards those groups that have been judged positively over other groups in a biased manner. There seems to be no scope for improvement for people who are lagging behind, or whose ideas the professors do not agree with.\nRather than being an academic experience, the course simply boils down to an episode of Shark Tank.	Highly dependent on whether the professors like your business proposal. If they do, the workload is negligible. Otherwise, it would require medium high workload.	6	0	13348	7097
79788	January 26, 2017	Augustin is a very enthusiastic, friendly guy. He goes out of his way to encourage people to speak during class, even as far as to buy apples before class and give them to people who raise their hand and participate in any way. You can respond to one of his questions correctly, incorrectly, you can ask him to repeat the question, you can ask "may I please get an apple", as long as some sound passes between your lips he will give you an apple.\nThis class was much more theoretical than I anticipated. Augustin attempts to summarize papers on sociology, graph theory, social psychology or other topics related to models of large-scale social behavior. Some of the models make sense, for others he makes no attempt to prove that they reflect real-life trends; they simply seem like one person's interpretation of a complicated phenomenon.\nAfter giving a bit of intuition for the motivation for the model of the day, he dives into a heavily mathematical proof for all sorts of bounds relating to the proof which can quickly become overwhelming. He often lingers on finishing up algebra for longer than necessary, but then makes overestimates our knowledge of certain statistical / linear algebraic theorems and rushes through parts of the proof that seem to fly over most people's heads.\nThe homeworks usually involve taking the ideas covered in class and generalizing them and proving those generalizations, which was almost impossible to do on one's own. Nothing is googleable.\nAs other people have said, Augustin is very disorganized. His homeworks are hodgepodges of older homeworks along with new questions hastily written with minimal proofreading. The data challenges took a while to put together, and when they came out we had relatively little time to prepare our setups. The TAs did not fully understand a lot of the material, and we would often have to "learn together" during office hours. For a 4995, this class felt more like a 6998 (which I believe it used to be).	4 HWs: Some proofs in the beginning (all pretty difficult), occasionally a programming question, and then a few short-answer questions at the end that required you to apply some ideas from class to a hypothetical situation (rather easy).\nThere was going to be an essay, but due to disorganization he gave it to us as a bonus assignment...to be done over winter break after the class had ended\nMidterm: if you looked through the practice midterm carefully you had a decent amount of the material covered. The problem is he has this ridiculous format that involves picking one, multiple, or none of the multiple choice options, and then writing a short justification below of your choices. The short justification did not seem to matter\nFinal: Again, look through the practice midterm carefully and you'll have a lot of it covered.\nData Challenge: First one was very tricky, took me probably 17-18 hours total, it's very difficult to know how close you are to a good solution until you get there. Second one was stupidly simple in comparison, required very rudimentary data analysis, as long as you made sure to mention a bunch of topics from class and tie them into your findings then you were fine	3	0	11579	7099
79789	January 26, 2017	This was Jessica's first semester teaching (she's a PhD student in Computer Science), but that's not necessarily a bad thing. She was always prepared for questions and had reasonably thought out lecture material. I've heard that her class was harder than Ansaf's but that's not necessarily bad either. More importantly, Jessica is relatively engaging in class, helpful at office hours, offers (maybe too much) extra credit and does all she can to make sure you learn and do well in the class.\nA side note: a lot of people fled this class when the first week finished because she assigned far too much material, but she recalibrated after everyone let her know.	HW assigned weekly (5-8 questions usually)\n   - Both proofs and computation\n   - Generally quite doable given the time frame\n   - Harder than the tests\n2 Midterms (75 minutes each)\n   - Each covered several chapters\n   - Reasonable in difficulty, and she gave hints on the one question everyone got stuck on\n   - She adjusted the scores on one of them\nFinal\n   - Cumulative, but with the bulk of the material covering the last third\n   - comparable to a midterm but longer	0	0	13298	397
79792	January 26, 2017	Cannon is a very engaging lecturer who explains the material pretty well. His jokes elicit a non-zero amount of laughs consistently, he jokingly thinks the class hates him, and he gives you riddles that have only a tangential relation to the class. \nMore importantly, this class provides you with a bunch of background knowledge for CS, moreso than any Java programming proficiency, something that will come in Data Structures. It's a wide breadth with a little depth, but he and the TAs do an admirable job explaining concepts and answering questions, preparing you for the (reasonable) midterm and final.	HW: It's weighted quite high, with alternating problem sets and programming assignments week by week. You get some credit if your code compiles and if your style is good, which is good if you can't figure something out once in a while.\nMidterm: a mixture of term recall and multiple choice, mostly covering concepts in Java and sorting algorithms.\nFinal: cumulative, terms, multiple choice, and a few short answer problems. If you do way better on the final he will weight the midterm less for you.	2	4	515	3807
79794	January 27, 2017	Martha Kim was a great lecturer. She basically followed the textbook's cues, but she did put effort into explaining the material, taking questions, and teaching well. She is genuine and helpful during office hours and tends toward leniency. She never came off as jaded, mean-spirited, or apathetic, like a lot of professors here do. When students pointed out to her that a large CS Theory assignment and a large AP lab were both due on the same day as one of her assignments, she agreed to push her deadline back a few days and give us the weekend to work on it, which was pretty cool.\nThat being said, she really screwed up the grading for our semester. The first two projects were too easy, with median grades around 95, and the last project was too hard, with a median grade around 40. The curve depended mostly on the third project -- in other words, our performance in the class was more or less determined by one assignment. To some extent, she admitted that she made mistakes and was trying out the project-based assessment scheme for the first time, and she curved the class generously to compensate. I don't think she'll let that kind of thing happen again.\nThe TAs for the class were pretty bad. More often than not, it seemed like they didn't know what was going on. This could be attributed to the brand new set of projects Martha developed for the class, with which neither the TAs nor the students had any experience.\nOverall, good teacher and very interesting material, but bad support from the teaching staff and very messy grading.	Four projects: the first two weighted 20% each, the second two weighted 30% each. No other coursework.	5	26	4221	4251
79819	February 09, 2017	Jae is one the worst professors I have ever had. He is discouraging his students by telling them that they are essentially losers for not remembering C code syntax. He has no new knowledge of the recent updates in the C and C++ language, which makes no sense as a computer science professor at an elite school. \nJae teaches this class with the passion your dad has for reading you washing machine manual. He is boring and uses abstract class notes, while not following any reading order, just to confuse you even more.\nHe uses an old school teaching method where telling a student he sucks should motivate him or her to do better and try harder.\nThe grading system is unfair and discouraging. The exams are ridiculously hard and don't reflect in any way how much of a good programmer you are. The problems on the exam are tricky and concentrate on memorizing syntax and Linux command line outputs, also if you understand tricky instructions.\nJae exploits the fact CS students are obligated to take AP to demoralize students. With so many good CS professors that Columbia has to offer, it is a shame one has no choice but to take AP with Prof. Lee.	Heavy and tricky exams.	30	10	3509	4758
79825	February 17, 2017	One of the few classes in Columbia where you will learn some real software development. Don is an excellent professor.\nThe course structure is loosely defined and there are no guidelines that he follows. In spite of this, he dives deep into anything that students gain curiosity on.\nHe teaches the course to make students learn and not just slog for grades. Therefore this course is a sure shot 'A' unless you really mess it up.	As hard as you want to be(Want to learn more? Make sure you spend a lot of time in this course)	13	0	6653	7102
79845	March 10, 2017	Jae Lee is a terrible professor. I wouldn't even want him as a TA for this class. \nHis two main objectives are: Make blisteringly difficult homeworks and tests, and catch cheaters. \nYou will hear him talk about cheating in almost every lecture. It's his favorite subject. He sent out several unprofessional emails to the class ranting and raving about cheating, including one where he called cheaters "douchebags". At the end of the semester, maybe three weeks before the final, he sent out a threatening email to those he suspected of cheating saying they had until the next morning to reply as to whether or not they cheated and the first word of their email had to be yes or no. If they said no there would be a formal investigation and the consequences would be much worse than if they just admitted cheating. He sent this email on a Friday night, where no one would be at the school to advocate for, or give advice to the students who received the email. I had some friends get the email, who didn't think they had cheated, but because of the threatening nature of the email, they didn't know what to do. Some of the cheating accusations came from homework assigned toward the beginning of the semester. So he waited until just before the final, when stress was highest, and sent a threatening email forcing students to incriminate themselves, or else. \nOne student gave him a doctor's note because they were sick during a test. He didn't believe them, and passed their note around to the TAs. There is no reason for him to share someone's medical information with TAs. \nThe tests were ridiculous. He gives you tests from past semesters to study from, but all they will do is show you that your test will be just as impossible as those were. The averages were low, something under 50 for the midterms, I believe. This is the only class I've ever had where I felt like I wasted time by studying. I don't care if I get a B+, if you give me a test where I get 40/100, I'm going to feel stressed and deflated. \nThe homework was insanely difficult and time consuming. If you have a ton of experience programming, far beyond Intro to Java and Data Structures, it might not be so difficult, but it will be time consuming. Think 20-30 hours per assignment toward the end. \nThis listserv for this class is annoying. You get dozens and dozens of emails a day. It's not well organized. \nThis has the opportunity to be a great class. Knowing C and C++ is very valuable. This class should not be taught by Jae Lee. No class that is required for a major should be taught by this man. People should be able to choose whether or not they want to subject themselves to his teaching. It blows my mind that he has good reviews on here. I feel like I'm looking at a conservative's Facebook page filled with pro Trump propaganda. The only reason I can think for this is that you've never felt relief like being done with this class. If you struggled through like most of us, you'll probably never want to think about AP again, let alone write something about it.	Absurd. If this isn't your only class, I hope you don't have a scholarship.	50	22	3509	4758
79864	April 03, 2017	Literally hagrid. \n11/10 prof	just about enough	26	1	3409	4
79881	April 07, 2017	The bad:  the homework requirements are left with intentional vagueness.  It wasn't until midway through the semester that it was clarified that this was by design and that Steve's philosophy is that in the real world there is ambiguity, so programmers will be expected to apply their own judgment in assumptions when writing a program.  Having worked in cyber security, I don't totally agree... but that being said, it's good to know upfront that you have a lot of latitude in defining the requirements so long as you document your decisions in your readme.\nThe assignments themselves were time consuming, although not necessarily hard.  The thought process is different than most other programming classes: you can't merely write a program to fulfill an outcome, and have to consider how the program can be exploited by attackers.  Your goal in writing is to consider the flaws and add robustness to reduce exploit vectors.\nThe midterm and final were open notes/open book and scenario based, so it wasn't a matter of regurgitating material as you had to consider circumstances and apply what was covered in lecture.  More CS courses should adopt this format.    \nThe lectures were fantastic, and kept pace with real world developments in security.  The class was at a particularly interesting time late in the 2016 election season when there was a lot of pub about Hillary Clinton's E-mail server and the hacking of the DNC E-mails.  Steve's experience dates back decades and he has a lot of interesting stories which compelled me to research further on my own after class.	Four assignments, two week turnaround for each.  They required a good bit of time, but nothing that was rocket science.	0	0	3366	4907
79893	April 13, 2017	Awesome professor! Course grade is purely based on midterm and final. Homework is assigned but not graded He posts lecture slides for reading, but will actually lecture on the board though. Goes through the material in a very clear manner and explains everything. He actually works really hard outside of the class to make sure he covers all of the points necessary. Compared to Martha Kim, he will cover and emphasize more of the theoretical concepts of computer systems which gives you a much better understanding than just doing four/five projects in Kim's course. If you don't care about learning the material and would rather just read it on your own, take it with Martha Kim. If you would like a great lecturer, take it with Rubenstein!	Weekly homework set that's not graded. Technically NONE	24	2	2427	4251
79944	April 25, 2017	Professor Edwards is fantastic. He is engaging, funny, and extremely smart. This was a really great class, and I learned a ton. That being said, the project is definitely a ton of work, so start early! The material that you learn in class doesn't help much with the project itself. So, don't worry about starting the project before you feel like you learn the relevant information in class, because you likely will learn the information way after you need to already have applied it to your compiler.	Midterm, in class final\n3 short homeworks\nGiant Project	1	1	1637	3105
79969	May 02, 2017	I cannot stress enough how awful this teacher truly is. He will teach you absolutely nothing. He does not explain anything thoroughly. He cannot answer any questions. His slides are a total mess. If you can avoid taking this class with this teacher, I highly recommend you do.	Heavy and painful	13	2	4057	1921
79970	May 02, 2017	I took this in Fall 2016. Disclaimer: I got an A+.\nDiscrete math is an easy topic, but the professor is a bad, boring, slow lecturer, and the TAs are neither very friendly nor understanding (although very responsive). They all seemed to think they were much smarter than every student--and I'm sure they all A+'d the class and think this is easy stuff, but that doesn't give them an excuse to talk down to us. I have friends taking this now (Spring 2017), and they also think the TAs are very full of themselves and have times gotten into little spats with students on Piazza. They're constantly arriving late to office hours, sometimes unable to solve the homework problems that they make and assign themselves, and overall just incredibly pretentious.\nTake this class with a different lecturer--or just different TAs--if you can.	1 midterm, 1 final, problem sets about once every two weeks	5	6	13076	397
79983	May 04, 2017	Disclaimer: AP has been my favorite class at Columbia. \nThe word around the street is that Jae is not as good in OS as in AP but I think people who say this are being unfair. Kernel hacking and OS theory are by nature tougher beasts. There is no easy way to approach the material without severely watering it down. I found AP to be more enjoyable but only because I never felt lost. Yes there were some frustrating debugging moments but I always knew the path the success. OS was different. I felt completely and utterly lost multiple times while doing the hws. I questioned my love of coding, my humanity and my sanity, all while cussing out this class and the kernel documentation. Jae thrusts you into the wild with just the basic necessities (the roadmap for HW7 was generous and appreciated) and we were forced to find our way home. Some can consider this bad teaching. I think of it as tough love. It was necessary to push you to the next level. AP was for teenagers, OS is for adults. Once I became more comfortable with the kernel and its ways (around HW7), I found the class just as enjoyable as AP. Overall, great experience. I only refrain from ranking OS among my favorite courses since I am pretty sure it gave me PTSD. Maybe in a few years I will look back at OS with endearment. \nThe tests....They are much worse than AP's... coming from a guy who got 100 on the AP final. The T/F and multiple questions are really impossible to prepare for. Although the curve evens it out, I think it doesnt give students who've mastered the material a good opportunity to shine. \nIf you loved AP, you'll love this class. You learn a ton. Some example HW's were building a scheduler and a filesystem for Linux. \nI maybe would've liked if Jae spent more time on OS theory and less on Linux specific stuff.	disclaimer: my group was shitty and I carried ~80% of the work. If you get a great team, then maybe the work is more manageable. \nINSANITY. \nINSANITY.\nDo yourself a favor and only take this class on a light semester or be prepared to neglect all your other classes. OS is easily 3 times AP workload. I was taking 6 courses at the beginning of the semester and it was impossible to do well in every class. I ended up dropping one but only after my midterm grades took a serious hit. The work load for this class is insanity. I was warned but I did not heed the warnings since I received the same ones for Data Structures and AP, which I found to be easy and very enjoyable. OS was different. HWs 3,5,6,7 averaged over 40 hours of work. This class alone was WAY more work than all my other courses combined (4 in total). The fact that this class is only 3 credits is insulting. It is almost a full time job.	21	2	3509	2384
79984	May 04, 2017	He's not a terrible teacher, but studying for his class was a nightmare because he's unorganized and lazy.  For the midterm and final (70% of the grade) he gave absolutely no guidance of the test's subject matter or format.  He would upload midterms from other teachers with the not that his tests would not be similar.  He is unresponsive on piazza to valid questions, with him/the TAs leaving most questions unanswered.  \nWhen students complained that they were unclear on one particular topic, his response was to upload a bad black/white scan of an entire chapter of the textbook.	7 HWs including 2 long programming assignments.  1 midterm, 1 final.	2	2	4210	4902
79988	May 05, 2017	Adam Cannon is a great professor if you're looking into the computer science field. He is a very good lecturer and explains the material very well. Along with that he keeps the class light and interesting so you won't lose focus. This is not a lecture you can skip though (well you can but I would not advise it), the class moves very fast and if you don't go you could miss out on important information for the problem sets and programming projects. This is a great class to take if you don't have any experience in the computer science field. Do not be discouraged if you don't understand stuff in the beginning the learning curve is big for this class. Along with that the TA's are very knowledgable and will help a lot. They all have different office hours as well as on Sundays when you can go to the class room for more help. There also is a Piazza page for the class to ask questions and they will answer fairly fast. Also, the curve is pretty big for this class.	The weeks alternate between a problem set and programming project(Do not leave these to the last minute); 1 chapter of reading a night (DO IT or you will not understand the homework's at all); Midterm in class with definitions and multiple choice (the practice questions he give are very similar to what you will see on the test and if you can get your hands on someone else's midterm from a past semester of his class it is super helpful and similar); Final with definitions, multiple choice, and short answer which includes writing some code; Heads up this is not an easy A course	5	2	515	7002
79991	May 07, 2017	As a senior, this is possibly one of the worst classes I have ever taken in the Columbia CS department. Full disclosure: I got an A in this class, so this isn't just whining.\nProfessor Ansaf is super nice but incredibly disorganized. She never showed up to class on time, and every class had "technical issues" that would last the first 15 minutes of lecture time. Furthermore, when she would teach, it would be rushed and very high level, when what you needed to know on the exams and homework were much more detailed. Again because of her disorganization, the first half of the class was very laid back - there was very little work and only two homeworks. Then, for some godforsaken reason she decided to assign homework 3 (the 2048 game, in my opinion, the hardest homework because of the necessary optimization problems) and have the midterm two days apart. It was endless sleepless nights because the homework took so goddam long and so did studying for the midterm. Her practice exam was only slightly helpful, and neither were her lectures for the midterm.\nSide note: her exams don't test knowledge. They test speed. The midterm exam was absolutely ridiculous because it had about twice as many questions as were possible to answer in that time period. It was super frustrating, especially since none of the students knew that coming in, so a lot of people absolutely bombed that exam when we actually knew the content. When I went to talk to her about it, she said she wasn't going to help because everyone was graded on a curve. Okay, thanks for that nonexistent help. \nFinally, the last half of the class was incredibly rushed, because she realized she hadn't taught any of the topics she needed for the homeworks. So instead of giving us time for the assignments by spacing them out, she instead gave us an assignment every week. The homeworks are incredibly time-consuming (because you always have to optimize over and over again) so you barely had any time at the end of the semester to do anything. Finally, the final again was ridiculous. \nAll I can say is that I hated this class. Professor Ansaf was disorganized and there were only 1 or 2 TAs that were actually helpful. In essence, take this class only if you're prepared to learn everything on your own, and get no support from the professor besides a curve.	5 Homeworks - 50%\n1 Midterm - 20%\n1 Final - 30%	10	10	13076	26
79992	May 07, 2017	Before I write this review, I would like to preface it: Professor Ansaf is probably the nicest, most committed teacher I have ever had at Columbia. She was incredibly personable, and always had time during her office hours to help or chat. \nSo...I didn't think this was a good class. I know a lot of seniors took this class because it was supposed to be relatively easy where you still learned a lot. Unfortunately, neither of those were true this semester. This could be because this is the first time in two years that this course has been offered, or perhaps because she (very nicely) expanded the class to 275 students, so there was less one-on-one time with instructors. As it was, the Professor would show up late (despite her best efforts) every class because of a meeting directly prior to class. That's unfortunate, because it means the first 5-15min of class were used for setting up instead of lecturing. I think if the Professor knew she would be teaching a class at 1:10pm, she should have scheduled her meeting for another time (or vice versa). \nAdditionally, the class was incredibly disorganized. The homework instructions were generally incredibly vague and because of that on Piazza there would be -- I kid you not -- 50-80 unanswered piazza posts during homework times. The homeworks were also badly managed, as they were more rushed in deadlines towards the end of the semester. Also, there was a time where a homework was due the same time as the midterm, which was incredibly distracting and in my opinion badly managed. Considering how much time the homeworks took, it was relatively disorganized schedule-wise.\nThe exams weren't much better - instead of testing the actual content of the class slides/lectures, they tested your speed in problem solving. If you're able to do each problem in about a minute to 5 minutes you'll be fine -- but that was not typical. If you take the exams, I recommend that you first focus on the highest weighted problems first -- aim for the max points in the least time, not about going in depth. The practice problems are good for general formatting, but not on timing. If the professor had added more practice problems for exams I think that would have helped. \nFinally, the TAs were generally useless. Of the about 10 TA's, all of whose office hours I went to, only about 3 were consistently able to answer my questions and help me on my homeworks. Jimmy/Ruicong was the best TA so I hope he stays on if this class gets taught again. \nIn general, I wouldn't take this class again. I didn't feel like I learned anything, and the homeworks were just implementing algorithms in a really convoluted way.	1 Midterm - 20%\n1 Final - 30%\n5 Homeworks - 50%	15	15	13076	26
79997	May 08, 2017	Done with final, feel I have the right to write the review. \nFirst, let me say: \nProfessor Xi Chen is so CUTE! \nIn terms of the class, as people reviewed before me, he is rigorous about proof. He has pre-made slides, which could have some typos, but his lectures can be a little different. He is a good lecturer and very helpful during OH. \nAlgo I covers a lot of topics in just one semester. If you think it's an upper level data structures class, then I want to tell you it's much more than that. It's like C++98 to C++17. I just want to say that we really learn a lot of different algorithms and the proofs about their correctness. \nThe problem sets are mostly exercises from CLRS, our textbook. Some problems on them are doable, some are not (not for me, sad). I had to go to OHs to figure out where to start for some of the homework problems. Midterm and final are about the same difficulty but midterm was given shorter time. \nI'm not sure about grades, but the amount I learned is enough for me to not care. Although there are much more master students and a few PhDs, I think the number of undergrads taking this class is about 20. Very happy :)\nSome advice:\nread the textbook; it takes iterations (for me) to understand things. \ngo to OH if you can; TAs are totally amazing, they see a problem and they solve it already. \nstart the problem sets early because they could literally take 20+ hrs to do; I typed in latex which takes time too. \nWho might enjoy taking this class: love solving puzzles, when you get to know some underlying reason of how this works (usually related to math) you will get excited, can find connections between different concepts, want to rigorously prove something, etc. \nPrereq: I was doing okay without CS theory, but I would consider discrete math a must.	7 psets, 1 midterm, 1 final.	0	0	12932	4079
80014	May 12, 2017	AP is a very good and well-organized class. Labs are not too hard but tedious and the instruction in the lab is sometimes not clear. Exam is not that hard. Don't listen to the rumor, you can ace the exams if you really understand the material inside out. \nJae's teaching is clear and to the point. However Jae is a terrible human being. He is disrespectful to some students even though some of them are already working and have possibly accomplished much more than Jae in other fields.	Pretty heavy. 10 easy labs. 3 exams	9	33	3509	4758
80019	May 13, 2017	Great topics course from a great professor. Rocco is great at concrete complexity! Comprehensive survey of different low-level computational models (Boolean formulas, decision trees, branching programs, and constant depth circuits) and representative lower bounds in each model. We used communication complexity, linear algebra, and Fourier analysis of the hypercube as tools throughout. He proved all the results he presented, which was impressive: usually it is hard to present state-of-the art results due to the length of the proofs. Very convincing and thorough.	Sporadic homework (10%)\nScribe notes for one class (30%)\nFinal project (40%)	5	0	1724	7145
80020	May 13, 2017	This was not the most interesting theoretical computer science course I have taken. Sure the material is very canonical: approximation algorithms for all of the standard problems, lower bounds, and reductions. However, it just did not hold my interest. The algorithms were all presented well, but they just were not that interesting. Perhaps part of the problem is I had seen most of the material before. But moreover, because each class we looked at new algorithms, it did not feel like the class was going anywhere, but rather starting over with a new problem each week.\nOverall, not a bad class. Teaches you all the approximation algorithms you would want to know. Most of the material you would need to get started in the field of algorithms.	3 rather long problem sets.\nA final paper, 10-15 pages, based on outside readings and original work.	0	3	2941	6886
80037	May 14, 2017	A well-executed class. Tal Malkin is very clear, puts a lot of effort into teaching, and knows that mathematical maturity among her audience varies wildly. Thus, she gives intuition as well as rigor, followed by many examples. She likes to get people to participate in lecture by answering or asking questions. This can be either illuminating or frustrating, depending on said people in class.\nFor the most part, lectures followed Sipser quite closely, although she merely sketched many of the more involved proofs, e.g. for PCP. The material was interesting enough, and she tries to give some motivation or application. However, the complexity portion of the class was much too rushed: we skipped many proofs and handwaved everything else.\nRecitation notes were regularly posted, and these were quite long and poorly LaTeXed but very thorough, so I can't complain.\nMost everybody who takes this class has to, so I recommend taking her iteration of it.	9 homeworks, 1 dropped - 15%. Requires a little but not too much thought. Sometimes annoyingly tedious, especially in the beginning portion of the class where formal rather than high-level descriptions were required. The TAs seemed to grade reasonably, although once I had 5 points taken off a proof which was "lazy" (i.e. sneaky) and "didn't do what they were looking for", which seemed silly.\nMidterm - 40%. Very easy, although the previous semester's (= our practice midterm) was a bit harder. 2 double-sided cheat sheets allowed.\nNon-cumulative final - 45%. A bit harder, much more proofy. 2 double-sided cheat sheets allowed.	7	36	1621	234
80081	May 27, 2017	The worst Analysis of Algorithms class you can take. She grades really bad, and even \ngives F to some people.\nShe teaches easy concepts in the class, and makes HWs really hard. Mid-term and final are way harder than the HWs.\nGrading--\nShe will tell initially, she will grade on a curve and everyone will be fine. But in the end, she will mess you over. She grades absolute. I know a "lot" of people who got a C in her class. She grades the mean as B-.	A lot. The HWs and exams include a lot of concepts not covered by her in the class.	15	2	13070	4079
80098	June 02, 2017	In terms of material learned, this is an excellent course and I left the course feeling I had a great understanding of C/C++ and an improved understanding of programming in general. Jae is very generous with his curve and 55 points (of total course points) ended up a B. I read the text, watched videos on Lynda, and went to TA OH and found the labs totally doable but EXTREMELY time consuming. With Lab 7 probably taking me 20 hours to complete. The short answer/long answer midterm exams were (I assume) intentionally impossible with class medians hovering around 45. The final was fill-in-the-blank, multiple choice, true/false so was much much easier. Jae will send you practice exams. Do all of them. One of the hardest things about his exams is the way he words his questions and attempts to trick you, so practice exams help. \nAs an instructor...I found Jae to be too disorganized to learn from and preferred to study with my own materials. Pedagogically he was, honestly, a nightmare, a nightmare barely concealed sadist. and sometimes would send emails that told students they must "suffer". He also uses language like "punish" when speaking of how he likes to "punish students who don't do ____". Before he announces his miserably low medians, sometimes he will laugh for an extended period. etc. I found his teaching style completely creepy. And encourage Jae to get out his sadistic impulses in a more consensual environment. My friend told me some students thrive under these types of psychological tactics and are pushed harder. not me. and not many, many students I know. He is the only professor who teaches this course. So try to let his bizarre, upsetting, behavior roll of you. You will learn a lot. Just ignore Jae.\nAlso, don't cheat. Just don't. Jae is known to be obsessed with finding cheaters. And if you get caught, I have heard it is extremely unpleasant.	heavy. but as long as you don't procrastinate, completely doable. Others have written more on coursework break down below. \nALWAYS check that your program compiles in your submit directory! ...or automatic zero :(	42	7	3509	4758
80128	July 07, 2017	Not the most exciting class but Stein was great at explaining everything and making the class pretty engaging. The materail in the real world is hard (most problems are unsolved) but the class wasn't. Workload was pretty low - weekly problem sets were easily graded though not always easy. The midterm and final were just like the practice tests and both allowed cheat sheets so no memorization was necessary. The projects was pretty open ended - some required coding, some just analyzed a scheduling problem. Most people in the lass are second semester seniors so it definitely isn't a huge burden.	- Almost weekly problem sets\n- Midterm\n- Project\n- Final	0	3	1342	NA
80183	August 29, 2017	The lectures were very interesting and the course material was well chosen and well presented. The professor's office hours were also very helpful. He does not give away the answers to problems (although students may accidentally do so by asking the wrong questions), but he does provide very useful help if you are stuck.	The problem sets for this class were very challenging and sometimes took 5-20 hours to complete. This number varies wildly because the point of the hard problems in the set is to come up with an idea for an algorithm (or a hardness proof showing that there cannot exist an efficient algorithm), and the time this takes depends on how long you have to brainstorm until you think up the key ideas.\nThe midterm was too easy. The final was extremely challenging.	4	0	12932	462
80195	September 06, 2017	Professor Cannon is great. A truly wonderful teacher. That does not mean he is easy; he is expectant because he wants to do justice to both his students and the reputation of Columbia in the Computer Science community. Cannon is a tough but fair grader. Go to his office hours if you need help as he is more than willing to lend a hand.\nI wish he taught more courses.	Medium-heavy to heavy.	7	2	515	7002
80196	September 06, 2017	Great professor. As mentioned above, literally Hagrid. Has a booming voice that is easy to understand. Homework assignments are tough but fair. Exams are similar. Will not try to confuse you; go to class, read the book, and you'll be prepared for the exams.	Medium-heavy to heavy.	17	3	3409	4
80205	September 12, 2017	Professor Edwards is an awkward turtle, but likely one of the best lecturers I have ever had. This course is a heavy amount of work, but I can't imagine someone better to inspire a passion for programming language design as well as compilers (although he himself recommends Aho). \nLike everyone said before, the final project is a monster, it's really the whole course in one project. That being said, this is one of those classes where almost all the theory you learn in lecture can be directly or indirectly addressed by the design and coding of your project. \nEveryone says to pick an amazing team, which if you are like me and took the course your first sem in Columbia, is like saying try really hard to get lucky. Nevertheless, whoever your team may be, it pays off to work on your project incrementally and try to get everyone involved as early as possible. In the end, I think he mentions almost all projects get good grades although you'll have to work hard on yours. \nTL;DR: Take this class if you're really interested in the subject matter. Not a good class to tack on for a GPA boost or to check off a requirement.	Heavy, but fair.	1	2	1637	3105
80215	September 16, 2017	I don't know why there hasn't been a review of this yet! This class (taken Fall 2016) is an amazing class, and Professor Reed is -the- man to take it with. He's extremely nice, funny, and accommodating. The lectures move at an easy but reasonable speed, and the professor takes the time to provide intuition for and break down all the math and algorithms (if the diagrams in the slides weren't already good enough). At the end of some classes, we even watched some funny old shorts that showcased whatever concept we learned that week and that led into a bit of the interesting history in graphics. There were plenty of resources available - all the TAs were super helpful in office hours and on Piazza too.\nThe class is also well-paced in that the amount of work is relatively light throughout the entire semester, though we still somehow went through a lot of content. We go through things like colour theory, lighting models, basic algorithms for geometry (ray-object collisions), and their application to ray-tracing and pipeline rendering, interspersed with some short review o graphics-related linear algebra. Once the basic rendering process is down, we also get into optimization through special data structures, and sampling methods. By the end, we will have made a few interactive animations in OpenGL and a full-featured ray tracer. Each assignment builds slightly on top of the previous--so you need to know be willing to organize and architect your code a little (though he goes over this too).\nI definitely felt giddy and proud of myself after reaching each milestone, as the images my program could generate looked more and more awesome and expressive.	Relatively light workload: around 1 assignment supposedly every week (but it ended up every 1.5 weeks), graded leniently as long as you implement the algorithm correctly (check against the example outputs/oracle, and pay attention to the gotchas that pop up on Piazza or in the slides).\nFor each assignment there's an optional creative submission, though unlike the competitive pit in Computer Animation, this is just for fame + maybe a few bonus points at the end.\nThere's a final exam too that's designed to be relatively straightforward for people who've attended the class or read the textbook, and have done the assignments. For us it was a series of short answers. It was pretty relaxed, and most people finished way ahead of the time limit.\n80% Weekly assignments\n20% Exam	5	0	2060	2634
80226	October 11, 2017	(Fall 2017)\nPros\nI really love the homework assignments for this course (which are pulled from MIT's Distributed Systems class); I find them incredibly relevant and interesting programming challenges for distributed systems. I also love that the instructions and test cases are all given ahead of time. It gives me a lot of time as a student to start early and make sure I write my program correctly to earn full points.\nThe TA is good, but I wish he would hold more than once regular office hours per week. One hour of office hours each week is not nearly enough for a class of this level that has ~80 students.\nCons\nI find Prof. Geambasu's classroom delivery to be disorganized and hard to follow along with. I am not a fan of how she writes the lecture notes word-for-word on the blackboard, and she sometimes trails off while explaining something. There were several instances (e.g. first lecture of Paxos) when I went to the TA after class to clarify a concept, and was told by the TA that the professor made several mistakes when explaining the concept in class. \nThe lecture notes are decent, but could be formatted better.	4 large programming assignments, each taking 3 weeks and 15-30 hours per assignment	0	0	11580	6844
80230	October 22, 2017	Awful. She's nice enough but doesn't know anything about academic policy, running a class, or how a curriculum should be designed. While her lecturing is clear, she's an absolute bore, and you will do well by just reading the slides.	She's been changing it schizophrenically	71	0	4221	4251
80248	November 12, 2017	I took Machine Learning with Professor Pe'er in Spring 2017 - I've been tardy about writing a review, but I feel it is necessary. I am genuinely in awe at how bad my experience in this class was, in seemingly every way.\nTo start: Professor Pe'er. It is fortunate that this man is, in fact, a professor - were I to call him "Instructor Pe'er", one may get the false impression that he is capable of instructing anyone. He is not. I have never seen a human so uniquely unsuited for pedagogy as this man. His classroom delivery is a complete trainwreck - when he's not stumbling over his words or saying "ehm" for 15 seconds, the words he does say are incomprehensible, even when explaining material that is clearly within students' grasp. Unfortunately, most of his lectures did not fall into this category, as the prerequisites for this class grossly understate the necessary statistical background. As a CS student with only an intro-level stats background, I rarely had any idea what the hell was going on in lecture. Professor Pe'er's attempt to bridge this gap was laughably insufficient: he spent one day at the beginning of the semester attempting to speed through all of statistics. It didn't play well.\nHere is how Pe'er explained what a convex surface was: he brought a muffin into class, and passed it around the room. Here is how he explained differences in dimensionality: he printed out a picture of Antarctica, wrapped it around an apple, and placed it under an overhead projector. He proceeded to stab the apple with a knife, cutting out the outline of Antarctica. I wish I were joking. One gets the impression that he might not know the difference between "preparing for lecture" and "purchasing lunch".\nThe homeworks, while being the only useful part of the course as far as my own learning was concerned, similarly left a lot to be desired. Each problem set was written in impossibly dense and questionable English, requiring several hours of what was essentially decoding by TAs and other students before the meaning became clear. After this, the process of completing the homework wasn't much better. There was a STRONG emphasis on the mathematical background of the material, which I wasn't a fan of: despite having completed a course in machine learning in the computer science department, I feel I've gained almost no intuition for how/when to use the models we supposedly learned. Focusing on the math behind ML seems to be typical of 4705; this could have been fine if the instructor was capable of pulling it off. He was not.\nEven Pe'er's slide decks were of marginal use, combining incomplete/incomprehensible sentence fragments, mathematical derivations that were somehow both excessively long and too incomplete to actually follow, and completely indecipherable scrawlings done in class. The textbook for the class was also too dense for a beginner in the subject to comfortably consult. In order to be able to complete the homeworks, my classmates and I had to teach ourselves all the material from slides we found online from other universities. Literally nothing the professor provided to us contributed to our learning in any capacity.\nThe only saving grace was that the TAs were all qualified, helpful, and not completely devoid of pedagogical abilities - unlike the professor.\nI regret this class more than any class I have ever taken in my time at Columbia. I had read the previous Culpa reviews and thought, "Oh, it'll be fine." I flew too close to the sun. It was not fine. Do not take it. Do not take any class with Pe'er.	6 homeworks (starts out weekly, later every 2 weeks) in Python, 2 in-class multiple choice quizzes, take-home midterm, final exam. Not the worst in the department, but definitely quite heavy. Do not take this class.	10	1	4057	1921
80256	November 14, 2017	DO NOT take this class unless you're a CS major and are required to. \nThis is absolutely the worst class I have ever taken. \nJae Lee is is a horrible teacher.  \nBesides being extremely disorganized and random in his lectures, he is arrogant and rude towards his students. You will honestly learn the material better by going through the TA's recitation notes and going to the TA hours. \nLearning C and C++ is beneficial to anyone wanting to work in a CS-related field, but Jae insists on forcing students to memorize very specific syntax of functions, and "punishes" (his words) those who can't regurgitate the exact code on paper. Frankly, most of us found it ridiculous.\nThe midterm exams are insane. The median is usually around the 40's-50's.  This should tell Jae (and Columbia) that his course is awful and is failing the students, but we all realized Jae takes some kind of sick satisfaction in teaching "the hard course."\nJae also has this weirdly extreme obsession with cheating. This isn't exaggeration; he is constantly on a delusional witch-hunt for anything remotely close to what he considers cheating. Supposedly, he runs all written code through a program that compares your code to EVERY SINGLE SUBMISSION FROM THE PAST 5 YEARS. There are 3-400 people in the class per semester. Meaning that many people's code will match someone else's somehow, and if you deny it, he starts a full investigation. \nHow this sadist is still allowed to teach a required course for a major, I will never understand.	Ridiculously time-consuming, and REALLY does not prepare you for the almost-impossible exams.	33	48	3509	4758
80260	November 15, 2017	At the beginning of the semester Cannon will try to trick you into thinking that this class is suitable for people with no programming background. Do not, I repeat, DO NOT listen to him. The first portion of the class is doable, but the second half of the class isn't even covered in the textbook and is next to impossible. His tests are hard. I'm a history major, and I did the humanities track of the course because I thought it might give me some valuable skills. It did not. Instead I was left frustrated again and again and very turned off from computer science. Maybe he is good in Java, but I think he is a poor instructor in Python and should have spent more time and assignments explaining the concepts before throwing us in to very difficult homework sets to "apply our skills."	6 homeworks - 3 of which are very hard and require many hours of work\n3 quizzes - harder than they should be for an intro course such as this	20	22	515	7068
80286	November 30, 2017	one line: \nTake his online course than attending in class lecture. His voice mostly not audible. If you want to really really be inspired about algorithms, then take Clifford Stein's class. \nBut what we heard was that the grading is tough in Stein's class and we didn't feel it any lesser under Mihalis too. \nAssignments:\nThey are really really hard. And almost never made sense because in class what he taught us is literally very simple topics than what is asked in Assignments. Assignments should inspire students to learn more not to demotivate them. \nExams:\nMidterm is average in terms of hardenss. SHOCKING aspect is that final term has full portion and it made the whole thing very heavy, and also given that second half has heavy topics like Greedy, DP, Graphs(5 chapters), Flows, Linear Programming and NP. Moreover, there was an assignment due in the last week and the exam date is also kept very short. \nFinal exam was crazy hard. \nBottom line: \nSteins would be much better interms of learning and enjoyment of the course. If you are compelled to take under Mihalis, then better be prepared for hard assignments and prefer watching video lectures	6 assignments (best 5 out of 6)\n2 exams (midterm and final term)\nFinal Exam has full portion !!!	1	12	2941	NA
80296	December 06, 2017	Pretty easy class. Lecture time was crap (Th 8:10pm ) but I barely went to class. Material is pretty easy and posts aren't difficult to write. No curve. good major/tech elective course. Group project about how to build a product, not actually building the product.\nTristan is a bro, pretty sensible guy.	30% weekly, online quizzes (20 Q's)\n30% weekly, discussion post\n40% final presentation. (like 10 min, took 5 hrs to plan for, including all work)\nDefinitely take this course if possible.	3	1	13463	7201
80313	December 07, 2017	Word of warning: only take this class if you are willing to put in the work. You will probably spend at least 8 hours a week on each homework. \nHowever, it's the class I've felt like I've learned the most at my time at Columbia. It is incredibly rewarding if you like knowledge and new concepts. Do not take for a requirement if you don't care about learning something new. Read through the textbook and go to lectures and you will be okay. \nCannon is funny and sweet and you can tell he cares a lot about the course. Entertaining lecturer.	1 homework project or problem set every week.\n1 midterm, 1 final.	6	3	515	3807
80326	December 07, 2017	I have truly loved my experience in Intro to Java with Professor Cannon. I had a bit of experience before the class but this class has made me think critically about what it means to be a computer scientist, and how becoming a computer scientist is more than just programming. I think Cannon is engaging and hilarious during lecture, and is great about answering questions throughout class. He is incredibly understanding and looking out for the mental health and well-being of his students. When I have come into situations this semester when I have needed an extension or extra assistance he has been extremely accommodating. He is also accommodating with ODS accommodations. Even if you think you do not want to be a computer science major, I believe you should take this class! Don't let people scare you away from it, it has been my best course this semester.	A lot of work but it's worth it!!! Start your assignments early, and you'll be great. I'm going to become a tutor for this class just come to me!	7	5	515	7002
80366	December 07, 2017	Ansaf is so, so kind and helpful, but tends to oversimplify concepts in class.	Weekly HWs, 2 midterms (easy), 1 final (a little harder)	6	2	13076	397
80396	December 08, 2017	Professor Allen is a terrible professor and an all around bad human being. He is uninterested in teaching, uncaring about students, and unpleasant to interact with. \nIf you take any class with him you will learn very little and regret every second of it.	average	4	0	37	2403
80406	December 11, 2017	Aho is apparently retiring, so perhaps this review won't be useful anymore. However, he also tried to retire 2 years ago and is still here, so I'm not really sure what he is doing?\nIn general, I enjoyed the class. I thought the homeworks in particular were very well thought out â€“ 5 problems, only 5 homeworks per semester and he drops the lowest grade. They neatly covered the concepts and they weren't easy, but they weren't too hard. With some help from office hours, I learned a lot from completing the homeworks, and got good grades on all of them. Aho's office hours are quite good, but the TAs helped a lot as well.\nThat being said, unfortunately I did feel like I learned a lot more from the homeworks than I did from the class. Aho is not a very engaging lecturer â€“ he talks very slowly in a monotone voice. He also fails to go over very many examples for a lot of the theorems, because they are common sense to him (he is a very Smart Man). I do, however, believe that you can learn to learn from Aho â€“ at the beginning of the semester I felt lost at every lecture, but towards the middle and end I realized that if I attended class and wrote down everything he said, then went over it later for ~30 minutes with the online lecture notes, I could definitely understand the material.\nNote: apparently Aho is also the only one who teaches lambda calculus (other than Verma, who is new). Although the subject itself is easy, it is also useless plus it means the rest of the semester is rushed so that he can fit in lambda calculus.\nOverall, I would say it is a good course taught by a good professor. However, it seems that the other sections have been taught by amazing professors (Yannakakis, Verma, etc.), so make sure you look at your options but don't feel bad if you get stuck with this one.	5 homeworks (drop the lowest one) (15%)\n1 midterm (40%)\n1 "final" that is really just another midterm (45%)	1	0	1891	234
82151	May 20, 2020	His in-person 3-hour lectures were sometimes dry, but I think that had more to do with the fact it was on Friday and back to back then him as a lecturer. I thoroughly enjoyed watching his lectures at my own pace on video and I really appreciate all the extra tidbits he brought to class- book recommendations, funny videos showing a concept, research papers, interview advice. He clearly cares about his students and does a good job sharing his passion for NLP with interested students. \nThis was my favorite CS class by far. The programming projects are fun and challenging and give you the tools to start your own NLP projects.\nIf you pay attention and class and go to recitation, the exams are not too difficult.	bi-weekly homework (leniently graded) 50%\nmidterm 20%\nfinal 30%	11	0	13810	4903
80408	December 11, 2017	Ansaf is nice. That is the best thing I can say about her. I had her for Python last year, and she has improved since then, but her Discrete Math class remains disorganized and frustrating. \nAnsaf has the basic skills of a teacher. She is able to introduce and explain new concepts and provide examples to clarifies what she means. Beyond that, though, she becomes very repetitive. She teaches at an extremely basic level without any breadth or depth. Her lectures could be condensed to fifteen minutes. Her lectures are organized and simple, which made them worth going to rather than just reading the textbook, but not extraordinary or even excellent. \nAnsaf's exams are a nightmare. Not that they're hard - they're actually quite easy, according to the nonexistent curve. Which means that if you make a mistake, there will be no "safety net" to catch you. Her exams simply aren't rigorous enough. You need to be careful and achieve perfection. Watch out for the TAs: their grading is arbitrary and aggressive. You will lose a large number of points on small mistakes.\nThe quality of class is subpar but you will survive. You'll just be miserable while you're there.	1 weekly homework assignment, up to 3 hours to complete\n2 midterms, 1 double sided handwritten cheat sheet allowed\n1 short final on the last day of class, 2 double sided handwritten cheat sheets allowed	3	9	13076	397
80444	December 14, 2017	Absolutely do not take any course with this professor. He is incredibly nice, but his lectures are awful. I attended every lecture, but the slides are all completely useless and this class could be better learnt through youtube tutorials. The coursework is extremely light, with only a couple of homework assignments and a final project. The problem sets can take a little while, so don't push them off until the last minute.\nHis grading is extremely brutal and his exams don't accurately reflect the course. You're going to have a lot of graduate students with database experience who are going to slaughter the exams, leaving the worst curve I have ever experienced. Many of the people I knew in this class received C's or below despite performing at a seemingly decent level throughout the semester. It all comes down to how well you do on the midterm and final, which are not easy at all.\nAlso, Biliris extremely unapproachable. I attempted to talk to him about a grade and he ignored me for a long time, and then told me that he can't give out all good grades and there were too many advanced student who took the course as a gut class. Overall, worst experience at Columbia by far and I would avoid it 100% if you can.	Couple of homeworks, project -- Not too bad\nmidterm and final -- awful, expect to do poorly\nDon't expect a good grade.	9	5	1442	664
80465	December 19, 2017	CV with Prof. Nayar was a very good course. Prof. Nayar is super clear when explaining confusing topics, and he does so in a very concise way. His lectures have good depth and very large breadth -- by the end of the course I was surprised by the sheer amount of material that we learned. It was intimidating to study hundreds of slides for the final but after finishing the final it was rather gratifying to look back on the amount of material learned.\nThe homeworks in general were very doable if spaced out evenly throughout the week. The first few homeworks were harder IMO because I wasn't used to MATLAB. But if the concepts make sense in class, the implementation should not be too difficult.\nThe exams were also not too difficult, no notes or calculators allowed so you can imagine that it can't be very math-intensive. It was purely conceptual with a few math questions or recalling formulas here and there. Overall studying for them was more painful than taking them.	6 HWs (5-20 hrs each, 50% of grade)\n1 Midterm (15%)\n1 Final (35%)	1	1	1812	2386
80498	December 23, 2017	This is the best class I have ever taken at Columbia so far!\nAs you'll learn if you take the course, AP is a programming class with a narrative, and Jae constructed the syllabus carefully. It's nice to have a professor who cares so much about the class and the students. He hosts a hackathon with food and the only chance of the semester to work with friends on a homework. Jae is a great lecturer. GO TO LECTURE and ask questions!\nThe homeworks are called labs, #1-10, and are worth 100, 120, or 150 points each. Pay careful attention to the homework instructions, they are very specific and graded exactly to homework specifications. Best advice is to go to lecture, go to the review sessions, and start the homework early so you can go to office hours before they get super crowded near the homework deadline. If you do this you should be able to get good grades on all the labs. \nJae is a stickler for academic honesty/no cheating, and it was both the most stressful (when asking friends for help and not wanting to cross the line) and the best part of the course. Since you have to do essentially every part of every lab by myself (besides TA help) my confidence in myself as a programmer grew a ton with every lab.\nThe exams are ~very~ hard, yet doable. If you stay on top of the material, start reviewing early, and understand what you are programming you can do well. The questions require clear knowledge of C fundamentals, and exams often include at least one question that is incredibly complicated. Exam questions are pretty similar to the types of questions on the sample midterms/finals.\nI heard a lot of hype about how horrible and difficult AP was before I took the class. Don't let that scare you, it is totally possible to do well and have fun in this class!	10 homeworks, called labs. 100, 120, or 150 points each. everyone is forced to get 0 on one lab, whichever grade is the least raw points. worth 25% of total grade\n2 midterms - 1st is 20%, 2nd is 25% of total grade\nFinal - 30% of total grade	10	21	3509	4758
80515	December 30, 2017	Don't be FOOLED by the reviews! The course is different from the reviews. Now the course consists only the projects. The lecture weren't that helpful for the projects. And the way she grade the project is by the number of test cases. If you made everything right, you will get 100. But if you messed up with one tiny thing, you will get a super low grade. So the grading cannot show the understanding and effort fairly. Most of the projects were frustrating.	6 projects. Some of them are insane.	96	0	4221	4251
80516	December 31, 2017	Disclaimer: I went to two classes total.\nI can't speak to his teaching style, but Dr. Bauer organized and designed the class very well. The coding exercises on the homework were generally simple and easy. For the programs that required a little more thought, Bauer provided skeleton code that tended to trivialize the problem. The midterms and final were fair. The tests both consisted of \nA few true/false that required you to know some small nuances of the python language. A few short answer about interpreting code.\n1-3 simple coding exercise that required only basic control structures. \nHonestly,if you don't need this course as a requirement, you should just teach yourself the material. Otherwise, it's still a solid class to leisurely learn the bare basics of python. \nAlso, his lecture notes contain everything you need to know.	1-3 hours a week. Going to class is VERY optional	4	2	11572	6732
80520	January 01, 2018	Professor Cannon is seriously amazing! He explains hard concepts in a way that is easy to understand. He is also available during office hours and super helpful. I wish I can take more classes with him.	Projects or problem set due almost every week. If I remember correctly, you get the problem set and project at the same time and get a week to complete the problem set, and two weeks for the project. They take some time to complete, but you learn a lot from them.	7	9	515	3807
80527	January 02, 2018	Boring lectures, outdated material, slow grading, unrelated exam, unforgiving curve. Take these into account when signing up for this nightmare of a course. The lectures use outdated technologies presented on the most milktoast, text-riddled slides you will ever see. Feiner was extremely unorganized to the point that he never assigned homework 3 and then allocated those points to the final project and exam: both of which were rushed and poor reflections of actual student learning.\nThe only way to even hope you can pass the final is brute memorization with zero application of course concepts. The first homework is a solid way to learn API interactions, but the others are just awful. Wait until another professor teaches this course, you seriously won't regret it. I was able to pull a B+ in this class because I took essentially the same course in undergrad, but many of my friends fell in the C-range despite actually being pretty good in the class up until that point.\nOverall, just don't.	3 homeworks and a project - Pretty average for a CS course\nIMPOSSIBLE final exam with unforgiving curve.	0	0	39	663
80529	January 02, 2018	I would not recommend anyone take this class with Feiner if it's not for a major requirement. However, it looks like it's being taught with Lydia Chilton this spring, so it might be worth it. She was a guest lecture this past semester, and was really enthusiastic and engaging.\nAs you can probably tell from the other reviews, the lecture is extremely dry and covers a large number of UI studies, with almost no relation to the assignments. While it may be extremely painful, and no one else does it, going to lecture helps with remembering the seemingly random theories/studies asked about on the final.\nHow to do well: For the assignments, remember that the most important thing is that your application meets Nielsen's Ten Usability Heuristics (and if they were coding projects, that they work). For the final, I picked out ~50 theories/studies from the lecture slides and memorized summaries of them, which worked out well.	Assignments:\n1. Coding project (HTML/CSS and JavaScript) and unrelated written assignment\n2. Prototyping project and related written assignment, done in groups of 4\n3. Final project: Larger coding project (HTML/CSS, JavaScript, and Twitter API) and related written assignment, done in groups of 4\nFinal exam:\n10 short answer questions on theories/studies discussed in lecture	0	0	39	663
80532	January 03, 2018	The other reviews are pretty accurate on the structure of the course (the flipped class room) and the workload, so I'll only write what was different about this semester and what I didn't like. \nThis semester, Collins brought in new materials in the last three week; Feedforward Neural Network and computational graphs. While I liked how he updated his syllabus from the last one, the execution was simply bad. I don't what might have been the issue for him, but after midterms, the course became utterly disorganized. Almost everything was done at the very last minutes. For instance, the videos we were supposed to watch before each flipped classroom sessions were uploaded less than 24 hours prior to my session, making it impossible to studying them thoroughly. And all of the sudden, assignment 3 became analytical part only assignment and assignment 4 became programming part only assignment. While this could a perfectly reasonable thing, but I'm sure I wasn't the only one who felt this was a rushed decision. \nTo conclude, Collins is a very knowledgeable man on Natural Language Processing and probably a very nice person. However, how he handled the course after the midterm was simply not acceptable. Just be aware that logistics of the course for Fall 2017 was an utter disaster.	4 Assignments; we were supposed to have analytical part and programming part for all of the assignments, but ssignment 3 became analytical part only assignment and assignment 4 became programming part only assignment.\nMidterm and Final	0	0	10729	4903
80533	January 03, 2018	tldr: this class was nothing like the previous reviews. the lectures are useless for the projects. the projects are insanely hard for no good reason. martha kim was not caring like some previous reviews mentioned but seemed to gain pleasure from giving people 0s on projects. the curve is bad. she might change, since this semester seemed like an outlier, but i personally had the worst educational experience in my academic career so far and i would not recommend this class to anyone.\nhere is a list of things that i felt was wrong with this class:\n1. first four of the six projects all have super high average (around 90). if you mess up on any small thing, even something she did not mention in the prompt, there is a high chance that you will get a very low score, including 0. for instance, in one project she first gave some people 0 out of 100 for not having the correct reset behavior but otherwise perfect circuits. she did not mention anything about the reset behavior in the prompt, and so later gave these people 80. there are many other examples where people turned in the circuit thinking they have a functional design, but because of her failure to fully describe the specifications, ended up being surprised by poor scores.\n2. there are so many specifications you need to meet. if you fail to meet any one of them, you get a 0 regardless how else you have demonstrated what you learned in this class. while some might argue this is how things are done in the â€œreal worldâ€, but i think for a class where each project weighs about 1/6 of the entire course grade, giving out 0 out of 100 so easily is seriously wrong.\n3. the later 2 projects are supposed to separate people, so itâ€™s about how well you can optimize. hereâ€™s a quick fact: about 1/3 of the class got 0 out of a 100 on project 5. the averages and medians are really low for both of these two projects. i spent five days straight working exclusively on this project, and ended up being right above the average. i never worked so hard on any school project ever. i know at least four other friends who worked even harder and received poor grades. itâ€™s really not about how hard you work.\n4. project 6 was due on the THURSDAY OF READINGS WEEK, just a week after project 5 was due. because these two projects were so hard and took so much of my time, i was not as prepared for the finals as i should have been. iâ€™m not sure if that was even allowed, but it was a real pain in the ass when you are trying to study for other finals but had to be stuck with two hardest fundies projects of the semester.\n5. sure there are people in this class who are very passionate about the material and spend a lot of time on the projects. but based on the experiences of most people i know in this class, they are taking this class only because its in the CS core. most people will never touch these stuff again and absolutely do not have interest in the low-level stuff. this class definitely failed in both properly introducing people to the field and giving people a general idea of how things work under the hood, given how difficult the projects are. what people learned in class is virtually useless, which defeats the purpose of projects.\n6. the TAs are literally incompetent. i went to many office hours and one time for project 5 the TA told me the completely wrong idea, which is later corrected by another TA (Tom, who seemed to be the only legit one). i feel like most of the time their lack of knowledge and/or poor ability to teach only confused the students even more.\n7. Martha Kim is nothing like what the previous reviews said. she did not postpone a project due during midterm week, which is fair i guess. but scheduling projects 5 and 6 so close to each other and one in readings week was a huge fuck up. students really suouldnâ€™t be penalized for her own poor ability to schedule things properly. in addition, like i said the numerous specifications make you think that she loves giving out 0s to people and see them suffer, as demonstrated by ~60 zeros for project 5.\n8. curve??? i got basically perfect on the first four projects and 50ish on the later two, which are all above average, and i got a B?? based on my experience with the CS classes, i was expecting an A or A-...\nthis class was a total nightmare, and i just hope that i will never touch anything lower than C and see Matha Kim again.	heaviest class i have ever taken.\nheavier than CC, AP\nsome projects will make you feel hopeless and question your life decisins	96	1	4221	4251
80534	January 03, 2018	If you're looking for the manifestation of the worst qualities in a college course ever, look no further. Fundamentals with Martha is by far the worst CS class, and by extension the worst class I've ever taken in my life. The class is 100% project based, and let me tell you, they're brutal. This semester there were 6 projects, projects 1-4 being fairly easy (averages were high 80s-low 90s), and projects 5-6 impossible. The projects are designed in a way so that you either get a 0 or a 100. (actually, more like 0 or 80-90, and then you climb your way up to 100 by making optimizations). This means that if the project takes 20 hours to complete, even if you spend 18 hours on it, you'll get a 0. So your final grade is pretty much based on projects 5-6.\nLet's talk about projects 5 and 6. They are ridiculously hard, to the extent that some of my friends actually cried doing them. Not only that, the project is "out of" 100, but even Martha can only score a 67 on project 5 and 73 on project 6. Why would a professor have you do a project that she can't even score a perfect score on? And these scores are calculated directly into your grade, meaning you're considered "doing well" if you get a D (67). If you used up your late days (you get 3), every day after that is a 15 point deduction, regardless of the project. This means that handing this project in late by a day leaves you with a 52 - basically an F. Like what the hell.\nThe TAs for this class were virtually useless. Office hours were always crowded, with 2 hour long lines just for 5-10 minutes with the TA because everyone had issues of their own. Most of the time even the TAs would have no idea what was going on yet people still went to them because no one else in the class had any idea what was going on. Martha always seemed annoyed in her office hours as well, very reluctant to help out students stressed out by her own concoctions.\nThe cherry on top is that you don't learn a single thing from taking this course/attending lecture. Most people who take an introductory systems class at any college knows what an ALU is. I can safely bet that 90% of our class didn't even know what it stands for. The class being purely homework based, people started not showing up mid semester. She also makes careless mistakes during class which was a huge turnoff. You know it's a poorly designed course if you can theoretically do project 6 on the first day of class and going to lecture for an entire semester likely had no impact on your performance overall. All you have to do is learn how Logisim (software for designing circuits, which by the way, is not even in development anymore) works and just do every project.\nLastly, this class made me hate computer science. My logistical complaints with the course aside, if a professor who teaches a CS core class makes you hate a subject you like, the professor shouldn't teach that class. This class singlehandedly ruined my semester.\nPro tip: avoid Martha Kim at all costs. Based on the final grades, pretty sure she curved to a B-.	6 projects\nP1-4 hard, but relatively easy to P5-6. But still hard.\nP5-6 ridiculous	1	1	4221	4251
80538	January 03, 2018	This course has changed from previous years, apparently. I have never seen students put in so much work for a class and get such little return on their investment in terms of grades. This class does not account for effort in any shape or form. The tests she designs to test your circuit are at best surface level and the TAs don't even glance at your circuit to see how hard you tried. Obviously I'm not a circuit engineer but I can see merit in awarding students points for at least building the underlying functionality associated with the prompt even if it doesn't pass the most ridiculous handshake tests. \nThere were 6 projects in Fall 2017, with the first 4 being doable and the last 2 extremely difficult. Mental health goes out the window because the last project was due in the middle of reading week, and takes up to 40 hours for the average student with testing, OH, and talking to other students. Because there were 6 projects, they didn't have a lot of spacing between them, especially towards the end of the semester. There isn't a lot of space given if you slip up--there's like 3 late days for the entire semester and only 2 can be used per project. \nAlso there's very little point going to class, the material is in no way related to your understanding of the prompts. If you want to learn about the field and what a processor looks like etc, then go. She was a pleasant lecturer, and answered questions in class. Before the due date of every assignment, she would do a 5 minute quick review of the prompt which was helpful sometimes. \nHope this course changes/becomes a little more of a modern discussion and application based class. Best of luck to others!	First few projects, couple of hours. Projects 4, 5, 6, might take the average student around 20-30 hours each.	87	2	4221	4251
80542	January 03, 2018	Agreed with past two reviews, this semester it seems like this class really took a turn for the worse. Projects were alternately a joke or really hard with no rhyme or reason and while the material was interesting the projects were barely at all even related to lectures. Final grades barely reflected performance on the projects. Last few projects which were performance based were initially graded on an arbitrary scale (since prof Kim did not know how they would perform) and then not adjusted accordingly before final grades were tabulated. If this class is gonna be based only on projects then the projects should be designed and tested before giving them to us! Our grade depends on them! But until then she should defintely go back to giving a mix of tests and projects like most classes	Well for some reason the first month and a half was spent on one easy project. Then an incredibly hard one was due two weeks later during midterm season! And then two easy ones, and finally two killer ones during finals. Possibly the worst timing and project ramp up Iâ€™ve seen in a CS class.	0	0	4221	4251
80551	January 04, 2018	It seems like every reviewer on here expected Kim to soften the rough edges as she taught more, but that hasnâ€™t happened. The assignments still vary greatly in difficulty and time requirements, the lectures still cover easy concepts with little to no focus on the much more challenging aspects of application, Kim still corrects herself in class (to the point where sometimes you donâ€™t know what is right or wrong). Email reply time takes a long time and the administration of the class is poor. The TA review sessions sometimes strayed with TAs solving problems incorrectly. On top of that, the curve is very harsh now; it seems like average was a B- based on my conversations with others who took the class. Style points (+10 to prettiest solutions) skew the curve on efficiency based assignments (since the highest possible grade was in the 60s-70s for both of them but the +10 style points made it as if it was in the 80s). Like before the curve is basically determined by those last two efficiency-based assignments (out of 6) which means consistently good performers got meh or even bad grades for doing average on two assignments out of six.\nOverall, it seems like Kim isnâ€™t taking feedback from students year to year. If anything the faults have worsened over time. This course is required for lots of majors but otherwise would not recommend.	Randomly easy then incredibly hard depending on the project assignment. Varied from taking 2 hours (MIPS which was #4, and first/third project) to over 20. Usually we were given more time for the easy projects, of course. 6 projects total (first three and last one were 60% of the grade, while the fourth and fifth were 40%), no midterm, no final.	0	0	4221	4251
80564	January 05, 2018	Though I have taken statistics and probability courses in the past, this course did a great job introducing me to new probability tools that are especially relevant to theoretical computer science. After defining basic information theory concepts, we applied them to the study of communication complexity, algorithm lower bounds, interactive compression, and data structures problems. The class convinced me that information theory is the "right" language to describe probability in computer science.\nIn terms of instruction, Omri did a pretty good job. He provided intuition for each definition and proof. However, I feel like he spent a little too long on introductory material; given this was a 6000-level class, I think most of the students would have been fine skipping a good chunk of introductory material, and we could have covered more.	4 homework assignments\n1 lecture to scribe\n1 final project based on reading and original research	0	3	13519	7246
80566	January 05, 2018	This was an advanced class in learning theory that focused on "interactive learning" which attempts to model situations where a "learner" can "interact" with his "teacher". Each week, we read a few papers in the field and went through the details in class. At the start of the class, we did some classic results in using expert advice and bandit problems; this material is definitely worthwhile if you have not seen it before. But the rest of the papers were a lot more recent. However, I was not particularly inspired by the papers; they seemed to spend a lot of time defining new learning models which were often infeasible in practice and not overwhelmingly interesting in their own right. Aside from definitions, few of the actual algorithms had novel proofs.\nMore than half of the classes had student lecturers which were of a rather inconsistent quality. I think I would have learned more if Professor Hsu had taught them all.\nHsu also has a bit of a stick up his rear. He spilled a lot of ink making very detailed class requirements, but in the end he gave almost everyone near-perfect grades. He constantly complained about barely late students and has needlessly specific instructions for everything, which made the assignments more work than they were worth. Often, he does not seem to understand student questions or answers them kind of dismissively. Despite being a good lecturer and an expert in the area, Hsu is not a great teacher because he lacks good faith in his students.	Reading reflections each class\n2 hard homework assignments\n1 lecture to give\n1 lecture to scribe\n1 final project based on reading and original research	1	0	13116	7247
80571	January 07, 2018	I dare say that taking this course with Prof. Kim was one of the WORST decisions I've ever made here at Columbia. I won't overgeneralize and state that such was the case for everyone, but I do know that a lot of my peers who were also enrolled in the course had a hard time.\nIf you're considering taking this class, please note that she changed the organization of the course entirely starting last fall (Fall 2016), getting rid of exams and giving grades only based on the projects that were given out throughout the semester (6 for Fall 2017, 4 for Fall 2016).\nJust to share a few things about my experience:\n- I wouldn't say she's a bad lecturer, but she's not a great lecturer either (as some of the older posts suggest).\n- Lectures were less and less helpful as the course progresses, which is bad since the projects get much harder, especially for the last two.\n- How you perform on the projects do not reflect your level of understanding about the material. You can still end up with bad scores and ultimately a bad grade even if you have a solid understanding about the theoretical concepts, due to lack of experience in circuit implementations.\n- Too much focus on performance and optimization for the latter projects. Functionality does not guarantee full credit; you can still end up with a 0 even if your design works. Sure, I understand performance is important in circuit design and that there should be a means to distinguish those who have put in the work and have performed better than others, but considering that this is an "intro" computer architecture class and that most people are using logisim (the circuit simulation program we used in the course) for the first time, I think the grading scheme was too harsh. Doing well in optimization tasks requires a lot of experience, and it wasn't like she provided enough guidance or knowledge for people to cover that up. It was very, very frustrating. \n- Nobody even knows how she calculated the grades in the end. To a question on Piazza asking about the curve and the final grade distribution, she answered: "I set and do not publish cutoffs as those are my judgement calls and not something that is up for debate/discussion."	6 Projects:\n- Combinational Design (15%)\n- Sequential Design (15%)\n- Huffman Decoder (15%)\n- MIPS Programming (20%)\n- Pipeline Design (20%) \n- Cache Design (15%)\n* Can be extremely heavy (degree of difficulty will depend on previous experience and exposure to the material).	0	0	4221	4251
80577	January 08, 2018	I took this Fall 2017. \nLecture: I know that most students stopped going to lecture at the end of the semester because they found it useless, but I disagree. Although she does post power point slides summarizing what she teaches in lecture, they are a fair amount of helpful examples that she goes over in class which are not included in the power points. These in-class examples are also closely aligned with what she puts on the exams. The overall consensus within the department is that Ansaf is a nice person, but a so-so teacher. This is true. Her lectures were average in every respect: organization, clearness, etc. I was a student that always asked questions in class and she was always willing to stop what she was doing, unlike other professors, to answer my question and make sure I understood. \nHomework: Took me about 5-7 hours for every homework assignment. If I got stuck, I would go to the TA office hours for helpâ€”at OH, the TAs (at least the ones I went to) were incredibly helpful and often just gave me the answer. Homework is doable if you pace yourself, ask for help from your friends/TAs at OH/TAs on Piazza. \nExams: The exams are EASIER than the homework, and as I said before the questions on the exams are closely aligned with the ones she goes over in lecture (again, go to lecture). \nOverall, I would recommend this class. Ansaf's kindness/approachability, combined with a generous curve, make this class worth taking despite the fact that her teaching is so-so. You will learn.	10 homeworks (40%), 2 midterms (30%), final (20%), and participation (10%).  For participation, your participation in the in-class quizzes (which are not graded for correctness, just completeness), going to office hours, asking questions on piazza, is rewarded. I was a student that went to most lectures, but if you don't go to lecture you could just ask your friend who does go to put your name on the in-class quiz and turn it in for you. \nI got an 87 on the first midterm, a 96 on the second midterm, an 81 on the final, and ~95 on the homeworks and I got an A.	1	0	13076	397
82490	November 30, 2020	The worst professor I have ever had. Tal doesn't actually teach and her class is not formatted for virtual learning. Why does she omit every proof and tells us to "think at home" when we are all very clearly already at home? The world may never know. I've learned nothing in this class. And frankly, I'm confused as to how she has a silver nugget because that is the biggest joke of 2020.	Heavy.\n3 exams that she doesn't put on the calendar until a week before. \nA bunch of homework assignments and she doesn't tell you the total.\nA bunch of quizzes that are meant to only take you 15 minutes (but we all know that's not the case).	23	8	1621	234
80600	January 12, 2018	This course is not easy, and Jae will not hold your hand. He will expect you to keep up and master everything that he covers in class. Do the readings as they're assigned, at least the required ones; if you don't, you will most likely fall behind.\nJae's lectures go by quickly, so make sure you take notes quickly or have recordings for backup (usually if you ask the listserv for recordings, someone will have one). You want to use a combination of hand-written and typed notes because he talks fast and writes a lot of code and diagrams on the board.\nThe labs are not terribly difficult but they can take time if you want to make sure your program(s) work exactly as instructed.\nThe exams ... oh boy ... The averages are typically in the 40s-50s, with even lower medians, but the curve is generous (but not that generous). In Jae's words, "if the average is a 40, then a 50 is good" (but of course it's not). Aim for a 60-70 exam average for an A- and 75+ exam average if you want an A (assuming your labs are perfect or near perfect). The exams account for 75% of your grade, so they're a huge part of your grade.\nThe TAs can be a mixed bunch, so choose your favorite(s) and they will help you succeed on the labs.\nIf you want to do well in AP, I suggest you\n- allocate 15-20 hours a week for it; if you feel like there's nothing left to be done for the week, you're wrong.\n- take a good set of lecture notes (Jae's notes are just a skeleton); review them regularly\n- do and REDO every one of Jae's practice exams - this is critical!  You should ask a friend to grade them (if you have friends).\n- go to office hours regularly - you are bound to have questions while studying. Each week, I collected a list of questions to ask the TAs or Jae.\n- talk to the TAs about the labs. they will give you hints. More often than not they will indirectly tell you exactly what you need to do or how to approach a problem. Ten minutes during office hours can save you hours in the library.	10-20 hours a week, depending on the difficulty of the lab and amount of reading assigned. Not terrible if you use your time efficiently.	23	3	3509	4758
80605	January 15, 2018	Believe me: This is how Columbia students get depression!	6 Projects: finish 4 projects with 100 and 2 projects with 0 score. I got a C after putting 1 month of work for this class.	83	3	4221	4251
80606	January 15, 2018	Martha is a great lecturer. When she speaks in class it's generally very easy to follow and the subject material is always very interesting so it's easy to be engaged. She's also very good about taking questions and stopping and going back to review places where people have indicated confusion. The same goes for her office hours. I HIGHLY RECOMMEND going to her office hours. Even if the people there have questions that you're already clear on it's always illuminating listening to her explain concepts. She really goes out of her way to try and help the students that come to her office hours. Like, I've been there at its peak where there are 20+ people in a small office space and she's taking questions and explaining them painstakingly and patiently or she's on her knees since she's offered all her chairs to her students and she's reading a massive circuit to try and troubleshoot some edge-case bug. Truly, she's a great professor.\nThat being said, the way the class is organized is a bit uncomfy. The project-orientedness is nothing new for a CS class but the way that they're graded can leave a lot of work unrewarded. At the very least, it's all entirely objective for better or for worse. The good news is you can typically accurately calculate what you're going to get. The bad news is it's very hard to argue a better score later. Any distribution in score comes from optimization whether it's from gate count or CPI. However, if you fail her entry cases it comes to a 0 regardless of how close you got or the optimization algorithm beyond it. Coming very close to having a working circuit and submitting an empty file will get you the same score which is something that's really harsh.\nThe first 4 projects ranged from easy to doable; averages were in the 90s. The distribution really came from the final 2 projects that were centered around CPI optimization so the averages were in the 60-70 range. \nAll this being said, I still highly recommend this class with Martha. Even though the grading scheme feels a little unfair at times, you really do learn a lot from a great professor. Also, so long as you get a working circuit that passes her entry cases you don't have to worry about getting a 0. The material forces you to think critically and is very engaging. I found even when I wasn't working on the projects I wished that I were.	6 projects due approximately 2 weeks apart; challenging but doable	8	70	4221	27
80609	January 16, 2018	The last few reviews have hit the nail on the head. Don't be fooled by only 6 problem sets and no exams. I looked at earlier reviews, thinking the course wouldn't be too heavy. I was completely blind-sided by the workload. The standout positive aspect of the course were the TAs which were all absolutely fantastic and much more helpful than everything else, slides, lectures, and textbook. I spent about 2x the average time at TA hours in this course, as it was practically mandatory to complete some of the assignments. I NEEDED to attend OH to get anything above 0. I wasn't the only one with this approach as there were regularly 30 people there, clogging up that small TA room, and resulting in a 2 hour wait to talk to a TA for 5 minutes.\nLike others have said, projects 1-4 were okay. After project 4 I thought surely this is the toughest it can get, omg how wrong that was. Project 5 and 6 went off the rails with difficulty. Maybe not for a hardware engineering major, but for CS students seeing this stuff for the first time, yikes. It's also important to note the TA's reactions to the different projects, most were excellent from projects 1-4 and it seemed almost elementary to them. This broke down a little on 5 and 6, I could tell some of them were less confident in the material. Not to mention one project was given to the TAs same time as students!!\nThe problem sets completely dominated my semester. I could do nothing else while one wasn't completed. To add insult to injury, putting 30+ hours into an assignment can still result in a 0 regardless of how close you are to a working solution. The prompts are purposely vague and requirements could be boiled down into one sentence, which meant going to office hours just to understand what was required. The assignments are generally all frustrating, often operating on a single crux. If you got it, the rest was easy and you'd get a top score, if you didn't get it, chances are you got a 0.\nTA grading was black and white, except for some edge cases. If you miss something small and obvious that has no bearing on your understanding of the material, nor the focus of the particular assignment, you're getting a zero.\nAll of this wouldn't matter if the material was super useful for your career, but for the majority of CS majors who will be doing software development, this course doesn't return much in practical skills. The MIPS programming is an exception to this and is by far the most valuable thing you will learn.	6 problem sets. 1 to 3 are the right amount of challenging. 4 can be tough but is doable. 5 and 6 are nightmare mode.	1	0	4221	4251
80611	January 16, 2018	Professor Verma's ML section was definitely worthwhile. He's a clear lecturer and gave homework that really helped further develop the concepts we learn in class. But, be warned that the homework was difficult and time consuming, though this is somewhat mitigated by the fact that he allows students to form groups of 3 to work on homework together.\nTests were a mix of very easy questions and a couple rather hard questions. Some of the more in-depth math was fortunately not tested on exams, but there were some difficult theoretical problems. Overall, particularly with the curve, the tests were definitely manageable.\nPersonality wise, Prof. Verma is great. He cracks jokes during lecture and he really cares about his students. His OH often seemed to extend passed the slotted time so that he could continue to help students. His niceness was a bit of a drawback at times in that some students would occasionally eat up a lot of lecture asking basic or unnecessarily involved questions and he wouldn't cut them off, but he got better at handling this as the semester progressed.\nOverall, this was a good course that'll teach you ML basics, but it will probably be one of the heavier workload courses you'll take in a semester.	Pretty heavy. \n4 problem sets with anywhere from 3-7 questions, many of them difficult but rewarding.\nMidterm and final both not too hard, but not easy either.	38	14	13496	1921
82503	November 30, 2020	Professor Santolucito is one of the most fun and chill professors out there!  He is genuinely passionate about his area of study and one of the best professors out there. \nAs a senior, out of all my years at the sanitarium we all know and love as Columbia, he is the only professor (and first) whose class I voluntarily attended everyday, was engaged in, and loved. I have a super short attention span and his class kept my attention the full time. Most professors at CU blindly read off slides they didnâ€™t make and make me question whether the schoolsâ€™ 80k per year tuition is justifiable in the slightest. Professor Santolucito is different as he makes every class worthwhile, fun, practical and interactive on a one to one basis.\nProfessor Santolucito covered audio basics, making our own synths, modulation of and generation of sound waves through the window of webaudio, live coding, machine learning (Bayesian models and natural language processing)/markov chains/cellular automata. With each topic, there was an open-ended lab/homework which makes you apply what you learned in a practical and creative sense. For each topic that you are not familiar with, you have to spend time to learn it but it is worth it; Professor Santolucito is there to help. \nAlso, this isnâ€™t a class where you can get by in the slightest by copying and pasting from GitHub, you actually have to understand the materials and code things from scratch without much online references just like the real world. You are actually doing new things, and it is exciting and practical. None of that AP Jae crap where you have to memorize stuff you will never use and do things by hand because who in the industry actually does thatâ€”maybe in the 1800s. \nBack to topic, considering that this was a Term A class when I took it, Professor Santolucito did one hell of a good job and managed not only to teach a breadth of topics in detail, but also invite entertaining guest speakers in the industry, have in class showcases, and even have a career fair!\nIf you love projects, learning something new, and arenâ€™t afraid to program and dip into your creative side, this is the class for you. Columbia professors should learn from Professor Santolucitoâ€”classes should be engaging, intellectually challenging (not because of cheap grading gimmicks, ambiguity, TA politics, but rather because you really need to understand the material and apply it to a practical setting), and also fun.	More workload than your Columbia 4K classes, but much fairer grading. Professor Santolucito grades based on effort, functionality, and how above and beyond students go with their work. Prof. Santolucito is extremely accommodating to studentsâ€™ needs and interacts 1-1 with students.\n5 programming homeworks (labs), each take 8-10 hrs. Fridayâ€™s are dedicated to the professor and students collabing/troubleshooting. Be there.\n1 open ended final project (you will be spending 24 hours literally on this).	0	0	13968	7656
80614	January 17, 2018	Edwards is very prepared and cares a lot about the students, the course, and his TAs. He is engaging, funny, and not monotonous, but nevertheless his lectures are a bit awkward and hard to follow. That's because he mostly just verbalizes the symbols on his slides.\nE.g. If there is an arrow from A to B on a particular slide, he would just say "x moves from A to B".\nTo improve his lectures, he could repeat what he is trying to get across more times (so we can have time to think about why x would move from A to B, and be able to more easily do problems of that sort) or actually elaborate on the reasons behind the actions that happen on his slides, to students.	HW included written problems (most, but not all, were quick and easy) and programming (reasonable).\nMidterm and Final exams (reasonable).\nPlus, one semester-long group project, so if the work is split up well, the entire project could be less time consuming than a single difficult Fundamentals of Computer Systems project!	1	2	1637	3105
80617	January 17, 2018	Kim is a humble professor who is good at putting her thoughts into clear explanations. She is sometimes good at detecting how much people understand the content she is teaching.\nHowever, material presented in lectures sometimes were a lot and would be better suited to be in reference books. That type of material was glossed over and lectures on that made me intimidated, although also a little enlightened by what was available. Like Stephen Edwards' PLT slides (and perhaps because these slides were borrowed from Edwards), the slides were mostly show-and-not-tell. In other words, little reasoning was included in the slides. Mostly, I had to either be very alert and think as fast as I could during class to understand what was going on the slides, or accept the fact that there weren't exams anyway so we didn't have to understand things but think about how I might need to know those concepts to do the projects.\nIt would have been more productive for us to learn approaches to building circuits, rather than only show us extremely advanced examples. The examples gone through during class were intimidating and misleading in their complexity and tediousness.\nIn conclusion, although Kim started out as a terrific lecturer, this class ended up crushing dreams and was a terrible decision. I don't recommend it.	P1: extremely light, makes one cocky.\nP2: shockingly hard to understand, when one realize that this class is going to be much harder than AP.\nP3: so similar to P2 that it was shockingly easy.\nP4: not a circuit, reasonable.\nP5: more time consuming than PLT semester-long group project.\nP6: during reading week, stressful.\nOverall, because of P5, it was more work than CC, Mowsh Bio, AP, and any other class I've taken.	1	0	4221	4251
80623	January 18, 2018	I learned a lot in this course. \nI didn't really know much about the theoretical underpinnings of AI and in the semester I took the course (Spring 2017), we went through a bunch of unsupervised/supervised learning techniques. The lecture slides were very good and I found her lectures also quite understandable. \nI thought the exams were quite fair as well, with the Midterm being a bit long but still doable. The Final wasn't cumulative so the amount of material to cover in both tests is actually reasonable. If you go through the lecture slides, you should be fine.\nThe assignments were a different animal. I really underestimated how much time the 1st assignment would take, which was a lesson I learned the hard way (I basically spent Friday-Sunday writing code all day). The 2nd assignment was frustrating because your entire grade was based on 10 test cases (and I thought the times I ran tests on my own computer, I scored better). Thankfully, the last three assignments are definitely easier and took me way less time.\nOverall, I'd say it was a pretty good introduction to AI. The curve seemed to be fairly forgiving based on the grade I got.	5 assignments, midterm, final	6	0	13076	26
80624	January 18, 2018	Dr. Yannakakis seems like a nice guy, but I had a hard time learning from his lectures. The information he provided was too high level and I was forced to use other resources to better understand the material.\nThe psets were manageable. He gives you 2 weeks for each one and they should be finished easily within the deadline. I procrastinated a bit, which made the days before the deadline rough. \nBoth exams were too long in my view. Neither were really hard (I'd say at the level of the psets, if not possibly a bit easier), but finishing each one in 75 minutes was far from a cake walk. In both tests, I didn't really have time to dive into one of the problems, which probably brought down my grade in both. \nThe curve was fine. I'd assume the average or median was curved to a B+ based on my final grade.	6 psets, midterm, final	0	8	2941	NA
80633	January 21, 2018	Don't take this class - it isn't worth the paper you will write notes on. \nOverall, one of the worst classes ever. Ansaf is very nice which is a redeeming factor for her but her TAs are lazy and never graded an assignment on time  - we got the midterm back two weeks before the final and homeworks were continuously regraded because one of the TAs decided that the class is "too easy" and said to a few of us that he will take it in his own hands to make the class tougher-  completely graded off rubric should never be allowed to TA. Ansaf is lazy as fuck and would be disorganized. Her iPad never works but she insists on projecting it to everyone.	2 Exams, weekly assignments that are graded randomly out of a range from 50 to 123 (Wtf)	2	11	13076	397
80637	January 22, 2018	Prof Bauer is a very kind and helpful man, who gives extremely dry lectures and unnecessarily difficult homework. Most of the time I did not even bother to go to his class. He uploads every lecture note, so that was helpful. He is really boring and it was really hard to concentrate in class but if you actually go to his office hours, you will see that he is very patient and will try to help you as much as he can.	5 homework, 1 midterm, 1 final	4	4	11572	6732
80642	January 22, 2018	The review above is a COMPLETE lie. Martha is a nice person on the SURFACE, but she is a TERRIBLE professor and has utterly no sympathy for students (she regularly shuts people down on Piazza for asking questions or gives the most cryptic answers to reasonable questions). It's either a 100 or a 0 on any single given project (see workload for Fall 2017 insanity and please note that getting a 100 on any given project is no easy matter) and nothing she says in class is useful for the projects (ex: I stopped going to lecture and was at more of an advantage to other kids who went because I had more time to work on the projects). I want to keep this short so you can judge the workload yourself. CS Majors, it truly sucks that you'll have to take this class but everyone else, don't be a hero and take this class or any other class she teaches.	Insane: 6 projects\nProject 1-4: avg. 5-10 hours each (reasonable)\nProject 5: avg. 50-100 hours (unbearable, 60 students out of 180 didn't finish and gave up after putting in 50+ hours)\nProject 6: avg. 40 hours (during reading/finals week, so basically don't study for other classes and your GPA will tank anyway)	1	1	4221	4251
80651	January 31, 2018	By far the best professor I ever had. He speaks loudly and clear with a touch of wit. Most importantly, however, professor Blear knows how to explain the crap out of everything. I never walked out of his lecture asking myself, "What the hell was that?" \nHe has a way of explaining the most difficult topics so a 5-year-old could understand.\nThank you, Professor Blear!	5 hw, mid term, and final	7	6	3409	4
80672	February 19, 2018	Y'all need to get over yourselves.  Anyone who's had an internship or real world experience knows that coding just takes time to learn, and it can be very painful in the beginning.  Jae isn't hateful; he's just realistic.  He's been on the other side, and he knows that your boss isn't going to hold your hand on the job and make sure everything's okay.  They're going to expect you to be a self-starter and learn things on your own.  Welcome to the real world, kiddos.  If you don't just "get it" because you're A) bad at logic B) you had good training coming in here or C) you're not extremely stubborn, maybe you just aren't cut out to be a professional programmer.  This is what adulthood is like.\nOne time a friend came up to me and said "Jae's tests are hard."  Have you guys actually tried to build anything in the real world?  Engineering is just like that; shit breaks and you have to fix it.  You can't care about your feelings; you just have to make it work.\nAlright, I've done enough tearing into you guys.  Take this class seriously, and you'll learn a lot.  Most importantly, you'll learn how to hold yourself accountable and have high standards.  You'll get eaten alive in the competitive world of software without that kind of attitude.  Jae Woo Lee is one of the most practical professors I've had at Columbia, and I'm glad I got knocked off my high horse by him and learned some perspective.  If you take OS, you'll truly begin to understand how deep and impressive a good programmer can be.  Consider yourself initiated once you've been through all this.  And if it's not for you, that's okay.  Don't blame Jae.\nI'm a much better programmer thanks to this class.	See other reviews.  Learn pointers and memory; that's the key part of C you don't have to deal with in Python, Java, Lisp, etc.	11	35	3509	4758
80673	February 19, 2018	Rubenstein is such a math Ph.D.  If you came from a logic background, take this with him.  There was no bogus memorization, his slides were super clear; I only spent like 5 days out of the semester working on this class: 1 before the midterm and 4 before the final, and got an A-; super chill.  No bogus proofs or long-winded details, just very practical descriptions of computer architecture.  One of my favorite CS classes, hands down\nComputers are designed so beautifully.\nBut yeah, don't take the class if you're used to getting As by copying everything the teacher/textbook says.  You gotta know how to think	45% midterm and 55% final when I took it; sounds imposing but isn't as long as you know what you're doing.  His TA system was SUPER helpful: <3 is a babe	4	1	2427	4251
80679	March 02, 2018	The professor was pretty good, he tried to add humor to his lectures but his accent was a little difficult to understand. He is overall a nice guy, probably your average professor. However, the TA's are horrible. If you see these TA's in your future classes, make sure to drop immediately:\nFei Peng\nAtif Ahmed\nJingjing Ling\nKilol Gupta\nGuanlin Zhou\nSajal Khandelwal\nKevin Raji Cherian	Not bad at all, get a partner to do the project for you. As a reminder, these TA's are actual pains when it comes to grading homeworks and tests:\nFei Peng\nAtif Ahmed\nJingjing Ling\nKilol Gupta\nGuanlin Zhou\nSajal Khandelwal\nKevin Raji Cherian	2	0	1442	664
80686	March 27, 2018	This is the worst CS class I've taken at Columbia by far.\nExpect extremely large projects that have nothing to do with what is covered in lecture, and a fucked up grading system that doesn't reflect how well you understand the material or how hard you work.\nOh and by the way, unless you pass 100% of test cases, you get a ZERO on the project. You only start to earn points through optimization of your circuit.\nI got the highest possible score on the first 5 projects, and got a poor score (I think around a 30% or something) on the last project, and ended up with a B in the class. I'm honestly not sure how it's possible to get a good grade in the class. \nMoral of the story: RUN AT ALL COSTS. Rubenstein may have poor reviews but there is no possible way his class could be worse than this. Martha Kim ruined my semester and I have no respect for her - classes like this are why Columbia has a mental health problem.	6 Projects, the last one is due toward the end of reading week so expect to do awful on all your finals and fall into a state of deep depression. The last 3 projects took around 45 hours each, so this is easily the heaviest class i've ever taken at Columbia.	7	1	4221	4251
80713	April 14, 2018	I took 1006 with Bauer in Spring 2017 and AI in Fall 2017.\nHe is an incredibly nice person and very organized. His lecture notes are helpful, and as a person who avoids reading the textbook, I found that convenient when reviewing for exams. Bauer does have a German accent but I don't think it is difficult to understand. Although he explains concepts well and respects questions, his lectures can sometimes be a little boring to follow. But if you're willing to pay attention, you will learn enough to do well in the class. He tries to get students excited about AI & ML --there was a simple ML assignment in 1006, and assigned readings in the AI HWs. HW prompts are so detailed to the point where all you need to do is implement it in Python, and exams are straightforward so in terms of difficulty, it's not hard to succeed in his class.\n1006 is a required class for many, but whether or not to take AI is a question to consider. Whether you take it with Ansaf or Bauer, the class itself doesn't go very in depth in AI. It's a nice intro and a good class to tack onto some other CS workload--teaches some game theory, deep learning, and a little stats stuff. I had fun but if you're genuinely interested in AI, just go have a conversation with Bauer. Whatever you choose, good luck in your CS career!\nOverall, I do recommend Bauer and hope to see him improve as a lecturer.	Completely Manageable.\n1006:  6 HWs (54%), Midterm (23%), Final (23%)\n4701:  5 Written HWs (25%), 5 Programming HWs (35%), Midterm (15%), Final (25%)	3	0	11572	6732
80720	April 15, 2018	Lydia is honestly such an amazing person. Her personality really shows through her lectures--you'll learn about all her favorite things: Star Trek, The Office, DDR, The Knicks, what the world's best boarding pass looks like. Her lectures are not heavy and very easy to pay attention to since she's so great at talking and is just so excited! She also does a good job of guiding people through the design process, focusing your attention on the little details and potential areas of frustration. Her slides have everything you need for the material, and I often find that it's enough to just pay attention. She also ends class early frequently and gives a nice summary after every lecture.\nFrom someone with no webdev background, it would've been nice if she taught some basic technical stuff i.e. JS, HTML, CSS. To be fair, webdev is hard to learn without trying it yourself, and the functions you need are often specific to what you want to implement. Our first programming hw was a static replica of the Gmail interface, which killed me as a newbie. Her written HWs are a bit subjective since she seems to have an answer in her head that she's looking for, and it's not always clear as to how much of an explanation is enough. The final project for this class is spread across 6 weeks, and she provides "milestones" along the way to keep you on track. She also emphasizes the importance of early feedback in the design process and allots class time for feedback exchange between peers. Overall, if you have some kind of front end experience, this class should be chill.\nThere is a "participation" component of the grade that is annoying for many, because your name has to be recorded by a TA hidden in the back of the room. Lydia likes to engage the class with short answer questions, and will call on people to speak. Your participation grade is almost entirely dependent on how well she can remember your name, and how hard the TAs try to figure out who spoke. Apparently the TAs came up with a scheme to remember where each of the three asian Kevins sat. It's often unfortunate for me to be one of the many shoulder length haired asian girls in the class, and it's a small victory on my part on those rare occasions when she gets my name. She definitely needs a better system to track participation, but if she doesn't establish one, I'd advise you to dye your hair purple before taking her class.	2 Written HWs (10%), 2 Programming HWs (20%), Participation (15%), Website Project (35%), Final (20%)	7	0	13549	663
80757	April 24, 2018	He is the love of my life	weekly problem sets/programming projects\n1 midterm; 1 final	7	2	515	7002
80758	April 24, 2018	There wasa lot of sexual tension between these two... it was very distracting in what i wanted to be a simple home economics class. i didn't learn very much, but i definitely learned a lot about myself.	heavy, yet also light	0	0	515	NA
80763	April 26, 2018	The devil incarnate	Terrible	12	6	4221	4251
80765	April 27, 2018	Professor Ferguson is the kindest professor I have ever had at Columbia.  He is on a mission to singlehandedly take stress culture out of the computer science department.  Take his classes.  Go to his office hours.  Be his friend.  He will be there for you, and his first concern is always your well-being.	Pretty intense.  He will help you with it all, and grant every extension you ask for.	5	0	6653	6732
80770	April 28, 2018	Prof Verma's Machine Learning class is a confusing mixture of being not technical enough and over-technical at the same time. He assumes knowledge of some advanced multivariate calculus, multivariate probability and linear algebra without going through the techniques explicitly or in any systematic way, while the prerequisite classes cover nothing close to what he requires. This could be partly due to the fact that half the class are grad students, with the overall result that undergrads feel very left behind. At the same time, Prof Verma introduces results of some advanced derivations, skipping over the math in class entirely with the reason that "it is too easy/simple/boring", but expects you to reproduce it in a test. He focuses on teaching the "intuition" behind the proofs, yet fails to understand that "intuition" comes from understanding, which is impossible for most students unless he goes more into the math. \nAnother huge blindspot for the course is that Prof Verma does not give out solutions for his practice exams. This could seem forgivable, except the homework questions are nothing like exam questions (problem sets are more like mini-projects while exam questions are just out of nowhere), so students who have seen questions of this type for the first time are forced to study without any guide or solution. This coupled with reasons mentioned in the above paragraph result in overall confusion before the exams. (In addition, no one does well on the actual exams). The lack of solutions handed out caused some Piazza savagery in my section, which I feel was actually quite justified. I hope Prof Verma sees this and realizes that no learning happens if the correct answer is not given. Perhaps he believes in unsupervised learning, but the results of this can be unboundedly far from the global optimal. \nAs an example of how ridiculous the technical expectations for this class is, during class Prof Verma regularly mentions Convex Optimization, some material from which is relevant in class. I looked up Convex Optimization and it is E6616 - a 6000-level course. If you're not prepared to deal with some 6000-course material that will not be explicitly taught to you, you may not want to take this Machine Learning course. I personally feel it is a shame because the material is super interesting and relevant, and could have been much better taught. A suggestion is a more depth, and less breadth, could improve the class significantly.\nOverall, this class seems to reward prior knowledge, rather than diligence over the course, which is something I have an issue with.	4 problem sets, not too bad, just start on them early; and 2 exams. Forgot to mention that the last exam is before reading week which adds to the general sense that Verma doesn't really want people to be well-prepared for his exams at all.	7	4	13496	1921
80786	May 03, 2018	This is a CS course but there is no need to code.\nThe professor use 4 books:\n1. The Basics of Process Improvement by Tristan Boutros & Jennifer Cardella\n2. The Process Improvement Handbook: A Blueprint for managing Change & Increasing Organizational Performance by Tristan Boutros & Tim Purdie\n3. Essential Scrum: A Practical Guide to the Most Popular Agile Process (Addison-Wesley Signature Series) by Kenneth S. Rubin\n4. A Guide to the Project Management Body of Knowledge (PMBOKÂ® Guide)â€“Fifth Edition\nThe lectures covered mostly on the 3rd book: Essential Scrum.\nOther books are verbose and quite boring.\nSome events in the lectures are likely to invoke your childhood but those events have nothing to do with grade.\nThere is a project proposal & presentation done in groups at the end of the semester.\nThe presentation is likely to take a lot of time but the effort you made will probably be meaningless.\nAlthough there are given grading rubrics (copied directly from the last semester without changing the dates in the document), the final scores are quite subjective and the grading rubrics don't really give you the proportion of what item should be covered more in the proposal/presentation.\nThere was a voting on team presentations but there was no explicit announcement about whether this will affect the grade. The result was not publicly announced after the grade was released.\nUsually, team presentations are divided into two weeks and teams in the 2nd week will do much better on the presentation because they can learn from the 1st week.\nYou can get a good grade if you are in the right group even if you seldom go to classes or attend group meetings.\nFind good friends that will notify you which class needs to sign up or sign up for you.\nMost quiz answers are not given at the end of semester so it is hard to learn from your mistake.\nThere is a high probability that you get something around or over 90 before the final proposal/presentation score is released.\nThe distribution of the final proposal/presentation is\nhigh: 90\nmean: around 80\nlow: 65\nso there is a high probability that it will lower your score.	Class Participation: 30%\nClass Project Proposal & Presentation: 40%\nWeekly Quizzes: 30%\nWeekly quizzes (multiple choices) and discussions are online on Canvas.\nNot hard but tricky. Most of them are in the books and slides.	0	0	13463	7300
80789	May 04, 2018	I like Professor Verma so much that I decided to write a review: note that I'm biased.\nPrerequisite: usually linear algebra and prob-stats. But I personally wished I learned more math, especially optimization related math. Although without those it will also be fine, with those knowledge you'll definitely get more out of the class. \nHomework: up to three students in a group, usually due 2~3 weeks after being posted. Try to pick your teammates cautiously, because if you don't, you'll be the one doing most of the work, which means a lot of hours into homework. I usually go to at least 6 hours of OH every week and read/post on Piazza to figure out the homework. But the homework problems are all interesting! And Professor and TAs are very helpful and responsive both in person and on Piazza. Fortunately, we only had four graded problem sets and the last one is optional. And no homework was due during spring break, which is nice.\nExams: Professor Verma made clear that usually you can pick some questions to finish; this is true. Due to the time constraint of 75~80 minutes, and there are 6 problems in total, I usually can only finish 4~5 problems and not all of what I wrote would be correct. But there's curve, so don't sweat too much. It's supposed to be hard!\nThis class teaches various topics on machine learning and I feel I actually know stuff about ML now. One thing I found helpful is that all the additional notes he linked on his website for each topic covered are very helpful. After lectures, sometimes I still have questions about the topics; if I read those notes, most of my questions get resolved. Make good use of them! \nGo to his OH and you'll learn a lot too! He is very approachable. \nTAs' recitations are also helpful. \nHe's teaching a topics class on unsupervised learning next semester (during the summer too). Take his class if you can.	Pretty heavy. Comparable to Analysis of Algorithms. \n5 homework, 4 graded, 1 optional.\n2 in-class exams. \nHomework 40%\nExam 30% each	2	0	13496	1921
80813	May 12, 2018	I love cryptography, and generally appreciated Allison's lectures. But I was not impressed by this class. To start, there was just too little material. Between meeting once a week and spending half of the class time on a dubious "design" project, we covered only a few topics, and only at a cursory level. The selection of topics was ok: identity based encryption, bilinear groups, byzantine agreement, differential privacy, fully homomorphic encryption, and obfuscation. However, there was no unifying theme; some of these topics are barely even cryptography. I felt like I learned a few neat cryptographic schemes, but did not come away from the class with anything else. There were no assignments aside from working on the design project. We were given papers to read; however, they were simply too long and hard to read in their entirety. I would have much preferred problems to do or more material to read on the basics. Because there were no assignments or exams, no one tried particularly hard to understand the material.\nThe project mentioned above was to design an interactive protocol for key-exchange. The project was well-motivated: we read an attack paper that described a real-life attack against an existing scheme, and started brainstorming how to circumvent the problem. However, after that, we got kind of bogged down. A handful of student presented ideas, but after that, progress more or less halted. Yet we still spent half of the class re-hashing the problem.	Every few weeks, we were required to write up our progress on the design project. Nothing else.	0	0	13004	2867
80902	July 03, 2018	I honestly have the world of respect for Professor Ferguson. \nThere were times in the semester that I was complaining a lot about this class. As someone who had never taken programming or computer science before, I walked in and I was immediately extremely confused. I went to the lectures, but I felt like they might as well be in French. \nHowever, Professor Ferguson realized that there was something wrong with this class. He asked for a lot of our feedback and drastically restructured how he taught later in the semester. Now, don't get me wrong, it wasn't perfect. But the fact of the matter is that he went through a world of effort to make the class better for his students. \nThere was also some confusion pertaining to assignments, but I think that will be refined over time. Also, his office hours were incredibly helpful. He would make extra office hours in the weekend to help students. Again, with zero programming experience, this was key for my success in this class. \nThe extra credit opportunities were also really helpful. \nSure, he has his sassy moments, but I think he has a lot of respect for his students and a high commitment to the class.	like 6 projects, extra credit	4	2	6653	6732
81090	December 13, 2018	Peter Allen is definitely a smart dude. Half of the robotics material published by Columbia was written by him. However, this dude cannot teach a class because he just doesn't care. He is extremely condescending and sarcastic and treats students as if they are below him. On Piazza, one student asked a simple question regarding the grading of the exam and he responds "Have you even seen your grading yet..I think not!"\nClass is spent by going over videos of robots, dissections and reading through the slides in class verbatim. It's not too big of a minus since I feel like most of the professors at Columbia do the same, however his slides are unnecessarily long and are packed with irrelevant information. \nThe midterm is easy (avg. ~75-80) as he was obviously too lazy to change the questions from his sample midterm (that he only hands out in class), but the second midterm goes so in-depth in material you once thought was irrelevant the average turned out to be 30 points lower (avg. ~55-60). He also was too lazy to give out a sheet containing answers to the "practice" midterm, which was nothing like the second midterm. In other words, the exams are highly unpredictable so try to memorize every single thing you see on the slides. \nThe homeworks require you to use the ROS software which is actually quite glitchy and can get frustrating at times. There is not a lot of guidance for these homeworks, so good luck hacking your way through it!	5 Homeworks (50% of grade)\n2 Non-Cumulative Midterms (20% of grade and 30% of grade)	2	0	37	2403
81117	December 20, 2018	Simply the best professor ever. He also happens to get the best TAs.	5 homeworks, 1 midterm, 1 final	12	18	13639	26
80909	July 14, 2018	The lectures were informative but they sometimes contained too much information that simply could not be digested in a 90 minute lecture (for example the lectures on DRAMs, out of order processing were discussed in great detail but required knowledge and hands-on experience, like VLSI, that was far beyond the scope of the class). \nThere was too much breath and not enough depth in the class. For example, pipelining was discussed in class but there were no real, hands-on, "get your hands dirty" coding, simulation or hardware exercises to implement the idea. This can lead to confusion because as the semester goes by, the student sees more and more jargon/words without having had properly assimilated the information. But perhaps this is just representative of many classes at Columbia due to the lack of time and weariness students feel as the semester goes by.\nSome of the homework questions were based on optimizing code or running simulations of hardware, which is alright. But no circuit simulations. So more of a CS class than an EE class. \nMidterm was take-home and you had to skype the professor to discuss ideas. \nNo practice final. So only lecture notes to go back on. Pretty difficult final because a lot of the material wasn't properly integrated into the homeworks/paper reading and the huge breath of the lectures did not properly prepare for the depth of the final. This class requires a lot more studying than it seems!	Four homework assignments, the last one created in the last minute it seemed (assigned from textbook). \nEach homework might take around 10 hours. Depends on whether you have installed the software before hand, remember how to code in C/python/Java etc.\nGroup homeworks mostly and reading of papers. \nFinal and take home midterm.	0	0	3429	5392
80920	August 09, 2018	Blaer is one of the best professors I ever had (and probably will ever have)!!! He is a well-organized lecturer and delivers the material in a very clear and succinct way. After taking this class, I decide to pursue CS further - one of the best course I have taken and my favorite class. 20/10 recommend!	A bit heavier since you have to do the readings to understand the material better	4	3	3409	4
80962	October 15, 2018	Terrible class. Half of the lectures are spent reviewing the useless material from the previous lecture. You don't learn anything about actual coding in lecture, just theory that will only be useful on the homework. The bigger problem is that you are given 30-hour assignment with "2-4 weeks" to complete them, but only learn the first half of relevant material the lecture before they are due. The professor doesn't know how to write notes on the whiteboard (you can't understand what he's saying simply by copying him). 1007 is more (tedious and difficult) work than 1004 or Data Structures, but you're learning less. I can't emphasize this enough: TAKE 1004 or DATA STRUCTURES. Professor is not helpful in Piazza either.	2 hours per week for a 2-3 week cycle, and then 30 hours in 3 days. Don't blame this on lack of organization; you don't learn the relevant material until 2-3 days before the due dates. You will have to figure out half of the problem set online and guess what the professor wants.	3	14	42	2906
80972	October 28, 2018	5th year CE major here. The assignments are very interesting, but LONG and often frustrating. Easily one of the most time-consuming courses Iâ€™ve taken. The course no longer deals with programming real robots (thank god), so it's all simulation. MAC USERS BEWARE: You will need to purchase the Parallels software (about $40) in order to run the Linux VM for ROS;  Virtual Box is not nearly powerful enough to handle the simulation. The lectures do not help at all with the homework (its basically sink or swim with learning ROS and RViz), but the lecture material is what you will be tested on. \nI have to say, Iâ€™ve never had a professor who was as mean-spirited and condescending as Peter Allen. I donâ€™t know why he is such a negative man; my only guess is that he is in the middle of a nasty divorce. He doesnâ€™t care about the students, and has displayed astonishingly little concern for whether or not they succeed. He actively discourages questions by mocking or snapping at the asker. He trash-talks the TAs when they're not in the room. I want to like this class, but Allen's attitude really detracts from it; if he were a little bit more pleasant and helpful, it would make the class worlds better.	Heavy, even if youâ€™re comfortable with Python and linux.	0	0	37	2403
81011	November 13, 2018	Prof Paine is really not a good professor. He is very smart, but does not know how to communicate it to students. His homeworks and exams are very very hard, and I honestly followed 0% of his lectures to feel prepared.The curve is strong though. The class overall is very tedious, very different than other programming class. It is based much more on memorization of computer parts and commands than it is on theories and understanding.	Homeworks are all available online but he changes slight details to make sure you dont just copy	14	2	13610	4251
81063	December 06, 2018	"A cow says 'moooo.' Right? Are you guys getting this? C'mon. If you're not, you're going to have a hard time on the exam next week."	:)	2	0	515	3807
81087	December 11, 2018	This is the best course that I have taken among all courses from my undergraduate and graduate schools. This course is epic. \nThis course covers the foundation of machine learning. You will learn different machine learning algorithms from the foundation supported by math and proofs. \nI have weak mathematics before taking this class. My math background only has intermediate-level linear algebra, calculus, and intro-level probability. I haven't done math problems for three years.  Before taking this course, I also have completed Andrew Ng's online course. Before enrolling, I thought I might struggle in this class but, in fact, I survived well and really enjoyed my experience. \nFirst of all, this is not a relaxing course. It is challenging, but it is not a hard course! What I mean is that the course homework and tests are challenging, but this course is amazingly organized and Verma is an extremely capable instructor. Even though this is a challenging course, I feel safe and comfortable when I sit in the class even though with a weak math background because of Verma's teaching. Verma is very patient on teaching his topics and he cares about how his students learn with quality rather than quantity. He is a strict yet kind instructor. I could feel that he ardently cares about his class and his student. His teaching is perfect. I can understand everything that has been taught in his class even with my weak math background. The pace of the class is slow and nobody would feel lost.  \nThe homework are challenging but are interesting to solve. If you spend time on them you can always find solutions. TAs are also helpful in Piazza and OH. The tests are also challenging. However, grades are generously scaled and you might get A- if you get 60% in tests. \nI learned so many things from this course and it helped me build a fundamental understanding of machine learning problems. If you really want to work in ML-related careers or research, this is the recommended intro-level course. If you hesitate whether this course is too hard, I would say be brave and enroll. You will be fine (suppose you can get 70% right for the homework 0, which is the precondition of enrolling in this class . 70% is not a hard target). \nColumbia University's tuition fees are expensive. You want to spend your money in the right place, this is the course you should take	Heavy but acceptable.	9	4	13496	1921
81145	December 27, 2018	Simply the GOAT.\nBrilliant: just check out his Google scholar list and Wikipedia page.\nDown-to-earth: flipped class room format is very intimate and you have plenty opportunities to interact with him\nCaring: late policy is so so generous and give you home during difficult times of the semester\nFair: final (40%) was very well structured, a nice balance of questions of all difficulty levels\nHandsome: while he's no Channing Tatum, Prof. Collins is a stud\nGive the GOAT a GOLD.	Dynamic programming assignments can be unintuitive and will take some time if you don't have prior experience. Everything else is just too reasonable (lighter than most CS classes)	4	0	10729	4903
81195	January 15, 2019	So I took this course with Omri and he uses the textbook Computational Complexity: A Modern Approach. The course has its pros and cons. Look, Omri certainly knows the material but he is glued to the textbook. As I understand it he graduated from Princeton and thinks this book is the bees knees â€“ the author is a professor there. The book is intense and I for one utilized other books and resources to build some bit of intuition for the material.\nHis lectures are interesting until you realize he is going straight from the book and fails to explain and expand on crucial concepts in different meaningful ways. He does not break down the proofs enough for the class to have any "ah-ha" moments. He assumes competency in the proofs and consistently says, "Come on guys, you should know this" as a constant response to any sort of confusion the class may have.\nThis is a graduate course and as such most students are Master/Phd students. If you are an undergraduate student, I would not take this course unless you are solid with rigorous proofs and have a solid mathematical intuition. Also, CS Theory is the pre-req course but it is a joke and very trivial compared to this course. There is a huge leap from messing around with Turing Machines in the first couple chapters of Sipser than jumping to Barak's material trying to fathom the complexity zoo.\nThe TAs were okay. Their grading was intense and they expected a lot from the students. Do not take this course if you think it will be an easy grade. I would take this course with Xi Chen or even Rocco who seem to dive deeper into the specific nuances of each proof. \nTLDR: Only take this course if you need it or are stellar in mathematical proofs, they will not hold your hand. Take with other professors for more in depth explanations of material.	10 Problem Sets\nNo Midterm\n1 Final	5	0	13519	462
81203	January 20, 2019	class based on midterm and final. if you're a bad test taker, well you won't do well. he added homework assignments this semester though so that may have helped some people. \nmandatory TA office hour every week to boost your grade (I mean not mandatory but you'll need it unless all this info comes easily to you) - a waste of time because TAs can't explain anything, but attend so that you can talk to the other students and boost your grade. Towards the end, professor didn't schedule properly or whatever so he ended up squeezing in homeworks 6,7,8 into reading week	10% homework \n45% midterm exam\n45% final exam	2	0	2427	4251
81223	January 29, 2019	I took the class in Fall 2018.\nWhile professor Allen does follow the slides most of the times, he will always give some additional information with it. If you ask him any doubts he is always able to clear those. His course is well organized with pre-determined readings.\nThe labs are interesting if you are a noob to ROS and Robotics, and covered a diverse range of topics. You get to code Path Planning and basic computer vision etc. It is an interesting course for a beginner. He also spends some lectures to get you started with ROS and OpenCV.\nI enjoyed this course a lot.	There is average workload. You have 5 coding projects and 2 exams. The exams test you on your thinking ability as well as the class slides. Overall a good course.	1	0	37	2403
81250	March 19, 2019	Professor Ansaf lies somewhere in between awful and good. Extremely friendly and approachable but very mediocre when it comes to teaching the actual material. This is not really a big deal because discrete maths (as taught in Columbia anyways) is a very easy class, lacking all the rigour that makes discrete mathematics actually useful for CS. My biggest problem, however, are the ridiculous midterms , designed not to test someone's knowledge and understanding but rather how careful one is in avoiding silly mistakes. If you are taking this class, you better hope you are the type of person that does not make dumb oversights or else you really are in hard for a hard time	3 hours a week \n6 hours around midterms\n3 Midterms no final\nLatex is honestly the hardest part	3	12	13076	397
81309	April 29, 2019	Literally one of the worst teachers I've ever had. When he had to leave the class for three weeks in the middle due to a personal emergency and the TAs took over, it was a welcome relief. Terrible lecturing and barely comprehensible classes. The TAs saved this class from being insufferable.	4 homeworks, 1 final exam	3	0	4207	5638
81385	May 20, 2019	I think Cannon was a really good teacher and lecturer. He is entertaining during his lectures, and although he can seem a little unapproachable, he is much less intimidating if you go talk to him during office hours. He also responds to emails quickly if there is a logistics issue. I took AP CS, so the content of the class wasn't that difficult, though there are things to learn even if you did take AP CS, like Turing machines, Dijkstra's algorithm, exception handling, von Neumann architecture, and information about the layers of computer networks. (If you know all of that and took AP CS you could potentially skip to Data Structures, though it was nice to be able to review everything I already knew to really get a firm grip on the material.) I could see the class being a little difficult for people going in with no experience as he doesn't really explain the syntax in depth and you probably will need to do a fair about of self teaching, but conceptually he does a great job explaining everything. I found the midterm and final pretty easy. They were mostly definitions and multiple choice and the final had coding and short answer. Just make sure you pay attention during lecture to all the details. He actually does tell you the answers to some of the harder questions during class. I also really appreciated his organization. Problem sets and projects come out on a timely basis each week. He often codes live for you as well and sends you the code that is done is class, which is helpful.	A programming project due every other week (5 total), and on the weeks the project is not due, a written pm set (6 total). 1 midterm, and 1 cumulative final.	4	1	515	3807
81392	May 22, 2019	I definitely recommend taking Machine Learning with Nakul Verma if you have knowledge of linear algebra and (to a lesser extent) statistics. To begin with, he is a clear and organized (and kind of funny!) lecturer, his course content is presented in an order that is logical and builds on itself. His lectures are paced well and doesn't try to cover too much content. If you are a person that has difficulty following along in lectures, the lectures are recorded and the slides are on his course website. Professor Verma is usually good about repeating inaudible questions from the class before answering them too. \nThe content is a mix of theory/application, which he mentions early on. He goes through major proofs for ML theorems, but is pretty reasonable about what is in the scope of the class and as a result the math doesn't get too crazy or super irrelevant. \nThe class had no required textbook which is financial plus - and the reading cited on his website were clear supplements that don't go over your head. \nI really recommend making sure you have an okay foundation in linear algebra, maybe prob stats as well. You don't need to be fresh off getting an A in lin alg, but the workload is heavy enough that if you are already taking a full course/research load, it may be difficult to find time to both catch up on the prereq knowledge and also submit thoroughly completed problem sets. He made a couple of jokes about putting test questions that dealt with certain distributions on them, but really all we needed for the class was an understanding of the Gaussian and binomial/Bernoulli distribution.\nOverall, I felt like the class was a great introduction to machine learning, and sets up a foundation for future study well.	Moderately heavy. \nThere are 5-6 problem sets, that were worth a total 40% of the grade. The first problem set did not count towards your class grade, it was weed out pset testing the preliminary linear algebra/stats knowledge. If you are concerned with whether you have background knowledge, this pset will let you know well before the drop deadline.\nThe next first four problem sets were time consuming - mitigated by the fact that you can work in groups of three. The questions themselves were not impossible, and any exceedingly difficult portions were quickly revised by the instructor/TA team to be "bonus" questions. He was reasonable giving out extensions. If you have team members and start early, they are doable. I would recommend starting early, especially as the code for one problem set took hours to converge - it's not something you'd want to start last minute. \nThe last problem set (for the Spring 2019) semester, was individual and worth only 5%, but was assigned during finals week. The task was to make predictions based from real world data. \nAll of the problem sets served to further understanding of the material, however because they were so long, you may not have time to adequately study the answers/practice with them for the exams. \nThe midterm and final were each worth 30%. The class averages were around 35% and 40%, results are curved. If you treat them like exams in a math class, study the material but focus on working through practice problems, you will be fine. It helps during the exam itself if you are comfortable with linear algebra. They are open note exams.	4	6	13496	1921
81397	May 23, 2019	The appropriate title for this course is not advanced programming, but petty programming. \nThe emphasis of the course is on trivial details of tracing code, pointers, syntactical sugar, and sockets programming. You end up learning a good deal of C/C++, and forgetting the same content in a matter of months. The lectures are clear, TA's are incredibly dedicated, and Jae cares a great deal, but the focus throughout the course is frankly petty. It's disappointing that so much talent and energy is dedicated to details that should be taken for granted. \nFurther, the culture of the course promotes stress. This is just a class, not a lifestyle nor groundbreaking or even inspiring. People need to be more relaxed and organized with the course. The use of ListServ for emails, coupled with CLAC to complete assignments, and detailed assignment statistics generate a false impression of over importance. The labs focus on implementation of boring and detailed tasks, the exams + lectures focus on the same boring details.\nIf you do the assignments, complete all the practice exams, and understand the notes, it is a standard-hard course. Exam questions can be challenging, and focus on often overlooked details (everything including the Makefiles are fair game). Don't cheat, you will be caught and you deserve the consequences. At the same time, the course's obsession is part of its culture and content emphasizing the petty.	9 Labs (Initial labs take 2-3 hours, tougher labs take 7-10 hours, lab 7 is very time consuming) + 2 Midterm Exams (1st Exam is Easy, 2nd Exam is Difficult) + Final Exam (Fair Difficulty) + Schedule ample time to prepare for exams in advanced and begin working on difficult labs quickly.	47	5	3509	4758
81409	May 24, 2019	Christos Papadimitriou is easily one of the best teachers, not just in the CS department, but at the whole university. Rather then just writing summaries of the text book on the board for students to copy, he actually engages the students and instills the core principles of concepts in each lecture. He also adds fun historical facts and jokes throughout his lectures. His weekly psets were quite challenging, but thatâ€™s by nature of the subject. Christos doesnâ€™t hide the fact that his psets are challenging, and consistently encourages students. He even throws â€œhomework partiesâ€ during the semester, where he books a conference room and orders food, and lets students collaborate on the give. Pset together. Iâ€™ve never had a teacher more invested in their students success. \nAs an added bonus, Christos isnâ€™t just some random lecturer. Heâ€™s one of the most famous and accomplished  theoretical computer scientists in the world. Having access to such a legend is truly astonishing. In his office hours, heâ€™s willing to discuss anything research related. Heâ€™s also one of the most charismatic people Iâ€™ve ever met. If youâ€™re lucky enough to be able to take a class with Christos, take it!	Weekly psets (difficult), midterm, final, weekly (optional) quizzes for bonus points	11	15	13703	4079
81423	June 01, 2019	This class was one of the most organized CS classes Iâ€™ve taken. \nProfessor Bauer does an excellent job at explaining algorithms, ADTs and their implementations. Heâ€™s also incredibly responsive to questions, and overall a very kind, intelligent, helpful person. \n3137 is worth 4 credits, as opposed to 3134, which is worth 3, because this class also teaches functional programming concepts via Scala. \nIf you love CS, then definitely take this class.	Five Homeworkâ€™s (Written/Program) - 40%\nMidterm - 25%\nFinal - 30% \nParticipation - 5%	4	2	11572	7450
81425	June 04, 2019	This class is a real mixed-bag. On the one hand, the course does a wonderful job of bridging the gap between understanding simple circuitry to how programs run on a processor "under-the-hood". On the other hand, the course structure and execution can be a bit daunting (and frustrating) for many students.\nCovering the material *completely* is nearly impossible. Moreover, teaching it in a way that reinforces *understanding* rather than *memorizing* is really quite a challenge. To accomplish this, Prof. Rubenstein has taken the tactic of presenting quite abstract (and hypothetical) problems for homework and test questions. I have a feeling that this is the crux of why a lot of students struggle in this class.\nGetting good at answering his "type" of questions is definitely a skill in-and-of itself. They typically require a combination of brute reading comprehension (to understand what the problem is asking), parallel thinking (to see the "trick" of the solution), and deep understanding of the concepts in order to identify the critical step in the solution. Once you understand the trick, the solution typically follows from the general concepts (rather than a concrete list of steps).n Again -- I have a feeling that this is why many students feel lost -- because this type of parallel thinking is hard to teach. It comes naturally to some students, and is quite difficult for others.\nThis method is great for confirming understanding, but really, *really* punishes students who need extra time to wrap their head around the problem before tackling it. The tests are laid out such that if you don't "get" the problem quickly, it can really set you back. This can be quite troubling to students, as the grading scheme is basically entirely built around performing quickly and accurately under pressure on the tests. (In contract, the rest of the grade is based on TA-office hour attendance, and homework completion -- both of which, most students max out on).\nI really like Prof. Rubenstein as a person -- he's fun, and personable, and has a great (albeit somewhat whimsical) sense of humor. As a professor, he's a bit on the scatterbrained side. It's obvious he understands the material, but the way he walks through it in class fluctuates between spending way too much time on repetitive concepts, or not quite getting to the critical point on more in-depth concepts. Either way, communicating the subject matter in an effective way is quite a tall order, so I tend to cut him some slack. I really dislike the grading scheme, but I'm not sure I could come up with something more fair/appropriate. \nOn a more specific note, Prof Rubenstein has a habit of coming up with completely outlandish analogies to explain concepts. Unfortunately, I more often found myself using my understanding of computers to decipher the analogy rather than using the analogy to further my understanding of computing. To provide an analogy to illustrate this teaching style, it would be as if I was ordering dinner, and I didn't know whether I wanted the steak or the chicken or the pork, so the chef went ahead and cooked all three, then just started putting them in front of me until I either saw something I liked or just nodded and asked "why are you giving me food? this is a computing class!" -- but instead of a chef making food, it's Prof. Rubenstein making analogies, and at this point the whole metaphor breaks down, because I really didn't think it through entirely before i started typing... and if you're even more confused by this, then you now understand what some of the analogies feel like. (As an aside, his washing machine analogy was spot-on. high-five, dude)\nAnyways, I digress. If I made any mistakes in this review, I'll fix it in the slides on piazza.	Weekly problem sets (3-6 hours a piece)\n2 somewhat intense exams.	5	0	2427	4251
81447	June 10, 2019	A very well-done class! \nTo be honest, the class can be a bit challenging and Professor Dear's section is (a lot) harder than Ansaf's section. However, Tony's lectures are very organized, and he always tries his best to answer our questions and make the course more interactive with polls etc. I definitely learned a lot from his class and would recommend anyone who wants a challenging but fulfilling course! Tony is also very approachable and he even put memes in our last midterm.\nTony was super nice about the grading curve since he acknowledges that his section is harder. \nAlso he gets the best TAs!	10 HWs, can drop 1. HW can take a while, so start early! (count 9 HWs, total 45%)\n3 midterms (15%, 15%, 20%)\n5% participation	7	7	13639	397
81478	July 14, 2019	Experience was consistent with earlier reviews:  Eleni is a decent lecturer and even throws in real world examples of how particular algorithms can be applied to problem solving.  Unfortunately, her homework problems do not align with the material taught, she provides no review for the exams, allows no note sheet on the exams, and throws several questions in there which had nothing to do with what she recommended to study. \nIronically, for all her rhetoric on every homework about using only the book and lecture material (i.e. no outside research), if you Google her problems you can find she herself has plagiarized them from other sources, which explains why they don't sync up with her lectures well.  In all, I thought the lectures were interesting, but this could have been a far better course as her methods were ingenuous and designed to set students up for failure.  She does curve, but expect a C if you're not strong in theory and proofs.	Homeworks impossibly difficult if you were trying to solve them honestly.	5	1	13070	4079
81481	July 15, 2019	One of the best professors at Columbia hands down. The material is non-trivial but he makes it a breeze with great lectures and a generally well organized course. Blaer is also very approachable if you happen to have questions in office hours.\nMany people will take this as a required course, but even for non-CS majors I'd highly recommend.	Will be highly variable depending on your background, but if you are already comfortable with Java then none of the homeworks are that time consuming.	5	4	3409	4
81487	September 10, 2019	You probably don't want to take this class.\nCame in thinking that it was going to be a class on the future of the world and tech, turned out to be a class on the history of the internet in the US. Prof was very smart but a bad lecturer, could not hear what he said half the time. Some of the content was quite interesting (especially the econ part), but most was just google-able facts that we were supposed to memorize for the exams and that seemed quite useless.\nI'd recommend the class if you have a specific interest in working closely with the professor on a research project relating to internet technology	midterm and final -- easy to prepare for\nproject: depending on what you pick, it could be a lot of work\npresentation	4	0	350	7406
81497	September 19, 2019	This class is among my favorite CS classes at Columbia, and I've taken some with fascinating course material. Tony is a great teacher, a really nice guy, and tries so hard to make sure you learn what you're supposed to. A huge chunk of the class consists of algorithms and Tony goes through each one really well until you really get it. A lot of the people I know who took a class with Tony stick around to take his next class.	Decent, not super hard	15	19	13639	26
81521	October 22, 2019	I strongly suggest you to NOT take this course. The title of the course is very misleading. There is nothing about AR in such. The course is all about UI and graphics, and the professor does not want you to do any new things in his course. Any new idea will be crushed by professor and his some puppet lab assistant who are equally rude as him. \nThe course content has nothing to do with the assignments or the final project you get. For the first half of the class his slides as basically history classes for graphics and you get to learn nothing. If you want to get grade in this class you need to be in his lab all the time just do what he says basically just follow him and forget the other courses you take.\nNo matter what project you do you will not get marks because he neither tell you anything that is wrong with your project nor gives any suggestions until the final presentation by then you are basically screwed. My language might be harsh but this is nothing in comparison to the disappointment we got after taking this class.	Forget your other courses. You'll basically be doing only his assignments.\nHe wants you to build and entire fully functional app on unity in one assignment. And the grading is the most rigorous I've seen at Columbia. Be ready to take a huge blow to your gpa.\nFor final project he wants you to build AR/VR app on unity about which he neither teach you nor talks about in any of his class.\nGood luck!	1	1	39	7468
81535	November 05, 2019	Horrible Horrible Class. Homework is almost completely unrelated to what is gone over in class.\nClass is boring and long with PollEverywhere scattered here and there.\nHomework basically consists of throwing a bunch of model at a wall and see what sticks, can be fast if you have some applied machine learning background but you literally learn nothing from the homework other than getting frustrated with the libraries.\nOnly upside is Kathy is a great human being who genuinely cares about her students - she literally remembers everyone's name, but that's about it. She doesn't make the course any more interesting.	4 Homeworks that basically consists of implementing language models and throw a bunch of parameters at it until you get something that works. \n1 Midterm that wasn't too hard.\n1 Final	33	17	2142	4903
81547	November 12, 2019	A witty, intelligent, and entertaining professor. He talks a bit fast at times but is always willing to repeat what he said if you ask. Assignments aren't too difficult but might take some time if you're 100% new to CS. If he hears people talking while he's lecturing he will ask what they are talking about or if a part of a song accidentally plays aloud he will ask what song it was â€“ those moments definitelyÂ add some excitement to class. All in all a good teacher he seems to genuinely want to help his students succeed. Note: He gives out many A- but As are quite difficult to get.	About one programming or writing assignment a week. --> a couple hours of work at most\n1 midterm\n1 final	7	1	3409	7002
81549	November 12, 2019	You're significantly better off going through the AI lectures from Berkeley off of which his entire course is based on. The professor is not good at explaining the reasoning behind the mathematics involved in the course and after a certain point, it's hard to follow his lectures when all you hear are math terminology with little to no connection to how they're used for AI. He tries to be as helpful as possible, but when you're that confused - I don't think it'll help.\nHomeworks are annoying given that there are revisions to the questions 10 days into the assignment - and are fairly difficult when compared to the examples solved in class. They're also weighted weird, with some 5 point questions taking 2 minutes to solve, while some 5 point questions take upwards of 1-2 hours with a ton of calculation involved. The programming sections are nice though, so no complaints there.\nHe's a super nice guy and tries to make everyone understand the subject, but he's not a good professor for this particular course. Especially when compared to the source material from Berkeley	Not too bad, but it's poorly distributed. The question corrections 10 days into the assignment definitely don't help	7	17	13639	26
81566	November 17, 2019	Professor Bauer is an amazing lecturer who cares very much about his students. I took his course in Summer 19' (tighter packed schedule) and it was worth it. His German accent made the three-hour lectures tolerable, but it was his passion for NLP that really drove the class forward. There is some math that comes with the subject but Prof. Bauer explained everything until he felt the entire class grasped the concept. My favorite part was when the class worked through NLP problems together during class, solving theory-based problems that helped make sense of the assigned programming assignments. If you get a chance to take NLP with Prof. Bauer take it! I for one took this class in the summer on top of an already heavy schedule but always found the material satisfying. His problem sets force you to connect the dots from theory to application but it was always satisfying coming to a solution. Sometimes, there were clever optimizations that could be made to improve your code to run in a fraction of the time. It is worth noting that this is the semester I started to really learn Python, so if you already have some familiarity you should be good. The exams were challenging but if you attend class and study diligently you should be okay. This was one of my favorite classes here at Columbia and I am eager to learn more about the NLP field because of Prof. Bauer.	- 5 Problem Sets\n- 1 Midterm \n- 1 Final	4	2	11572	4903
81570	November 18, 2019	Take a class with Christos!! He cares a lot about his students and is a fascinating and wonderful person to know. His office hours have been one of the best parts of my college experience. His psets are difficult, but he is flexible, helpful, and brilliant. Also, he is the author of multiple novels and a wonderful comic book series called logicomix. Ask him about it in his office hour sometime.	One difficult pset a week. They took me about 5-10 hours depending on the pset, and they had to be typed.	8	16	13703	4079
81576	November 18, 2019	absolutely the worst person ever.	weekly hw	7	6	4221	4251
81679	December 16, 2019	Incredibly poorly run class. Homework grades released months after assignments were submitted, rarely in time for exams. Only 1 homework covered material on the final exam, incomplete answers were released 5 hours before the final. Programming based assignments barely reflected theory learned in class, most of the work was done in reading documentation of the framework we were working in. Professor refused to release answers to last programming assignment publicly (answers required for extra credit assignment due during finals period), and students had to chase after TAs to get the solutions mailed individually.	5-8 hrs a week	5	0	13791	3105
82509	December 01, 2020	DON'T DO IT! Prof Bauer is a good guy but his lectures are so boring that you will not be able to pay attention. His homeworks are also quite difficult and i dont think his lectures prepare you for the homeworks at all. Take this class with any other NLP prof in the department and you'll do yourself a favor.	5 HWs, 1 midterm, 1 final	5	12	11572	4903
81719	December 24, 2019	Very disorganized professor - every homework/programming assignment needed last minute clarifications. \nTeaching was disorganized (didn't learn a single thing from lecture), and what was discussed in lecture was completely different from the homeworks. Doing the homework assignments depended on going through the source code of LLVM, navigating around documentation on your own, and trying to figure out what was going on. This was justified by the professor because she said that obviously theory taught in class will be different from applications on homeworks. But had a student not posted a Google Doc on Piazza of research that she had compiled and shared with the class, honestly I wouldn't even know what LLVM is. Grading was very arbitrary.\nOverall, I think the professor cares very much about teaching her students and making sure that we understand. This is apparent because she took time in class to ask for and answer questions. However, I had no questions because I didn't even know what to ask. All her slides are also adopted from other professors and better versions can be found online.\nI would recommend taking PLT with any other professor if possible.	3 written homework assignments; 5 programming assignments\n1 midterm, 1 final on the last day of classes	4	0	13791	3105
81727	December 25, 2019	Definitely not the best at explaining concepts, which is kind of critical considering that this course is very abstract and theoretical. It can also get very hard to take notes on his lecture because he often would not write down a complex idea he is talking about and/or scribble very few words about it. He does regurgitate the textbook almost verbatim, so you can totally get away with not attending class.	1 problem set every roughly three weeks, which is reasonable. They can take a while to do, however, if you do not understand the material. Midterm was very straight forward and the class average was like 94%, but the final was atrocious. The average is not released at this time of writing but it is probably around 40%.	12	2	13519	234
81755	January 03, 2020	Writing this as an update since the course has apparently changed a lot since the last reviews. Basically, now there are 8 problem sets but they aren't turned in or graded, and your grade is based entirely on your midterm, final, and attendance to optional recitation sections. Because of the optional problem sets, I mostly blew off this class. I did virtually no work besides a day or two before the exams, and just crammed then. I missed class a decent amount (especially after the midterm) whenever I had a lot of other work. When I did go, I was not very focused and didn't take notes.\nIn general, though, the class was fine. It was relatively easy and I got a fine grade despite blowing it off. The material is interesting at times, but often it felt like we weren't going into enough depth to really learn much. Lectures were decent but often I felt like Prof Kim would touch on many topics briefly (for example, different kinds of circuit components beyond the basic ones) without going in-depth, so it felt like she was lecturing on things that we didn't really have to know. Since we wouldn't go that deep into topics, I often found the problems she gave in problem sets were either very easy or were too difficult to really understand based only on what she taught in class.\nThe first half of the course covered basic circuit stuff, with combinational and sequential circuits building up to Mealy and Moore machines. The second half covered MIPS and then 3 sample MIPS microarchitectures that show how a processor actually works. \nThere were 8 recitation sections, and they felt pretty much useless. The sections are meant to go over questions from each week's problem set, but mine met the day after the problem sets were released so literally no one had done them. I would guess that even on other days, most people didn't do the problem sets. You could probably get more out of the recitation sections if you kept up with the problem sets and asked questions, but I basically went and zoned out for an hour. The TA wasn't great either, he had a decent command of the material but sometimes couldn't answer questions, and he had taken the course with a different professor who emphasized different parts of the material.\nRecitation attendance is optional, but helps your grade. If you attend all 8 recitations, your grade is 30% recitation attendance (which is effectively 100) and 70% from your exam grades. If instead you attend 4/8, you get 15% of your grade from recitation, and 85% would be based on your exams. This is pretty nice, but the actual grades are just based on a curve of the raw grades, and most people attend most of the recitations (mean attended was like 6.5), so the actual affect on the grades is probably kind of modest. I think the curve was pretty nice, probably like median B+. I did pretty well on the midterm exam and basically average on the final and got a decent grade, so can't complain since I put very little effort into the course.\nOverall, it sounds like the course is much easier than it used to be. You can get by with minimal effort, though you won't really get that much out of the course.	No graded homework, but 8 problem sets that would probably take a couple of hours to really do\nWeekly optional attendance that helps your grade (1 hr/week)\n1 midterm, 1 final, a lot of cramming if you don't do the problem sets	0	0	4221	4251
81763	January 05, 2020	LOVE Paul Blaer!! Hands down my favorite Professor at Columbia so far. He is such a good teacher & amazing at explaining concepts. He is also incredibly nice & just a really genuine, down to earth person. \nAs for the class itself: I loved it as well & was definitely one of my favorite classes at Columbia so far. I had actually not done any programming in Java for a few years, because I had taken AP CS in high school & skipped 1004, so it took me a bit of time to adjust and remember/relearn some things. The class was definitely challenging, but not too much and in a good way I think. I really learned a lot from the class & fell in love with CS again (I wasn't a CS major going into the class, but I am now). \nThe TAs were also super super helpful & I highly recommend going to office hours to work on the assignments/study for tests (it's so much harder on your own trust me), and there are so many TAs so there are office hours like literally all the time which is so nice. \nThis class is required for the CS major & minor, but I'd honestly recommend taking it even if you aren't majoring/minoring in CS. I would also highly recommend taking it when Blaer is teaching,if possible (he's like 1000x better than the other profs who teach it).	Homework: ~every 2 weeks. Had a coding component & written component. Most are not too bad & the first couple are pretty easy. A lot are pretty complicated & take some time, so I highly recommend going to office hours. Blaer said back when he took the class they took him ~24+ hours each to complete & I think that's pretty accurate.\nExams: Midterm (moderately difficult, but curved a lot), and final (pretty similar to midterm). They're kinda similar to the homeworks & blaer gives lots of hints to questions in class ;)	3	5	3409	4
81766	January 05, 2020	It is everything they say it is, but Prof Nieh is one of the best professors I've ever had the pleasure of studying with at Columbia CS. His lectures are very clear and he's super kind and approachable. Also, comparing notes with my friend who took OS with Jae, I'm not sure Jason's is the harder rendition as it's been rumored to be. The TA's this semester (Fall 2019) are also very good and went out of their way to help students with the assignments, and preparing for the exams. Granted, I took the class with a 4-course semester so maybe that's part of why I managed it okay. Still, if you're interested in how the operating system works, would recommend that you throw away your fears and just take it.	6 projects, 1 midterm and 1 final\nFirst project is individual and the other 5 are in groups of 3. Lowest grade project can be dropped.	4	4	45	2384
81768	January 05, 2020	Somehow there's no review on Prof Vondrick yet despite him teaching here for two? three? years now, so I thought I'd get it started.\nOverall, I really enjoyed his lectures. The earlier lectures on image processing were simply mind-blowing to me and a good foundation on accessing the field of computer vision. Past neural networks, it gets a little hand-wavey (as classes tend to, as I've learnt, after deep learning comes in and dominates the field) because Prof. Vondrick doesn't really get into the details of constructing a neural network tailored to CV, and talking about theory on a powerpoint only gets you so far. However, he continues to give great theoretical intuition on how the math/techniques work. You can tell he is a brilliant man.\nPretty good class and I learnt a good deal. Helps to have linear algebra and some algorithms prerequisites (even more helpful to have taken a class on deep learning) as he goes through some concepts assuming the class already knows them.	7 assignments, difficulty varies. The easiest took less than an hour and the hardest ~10 hours. Implementation of algorithms in python.\nFinal quiz covering lecture materials.	8	0	13801	2386
81800	January 10, 2020	Bauer is an excellent professor. His lecture slides are probably the most useful thing; they're super clear and easy to understand. He breaks down the concepts through visual animations which is nice if you're a visual learner. I took intro to java with Paul Blaer, and I would say Blaer is definitely more engaging and makes the class fun. Whereas BAUER can be kind of dry and I've fallen asleep twice during lecture. He can get in the theory and mathematics of algorithms which can get pretty boring, depending if you're into that. \nHomework projects aren't too hard nor too easy. Spread out well, giving enough time to finish them. \nSuper kind and understanding: I was sick and he gave me an extension of a week for one of the homeworks. He's very helpful in office hours and I could ask him the stupidest question and he would explain the concept.	5 homework, 1 dropped (50%)\n19% midterm \n30% final \n1% for setting up Codio... so basically a free point	2	0	11572	4
81813	January 14, 2020	absolutely useless, learnt nothing.	heavy	3	14	13810	4903
81814	January 14, 2020	The lectures are absolutely boring and the lecture slides don't help explain concepts as they are very limited with no text. You are basically screwed if you miss a class or lose your focus in class (which will happen because the lectures are so dry). The exams are however easy and so is the curve so you don't need to worry about the grade so much.	Light workload: weekly ungraded problem sets, 1 midterm, 1 final	0	3	4221	4251
81820	January 15, 2020	Let me start off by saying, I'm not someone who naturally "gets" things and prior to this point, I had never even gotten above a C in any exams I've taken for a CS class. That being said, I managed to get an A- in this course and my goal is to hopefully not come across like I'm bragging but just to make everyone who's currently doubting their abilities heading into this course feel a little more confident in their potential to succeed.\nObviously all the reviews agree that it's hard, but it's up to you whether you want to treat it as a 'lifestyle' or not. I usually started the homework a couple of days before the due date (except for HW7) and got around the median each time. I think the two things that really helped me were the videos they uploaded on YouTube and rewatching the lectures but at twice the speed. Counterintuitively, as someone who really has trouble focusing in class, this forced me to pay attention since it gets rid of the little pauses where I would accidentally zone out. \nMaybe you'll like the listserv format or maybe you won't but either way, you're probably going to be stuck with it so use it to your advantage. It makes me nervous to ask questions anonymously, let alone in an email to everyone in the class, but it was helpful to go through each of them prior to the midterms and final and seeing whether I could answer in my head similar to how the TAs would answer each question.\nI would say you don't have to start reviewing super early for the exams (although like in all classes, the more time you leave to review the better your chances), you're the person who knows you the best so just leave yourself enough time to be able to go through the sample exams and ask questions to the TAs in person if you have any.\nI hated hearing the TAs say this, but the exams really are just basically like puzzles and it's a combination of luck over whether it covers your strengths and how much time you dedicated studying and absorbing the homework in general. Regardless of the amount of importance it might promote on itself, AP is still just a class in the end. I wouldn't be surprised if there were a couple of super freshmen in the course, but most of us have been here for at least a year now when taking it so just try your best to learn from your mistakes or successes in your previous courses and you should be ok.\nAnother very important thing to note, Jae won't fail anyone unless you cheat so if you start thinking about cheating because you're afraid of failing the course then know you would be so much better off just taking the L instead of receiving the cheating email at the end of the semester.\nGood luck!	same as in other reviews	24	2	3509	4758
81836	January 21, 2020	The reviewer below clearly has not taken any advanced math class at Columbia. Omri's explanations of theoretical concepts is very good, and if you have any experience with proof based math courses, you will probably really enjoy his exposition. \nThe reviewer is correct that lectures are the exact same as the textbook, but that doesnt mean that they are not worth going to; reading and understanding the textbook by yourself can take an extremely long time whereas Omri will streamline and highlight important parts of the proofs in class.	Homeworks are straightforwards (can easily get 95+, but the averages were low)\nMidterm was very easy \nFinal was harder but pretty doable with a complete understanding of the material	3	24	13519	234
81837	January 21, 2020	The class is basically taught and graded entirely by the TAs who do not know how to grade. Grading was always late (2 of the 5 homework assignments were graded after the final exam) and feedback was terse. Omri doesn't seem to care about his students because he's too busy doing other things. Many times he wouldn't be in his office during his office hours. Take this class with other professors who will actually take their job seriously.	Easy homework, brutal exams (mind you, that's like 80% of your grade)	21	0	13519	234
81847	January 22, 2020	Our semester was the first to change back to her previous teaching style, which was just attendance during study groups and exams (no homework). After hearing how crazy her previous teaching style was, I would say it was not that bad this time around. Her slides are also designed to be quite useless when you self study; so either come to class and pay attention or self study the textbook (quite helpful actually). Go to all the study groups, it actually affected my grade. I thought her exams were quite fair. Overall, thought it was fine -- she was nice.	Light (virtually nothing) until exam dates	1	1	4221	4251
81850	January 22, 2020	She was a boring lecturer, but was obviously passionate about the material. She really worked to improve this course last semester because everyone said it was absolutely brutal in the past. She was generous with extra credit, curving everyone's grades based on how many study sessions they went to, which I appreciated. She also makes the midterm/ final grade weighting be 40% and 60% of your final grade, or 30% and 70% of your final grade based on which gives you the higher final grade which is great.\nI didn't really go/ pay attention after the midterm, but reading the book and doing the problem sets was always enough review to do well on the exams.	Light. Weekly optional problem sets, midterm, and a final.	0	0	4221	4251
81851	January 22, 2020	If you have a decent amount of experience programming, this class will probably be a breeze but pay attention to the minutia of how Java works and especially to the hardware and theory lectures.\nIf you've never programmed before, this is the class to start with. It might be rough, but pay attention and practice and you will succeed. There will be a temptation to slack off during lectures because you will have your laptop open and sometimes the content can seem a little slow. Do not do this.\nPaul Blaer is a lovely, hilarious, clear, concise, friendly, loud guy and an incredible teacher.	About 10 homework assignments. Half programming, half written problems from the textbook. Programming homeworks significantly harder than written, both scored on accuracy and grading can be a little pedantic depending on your TA but you can also request a regrade quite easily.\nOne midterm and a final.	3	3	3409	7002
81860	January 24, 2020	I took it in the Fall 2019 Semester. I was shopping and after reading all the comments, I had my mouse on the drop while taking her first class, but something changed. She turned out to be a really good lecture, and I ended up taking the course. I thought she did an excellent job in teaching the material. This being said, I owe a good chunk of my A- to my TA, Stanly. He was an amazing TA and gave a week-long (each day 12 hrs) of TA OH during finals week. As for Martha, she was still a very great lecture and I feel conveyed her point. She noticed in Piazza that people still struggled in certain topics, but she went over them again during the review session, which really helped. I recommend you keep track of the review session material because, at least in my semester, she tested on them. All of this being said, even though I loved her as a lecturer, the class was a sh*t show after the midterm. It got entirely overly complex and I couldn't understand what was going on. I had a near-perfect score in the midterm, so that is telling you something. I asked around, and people were lost as well. Before the midterm, she would spend a lecture or majority of a lecture on simpler stuff, but after the midterm would spent the exact same amount of time on very complex diagrams such as processors. I found the processors stuff very difficult. My recommendation is to read the book regarding those sections (MIPS, Processors) before class. The book did a great job in explaining them, wayyyyy better than she did. Because of this, I went from scoring near perfect on the midterm to terrified of getting a C or worse in the final, but the TA, Stanly, did a week-long OH during finals week where he offered OH from 8 am to 8 pm. He was a legend and I owe my A- to him. I went from barely understanding anything post-midterm to being confident with one day of his help. \nMy recommendation is to make sure you understand the practice exams by heart. I found most of the P-set problems hard so didn't bother to do them, some did, they said it helped. Up to you if you want to do them. I recommend you also go to the weekly recitation session because it is both an easy 30% grade for the class and also because it is a great way to ask questions on anything you are lost in.	Not much. She gives weekly P-Set she recommends you to do but isn't required.\nShe makes the final and the midterm worth 100% of your grade, but if you go to your one schedule weekly OH, you can get up to 30% of your grade. It is that easy. You don't have to do anything related in the class there, but need to do work in some form. So if you go to your one scheduled OH every week, you would get 30% of your grade as an A. The final and midterm would then be worth 70%.\nFor the midterm and final, I don't remember the exact numbers, but the final is always worth more, percent wise, but she shifts the grade distribution a bit to benefit you if you performed better on the final or the midterm. But again, the final would always be worth more, so not a huge shift.	3	1	4221	4251
81865	January 26, 2020	A lot of people throughout the semester complained that even though the class is called an â€œHonors Introâ€ class, they felt like it was not an intro class because what is asked of them is really hard. They took their complaints to Piazza almost every time an assignment was released. Although I personally disagree and think itâ€™s fine as an intro class because it is an HONORS class, I want to point out what the students felt like at the time. So do expect the class to be really challenging. The assignments will take a huge amount of time. It is almost impossible to do them a night before (unless your goal is to only pass). The exams are not particularly easy but theyâ€™re not insanely hard either. If you just study the lecture notes and skim the book and assignments youâ€™ll be fine. My only complaint is that sometimes the questions on the exams are vague or open to interpretation but the professor wants a specific answer in mind, and if you donâ€™t write what he wants, then he marks it wrong. However, like other reviewers pointed out, the curve is enormous. A raw final grade in the high seventies will land you an A or A- depending on that yearâ€™s curve. Heâ€™s also not that intimidating as he seems, but actually very approachable and nice. He always asks for feedback and even gave the class an extension once (donâ€™t push it though).	A LOT. Like a lot (mainly assignments).	4	1	42	995
81886	February 01, 2020	The single worst academic experience I have had at Columbia. Jae turns his course into a lifestyle; expect to receive emails 24/7 (and not just from the listservâ€” he emailed us the day after Thanksgiving telling us to get back to AP) and to dedicate hours of your life to his labs, all while resisting the urge to Google your questions. Furthermore, Jae is not approachable whatsoever, and I found him rather arrogant and condescending. Final grades are not curved nicely, and are not indicative of how much you learn. However, to Jae's credit, his TAs are very good, and his teaching is decent. He is incredibly polarizing, as the below reviews show, and some people do like him.\nI wondered who hurt Jae, but it turns out it was none other than his own experience as an undergraduate at Columbia. I sure hope I don't turn out this cynical by the time I graduate...	Insanity. You'll lock yourself in your room for 12 hours and code every week. Twice as many assignments as Data Structures, each of which are much more difficult and time consuming.\nI want to take OS, but I'm going to take it with Nieh, even though I heard it is harder. I just don't want to deal with Jae ever again.	50	30	3509	4758
81888	February 05, 2020	Bauer is a great professor. I had no programming experience before coming to Columbia, and taking 1006 with Bauer has made me strongly consider a major in CS. He is approachable, kind, and fair, and he really does care for the well-being of his students. While his lectures can be dry at times, his notes concisely lay out everything you need to know. I thought the quizzes and the final exam had some minor tricks, but theyâ€™re probably super easy if you have prior programming knowledge. The TAs are some of the best Iâ€™ve had in any of my classes - theyâ€™re patient and more than happy to steer you in the right direction without giving away too much. The head TA Spencer was always on top of hosting review sessions and preparing slides/Kahoots, which I found to be incredibly useful. As a whole, if you have to take 1006 (either because youâ€™re in SEAS or because you want a gentler start to CS before taking 1004), I strongly recommend taking it with Bauer. Heâ€™s currently on parental leave this semester, but I hope to take more classes with him in the future!	5 In-Class Sets (20%) - Not too bad for the most part, and you can do them in groups of 2 or 3.\n4 Take-Home Projects (25%) - There were originally 5, but the last one about machine learning became optional due to time constraints.\n2 Quizzes (20%)\n1 Final Exam (30%)\nAttendance & Participation (5%)	3	0	11572	6732
81892	February 08, 2020	Extremely kind, fair, and helpful professor. I really enjoyed his class, and his grading is very fair. Heâ€™s super welcoming to questions and always stays after class to answer all the studentsâ€™ questions. His lecture slides are very clear and super helpful for understanding how the different data structures and algorithms work. Great class!	Very fair and manageable	3	2	11572	4
81900	February 18, 2020	The second half of the course should be called Functional User Interfaces.	Weekly assignments. Not astoundingly difficult, but the assignments become very tedious and time consuming if you haven't used JavaScript before.	5	0	13549	663
81902	February 20, 2020	Apparently, he is an awful professor	Ok ish	0	0	1891	4
81904	February 22, 2020	He is literally one of the worst teachers I have ever had. Not only are his lectures absolutely useless, he somehow manages to make the homework assignments incomprehensible to anyone that has not taken Python before. He doesn't know how to teach to ANYONE, which makes the class absolutely miserable to sit through and his personality is absolutely awful when you approach him for questions. His slides are literally pointless bc he doesn't label anything. He's also rude on Piazza so you feel stupid for asking questions, and is not receptive to emails AT ALL. If you can avoid taking this class, NEVER TAKE IT.	Wouldn't be bad if he actually taught lmao \nHW - Has Part A and B (Part A due one week, Part B due the next) \nMidterm \nFinal\nIt doesn't seem awful, but the amount of time you spend doing the homework is ridiculous (especially part b it takes hours).	7	0	13610	6732
81905	February 23, 2020	Both the professor and the class materials are awesome. This is one of the best courses I have taken in Columbia.\nProfessor McKeownâ€™s class provides a very comprehensive overview of NLP. Topics include language models, neural networks, word embeddings, sentimental analysis, POS tagging, parsing, semantics, machine translation, summarization.\nThe class materials and the homework assignments are a very good combination of theory and coding. For theory, we learn parsing algorithms, read word embedding papers, study the math formula behind those frequently used neural networks. For practice, we implement our own model to do stance prediction, sentimental analysis and machine translation. Assignments often go beyond simple code implementation. Instead, most of the assignment focuses on analysis of the models that we built â€“ analysis of model performance, error analysis on frequent mistakes made by the model, comparison of different methods and models. These analysis techniques turn out to be very useful in real-word applications, and really distinguish those who know NLP from those who only know how to use packages. \nProfessor McKeown is a very nice person who actually cares about every student that she teaches. She is the first professor that Iâ€™ve met with in Columbia who does her best to really remember almost everyoneâ€™s name in the classroom (itâ€™s a class of approximately 100 students!) She enjoys meeting with students during office hours, providing not only help for class materials/assignments but also invaluable discussions about studentsâ€™ future career development and general academic interest. \nProfessor McKeown also knows well about how to teach. She does her best to make the class to interesting to everyone. She is a professor who really does her best to make sure everyone is following and understanding her lectures. She highly values class participation and interaction between professor and students, but speaking up in class is not mandatory for students to get participation points. Fully recognizing that some students may be shy about asking questions or speaking up publicly in class, she uses poll everywhere instead in class to collect studentsâ€™ feedback and questions to see if anything is unclear to the students. \nThe course materials are very interesting in itself, and Iâ€™m especially amazed by the guest lectures of the course. Professor McKeown invited some of her former students who are now working in the industry to give guest lectures. One lecture that is especially inspiring is on dialog systems, where we get to know how dialog systems such as Siri and Alexa are built. Guest lectures from distinguished industry pioneers give the students another perspective on NLP from the industry.\nThe professor also makes sure that the class materials are up-to-date. NLP is a fast-changing field with lots of new concepts and techniques invented each year. Besides the basic materials and concepts of NLP, she also provides a brief walkthrough of a few recent breakthroughs in the academia. For example, we read together in class papers on BERT (a really cool and useful tool thatâ€™s very famous) and papers on biases (a really cool and influential topic that appeared in recent years). Students interested in going to the academia or industry get to know these state-of-the-art results and techniques, which bridge the gap between school and future career. \nOverall, I highly recommend Professor Kathy McKeownâ€™s class to anyone interested in NLP or anyone interested in knowing more about computer science. The class materials are awesome. The professor is extremely amazing. You will learn a huge amount out of this class.	4 Homeworks that combine theory with practice\n1 Midterm of 75 minutes\n1 Final of 75 minutes	11	20	2142	4903
81907	March 02, 2020	If only Tim Paine could teach. Two weeks into the course, we spent half a lecture asking questions about HOW homework works. Nope, not the codes we have to write nor the content we are supposed to learn in class, but simply HOW to submit homework. After that class, someone posted a question about homework on Piazza, and Tim basically called him out for "not going to class", though as someone who went to class I had the same question. \nProfessor Paine is more than disappointing. His barely teaches and doesn't have a clear syllabus at all about what content we are supposed to cover. Going to lecture makes me more confused than not. For homework assignments, we lose points not by wrong or incomplete answers, but for stylistic headers he briefly mentioned in class but never clarified on the homework assignment itself. Basically, he takes points off for things we didn't even know we had to do.\nI won't even make it to the midterms because I will be dropping this course for my sanity.	Approximately one problem set per week, but that again changes because people are so confused all the time and had to span Piazza two dozen times a day just to understand what is going on.	6	0	13610	6732
81909	March 06, 2020	Some of the best professors I've had at Columbia and I've taken many classes with some of the most popular profs in different departments. I understand why a few people might find the class dry but I think the bitterness is mostly due to the workload and the rigor of the course. While the material is not rocket science, it takes a certain focus and imagination to see the bigger picture in the field of NLP. Yassine clearly knows a lot and is always excited about bringing to class some of the latest developments in NLP. I personally love the intuitive way in which he explains things and never feel the need to read much beyond attending the lectures. And that's how it should be.\nThe homework problems can be a bit annoying especially the do-the-algorithm by hand part but it also definitely helps with understanding how things work. The programming assignments are super fun and some of the best I've had in the department. We're provided with a  clean scaffolding of the code which is unseen in any of the Intelligent Systems track classes. Because of that I feel like we don't get dragged into writing stupid and time-consuming systems around the crux of whatever we're learning. You just get into writing the NLP model/algorithm.	bi-weekly assignments\nmidterm - final\nshould be an easy A if you pay attention in class	14	5	13810	4903
82546	December 04, 2020	This professor is so bad I had to write a review before the semester was up just to warn people. RUN. Reeve teaches the computational linguistics section. Reeve doesn't know how to teach. It might be that Zoom school makes it harder, but his level of incompetence (not explaining things, missing office hours, not uploading recordings, and so much more) tells me he had issues even before COVID. \nThis class should be interesting, but it's marred by Reeve's bad teaching. Beware.	3 projects\nWeekly labs\n**He loves uploading assignments late, so expect to have less time than the other sections to do the same amount of work.	0	0	14008	7068
81936	April 10, 2020	I really enjoyed this class, and Professor Ferguson was an excellent instructor. He was also very available: he held in-person or video office hours all the time, especially near homework or exam deadlines. Also, all of his lectures and online OH were videoed and posted to Courseworks.\nI got the impression taking this class that other sections may be more focused on theory than practice - in this section, most of the homework (and lectures) were focused on how to work with databases than learning database theory. We did spend some time on theory, but as little as Professor Ferguson thought he could get away with, which I really liked. Most of the semester was spent learning SQL, but we spent some time on relational algebra, a little bit of time on graph databases toward the end of the semester.\nAbout half of the homeworks were programming projects in python, using pymysql. Time consuming, but certainly doable and taught me a lot. There was sometimes some ambiguity in the project guidelines, which generated a lot of questions on Piazza, but I think the consensus from Professor Ferguson and the TAs was that you could make whatever design decisions you thought were wise, as long as you included your rational in the README. Basically, I thought the assignments and grading were very fair. Later homeworks (and both exams) were turned in in the form of jupyter notebooks, and a lot of the lectures were available for download in that format; it was a bit of a pain to set up at first but absolutely necessary. Components of some homeworks were also to submit complex SQL queries.\nProfessor Ferguson was also just really understanding and adaptable to different circumstances. If you really need an extension, he will almost certainly grant it. Also willing to listen to student feedback in general: when I took the class (fall 2019) Professor Ferguson used a baseball database for an in-class example nearly the entire semester and as the database for several homeworks. I personally didn't mind this, but some students found the specific terminology to be confusing. Professor Ferguson took this into account and said he would not plan to use this database in the same way in future semesters.	5 programming/written assignments, take-home midterm and final.	2	5	6653	664
81973	April 19, 2020	ESP is not your typical CS class. Itâ€™s a small seminar that meets every Friday, and it only counts for a single pass/fail credit. Topics range from applications of basic algorithms to general overviews of machine learning and ethics. I thought the class was a good way to see the specific ways a CS degree can be applied in industry and academia. Cannon is listed as the professor for the course, but he doesnâ€™t actually teach it; everything is handled by the PhD coordinators and the undergrad discussion leaders, but they all have solid CS backgrounds and know their way around the department. Even if youâ€™re set on doing CS, I strongly recommend it as a networking opportunity, as youâ€™ll be able to meet several distinguished faculty members and learn about their research (hint hint).	No homework. Just show up to class. You get 1 free absence. You have to write a short paper if you miss 2 classes, and youâ€™ll fail after the 3rd absence.	4	0	515	7329
82057	April 28, 2020	Do not take this course if you are decently great at mathematics.\nI absolutely learned NOTHING in this course. I tested out this course but I decided to take it anyway to graduate in time. It was the worst mistake I had in Columbia. The problem is that the professor did not go over anything in-depth and I am not even sure she knows the content well.	weekly assignment, annoying	16	7	13076	397
82073	May 01, 2020	One of the most interesting professors to teach. She's very enthusiastic and hyper. From previous comments here, I see she's changed her attendance policy a bit. We submitted a google form with what we said in class or if we did not speak by a certain time after class. For the first time, participation wasn't as difficult as I thought it would be. She purposefully asks a range of questions from super easy ones like, "What do you click on amazon's webpage to buy a book?" while the picture is on screen to more technical questions. She does this so people will be more engaged. I'd say that classes are fun, but I agree, technical stuff isn't really taught in class. I'm glad I decided to learn html, css, and a bit of javascript the winter break before, but as the projects became more complicated with flask and python, I struggled quite a bit.	Easy at first, harder later. Weekly homework and one mandatory participation per class.	4	0	13549	663
82081	May 04, 2020	Professor Cannon is, in my opinion, one of the best educators I have experienced in my entire life. He is very very knowledgeable about the subject. But he is also able to transmit that knowledge so that his students understand it. He explains clearly, succinctly, and well. \nCannon is always available in his frequent office hours, and the TAs (of which there are about 20, and all of whom are amazing as well) also have office hours every day (including Sundays and occasionally Saturdays). \nYou get 120 hours of "grace time" in the Spring semester (I believe it's 150 hours in the Fall). You can use all, none, or any amount of this. TAKE ADVANTAGE OF IT. It is an incredible resource to have. \nAs for the workload: I had very minimal CS experience coming into this. However, I've still managed to understand everything he talks about because the man is a supremely good lecturer. \nIf you have the opportunity to take a class with him, do not under any circumstances switch out! It is worth changing the rest of your schedule to accomodate his class.	I took this class during covid, so they took out one of the psets and projects. \n5 psets, 5 projects, midterm and final.	10	3	515	1654
82093	May 06, 2020	I took this class during the COVID19 pandemic (Spring 2020). He is obviously a master of the subject and his lectures are clear but they are incredibly boring, there are 3 homeworks and all of them are long but easy. Because of the pandemic, our midterm was pushed continuously until Gravano decided to just cancel the midterm (at the time midterm was 20%, final 30%, hw 50%) and make the grading distribution as follows: final 50%, homework 50%, which is horrible because a single day's performance can decide if you fail this class or not. After a Piazza post and numerous students agreeing that making the final 50% is too much, Gravano graciously(!) changed the distribution of the final to 40% instead of 50%.... Also, there are a lot of grad students in this class and the homework averages were 9.5-10 out of 10 every time even in the pandemic, so make sure you keep up with the homework and follow all of his instructions.	3 homeworks -- long but easy. There used to be a midterm but was cancelled due to the pandemic. 1 final.	4	0	375	4956
82222	July 02, 2020	Eleni is a rare breed of professors that is both incredibly polite and incredibly ruthless. She says she will curve the class but, as many reviewers have stated, a bunch of students WILL get Cs. Her teaching style is clear but the problem arises with the homework and exams. I'll just go ahead and give you a hint that will save you a lot of frustration in her course if you end up with her. If you want to write a greedy algorithm, what you really want to do is write a dynamic programming algorithm. Greedy algorithms, although intuitive, are rarely correct. This applies to any algorithms course but especially to Eleni because of the harsh grading. Now, what you really want to do is smash that drop button on SSOL and save algorithms for a professor like Christos or Stein. You will learn so much more and not have to worry about extremely harsh grading â€“ they understand grades are secondary to learning.	lol, just take with Christos/Stein if you can.	6	4	13070	NA
82619	December 10, 2020	GOAT\nThis man is a legend take his class!!	Reasonable: 7 programming assignments, 4 programming exams	34	25	3509	4758
82096	May 06, 2020	This class counts as a tech-light elective for the CS major. There is no coding involved at all.\nThis class goes over the basics Scrum, which is a team management style used in a lot of tech companies. There is a group project involved, and Tristan DOES NOT allow you to choose your own groups. If teaming up with potentially random strangers bothers you and you were planning on taking the class with a friend you know you can depend on, don't bother registering for it at all. The group project ended up being mostly fine, but the instructions were kind of vague and confusing. I took the class already and I still don't really know what they were looking for--I ended up writing a business plan that outlined the production of a make-believe product. We also had a group presentation.\nWe also have tedious, irritating weekly readings and quizzes. The content of the class is the exact same as the content in the book, so I stopped going to class (especially since it was from 8-10PM on a Thursday night). The questions are designed to trick you--Tristan usually writes questions by ripping quotes directly from the book and changing a single word, which makes it very easy to trip up. His insistence on this style of evaluation shows how insecure he is: he is afraid that people don't take his class seriously, so he makes his quizzes difficult to ace so we are forced to take it seriously. The readings were long--if you actually did them and took the careful notes you needed for the quiz, it would probably take about six hours.\nThe content was interesting from an optimizing workflow perspective, but overall painstaking and not a good use of time.	Weekly readings and quizzes\nFinal project (paper and presentation)	1	3	13463	7300
82097	May 06, 2020	I took the class in Spring 2019. I heard the class has changed since then (they added a semester-long group research project).\nThis is a survey course of different topics/applications of SLP. No knowledge of NLP is actually required. It focuses more on features of audio (including manually labelling data, which was the focus of two painful homework assignments) and feeding them into a machine learning algorithm (the focus of the second two homework assignments). Knowledge of sklearn/etc. is important for the second half because they don't really explain it to you.\nWe had "mandatory" weekly readings but no exams at all. Weekly homework was writing two brief prompts about the reading and it was graded out of three points. It wasn't a huge deal. The homework assignments (four in total, usually got about two weeks to do them) were annoying and time-consuming and not too difficult.\nThe class ended up being very low stakes. I realized that audio processing is definitely not for me so I ended up becoming very bored. Attendance was required. The TAs were nice.	Weekly reading and discussion post\nBiweekly homework\nNo exams	0	0	1957	NA
82098	May 06, 2020	The curve in this class was harsh. The standard deviation was consistently 30+ points, so I was disappointed in my final grade despite loving the class and feeling like I understood the material pretty well.\nBesides the grading, I really liked this class. I seem to be in the minority of people who consider the material interesting. It's basically an overview of low-level software and hardware--we learn about circuits, computer architecture, memory, assembly language, a lot of of physical stuff that most CS majors are happy to ignore. You might not like it just because you don't like the content, which is valid. If you try to think of everything as a puzzle, it might become more interesting to you.\nThere were weekly homework assignments that counted for 10% of your final grade. They were actually quite helpful for understanding class concepts. Since they were very low stakes (graded out of three points) I didn't have to worry too much about getting everything correct. I could just try to put in good effort and ask my TA to explain the rest. I loved the p-credit office hour setup. I felt like I was able to connect with my TA more and learned a lot from him--I was lucky to get a really good TA. I learned a lot in this class because the homework setup encouraged learning instead of punishing mistakes and TAs were very accessible.\nThe exams were kinda meh. I felt like the instructors were not very generous with partial credit or were constrained to strange restrictions, and that's why the STD was so big. Professor Rubenstein provides many resources for studying though (including one past exam that includes pictures of him dancing, what a riot).\nProfessor Rubenstein himself is clearly incredibly smart. I could tell because he would often make up examples on the spot or work through an example he already had without relying on his notes. His improv skills, however, were not quite as high. He sometimes got a little confused or lost in the details, which would in turn confuse the class. He could improve a lot if he would just make sure his live problem solving matched up with any lecture notes he wrote before class! His slides are detailed and beautiful. He's also clearly a bro. He was fun to have as a professor, and I wished he taught another class just so I could take it with him.\nMuch love from pb&jae. Keep lifting!	Weekly problem sets\n1 midterm\n1 final	1	0	2427	4251
82110	May 11, 2020	Full disclosure: I had no exposure to Java prior to taking the course, but I did have decent experience with Python and didnâ€™t have much trouble keeping up with Cannon. The intensity of the workload will be entirely dependent on how much programming experience you already have and/or how fast you can adapt to algorithmic thinking.\nCannon lives up to the hype. Heâ€™s an excellent lecturer for an intro class, and he has a great sense of humor. While itâ€™s true that he doesnâ€™t cover the Java syntax as much as some people would like him to, I appreciated his emphasis on conceptual understanding, namely whatâ€™s happening behind the scenes of your code. Still, I recommend reading or skimming the corresponding sections of the textbooks before attending lecture to get the whole picture.\nCannon doesnâ€™t exactly hold your hand, but he does provide several resources to help you catch up to speed if youâ€™ve never programmed before. Office hours are held almost all the time thanks to the army of TAs, there are optional review sessions on Fridays, and thereâ€™s a separate lab session (again, optional) that runs on Tuesdays and Saturdays (you pick one of the two days to attend regularly). Like most STEM classes, Cannon reserves his A-range for the top third of the class; the cutoff for an A- is around 85% in a typical semester, the cutoff to pass is 55%, and the average is curved to "a high B, not a B+." However, you are nearly guaranteed a good grade if you put in the time and effort, and itâ€™s almost impossible to fail as long as you at least try on the homework.	Homework (40%) - 6 written problem sets and 5 programming projects. The problem sets took me about an hour each, and I only found projects 3 and 4 to be a little time consuming. Even if youâ€™re new to CS, I think itâ€™s relatively easy to make perfect/near-perfect scores on all of them as long as you follow directions and clarify your doubts on Piazza/during OH as soon as they come up. ADHERE TO THE STYLE GUIDE RELIGIOUSLY! The TAs can be real sticklers about the formatting of your code and the actual files you submit. For example, forgetting to rename a folder before zipping it leads to a point deduction even if you renamed it after zipping.\nMidterm (25%) - 10 definitions and 40 multiple choice questions. Itâ€™s a cakewalk if you get your hands on past exams. The mean was about a 78 in my semester.\nFinal (35%) - It mirrors the midterm for the most part, but it also includes a section where you debug code by hand. Pay attention to the code that Cannon goes over in class, as he makes it clear that anything heâ€™s covered is fair game.	9	1	515	7002
82126	May 14, 2020	Cannon is great! He clearly cares about his students. Would recommend this course even if you aren't a CS major (if you are willing to put the work in).	a lot, but you also learn a lot	6	3	515	3807
82132	May 15, 2020	Blaer is a nice guy who is not a great teacher. As a professor of a large lecture class, those two qualities are heightened: his jokes (though repetitive) can be stress-relieving, and if you have a background in java, his explanations are intriguing. However, if you don't have a background in java, Blaer is not very good at explaining simple concepts. He over-explains, confuses students, and gets distracted easily. I personally felt that my time was better spent on learning java online than learning in his class.\nOne specific moment that comes to mind is Blaer's introduction to stacks. He went on an hour-long description of the intricacies of a stack, over-explaining it, when in all honesty it's a somewhat-simple java topic. All he really needed to say was "this is like a list, but instead of being able to access any node at any time, stacks follow the process of last-in first-out, like a tissue box or a pile of books."\nTo be fair to Blaer, he is an incredibly nice professor who has the difficult job of teaching nearly 450 students in one large lecture class. I'm not sure anyone would have been able to do as good a job as online learning, especially in a class on Computer Science. \nMy advice: take his class, but don't expect it to be great. Enjoy the comedic, positive side of Blaer, and deal with the negative sides of the class by learning online or reading the textbook.	- 6 written HWs (25%). + 6 programming HWs (25%) **He lets you drop your lowest written/programming hw grade\n- Midterm (20%)\n- Final (30%)	7	3	3409	4
82157	May 21, 2020	Honestly this class was not fun at all. I had taken 1006 in the semester before I took 1004 and I LOVED it... my logic was "omg 1006 was so much fun and I learned a lot with great projects and other assignments so I bet 1004 will be just as helpful and I'm going to learn a lot in java!!!" yeah no. At the beginning the problem sets and programming projects were very easy (which I expected and I'm sure people who were taking this as their first CS class appreciated). But like after the first couple of assignments, the projects just got really repetitive and some of them were dumb hard for an introductory level course. Also Codio is the worst IDE. Why they use it, I have no idea.\nThe worst part is, that I feel like I barely know anything about java. The only thing I took away from this class is that java uses a lot of semi-colons and brackets? I guess I learned a little bit about the internet and Von Neumann architecture? \nThe midterm was straightforward I guess, as was the final (but I took this class during the corona semester so idk what the real final would have looked like).\nTLDR; if you're not a CS major and just want a fun intro class, take 1006 or 1002. This class is a lot of work with no reward. I spent an entire semester in the class and I still barely know any java. I used guess and check for the projects (like I would write the code that I think would work, check if it complied, look for the errors which were usually pretty minor syntax errors)	5 programming projects (all on Codio) \n5 problem sets (usually written problems, sometimes they have a coding question)\nThe 10 total assignments lead up to being 40% of your grade-- so do them and do them well and you will probably get an A\n1 Midterm (25% of the grade)\n1 Final exam (35% of the grade)\nThis is standard from each semester and the makeup of the class did not change when we went online.	5	107	515	3807
82158	May 21, 2020	Simha didnâ€™t really know what he was doing, but he certainly tried. He was not a particularly good teacher, and I was lucky that Iâ€™d seen much of the first half of the course in Intro to EE; many of my CS friends were totally lost from the get go. We were all pretty confused during the second half as well, which covered computer architecture and assembly language. To his credit, Simha sent out regular surveys for feedback, and did seem to care. However, this does not excuse the fact that the problem sets were totally unlike what we had learned in class (as in going to class wouldnâ€™t even prepare you to answer them, youâ€™d need to read the textbook). Luckily, they were ungraded, and most people I know wouldnâ€™t do them.\nThe logistics of this class were the worst Iâ€™ve ever seen, and worse than anything I could possibly conceive of myself. Attendance factored into your grade, but since it was a 300 person class, Simha made us hold up signs with our name and UNI on them and then photographed the entire room (309), having the TAs search through the photo to mark us present. There were weekly â€œstudy groupsâ€ (recitations) that were longer than class itself and factored into your attendance grade. These were really awkward, since everyone would sit there and not pay any attention to the poor TA. For the midterm, which was after the semester had been moved to remote instruction, Simha had us film ourselves, record our screen, and submit both for full credit. Yikes! I know heâ€™s a security expert, but that is the dumbest thing Iâ€™ve ever heard, plus students were allowed to use the bathroom.\nSimha is a smart dude. He clearly knows the material well... he must have had a good professor when he took the class as an undergrad.	Nonexistent	4	1	3429	4251
82175	May 25, 2020	Hagrid is a clear, knowledgeable, kind, and helpful professor. I admit the class felt a little easy because of how slow he went; I ended up not paying attention to most lectures and instead relied on the very excellent textbook by Weiss to get me through. The homeworks and tests were quite easy and fair.\nIt's not a breeze though. You need to put in the time to understand these occasionally complex algorithms, and develop an intuition for them. If you know the basics of Java, the programming is a breeze. The written homeworks (i.e. exercises from the textbook) were occasionally difficult, but never completely stumped me. I never used them, but I've heard office hours and TAs are genuinely incredible.	One written and one programming homework every two weeks-ish\nOne midterm\nOne final	1	11	3409	4
82200	June 09, 2020	On the surface, this class is great. Professor Dear is organized, nice, and offers a lot of office hours for his students. This will especially be evident during the first week, where the material is trivial.\nHowever, I do not recommend taking this class for several reasons. The first is the fact that the lectures just spit out different theorems in a convoluted way, where he is just regurgitating statements from the textbook. So you think you can just learn the material from the textbook or online because this is probably not your first time experiencing terrible lectures at Columbia. In fact, it might seem tenfold better, where you can skip class and do the problem sets and learning yourself. So you try the textbook, and realize it's just as convoluted as the lectures, because well, he was regurgitating those statements. And so you go online to learn the material yourself, which works fine for actually learning linear, until you receive the problem sets and realize it's just as convoluted. I can't emphasize enough that the problem is not the fact that you can linear on your own, but to do well in this class, you have to answer those convoluted questions that you won't find any source teaching you how to do. And so you got the TAs, but they themselves admit that they do not know how to solve the problems. Most people have large groups of friends to try to crack the problems together. If you do not know linear, you will be screwed, because well, you will actually be trying to learn linear and find practice problem sets on your own, before trying his problems. Again the problems are convoluted because of his style, not because of linear itself that will be added as a twist. The workload is a lot, one problem set a week and a lab every two weeks. You will really need a light workload to try his class without any knowledge of linear. The most frustrating part is the fact that you will think "This is great. I love to be challenged!" but then realize you will be slaving away only to solve his specific problems because Professor Dear likes to overcomplicate simple concepts. You will spend so much time but learn nothing new. Only take this course if you know linear and want to be challenged to solve those sets, and perhaps not learn anything new. Save yourself and take the regular linear if you can before the curriculum change. If you cannot because you have to follow the new curriculum, learn linear before taking this class and make sure you know a lot if people in this class to do well.	A lot.	15	8	13639	3992
82201	June 09, 2020	The good: Blaer is nice, funny, approachable, and the curve is generous. The hw sets are also reasonable.\nThe bad: Blaer is not a good lecturer. The currciuculum glosses over a lot of topics. The motivation behind the data structures are not explained. Honestly, data structures at Columbia is a joke. For a class that is very important to computer science, you will feel like you can do the problem sets and maybe get As, but will end the class thinking that you did not learn anything. Connections between the data structures are not explained. A lot of times I had knowledge of the topic behind explained, but sat there and saw him explain it for the first time and thought that if this was my first time being exposed to what he is saying, I wouldn't have grasped the material. Honestly, a very frustrating experience. Also the book is terrible; the code is filled with a lot bugs. Skip class and learn the material on your own. Also use problems sets from other universities to actually learn data structures. If you are doing the problem sets being assigned and think they are easy, that is because you are not learning actual data structures, just a bunch of disconnected programs. The theory part is better than the programming though. The course lacks the depth needed for cs.	Reasonable.	22	4	3409	4
82362	September 14, 2020	This is the most disorganized course I've taken. There is no clear homework submission detail, no clear expectation for the homework, no clear instructions and a super super super messy Piazza. This professor use piazza post as extra credit, leading the piazza posts to a place full of duplicated and junky messages. Please just avoid this professor if possible, super bad experience	Light	8	0	6653	664
82234	July 10, 2020	I took NLP with Professor Bauer in Summer 2020, it was a compressed schedule, and newly virtual due to circumstances surrounding COVID-19. Professor Bauer and his teaching team have taken a difficult situation and made it organized and engaging.\nHis lectures are clear and logically organized, and his slides are understandable on their own. He also seems like he cares about his students, and ensures that the class has an understanding before moving on. He and his team were responsive on Piazza as well.\nThe homework assignments were designed so that you spent your effort completely programming the NLP relevant algorithms (which were always well reviewed in class) without having to worry about setting up your classes/program architecture. If you are not completely comfortable with programming in Python and data structures, the one week turnaround on each homework can be stressful.	60%     5 homeworks, each worth 12% of your final grade. Each homework was almost entirely programming. Prof. Bauer claims each pset should take ~8 hours, on average I found this to be true, with earlier hws taking less time. \n30%     Final exam: straightforward final exam\n10%     class participation: checking for engagement on Piazza, attending lectures, etc.	2	2	11572	4903
82235	July 11, 2020	For context, I took this class during the summer of 2020 where the semester was purely online. \nTo put it simply, it is a disgrace that this low-level, incompetent professor is allowed to teach at Columbia (his usual position is at Lake Forest College). The first session of the semester is the only time any student had any real class contact with him, the rest were videos that he posted. \nHe would post notes, and in his "lectures" he would simply read out loud the notes. As the usual Columbia student, I can read, so to have the notes in the audio version is definitely not needed. However, since this awful professor clearly did not even write his own notes, they were copy and pasted from somewhere, they were so riddled with typos and errors, that it was un-understandable to simply read the notes. You had to watch him narrate on lecture simply for him to correct the typos in his notes. \nThis Professor barely knew what he was doing, he would be reading out loud some proof that he copy and pasted from online, and it was clear he could not follow what was going on, but I respect his perseverance and he managed to read out loud the rest of the proof while explaining absolutely nothing. \nIt is a shame that Columbia continues to employ him. He makes a bad mark on Columbia's image.\nTo make students pay money for this is truly a crime.	HW was tedious and boring. Exams even more so. Also typos and ambiguity was abundant.\nThe workload next summer should be 0 as he should be fired. I was literally praying that they would send out course evaluations this year	1	5	12959	397
82251	July 26, 2020	TLDR: Very good professor. Getting an A is more than doable. \nLonger Review:\nEven though the lectures might not be that relevant for the homework at times, they are very interesting and it is good to learn from a leader in the field like him. The class is divided into a programming track and a non programming track. Unless you are a CS major or really want to get good at programming databases, I would take the non programming track as it still is has tons of SQL. For both tracks, the homework seems really confusing at first. This causes lots of stress. However, Professor Ferguson makes videos which really really help. Also, he and the TAs hold many office hours and are always available to help. You also get a certain amount of late days (I believe it is 5?). As long as you don't procrastinate and use the videos & office hours, the homework's become very doable. If you procrastinate and don't use the help provided, you better be really smart otherwise you will do pretty poorly.	the homework's take loads of time. Midterm and final are take home. Final was cancelled because of covid-19. Midterm was an extra long homework.	2	3	6653	664
82258	July 27, 2020	I would say this course should be called introduction to information extraction instead of advance db system. Luis is a great professor, the course is organized and the workload is small yet enough for you to understand the topic covered. This is actually the only course I paid attention to during the pandemic since I found the topic and lecture very intriguing.	3 separate team projects, one midterm and one final. This is really not a heavy course.	3	0	375	4956
82259	July 27, 2020	Prof. Cannon is fantastic and really funny. His lectures are well organized, clear, and he's incredible patient at explaining concepts regardless of how menial the question might feel. He clearly cares about his students' learning experience and tried to make the online transition as interactive as it could be. I thought the course was difficult if you've never programmed before (and some people in the class clearly had) which gave an unfair advantage and little curve. There is A LOT of reading, especially from the computer science textbook that's quite dry. Written problems were assigned from there and I would read the chapter but not have a clue how to do them. The java textbook is great though and very helpful.	Medium to heavy, depending how much prior programming experience you have. If none, it's doable if you put in the hours to understand the concepts fast enough to keep up.	11	4	515	3807
82263	August 01, 2020	I had an excellent experience with Prof. Drinea, which perhaps is not consistent with some of the earlier reviews. I found her to be an amazing lecturer who was capable of commanding the class's attention despite a biweekly 3 hour-long class over Zoom (Summer 2020), and I can genuinely say that I did not once feel lost in class, despite her rather rigorous treatment of the material. The homeworks are difficult (they remind me most of a challenging mathematics PSet, there is rarely any programming, and if there is, it's treated as extra credit), and the hardest problems come from the TAs, but I found them to really enhance my understanding of the material and be incredibly rewarding to complete. I am worried that organized cheating was rampant, since the averages were incredibly high despite the immense difficulty, but she will reassure you that if you really understand the homeworks, you will do well on the exam, which I found to be true in my case. Grading on individual assignments can be harsh, but is always very clear. The average on the final was around a 45%, but because I had taken the time to do each of the homeworks honestly, I easily did much better. I have no complaints regarding final grading, either. Lastly, Prof. Drinea is incredibly kind and caring despite the difficulty of the class, and I believe that she is ultimately very fair. I would absolutely recommend this class, and although Prof. Stein literally wrote the textbook, you cannot go wrong with Prof. Drinea.	Heavy. PSets are difficult (think 10-20 hours each), but they really enhance your understanding of the material. Exam is easy if you've done all of the homeworks completely, so make sure you put in full effort. All in all, a super rewarding class, but like everything worthwile, it does not come easy.	15	11	13070	4079
82343	September 08, 2020	I've had a different experience than the one presented in the review below.\nTL;DR: If you're looking to plug numbers into equations, get your miraculously easy A, feel like a math sorcerer for a second, and move on with your life - this is neither the class nor the professor for you. But, if you wish to develop a strong foundation of Linear Algebra -- especially in the context of ML -- I'd highly recommend taking this class with Tony.\n-Background: \nI took it during my sophomore year as a Data Science major, had zero prior knowledge of Linear Algebra.\n-Lectures:\nTony's relatively fast pace kept the class very entertaining and engaging (even via Zoom), and his lectures were extraordinarily organized and clear, containing little-to-no extraneous BS.\nThe shift to online modality halfway through the semester was seamless. Tony would upload concise (~10-min) prerecorded lectures conveying the gist of what was to be covered in class beforehand, as a convenient way for us to prepare or revisit the material. I found this combination of short, priming lectures and full, in-depth ones very comprehensive and rarely consulted the textbook.\nAlso, Jupyter notebooks implementing what'd been covered in class were uploaded as a complementary resource.\n-HW:\nThe written HW assignments were as proof-based and tricky as you'd expect from a math class. But what I loved most about the class was its more applicative facet. Beyond the essentials of Linear Algebra, which you can easily learn from Youtube, Tony introduced ML-related applications as PCA, regression, and Markov Chain, which were later incorporated into the HW assignments. The coding projects were, while challenging, extremely well-crafted. Our penultimate project was to implement data-fitting on and predict the spread of COVID-19 in different countries around the world.\n-Exams:\nTony's exams were challenging; there's no denying it. However, if you make sure to understand the underlying logic of the material, you'll do just fine without spending a single overly-caffeinated night at Butler. The questions were straightforward and fair, nothing pulled from the dark holes of the appendix.\nI studied for the final by merely reviewing the short prerecorded lectures, and I ended up getting 87 on the exam and a final grade of A (the class was curved s.t. ~90 was an A). To incentivize, Tony offered official letters confirming the final grade to those who obtained a final grade of B+ and above.\n-TA:\nI didn't have much interaction with the TAs, but I remember them being welcoming and helpful.\nAll in all, it's still one of the best CS classes I've taken (having completed 1004 thru 4701).	- Weekly written assignment (occasionally difficult)\n- Biweekly coding project (challenging but awesome)\n- Midterm - not too bad\n- Final Exam - a bit harder than the midterm but still not the end of the world	4	5	13639	3992
82369	September 16, 2020	Professor Donald is absolutely one of the best professors I have met in CU. He is a very kind person and really takes care of his students. The course delivery is good and course materials are well organized in his GitHub repo. His homework does match with the content he teach in class, so as long as you listen to his class carefully, you will be okay. Midterm and final are take-home exams, which in general contains around ten coding or short-answer questions, which are pretty like homework questions. \nDonald is the most accessible professor who will almost hold office hour everyday. You can easily find out some OH time spots. Also Donald holds review session to help students review class content about a week before homework deadline. He also gives some useful hints to guarantee students to be on the right track. He replies email very quick and could solve your question in a very short time. \nI really appreciate Donald to provide a good database class and I strongly recommend his DB class to all students.	4 HW (each will take around half day or at most a day), take-home Midterm and Final (will take 3-4 days to solve all questions).	2	14	6653	664
82371	September 17, 2020	I love this class!	Very reasonable	1	0	13953	663
82414	October 20, 2020	For a non CS major I absolutely do not recommend taking this class. I am a History major and was looking to fulfill my science requirement with an interesting course, unfortunately this was not It. The course itself is heavily relied on the textbook, which in my opinion is really dense and dry. Most of what he goes over in class is a clear demonstration of how well he knows the subject, but is hard to understand (especially with no CS/programming experience). The course literally goes from crawl to run within a matter of weeks and if you haven't gotten a good grasp at that point then good luck! I struggled after the first few weeks, and unfortunately was stuck in the course due to the credit requirement that I needed to have to be full time. In a nutshell, he is an excellent professor with an incredible knowledge base of programming, but for someone who has never taken CS it will be tough to understand\nThe key takeaway that I got from this course was at least understanding how to read code and correct errors within a program. If your ready for a challenge then take this course, but just understand by no means is this course easy, and you will have to dedicate a decent amount of time each week in order to understand the material. They also shifted to using Gradescope to submit homework assignments, which can be a bit annoying and confusing to learn how to navigate.	The course has a either a problem set or a programming project due every week and he periodically gives in class quizzes (5 questions each). The TA's do have many office hour time slots and do offer to help, however, if you haven't understood the material enough to ask the right questions then your kind of stuck by that point. The problem sets weren't all too bad, some of them you could find within the textbook, and others you could look up online. The programming projects took up alot of time, and at the beginning of the semester he clearly explains that you would have to dedicate at least 8-10 hours a week in this course- he wasn't lying!	4	0	515	995
82424	October 25, 2020	This professor is great! He's such a sweet, caring man and he will do everything in his power to help you understand the class material. Seriously, attend his office hours! He's very very understanding and helpful! \nHis lectures are well organized and are generally very good for solving the homework problem sets. He bases much of the homework/quiz material from his lectures. He writes all of his own problem sets and quizzes.\nDo be aware though, that as good as this professor is, he is definitely on the harder side. After every lecture, there is a required 5 question quiz. Nearly every question will leave you baffled and scratching your head over concepts that you thought you understood quite well from the previous lecture. This man has a talent for really, REALLY testing your knowledge of the material in a way that forces you to REALLY think about the question and how to get the right answer. His quizzes are tough, and you really need to understand the concepts inside and out to get full credit.\nHis homework sets are not easy either, so you'll want to start as early as possible. Some questions take about 15 - 20 min to understand and complete, while others take hours and hours to understand than code properly. Again, he's going to really test your knowledge of the concepts in class in different ways. Some of the homework questions during the latter part of the course I felt were a bit too challenging at times, such as probability and hidden Markov models, given that this was a short 6-week course. \nThe TAs for this class were AMAZING. If I couldn't get some python code to work right, I'd show one of the TA's and they'd walk me through why the code was not working and possible solutions to get it working correctly. The TA's were very helpful with the coding portions of the homework, and I think generally understood that this class probably should NOT be an "accelerated" 6-week course. \nAs good as this professor is, I can't recommend anyone take this class in its current state. Columbia made this course into a 6-week "accelerated" class, and as nice and sweet as this professor is, the class is simply too difficult and stress-inducing. Why Columbia thought making this class into a short term class was a good idea, I honestly have no idea. The class moves WAY, WAY to fast for a normal human being to fully grasp and understand all the various seemingly complicated concepts in a reasonable manner.\nIf you can delay taking AI until they make this class into a full term, 12-week course, than do it. Otherwise, take this class on a lighter load.	5 homework problem sets (Python programming and response questions)\n12 5 question quizzes\nFinal consists of 20 quiz-like questions and 4 programming questions. The quiz portion of the final was quite challenging.	5	0	13639	26
82552	December 04, 2020	I highly disagree with the recent reviewer of Fall 2020. This class is required for CS majors only take if you have to or you like the material. The quizzes take at least 30 minutes-1 hour even if you've gone to all lectures. She assigned homework due 1 day before an exam and it was over the break (with no office hours then). She seems out of touch with the students. She judges people's questions in class. Last lecture she spent the entire class (except the last 15 minutes) going over the previous quiz... She manages time poorly. At least now she knows how to work Zoom (the first few weeks/into midterms she had problems with Zoom where class would not start until 20-30 minutes later). She often omits proofs. Oh and she combined her 8:40am and 10:10am sections, so she only teaches 2x per week, and if you have a conflict with the other class time (because you signed up for a specific time of this class) you're forced to watch the recordings and not attend live.	Random quizzes, weekly or so homeworks (sometimes you'll have 2 weeks other times you'll have 6 days + a quiz), 3 exams (the second one was like a final)	23	3	1621	234
82574	December 07, 2020	Professor Malkin is absolutely incredible. She teaches concepts clearly in class and responds to Piazza posts quickly and with in-depth, thorough answers. Literally, I've never taken a class in which the Professor responds on Piazza even more often than the TAs do (and at odd hours of the night, too!). She is a fantastic lecturer and makes the course material super super interesting-- and I say that as someone who has never been interested in the theoretical underpinnings of CS. I would highly recommend taking this class with her.	Not bad, there are only a couple of Psets, and three exams (though this exam schedule was changed from past years, I think, to reflect the online nature of the class).	12	23	1621	234
82597	December 08, 2020	Itâ€™s the inconsistent grading and severe penalties to the point that it'd be better to not even try on exams/homework sometimes. I would get 0 points for a proof on one part of a problem but then get credit for the same proof on the next part of the same problem graded by another TA. The professor did not make the class enjoyable for us but it was mostly the TAs that made the class difficult. Unless you have to take this for computer science, do yourself a favor and do not suffer through this. Could not be more thankful for pass/fail.	Weekly quizzes, six problem sets, three exams. No mercy when it comes to thanksgiving break or reading week.	30	4	1621	234
82623	December 10, 2020	She seemed really nice and open to feedback. The course itself is super interesting and a good introduction to machine learning and computer vision concepts. I'm an extremely visual person and there were always a bunch of visuals to go along with the concepts which I appreciated. The course is separated into four main sections: perception, learning-based perception, planning, and learning-based planning. Overall, I would recommend taking it.	4 Programming Assignments: Originally it was going to be worth 25% each but then she changed it so that the first one was worth 20% and the other 80% was split evenly between the remaining three. Each assignment has the opportunity for 10-20% extra credit if you complete an additional section and another extra 4 points if you turn it in more than two days early.\nThey can be time-consuming especially when it comes to tuning parameters but honestly if you're not looking to complete the extra credit and you understand the concepts from class then you can probably complete each in 2-3 days.\nNo exams :)	2	0	14026	2403
82646	December 14, 2020	I should preface my dislike of the course with the fact that Professor Lee is a fantastic teacher. Never before have I had a CS teacher who taught me so much, whose material was so practically-driven, and who's class was so organized. He really knows how to lecture, and every lab, every exam question, and every piece of code from class was well-planned.\nNow, to the course itself. The other reviews do not lie--Advanced Programming is one of the most challenging, most isolating and asocial, most hated classes at Columbia (or, even in the country). This course is taken by the best of the best (the top students at an Ivy institution) and thrashes them. If that's not enough, the structure of the course promotes isolated work, with absolutely no cooperation and complete competition. If you are looking for the most competitive class at Columbia, this is likely it, with only the top 4 students getting A's. Even more, there is no understanding for mistakes, no leniency for errors, and you are expected to do too much work outside of class. And most of the blame I give to Professor Lee, as he structures the course, he teaches it, and he continues its asocial tendencies.\nI would not recommend this class to anyone. However, the CS department strategically makes it a mandatory class to Major in CS or get a Concentration in CS. Thus, take it at your own risks. And, most importantly, DO NOT CHEAT. This class produces more academic-integrity violations than any other course at Columbia. Jae is ruthless, is not understanding, and attempts to ruin students who cheat (understandably). He is very adept at catching cheaters (he must use fairly high-tech software), and is extremely unforgiving. So, let this be a warning to all: DO NOT CHEAT, BECAUSE HE WILL CATCH YOU.	Too much.\n7 Difficult Labs\n4 Exams	8	23	3509	4758
82661	December 15, 2020	My only qualm is that he doesn't give out a week by week syllabus coverage. Other than that, Hagrid is great at breaking down and explaining abstract concepts and very patient with our questions. His anecdotes and side tangents are usually relevant, even if they aren't they really lighten the atmosphere.	6 psets condensed to 5(pset 3 takes a bit of time but the rest are pretty straightforward)\nmidterm\nfinals (drops hints on coverage)	2	0	3409	4
82695	December 17, 2020	Overall, Professor Ray tried her best to be accommodating during this difficult semester, often adjusting assignments and exams based on what she interpreted from the class feedback. The problem is, I think she misinterpreted a lot of what we had to say, which just served to add to the stress of this course. \nA good example is the final exam. Students expressed that the midterm was difficult because of the time constraint, so the professor removed this restriction for the final. This would be great, if the final didn't end up being orders of magnitude more difficult than the midterm. The professor claimed the exam would require 3 hours max, but the overwhelming sentiment on the Piazza was that the final required somewhere over 10 hours to get through. The professor justified this by explaining that the TAs were able to finish the exam in 3 hours, but this doesn't make sense as they were probably A+ students in the semester they took the course. The final wasn't difficult because the material was poorly taught or inaccessible, but because the questions, diagrams, and code snippets were overly complex to the point where it was more about keeping track of random information instead of the actual material being tested. Obviously, it was hard for everyone, so the curve reflected this, but frustrating nonetheless.\nThe TAs also have a long way to go in terms of being effective. While they were willing to let people bring concerns about the class to them on Piazza, they almost always became incredibly defensive whenever any problems were brought up. Even though the instructor and TAs made the grading scheme and schedule more lenient, they often required a large amount of people to complain for fairly obvious issues, like homework being due on University holidays or a few days after a previous assignment. They seemed really out of touch with the class, making long posts explaining that they weren't out to get students. If you have to make a post explaining that you don't want to rule the world, you've gone wrong somewhere.\nThe assignments are not that difficult, you just implement basic tree traversal algorithms and find the correct function to use from the LLVM API, and generally took 4-5 hours each. A big plus is that you don't have to do a group project like other PLT sections.\nHonestly, I would probably take this course again just because I felt like the assignments weren't that bad and there is no group project. Just be prepared to be endlessly frustrated by Ray and the TAs.	5 Programming assignments, lowest dropped\n1 Extra credit Programming Assignment\n3 Written Assignments\n1 Midterm (moderate) and 1 Final (grueling)	6	1	13791	3105
82711	December 18, 2020	One of the best professors I've had at Columbia. He truly cares about his students, explains concepts clearly, and I think he does a good job of making himself available for OH. Sometimes he sends out an email indicating that he's having office hours in 20min which is short notice but if you are really having trouble, he's open to meeting with you one on one and help you solve your problem. Also, there were office hours pretty much every day thanks to the TAs. Truly a great professor.	4 Assignments, 2 written and 2 programming/SQL based. He planned on having hw5 as extra credit but just gave everyone 5 free points instead.	1	22	6653	664
82714	December 19, 2020	Professor Dear is probably one of the best teachers I've had at Columbia. He breaks things down clearly and concisely, presenting a couple of concrete examples in-depth for each topic to help things click. \nThe quizzes, while a bit annoying to complete after each lecture, really incentivized me to review the material, which was helpful in that it helped me stay on track (especially crucial in a 6-week course). They were a mix of understanding how to run through the algorithms he presented in class as well as questions that had more to do with your intuitive understanding. So, while not a walk in the park, they were very fair and it's not impossible to do well on most, if not all of them. \nThe homework assignments were also quite fair. They were a mix between programming and short answer responses and generally contained no surprises. I personally thought the programming wasn't too bad, though the short answers could be a bit tougher at times since they relied on truly understanding what was going on (which is a good thing). Make sure you have at least a rudimentary understanding of Python before taking this course. \nI thought that the quiz portion of the final was a bit tougher than the ones we had throughout the semester, but nothing that was unreasonable to expect. \nThe TAs were great too: extremely helpful in OH and on Piazza, returned assignments in a timely fashion, and graded everything fairly. \nOverall, Professor Dear's course is highly organized, well-taught, and extremely well-run, even when considering that it was an accelerated course (which was just a bad idea on Columbia's part). The class definitely isn't easy, but it definitely is possible to succeed if you take the time to internalize his lectures. All the praise he received in previous reviews is more than well-deserved.	12 quizzes (lowest two dropped), 5 homeworks (lowest dropped), 1 final. Quizzes and final were both open-book. I probably spent around 10-12 hours a week on this course.	12	0	13639	26
82721	December 19, 2020	This dude is literally the best. Take his class!!!!!	5 psets, 5 programming projects, 6 quizzes (online workload), 5 in class exercises (TA helps with them)	5	4	515	7002
82728	December 19, 2020	DON'T TAKE UNLESS YOU HAVE EXPERIENCE IN JAVA (if you can avoid it). Do not take Bauer's sweet, sweet smile and precious accent for granted. The TAs are awful and grade sporadically- on the first group assignment, each group member had a different TA and our grades ranged from 68-98. I think he has the best intentions. Truly. There are some concepts that came up on tests that you would only recognize with coding experience under your belt, and the lectures are painful to sit through. Unless you're willing to spend far more time on this class than you had planned, it's not the move. (Unless you know what you're doing already, in that case, easy money baby you got it)	5 group-based exercise sets - 20% (4% each)\n5 individual homework projects - 30% (6% each)\n2 quizzes - 20% (10% each)\nFinal exam - 30%	2	8	11572	6732
82739	December 20, 2020	One of the best professors I have studied. In a nutshell, by taking this course, you can gain an understanding of the NLP concepts from the early days until the recent advances in NLP.\nThe professor makes sure that the student retains the most important aspects of NLP from the course, supplementing the material with research papers, philosophical views and ideas, etc as and when applicable.	If you are interested in NLP, the workload shouldn't be much. Grading is not too strict.	0	0	13810	4903
82754	December 22, 2020	This guy needs to have his silver nugget taken away. His good CULPA reviews are deceptive (notice all the disagrees). This class was my worst CS experience at Columbia so far -- the reviews are right that Ferguson is extremely kind and accommodating of tough circumstances; however, that doesn't balance his extremely out of touch teaching style. The lectures are messy and unorganized, don't help with the homework, and he often attributes his disorganization to "helping us gain real-world CS experience." There's a very clear line between encouraging students to make their own design decisions and giving so little instructions that Piazza becomes a hot mess. \nThroughout the course, I found the assignments to not be conducive to learning at all. You're basically expected to self-learn SQL, Neo4j, and various complicated database system concepts with conflicting instructions from the TAs. The midterm was ten questions with up to 12 sub-questions for each question and further sub-questions for those sub-questions taking 40+ hours to complete. Assignments take multiple (3+) weeks to be returned and are basically impossible to do without further TA/instructor help. \nI will say that Ferguson makes himself extremely available (to the point of impromptu 4 AM office hours) and towards the end of the semester, realized how difficult the assignments were, thereby giving us 5 free extra credit points. However, that doesn't deny how difficult this class was and how little it taught me.	2 Coding Assignments with 3 parts each and 2 Written Assignments (20 questions) (50% total)\n1 Midterm (20%)\n1 Final (30%)	17	3	6653	664
82770	December 24, 2020	Very very easy. Ansaf is a lovely human, and the class proceeds slower than my high school precalc class. If you want 4 points' worth of an A, go for it.	Midterm (easy)\nHW (10 coding, 4 programming), very manageable\nFinal (also easy)	3	2	13076	397
82773	December 24, 2020	I was really disappointed with this class. Professor Salleb-Aouissi is probably one of the nicest professors I've had at Columbia but the curriculum for this course was a joke. We went extremely slowly, not in-depth at all for any unit, and had to condense graphs (one of the hardest units) into a single lecture and didn't even touch on the harder concepts in graphs. Nonetheless, if you want an easy A, take this course.\nWhat really irked me more than anything though was the TAs. It seemed like they did not communicate at all with one another. Frequently, you would get two completely different answers if you went to two different office hours. Furthermore, the grading was sooooo slow. I get that TAs are also students but most of these exams were multiple choice and the coding is run through an autograder... so taking three weeks to grade the assignment is a bit of a letdown.	2 hours a week on psets (+2 hours if there's a coding that week)\n3 hours a week in class\n3 hours studying for midterm/final.	10	2	13076	397
82781	December 25, 2020	It's been six years since someone posted a review for this course, so I figured I would add one for Fall-2020. After reading the old reviews, I found that compared to the past offerings, this course has drastically changed.\nI recommend taking this course if you want to formally understand various aspects of software engineering. It is most beneficial for students without prior work experience. However, as an experienced professional, I have learned a great deal about software testing.\nThe lectures were loosely structured. Professor Kaiser covered theoretical topics in-class via real-world examples, code snippets, and online resources. On many occasions, we discussed interesting topics such as autonomous driving software and testing AI systems. TAs were helpful in troubleshooting individual assignments. Sometimes Shirish (Head TA) gave in-class tutorials on tools/technologies used in the assignments. Grading mostly seemed lenient for assignments and assessments. However, you need to be very careful about the requirements of the assignments/assessments.\nI felt that time allocation was not managed well. The first half of the course only had individual assignments. The team project started mid-October, so we had less time to develop an MVP. The online setup of the class (Because of COVID) was somewhat helpful in terms of collaboration with peers. But, starting the project early would have helped a lot in terms of applying what we had learned to the project.\nTake this course if you have little or no full-time industry experience. If you want to learn about SE and software testing, then this course is great. This class is not about UI design/development. Try other classes for front-end development.	3 individual assignments covering MVC, Testing, and Databases. One team project (Divided into many submissions). 2 assessments covering several conceptual topics discussed in lectures. Several opportunities for extra credit. Overall, the workload was light (if you have a good programming background).	11	2	1474	1616
82809	December 28, 2020	Prof Blaer is hilarious and a brilliant and caring teacher. He teaches the content efficiently, and every lecture is interspersed with his humor, especially when he reacts to the chats, and occasionally an anecdote. Given how dry the material has the potential to be, Prof Blaer makes attending class a super enjoyable experience and adds depth to the content. It's clear he cares about his students and about teaching.\nAs with any CS class, it doesn't hurt to read some online resources about the things you're learning. I didn't read the textbook at all and was more or less fine, but sometimes he can gloss over the code for certain algorithms and it'll be up to you to learn it inside and out for the exams.	Pretty similar to 1004 I'd say. 5 homework projects, each with a programming part and a written part, with two weeks to do each (50% of the grade). A midterm (20%, not that bad tbh), and a final (30%, harder than the midterm but not outrageous, he'll tell you a lot of what's on it ahead of time).	4	0	3409	4
82817	December 29, 2020	Professor Cannon is funny, approachable, caring, and knowledgeable about Java. His classes are very entertaining as he is an amazing lecturer, and one can tell that he really cares about his students a lot. I took this class during COVID, and he was very understanding and tried to make the class as least stressful as possible. \nThis class is not an easy A tho. If you have programmed before, it might be a little easier, but for someone who has little background, the class can get time consuming and hard. However, no matter what you'll end up learning a lot about java and also some interesting stuff about Von Neumann Architecture and Logic Gates. \nThe TAs are very helpful. There are a lot of them, so there are office hours basically 24/7. That said tho, because of COVID, office hours can be a little bit crowded because it is easier for people to go. If you have the patience and don't mind waiting for your turn, you'll get a lot of the TAs. Plus, they also offer review sessions almost weekly and those are very helpful for either the quizzes or the assignments. \nIf you like coding, take this class with Cannon. You'll learn a lot.	6 quizzes (30%)\n5 in-class exercises (20%)\n6 Programming Projects and 6 PSETS (50%)	13	2	515	3807
83069	January 17, 2021	Whoever took this class with Shirish as TA onboard knows what I mean. Shirish shouldn't be a head TA at all, he controlled your grade and would not care for students and Gail was too busy to do any grading at all. Several students argued with Shirish many times and his condescending attitude pissed everyone off. Overall a class with good content but the assignments were too easy(Shirish made it harder by giving low grades). When Shirish onboard, jump off!	easy	3	4	1474	1616
82882	January 02, 2021	Professor Cannon is super nice and makes the lectures engaging. His online lecture was my only class that was able to sort of replicate an in-person experience.\nMy only complaint with the course was the grade weighting. Be warned, the class was not curved this semester since we had no mid-term or final. After the pdf deadline, we received a notification from courseworks that the grade weights had changed. This caused averages to drop by around three points and for me, a full letter grade (I'm not sure if this was a mistake on Cannon's part or courseworks but it was frustrating regardless). \nThe quizzes were supposed to be low stress, but a single question counted for a whole grade percentage point. A single question on the quiz could have a major impact on your grade.\nOverall, Professor Cannon does a solid job given COVID, but I think the grading system could use some tweaks. I'm pretty sure he will make those changes though as this semester was a trial run of sorts.	A lot if it's your first computer science class. Alternates weekly between problem sets and projects. Also alternates weekly between exercises (not normally finished in class but not due until the next day) and quizzes/	10	2	515	7002
82888	January 03, 2021	This was a great class. Ansaf is an excellent professor and cares a lot about her students. I took the fall 2020 version of the course which was entirely online.  Ansaf did a terrific job adapting the course to an online format.  \nI am talented at math (A+ in the course) but still got a lot out of the course.  I think prior reviewers do future students a disservice by saying the class is too easy.  \nSo here are the exam stats for my semester: midterm average was 88.6 and the final exam average was 78.4.  Clearly many students struggled with the material on the final exam.  It was a very fair exam -- my point is that the class is not trivial if you really want to master it.     \nSome students have said that it is easy to hurt your score by making a careless mistake. The class is not akin to a heavy computational Ordinary Differential Equations course where a single mistake is easy to make and will throw you off. If you are making mistakes on the problems in this class, you generally do not have a perfect understanding of the concepts. And these are key concepts in mathematics.      \nIf you actually pay attention in lecture, read the notes, and also read the text (the Scheinerman text is solid), you will learn a few important concepts even if you have a solid math background.  And these are very key concepts in math.  The coding assignments are good Python practice. \nEven if you place out of the course, I would recommend taking it.  It's a very crucial course in one's intellectual development and it's enjoyable.	Each week we had a written assignment (10 total), 2 lectures, and 1 recitation.  We had 4 coding assignments.  And then a midterm and final of course.  If you want to master all of the material, the course does take time but not an inordinate amount of time.	3	33	13076	397
82890	January 03, 2021	Prof. Kender is quite approachable and helpful outside of class, but his lectures are often unfocused and spend a significant amount of time on review and logistics rather than content. It's often difficult to distinguish between the "interesting but not really important" tidbits and the parts which will recur on homeworks and tests, and the bits that are not expected to be committed to memory. Like other reviewers have mentioned, homeworks and tests also often use confusing or vague wording in cases where he is looking for a specific solution. Prof. Kender is open to feedback with surveys after tests and homeworks, but the fundamental issues of clarity are difficult to resolve immediately. Overall, take this class if you really want a more advanced intro java experience, otherwise, consider how much time and mental energy you are willing to commit.	The p-sets are quite a significant amount of work (15-30 hours every two weeks), and often some portions of the p-set will not be covered until 2 days before it is due. The tests require a standard amount of studying, while also having a lot of writing involved.	1	0	42	NA
82894	January 04, 2021	Ansaf is one of the kindest professors youâ€™ll meet at Columbia, but sheâ€™s a mediocre teacher; sheâ€™s too prone to glossing over the meat of the material. Everything you need to know can be easily found in the lecture notes she posts at the end of each week, so attending lectures is pointless. I think attendance trickled down to 20-30 students after the midterm.\nI will say that the course felt rushed near the end. Discrete was recently bumped up from 3 credits to 4 credits because the syllabus was revised to add more targeted prep for classes like AI. However, itâ€™s clear that Ansaf was not ready for this change. We went through the first three chapters at a snailâ€™s pace before the midterm, and then Ansaf had to cancel a full weekâ€™s worth of lectures because she got COVID. As a result, the second half of the semester felt strapped for time, and we blitzed through the rest of the material. It got to the point where I donâ€™t feel adequately prepared for classes that require Discrete as a prerequisite even though I got an A in this class.\nOn the TAs: it seemed like most of them were TAing for the first time. Piazza posts took forever to get answered, and it usually took a few weeks for graded work to be returned. I never attended their Friday recitations, but the problems they made were generally harder than the homework or exams. Being able to solve these problems means that you truly understand the material, so be sure to do them if you know youâ€™ll need Discrete in the future.\nAt the end of the day, Iâ€™m not sure if I can recommend Ansafâ€™s version of Discrete. Itâ€™s one of the easiest classes at Columbia and doesnâ€™t require a ton of work, but donâ€™t expect it to sufficiently prepare you for higher-level math or theoretical CS classes. If you have the option of testing out, I think doing so and taking a more advanced course in its place would be a better use of your time unless you desperately need the GPA boost.	Itâ€™s worth noting that Ansaf offered several opportunities for extra credit during Fall 2020. Submitting homework before the deadline awarded you 2 bonus points for that assignment, and everyone received at least 4 bonus points on the midterm. If she keeps this system, I wouldnâ€™t expect much of a curve (but itâ€™s likely that you wonâ€™t even need it). All lectures and recitations were recorded, and both exams were asynchronous.\nWritten HW (35%) - There were 10 and the lowest was dropped. The assignments before the midterm were a bit longer and more tedious, but the ones after the midterm were much shorter. None of the questions were difficult though.\nPython Coding HW (15%) - There were 4 and the lowest was dropped. All of them were straightforward and easy to implement.\nMidterm (20%) - Fairly easy. It covered propositional logic, basic proofs, and set theory. She allowed us to use a double-sided cheat sheet.\nNon-Cumulative Final (30%) - Also easy. It covered relations, functions, number theory, counting, probability, graph theory, and all proof techniques. Instead of a cheat sheet, she allowed us to use any document that she had posted on Courseworks (i.e. homework/recitation solutions and her typed lectures notes).	10	1	13076	397
82895	January 04, 2021	Hands down the most annoying class I've taken so far. A lot of students are saying this is an easy class but I have to respectfully disagree. I will agree with one thing from other reviews: Prof Ansaf is a really nice person.\nGrading literally took ages, with no communication from the TAs or the Prof on why it took nearly a month to get our assignments graded. This made it difficult to see what I needed to work on, and also strategize if I should skip the last assignment or not (since the lowest assignment is dropped).\nThe Head TA for this semester was, to put it nicely, rude. That is the nicest word that comes to mind based on their class-wide announcements and personal interactions. I'm sure they're smart and are very knowledgeable on the subject matter at hand - but their communication skills when interacting with students are poor.\nThat said.. there are some things I really enjoyed:\nGenerous final grade, +2 pts if you submit something on time, implementation of Python coursework is a great addition to the course, allowing 'coding group' to work on a coding assignment together was a great way to meet new people in a virtual environment.\nCaveat: I took this class in Fall '20 in the middle of the pandemic. While I faced a heavy workload due to this course I'm sure the teaching staff did as well.	So you're talking 10 assignments a week, which takes about 2 hours at the minimum (except the first one - should take < 1 hour), then watch the recorded lectures in 2x speed so maybe 1.5 hours a week on that, then maybe another hour a week for looking up YouTube videos on stuff you didn't get, also 4 coding assignments roughly 3~4 hours. \nMidterm and Final which was (as evident by the class averages) extremely challenging.	12	5	13076	397
83112	February 02, 2021	He's a good professor and once you actually get to know him, a nice guy, but the class itself is a total disorganized mess. I can understand how challenging it would be to design an introductory class based on basic database/SQL concepts because, well, it's not all that challenging, to begin with. SQL really isn't a programming language at all and it's very easy to learn. Basic concepts like "data cleanup" and writing the correct SQL query to get the data you want are really not all that hard. Basically, he could spend two or three weeks running through a few examples of various SQL queries/terms, show everyone how to set up basic database software, run through a few basic definitions from the textbook, and that would be the entire class. \nBecause he does not want to run the class this way, (not to mention it would be far too short), you're basically stuck having to google your way through the majority of the class to teach yourself the concepts that were given very little, if any, time in a lecture. Going to the various TA office hours becomes mandatory as well. \nThus, much of his lectures are "filler" material that hardly pertains to the class assignments/homework at all. You'll often find yourself saying: "Well, that was nice to know and quite interesting, but how does this relate to the class assignments?" Well, it doesn't, because again, the basic concepts of this class are not really all that hard and can be explained in a few weeks, so he fills each class with things that are certainly database related, but are not useful at all for doing the homework. Again, from a class design perspective, I can see why he does this, but it makes going to the lectures tedious and incredibly boring. \nThe main problem with this professor is how INCREDIBLY long the assignments take.  You'll spend hours on google and working with the TA's to complete the overly long assignments not only because you'll have to teach yourself how to do them, but also trying to resolve the various technical/error messages that will arise as you do the assignments. I think I spent more time trying to resolve various error messages in MySQL Workbench than I did learning about databases.\nOh, and the midterm was one of the most stressful experiences of my entire life, mainly because of the way he phrases/asks the questions. The way he words the questions are so ambiguous that you'll be on piazza constantly looking for clarification on whether your approach to the question is correct or not. Doing the assignment involves knowing lots of SQL and getting your queries to run right. To make things more frustrating, every question has a subpart, and those subparts have subparts, so the entire exam is VERY long. The entire assignment took me somewhere in the range of 30+ hours and it was a disaster. \nAlso, when do you want clarification on a specific question, you'll find that you get different answers from different people. If you ask Prof. Ferguson, he'll give you one answer, but the head TA will give you a different answer, and another TA will give you a totally different answer, and maybe another TA will tell you something else entirely. Basically, you'll quickly discover that nobody really knows what is going on or has any idea how to resolve the issues you/the large majority of the class are having, so you'll just become even more confused. Making annotations that accompany the answers you give in the assignments is basically mandatory because nobody really knows what is going on.\nI hate to be so negative, as he's a nice guy and all, but by the end of the class, I think he realized just how much of an absolute and total mess this class turned out to be and just gave the large majority of the class an A. Oh well!	4 homework assignments total\n- 2 are coding/SQL based\n- 2 are written assignments\n1 midterm\n1 final	8	0	6653	664
82917	January 04, 2021	DO NOT TAKE THIS CLASS!\nI thought this class would be very interesting because I am a computer science major interested in politics.  It was so boring, the lectures were not interesting or engaging.  The lectures felt like he was just reading us a bunch of random facts for no reason for 3 hours.  I don't know if it was because of zoom but it was very boring and most people didn't show up to class (30 ish people registered and on average there were 8 students attending class live)\nThe expectations were also very unclear.  We were never given a syllabus and the homework assignments often had questions that were very different from the class content.  It was hard to know what they were looking for on the homework.  The final project had bi-weekly progress reports and a proposal at the beginning but we didn't get any feedback on the proposal or progress reports. \nOverall no one in the class knew what was going on, the grading was harsh with no explanations, and it was a waste of time because I'm not going to use anything I learned ever again.	5 written homework, final exam, semester project with biweekly progress reports, written report and presentation.	5	0	350	7406
82921	January 05, 2021	I used to aim for A/A- for all of my classes, but I think I'm failing this course.	3 exams, 6 HWs, multiple small quizzes	3	0	1621	234
82936	January 05, 2021	The homeworks are all graded leniently and the exams are very straightforward. Similar sentiments with the other reviews. However, beware that while you might get decent scores on the homework and exams, the final grades are based on a curve. This includes curving downward. Apparently averages were higher this semester, and an A was a 96% or higher, an A- was a 94-96%, and a B+ was a 89-94%.	4 homeworks, leniently graded	2	0	13810	4903
82948	January 06, 2021	Bauer is a sweetheart, and a fantastic teacher. His wholesome smiling face absolutely made my Tuesdays and Thursdays. 1006 is a great first programming course - I had no prior experience and found it doable, and actually pretty fun.\nHis lectures were always dynamic, class materials were easy to understand, and homework problems were very chill. The quizzes are pretty tough, but it ends up balancing out (and the curve is nice).	4 take-home projects (basically short coding puzzles)\n4 group projects (slightly longer coding puzzles, done with a randomly assigned group)\n2 "quizzes" aka midterms. very conceptual and often tricky.\n1 final, similar to the quizzes.	4	0	11572	6732
82952	January 06, 2021	Prof. Blaer is my favorite professor at Columbia and I loved taking Data Structures with him! His lectures always target the key points, and heâ€™ll occasionally throw in a relevant joke or story. Heâ€™s also accommodating and receptive to feedback, and the curve is generous. Even if you arenâ€™t pursuing a CS degree, I highly recommend taking Data Structures with him if you enjoyed 1004.\nMy only complaint is that the Weiss textbook is subpar and should not be your primary resource in this class. The book is dense and reads more like an academic paper; itâ€™s clogged with esoteric proofs and errors. Use Weiss for its source code, but refer to Cracking the Coding Interview, YouTube videos (I recommend the Back To Back SWE channel), and sites like GeeksforGeeks for mastering the concepts.	Homework (50%) - There were originally 6 assignments, but he took out the last one due to time constraints. Each one consists of a theory-based written assignment and a programming assignment. With the exception of HW3 (the one about trees), I found the programming assignments to be easier than the projects from 1004. The written assignments are definitely a step up from 1004â€™s problem sets, but youâ€™ll only find 1 or 2 tricky questions in each of the later assignments. Even though we only did 5 assignments, Prof. Blaer was still nice enough to drop the lowest one.\nMidterm (20%) - As a former student wrote on the Columbia subreddit, "itâ€™s easy as fuck." In all seriousness, there shouldnâ€™t be any surprises if you catch all the hints that he tells you in class. Most of the theory questions resemble the structure of the written homework, but the questions on the exam will be much easier. The coding questions will require you to synthesize something new, but theyâ€™re still fair.\nFinal (30%) - Slightly harder than the midterm, but Prof. Blaer dropped even more hints. Practice drawing out the major processes/algorithms that he goes through in lecture because chances are pretty high that heâ€™ll ask you to replicate them on the final.	10	1	3409	4
82982	January 08, 2021	I took this course during Fall 2020 when all classes were virtual and it seems like she changed the way that she has structured her course to accommodate that.\nOverall, I would say that the class was very good, with some flaws that didn't make it perfect. She lectures pretty clearly and has a solid grasp of the material. She was also very nice and had some funny quirks in class! Since we were all taking the course virtually, she decided to split the class into three components: reflections, homework and quizzes. She kept a very consistent schedule with a reflection and homework due every week (with the exception of breaks), and quizzes (administered on CourseWorks) about every 2 weeks. I would say this was a very effective way to spread all of the points in the class out without having any make-or-break exams/projects during a semester that I'm sure has been difficult for everyone involved. Professor Kim and the TAs ran a very well organized and responsive Piazza. I was very appreciative that there are at least some professors that are taking into account that the semester isn't a normal one.\nThat being said, there were some parts of the class that weren't so great. While I think Professor Kim's lectures were clear, they sometimes seemed disconnected from the homework given to us. While the majority of each week's homework was easy to get most of the problems done, it was very hard to get full credit, as there were a good amount of curveballs thrown. They seemed either completely random or too complicated for the level at which the lectures were presented. Many times, at the end of the semester, it was easy to misinterpret the question and approach the problem incorrectly. However, my TA was very helpful and I probably wouldn't have as good of a grade in my class without him. A few (Not many! But a few) quiz questions weren't super clear and could easily lead to getting the question wrong.\nBut, with all that being said, I learned a lot and I would definitely recommend taking Professor Kim's class! She cares about students and the experience of students.	Reflections: every week   - 24 points\nHomework: every week    - 48 points\nQuizzes: every 2 weeks   - 48 points\nGrade scored out of         - 120 points\nReflections are quick, shouldn't take more than half an hour. Homework is where you'll spend most of your time, took me on average about 5-10 hours (heavier in second half of semester). If you understand the homework, quizzes shouldn't take more than a few hours of studying for preparation.	4	14	4221	4251
82996	January 09, 2021	Yassine is not a great instructor and he mostly just reads off of Prof. Bauer's slides. The curriculum itself is pretty dry and is mostly focused on semantic and dependency parsing, with a little bit of neural models thrown in at the end. I don't think I can actually do anything useful with what I learned in this class. Given that its a COMS 4xxx class, there are lots of MS students in the class who want to impress him, and mostly end up talking to him about GPT-3 or some other research paper the entire time; he gets off topic very easily. His homeworks are incredibly easy and also taken from Prof. Bauer, and exams are very easy as well. However, this is a big problem, since most of the class will end up with 90+ on everything, so he curves down. He required a 94 for an A-; that's right, folks, your 93.9 is a B+. This is absolutely ridiculous in my opinion and he needs to reassess how he evaluates us since one small mistake will be the difference between an A and a B+. I do not recommend this class at all; if you must take NLP, at least take it with someone else.	Light. 4 easy homeworks that equate to translating pseudocode into Python. Midterm (easy) and final (easy). Beware though; you will be curved down.	7	1	13810	4903
83009	January 11, 2021	Tony Dear is an incredible professor. He is highly organized and is great on staying on task. He is clear and teaches his material very carefully. He is also very nice and kind and will tend to questions and never judge for asking any question.\nI was very scared for AI but it proved to be my favorite class taken at Columbia.\nI HIGHLY recommend him!	medium- 5 HWs, 12 quizzes, 1 final exam	18	5	13639	26
83121	February 06, 2021	I am an Eleni Drinea stan!!! I took Analysis of Algorithms with her in Spring 2020 and absolutely loved it! Eleni is a very engaging and clear lecturer and I never felt bored during class. I think algorithms tend to get a bad reputation but this class really made me fall in love with the subject. I cannot recommend this class any higher. Not only was it fun, but it was also worthwhile, as many interview questions are about algorithms and you will feel very comfortable with the material after taking the course.	Problem sets that were a bit time consuming, but manageable because I went to office hours and found some friends to study with. Midterm was hard but curved. No final due to COVID.	10	5	13070	4079
83047	January 13, 2021	Honestly, I wasnâ€™t a fan of how the course was structured this semester. Prof. Kim is an okay lecturer at best, but she tends to oversimplify everything, so her lectures are practically useless. Youâ€™re better off reading the book to do her practice sheets. The quizzes are tricky, but theyâ€™re doable if you watch the TAâ€™s review videos on YouTube.\nFor what itâ€™s worth, I took this class in Fall 2020 and heard from some friends that Prof. Kim wasnâ€™t accommodating of extenuating circumstances just to be "fair" to the rest of the class. I never had issues with her though. I only wish that she would stop experimenting with the class (outside of these remote semesters) so there could be some consistency across terms, but thatâ€™s about it. The curve wasnâ€™t bad, but I wouldnâ€™t call it great either.	12 Weekly Reflections (20%) - You should be able to get full points on these each week, but it depends on your assigned TA as well.\n12 Weekly Practice Sheets (40%) - The TAs are lying if they tell you that the textbook is "totally optional to read." I listened to them and had a tough time with the practice sheets until I started teaching myself from the book. Do NOT rely on Prof. Kimâ€™s lectures alone because they wonâ€™t be enough. And please donâ€™t be stupid enough to post the problems on Chegg. Someone in our class did that in the fall and Prof. Kim found out easily.\n5 Quizzes & 1 MIPS Programming Assignment (40%) - All quizzes are open note and open internet. You only get 20 minutes for each one, and while the questions arenâ€™t as hard as the ones on the practice sheets, theyâ€™re still fairly tricky. Each quiz is only 8 points and thereâ€™s no partial credit, so you need to know the material cold to have a shot at a good grade.	11	0	4221	4251
83055	January 14, 2021	Professor Bauer is the best professor I've ever had!! I went into the class having no prior experience in Python, but he explained things extremely well and I now know how to code "mini-games" if you can call it that. I know many people say his lectures were dry, but I felt the opposite (for the most part). He even showed us a website filled with pictures of CATS following the Fibonacci sequence to add some spice to the class. The TAs for the most part were also really helpful and readily available to answer questions even outside of their OH. I learned a lot from prof Bauer and I would recommend this class to anyone who is looking to dip their toes in comp sci especially since there's no requirement to read the textbook in this class!! The workload is not too much. 4 individual projects and 4 group projects. There are also 2 quizzes and a final. I found the quizzes/exams to be quite hard and failed the first one because I'm a very slow test-taker, but Professor Bauer went over each question I got wrong during a private Zoom session and was super patient with me. Anyway, take this class if you are thinking about it!! It's great :)	4 group project \n4 individual projects\n2 quizzes\n1 final exam	4	0	11572	6732
83058	January 15, 2021	Tal is wicked smart, evident from day 1, and is super knowledgable about the subject. \nUnfortunately, I think this somewhat hinders her from succinctly explaining the concepts to half the class just because we're too dumb to understand it (at first at least). Another issue that I found out in the second half of the term is that I was getting too caught up in the fine details of what was being taught in the lecture and wasn't really getting a full picture. But taking a step back from the material to see the larger picture, especially during the Turing Machine section, helped immensely. \nEven though I struggled with just about everything in the course, I would recommend taking it with Tal because she is super intelligent and is really helpful and approachable in office hours. I only went to her office hours towards the end of the class because I thought she would be somewhat intimidating but this was not the case at all. Some, myself included, found her intimidating in class because she would sometimes answer student's questions with "I'm not sure where your getting confused" which can be awkward for the student asking the question but Tal doesn't mean it with an ill intention. So, if you can get over this bit you should be fine or go to her OH and ask in a smaller setting. \nI'm not sure how this course will be structured when we go back to campus but the format was three unit tests worth 30%, 30%, 10% of your final grade. I got somewhat below average on all of them - nothing by more than 5% less than average - but did fine on the homework (except for one where I got 50! lol) and the quizzes and ended up with a B+ so the curve is really generous. For context, the averages for the tests in fall 2020 were around 70% each time and I genuinely thought I had failed the second test which was worth 30% yike. \nWith all that being said, I do think that the homework grading can be inconsistent and sometimes (rare for me at least though) just doesn't make sense. Grading is not always inconsistent, but it certainly feels shitty when something unfortunate like that happens to you. But, as long as you go to office hours when confused you should be able to get some helpful pointers about where to start - some TAs are more helpful than others so best to figure that out in the beginning of the term. \nThis class was one of those courses where I disliked it during the course but reflecting on it, it wasn't so bad. That is a strong argument for not taking the course though...\nTLDR: The curve will save you even if you feel like you are failing.	Three unit tests (30%, 30%, 10%)\nSix homeworks - two weeks + late days (20%)\n10 small quizzes (10%)	2	1	1621	234
83095	January 23, 2021	Prof. Kim is a decent lecturer at best. I can tell she's passionate about the material she teaches, but unfortunately, she suffers from glossing over/oversimplifying important concepts and underestimating the importance of specific details in order to properly complete her problem sets (she calls them practice sheets). Her lectures are only useful for understanding the material from a "big picture" perspective but are not very good for developing a more refined base of knowledge needed to complete the problem sets. The problem sets often draw upon information/concepts that were only given a few moments of time during a lecture, (if at all), but really needed to be addressed in more depth in order to complete the problem(s). There are frequent oddball type questions that, again, are there simply to make the class/problem set more difficult. To do well, you should meet with your assigned TA as often as possible, and read the book.\nDue to her teaching style, it seems she designed the class to make it harder than it really needs to be, just for the sake of making it hard! This makes getting full credit for the problem sets quite difficult and doing them becomes quite arduous and very frustrating. Learning basically becomes a chore with this instructor.\nShe is also incredibly unaccommodating for specific personal issues you may have encountered/experienced as a result of the pandemic/online only learning, as "she wants to be fair to the rest of the class". I found this incredibly strange, as we are in the depths of a global pandemic, but I suppose each instructor is entitled to grant or deny these types of requests based on their own judgemental standards.\nRegardless of her drawbacks, I did enjoy this course, especially the last half when MIPS programming is taught and tied into the concepts of the earlier half. Everything comes together very nicely, and you do get a good idea of how all the individual components/concepts you learned fit into the greater whole of the class.	Weekly "reflection" posts on courseworks that show you listened to her lectures and have a vague understanding of the material.\n12 problem sets/practice sheets. Her lectures only help you to understand the material from a "bird's eye view" perspective. READ THE BOOK and talk with your TA!!\n8 quizzes that are more challenging than what they needed to be, but are doable given that you've understood the material from the book.	8	0	4221	4251
83098	January 25, 2021	All the previous reviews of this instructor are pretty much spot on. She's a nice person and all, but sadly, she really shouldn't be teaching. Her lecture notes/slides are almost useless for completing her practice sheet questions, and she absolutely will not give you any advice/hints on piazza. Instead, she just shuts you down and sometimes deletes piazza posts out of "academic integrity" concerns. It's a bit ridiculous/neurotic honestly. \nThe worst part by far is how she DELIBERATELY adds hard/trick questions to the practice sheets, just to make them harder and bring down the class average. Because her lecture notes are almost unusable for understanding the practice problems, you basically have to meet with your TA and teach yourself the material from the book. Her teaching style is incredibly strange, in that I feel she intentionally leaves out important details in order to "make room" for the harder problems. Thus, you have to look up/teach yourself the concepts she deliberately left out in order to complete the practice sheets. Luckily, my TA was incredibly good, and I credit them with actually teaching me the material from this course. \nI have no issues with intentionally adding harder problems into the practice sheets, but it should be done in such a way as to enhance student learning. With Kim, she does it simply to make things more of a challenge, and nothing else. There is literally no other purpose to adding these "trick question" type problems that make you spend hours and hours trying to figure them out. This instructor also constantly corrects herself, to the point where I wonder if she actually understands what she's saying.\nI hate to be so negative, she's a nice person and all, but she should really change her approach to teaching. It seems she's VERY worried about her class being "too easy". Instead, she should approach teaching with the end goal of enhancing student learning.	12 reflection posts - these are easy 1 - 3 sentence summaries of what you learned from the previous week. Shouldn't take you more than 5 min each.\n12 practice sheets - Reading the book and/or teaching yourself from the book is mandatory if you want to do well on these. Her lectures are totally useless.\n6 quizzes - you really have to know the material VERY well to do well on these. She likes to do questions where there are multiple answers to the problem. If you don't select all the correct answers, you don't get full credit. Luckily, you do get partial credit.\n1 MIPS programming assignment, which was the best part of the class honestly.	10	1	4221	4251
83101	January 26, 2021	Prof. Ferguson is a nice guy and seems to care for his students' learning. However if would like a well organized course instead of an unimaginably chaotic mess I suggest you try one of the other sections.	reasonable but the disorganization makes it annoying	1	0	6653	664
83129	February 10, 2021	I took Machine Learning with Professor Hsu in Fall B 2020 and I truly loved the course. He is a very chill person but also obviously a genius (that h-index though!); that combination made the class really rewarding, at least in my opinion. I really liked his lecturing pace and methodology, as he would carefully walk us through the math of everything step-by-step, so that we could truly understand the statistical and linear algebra foundations of all the different modeling algorithms. I also really enjoyed the homeworks; I felt they were highly challenging but doable in the end -- especially with groupwork!! Maybe the downside is that the class is not curved, so I felt high pressure to achieve perfect grades on everything. But, that's better than getting straight 50s in Verma's class, in my opinion; you can focus on truly understanding and appreciating the material as opposed to "beating the curve." Overall, lovely class, and I miss it.	Pretty heavy, especially in the Fall B condensed format. 4 problem sets, 4 quizzes, 1 final. All heavily mathematical / theoretical.	0	0	13116	1921
83131	February 12, 2021	He seems like a nice guy and I really want to like him, but he has been a terrible professor this semester. I want to preface this with the fact that I am taking his algos class during a Zoom semester, so I'm sure it's hard for everyone, including the TAs and the professor, but the class is incredibly disorganized. We have mandatory quizzes before every lecture on the lecture material (which, although aren't worth a lot of our grades, are still stressful to have to worry about). The readings that these quizzes will be on and the quiz itself are often not posted until 10 PM or later the day before our 10:10 AM class, and we are supposed to take the quizzes before the lecture starts. Weekly psets are also sometimes posted late (posted Friday and due before Wednesday morning). Piazza is the main medium of communication, which is messy and it's difficult to find important messages.\nAll in all, I would not recommend this class at all.	Weekly psets (~10 hours), 1 project, 2 quizzes a week, a midterm, and a final	67	4	13703	4079
83137	February 17, 2021	Benajiba is obsessed with the fact that he works in the industry. That usually translates well to teaching, but he just reads off of slides and doesn't end up teaching much. I would pick one of the other professors simply by virtue of being able to actually learn stuff. He goes over neural network architectures but doesn't actually explain how they work. He more just says "here! this is an architecture! here's a diagram!" \nBut wait! There's worse! He curves down! How much, you ask? Right after giving the final lecture about the curses of overfitting, he releases final exam grades and says that a 94 equates to an A-. That's right, a 93.9 is a B+, when the average on the final exam was in the 80s. \nI would avoid him at all costs. If you want to learn NLP, go to another professor. If you want a good grade, go to another professor. The only reason you should want to take a class with him is if you need the credits and are Pass/Failing his class since his threshold for a pass is 49%.	4 programming psets. There is no teaching about how to use Keras and Tensorflow, so you'll have to do that yourself. The actual work is very little though; you're just pasting pseudo code. Exams were deceptively easy, which means if you miss one question you might get curved down a letter grade.	2	2	13810	4903
83143	February 19, 2021	The prof wasn't exactly a bad professor really. When she was explaining the concepts in class I understood WHAT SHE WAS SAYING pretty easily. However, like the other comments, I also found it very difficult to find the connection between the lectures and practice sheets (TREAT THEM AS PROBLEM SETS THO. IT'S NOT ABOUT GETTING PRACTICE). So I relied on the TAs a lot! My TA was amazing and he was willing to overlook tiny errors for most of my assignment. He also helped me a lot to figure out how to approach the problems. Honestly, if you are planning on taking this course, when doing the problem sets, figure out how to approach each of the questions. Like what info to look out for in the questions and how to use them and things like that. \nMore about prof would be that she is a nice person but she really doesn't seem to care about how much pressure she puts on the student. Like the quizzes which make up one of the largest parts of your grade, she gave only 20 mins. When we requested more time, she just seemed to turn us down. Not just that, often time it seemed like she dismissed our feedbacks. In fact, she specifically mentioned she wants the time pressure. But she replied to her emails within a week. However, I was often redirected to the TA's instead. \nHowever, I have to admit I liked the class structure now that I am done with the class. The workload was evenly distributed in a way that it was impossible to fall behind on the content unless u give up on the class. Also loved how we went from bits and logic to eventually MIPS how codes actually languages like C and java to bits into MIPS and then binary. Like the progression was PERFECT! really tied everything in. \nWord of caution: DO NOT POST QUESTIONS ON SITES LIKE CHEGG OR OTHER THINGS LIKE THAT. Don't even use it. Lots of students got in trouble for this. Go to TA's instead, or ask a friend. My friends were really helpful.	exactly what the other posts from FALL 2020 describe	6	0	4221	4251
83160	March 01, 2021	An excellent professor who taught an engaging class even during the COVID semester. He gave us biweekly psets which were very fun to solve. He was also very capable and was able to simplify complicated proofs and present them in a straightforward manner without sacrificing rigor.	4 problem sets.\nA midterm and a final.	6	0	12932	462
83200	March 15, 2021	The class content is not hard. Professor Paul tends to extend the homework due date when most students starting on it later than his expectation. That's great since we were supposed to have 6 homework sets and now we have 5.\nThe entire TAing system is a mess. When there are questions regarding clarification of the homework problems, TAs may give inconsistent answers. So the best thing to do is post the clarification question on Piazza directly.\nHomework problems are related to his lecture closely. And he sometimes will talk through the structure of some coding homework problems during class which is helpful.\nExams are similar to homework but much easier.	5 written pset 5 coding homework. Takes about 3hours each(That's sort of best-case estimation -- for the coding part if you get stuck on debugging it may take forever).	1	0	3409	4
83212	March 22, 2021	I know many find this class extremely useful and engaging, but this was not the case for me. To be honest, I don't think I truly learned anything. Now I am struggling a lot in Data Structures because I don't have the basics of programming. \nProf. Cannon often gets distracted, which distracted me. Moreover, we had to learn things such as circuits or read entire chapters about what computer science means, which were really boring. \nI just wanted a class that taught me how to program, and this class didn't (again, in my personal experience)\nAlso, they took off points from your homework if you didn't indent everything the way he wanted. I think this is pretty pointless because in Data Structures they don't care about that.	No final, quizzes that were worth A LOT, hw	5	47	515	7002
83215	March 24, 2021	Agree with the top review. I really want to like him but this class has been the most awful experience I've had at Columbia. Only take this class if you are extremely self-disciplined and a genius in CS. A lot of people in this class are graduate school students, so if you are an undergraduate, be prepared to get lost at the beginning of the class. There are almost 100 people in this class, but there really aren't too many people participating due to the poor lecture structure and his teaching. I don't understand the majority of the things he teaches and have to rely on the textbook and self-learning 99% of the time. As an undergrad, I think this probably doesn't apply to a lot of the classmates coz there are a lot of graduate students, who probably have already seen most of the things taught in this class. Even though it's on zoom, he requires attendance, but I can't follow at all. There are always geniuses in this class who understand everything and make the professor think that everyone in the class understands what he's talking about. He enjoys putting us into breakout rooms, but NO ONE, literally NO ONE, talks in the breakout room (I'm not even sure whether people are actually listening to the course). He goes through everything pretty fast because you are supposed to understand everything deeply in the textbook before coming to the class, so you are basically fu.ked up if you don't do the readings. The content of this course is super important, but I really don't recommend Christos at all unless you learn everything on your own.	1~2 weekly quizzes. \n10~12 Homework problem sets.\nMidterm/Final\nGroup Project	50	4	13703	4079
83219	March 29, 2021	Well-organized class, Shree is cool and the topics are also interesting! This class does require some mathematical background and MatLab is annoying, but I think it's nice that Shree focuses on the concepts instead of the derivations in lectures. Would recommend!	7 homework assignments :( The homeworks aren't inherently bad I just don't like matlab. But pretty rewarding / cool projects	2	1	1812	2386
83231	April 03, 2021	I was initially skeptical of taking this course with anyone other than Prof. Chilton, however, Prof. Smith did a fantastic job. I took this Fall of 2020 and it was one of the few classes during the pandemic that kept me entertained. Prof. Smith's energy is infectious and he consistently gives energetic lectures. The TAs I interacted with were all very helpful and provided meaningful feedback. I thought the workload was easily manageable and grading was very generous (class average was probably around an A-). I still use a lot of the design skills that were taught and definitely felt like I learned a lot from the class. Overall, an interesting class with a great professor/TAs and fair grading, definitely recommend it.	1 individual project (fairly easy, most people I know started the final deliverable the day before and were able to finish it and receive good marks), \n6 homeworks (most of which lead directly to the individual project, mostly short answer based and easily doable the day before),\n1 final project (group project with a video presentation. HTML/CSS implementation of a small webapp. Easily doable even without front-end experience)	2	0	13953	663
83235	April 04, 2021	Typical Columbia CS professor that puts more effort into making their class difficult and catching cheaters than they do with actually teaching. Avoid if you can.	you have to literally teach yourself this entire class if you want to do complete any of the work.this teacher is totally useless, I'm not kidding.	7	4	4221	4251
83236	April 04, 2021	Painful, painful class. Do not take it if Max Helman is the head TA.	Very heavy lol. Rn we have 2 weeks before finals and 3 more psets due, 1 fat final project, and our final.	67	34	13703	4079
83244	April 06, 2021	I have a lot to say about this class, some of which is in response to what has already been said. I'll try to keep my argument structured and evidenced and give my final review at the end. For context, I'm an undergraduate junior who's already taken enough 4000 level classes in the department to feel confident vouching for these opinions. \n1. First things first, I agree with the other posts on the disorganization and intense workload of the class. Analysis of Algos is one of the most intense workload classes I've taken at Columbia (not the hardest, but a lot of work). It would've helped to have a reasonable routine for problem sets and for quizzes/readings, and it is really troubling that this was not followed. I agree that as a class, it's insane that we have to deal with this in the middle of an online sem. It's also crazy how a little bit of everything counts, so you cannot really slack off on any parts. The lectures are very fast, and it's not possible to keep up with the class at all points of time, with the readings the core resource in helping to follow. \n2. I do not agree with the assessment of the TAs, and especially name-dropping of the TAs in the post -- it's unfair and gives a very biased view of what happens in class. In my opinion, Max Helman and the team (despite their quirks) have done their best to be helpful. I think the grading is a bit too harsh with too many requirements, and rubrics need to be more precise, but this is common to most Algos sections. Previous posts mention that its ridiculous to have 3 hws, a project and a final in the final weeks of the class and I fully agree, but it's worth noting that the students voted to have a project to take the weight off of the final, and that the TA team orchestrated that the request was heard. I too voted for the project and it was a bad decision in hindsight, but this was not a TA decision to add more work. In my opinion, the TA team has been resourceful and responsive on Piazza despite being uncertain from time to time about logistics which I doubt were in their control. I had many instances asking for readings + homework, and was told that this decision had not been taken on a professor level despite them following up. This brings me to my final point:\n3. Christos Papidimitriou is a legend of the CS world. He teaches this class once in a while because he feels like it, and out of a pure passion for algorithms. The passion is apparent in his fast-paced lecturing style and the breadth of his syllabus. It's very rare to have a professor who's written the textbook of the class, and even rarer to have one of the smartest people in the world as your Prof with the crazy CS network Prof. Christos has: including the likes of the founding members of Google and Microsoft and several dozen Turing Award winners and award-winning textbook authors that are his friends. He has contributed to evolutionary biology as he has to game theory, to complexity theory as he to database theory. I think when people sign up for his class, people are looking for the experience of learning from a 'famous' professor. And I think the disorganization in the class is purely a consequence of the same: he's a very busy person who wants to say a lot about a lot of things. This by no means is trying to say it's ok to not pay attention to the requirements of the students. As I've said before, I disagree with how lectures and organization for the class went. I just think that the status of Prof. Christos's achievements along with the fact that he infrequently teaches the course means that the structure can get a bit haywire, not as a consequence of TA involvement but rather purely as an artifact of everything he wants to cover and how he relays this.\nFinally, I want to note all this is true of a zoom semester. There's close to no interaction in the lectures or breakout rooms and it's so easy to fall behind in class, after which the mandatory attendance requirement means that loads of people attend for the sake of it. naturally, the online learning environment does not lend itself to question answering beyond those that are already confident of the material and this contributes to the issue. I would not generalize from what I've written above or what others have written of the Spring 2021 iteration to beyond the online medium. \nFinal outcome: \nAgree with: heavy workload, fast lectures, disorganized content\nDisagree with: evaluation of the intentions and commitments of teaching staff. I think they've tried their best to help through the semester and the haywire experience is more a consequence of the general direction of the syllabus + online medium.\nSummary: take this class if you want the experience of having prof. Papadimitriou as your professor and want to flex about it for the rest of your Columbia journey and CS education career for when he wins his next big award. Don't take it if you expect light workload + easy psets related to the core algorithms taught in a more traditional algorithms sequence. Don't make a decision on whether to take it from looking at the TAs, but instead do so based on your expectations for the class. I doubt a change of staff will do one bit to alter the direction Prof. Christos takes his syllabus and expectations.	Weekly psets: between 5-15 hours a week with the average taking 10 hours\n2 exams (midterm, final)\nbiweekly quizzes + readings \nfinal project on an NP-complete problem and its heuristics\nmandatory "participation"	31	54	13703	4079
83245	April 06, 2021	DO NOT TAKE THIS CLASS!\nExtremely disorganized, time-consuming, and boring.	Not hard but time-consuming and unrewarding.	14	2	350	4902
83270	April 07, 2021	The review dated June 09, 2020 is probably the most accurate review of this class imo. In short: Blaer is a lovely, hilarious teddy bear that I want to befriend irl but he isn't the most outstanding Professor.\nI think that Blaer can choose better TAs tbh. There are several TAs who are frequently arriving to their OHs late/ forgetting to attend their own OHs. Furthermore, some of them don't bother to refresh their memory on the current topics/homework. That being said, Bo is the most amazing TA I've ever met! He taught me to approach Blaer's data structures class in a more lighthearted manner. I will miss Bo after this semester!	5 sets of programming + written homework [50% of grade]. Lowest set dropped. HW3 is the most challenging, but it's doable with effort/OHs.\nMidterm: spilt into 2 sections (1) multiple choice/fill-in-the-blanks questions and (2) written/programming [20% of grade]\nFinal: same format as midterm [30% of grade]	10	6	3409	4
83298	April 10, 2021	I personally like it a lot and will highly recommend it, but I will provide some context.\nContext: I take some courses in physics (quantum mechanics), math (abstract algebra), TCS (complexity theory, algorithms etc.), so I'm quite conformable with proofs, abstract concepts, and quantum weirdness.  Also due to these experiences, I get pretty accustomed to learning by myself via notes from class (or textbooks). So given these, I still feel the class is a relatively hard one.\nProfessor Henry: Absolute nice and approachable. I believe he is the only professor currently specializing in quantum computing (a lot of big names probably also research on these, but I guess it's not a thing in their times and they don't do courses on his.) He is knowledgeable about the field, but perhaps due to his age and also the online format, I guess the lectures can be somewhat unstructured. Also, I believe he has never taught the topic to an undergraduate class, so he might have a slight over-expectation for this class.\nLectures: Amazing and exciting! Quantum computing is so different from classical computing that you will feel like you are studying the frontier of science, and indeed we learn about all basic quantum computing stuff you probably heard from pop-science articles (Shor's prime factoring, Grover search, quantum teleportation...), rigorously. The downside is the materials are quite dense and I can imagine many students will feel a but overwhelmed (plus a bit unstructured mentioned above). I believe the class will get even better when you guys take it given Henry will get more experienced\nPsets: there are only six psets (a pset0 for entry test and 5 normal psets) with no exams (originally the final exam is an additional pset but canceled). They are on average quite long, and one or two of them are quite hard (need to think hard). Many questions correspond to derivations that we don't have time to go over in class, which I like. Many other questions map to research papers in the field (I guess important/foundational ones) as an extension to the class material. Professor tries to guide us through the process in the psets, but they can be still quite hard (even when I find the corresponding papers) and take some time. But overall, I like them and I think they are very informative, useful, and fun. Like the lectures, I believe the psets will get updated and become much more manageable and even more fun.\nOverall: hard class(for CS students who haven't done a lot of theoretical classes), but very fun. Plus, I believe it will get even better in the future.	Six psets (a pset0 for entry test and 5 normal psets) with no exams. Can collaborate (discuss) with others. For each we have about 2 weeks to complete.\nExtra credit: scribe lecture notes, or edit Wikipedia page on quantum computing (which seems really fine but I haven't done so)	6	0	14137	7765
83314	April 12, 2021	Well taught course, like the others claimed. Very humorous, nice and resourceful professor!\nThe only thing is that I don't find the topic too interesting, comparing to courses like computational complexity or information theory.	Five psets, one midterm, one final; psets are challenging puzzle-like problems, which are quite fun	2	0	1724	462
83316	April 13, 2021	What is there to say about AP that has not been said already? This class is very hard. The material was only slightly harder to grasp than Data Structures but the workload was about 1.5 times as large.\nJae is an excellent lecturer. He is very efficient in class and doesn't go off on tangents. You will learn the material if you put in the effort, he isn't out to trick or 'get' you.\nJae is very serious about cheating so definitely don't try any of that, look him up on Reddit if you do not believe me.\nOverall, you cannot avoid the class as a CS major/concentrator so you're going to have to take it anyway. The class isn't easy and is very annoying and frustrating at times, but is extremely well put together and taught.	A lot. 7 Labs that will take between 5-20 hours apiece. A few pre-recorded lectures assigned as homework. Two midterms and a final that are brutal, but they are brutal for everyone (averages in the high 50s) so they don't matter when your final grade is calculated. The class is curved.	3	0	3509	4758
83322	April 14, 2021	Bland professor, with unengaging presentation and informative slides that capture a handful of core NLP algorithms and concepts. You are better off not attending the meaningless lectures that include little elaboration of slides, mundane anecdotes/tangents, and students trying to show off through their questions.\nA standard course that requires medium to little effort and teaches useful information, however the course is incredibly boring to attend - despite how interesting the subject is and its applications can be.	Homeworks are straightforward requiring only a few hours, and exams are also easy to prepare for and from algorithms/contents covered clearly. Note, downgrading is common with even a 94 translating to A- floor, so adjust grade expectations accordingly.	2	3	13810	4903
83323	April 14, 2021	A useful course in terms of the material being applied to software development and industry. However, the assessments in the course are very poor, requiring little effort, but with arbitrary outcomes. First, the quizzes are very detail-oriented and require quickly searching through the books - with lots of subtle tricks. Second, the project is graded quite harshly, for example in our class the average was 80 with 75 low and 85 high, lowering everyone's grade as it was a big part of the grade. So don't expect a great grade.	Incredibly light, 30 minutes a week for the quiz, 2 hours lecture, and group project easily done in a few hours.	0	0	13463	7300
83347	April 15, 2021	LMAO how much are we willing to bet that one of the butthurt TAs wrote the review from April 6? Itâ€™s obviously a bullshit review made to save face.\nAnyways, all the other reviews from 2021 are completely accurate. I agree that Christos is probably a nice person, itâ€™s just his lack of organization and terrible TAs that make this class trash. The format of a Zoom semester plays a hand in it too, but I honestly donâ€™t think things would be that much different if we were in-person with the same TAs.	Heavy. See the other reviews from this year	28	9	13703	4079
83365	April 18, 2021	This was a truly horrible class. Do not take this with Papa, whatever you do. Just because he's famous doesn't mean he can teach or explain. Insane workload, lots of it not on important/relevant topics to what most people actually care about algorithms for - interviews.\nDo yourself a favor, take this with literally anyone else. Better yet, pray that you have TAs that care enough about students to change the direction of a terribly run course.	literally stupid. see other reviews.	13	5	13703	4079
83369	April 19, 2021	Do not take this course with Ross unless you are willing to do the extra work to understand his disorganized lectures/teaching-style. He is not the best lecturer and lots of textbook reading and youtube video watching had to supplement his sub-par efforts, which is personally not my way of learning since I like to have clear lecture notes. Still managed to do well-ish in the course, but I feel like the drain on my time was not worth it if there are better profs out there. Also do not do the coding path for the project if you don't have the most comfortable with terminal and web dev stuff!!!! They do not really give you a clear tutorial of how to connect a front-end html web page to your back-end database, and it was really hard to figure out how to connect the two in my opinion.	4 homeworks (kinda long)\nSemester project - split into 4 assignements; has coding and non-coding paths\nA midterm and final (that were 24 hr open book during pandemic times)	3	0	47	NA
83373	April 19, 2021	I remember wondering if I should take this course because all of the old reviews, but I am very glad I chose to take it anyway! I don't know if he has changed things, but this course was my favorite all semester and was not a problem. I really like Dear's teaching style, and the hws were never to hard to finish and he gave us plenty of time to do them. Also, TAs had plenty of office hours, and they would literally walk you through the problem step by step if needed. Labs were a bit more difficult because they were pretty rushed, but prof adjusted and gave us the whole weekend to complete them which really helped out. On hw and labs, averages tended to be high, the midterm was a bit harder bc of the time crunch, but people did not flunk for sure. Overall, one of the better SEAS courses in my opinion.	6 hw, 6 labs (held on Fridays)\nmidterm and final	6	1	13639	3992
83378	April 19, 2021	Professor Lee is a great lecturer. But this course is notoriously brutal. \nThis class is designed as a conjunction from the C programming language to advanced things such as operating systems and computer networks. So if you ask what I learned from this class, I'd probably say, nothing? Mmmmm, not really, a little bit of everything: OS, TCP/IP, database, etc. \nJae did really good in lecturing, and it's quite amazing how he just linked all this "everything" together. I don't need to explain this point since this is basically a consensus from everyone. You will like his lecture and learn a lot here! \nBut, the bad thing about this course is grading. Nobody wants to spend more than 25 hours a week on this class and only got a B, right? What you learned matters, for sure, but how much your input and what the GPA is also matters. I just can't understand why Jae does not really see this point. I almost spent half of my study time studying this course, but what I am expecting is a B/B-. I just keep on saying that it doesn't matter, at least I did learn something. But the reality is that the grade was, is, and will be harsh. \nJae said, yes, somebody learned this in advance, and they will surely do better and get better grades, though he doesn't encourage people to do so. So the unfair part of this course is, it doesn't award hard work, it awards knowledge. If you learned this, never go to the lecture, did everything perfectly, and you will get good grades. If you learn this the first time, you are not likely to end in A range anyway. \nI am just a normal guy, who never learned CS in high school and expected to study hard and do well in college. I just don't understand where all those crazy guys come from! They seem to know everything already! I want to get good grades as much as those guys! If every class in Columbia is designed like this, I guess I will never find a job with my GPA. Grade fxxking matters! Why can't he just curve the grade slightly better! \nI literally feel sick about how harsh the grade curve is, and it DOES NOT FAIRLY represent my efforts in this class! But lucky as I am, Covid 19 allows me to PDF it. \nWith regard to whether or not you should take this class, I mean, CS guys don't really have a choice? Right? So good luck with it!	Super Harsh!!\n7 labs, 1 dropped. 35% \nlab 1-3 takes 5-10 hours based on your programming proficiency. Basically reviews the basis of C, pointer, data structure. \nlab 4-7 takes definitely more than 10 if you still expect to finish it, so start it at least 3 days in advance! I almost spent 30 hours in lab7. The crazy thing about labs is I am trying every piece of my nerves and got around 90, but the median of almost every lab is 100! I don't believe I am the silly guy in the class but the grade is just crazy. \n2 midterms, super hard, 20% each\nthe fork bomb completely messed up my mind, though it is no one's fault. \n1 Final, 25%	19	0	3509	4758
83382	April 19, 2021	I really do not know how people got through his lectures in person. His zoom class was a disaster, from the TAs to the exams to homework assignments. Awful and painful class. It's funny that he confuses himself a lot of times, and then ask "IS IT CLEAR?" How the hell it is clear when you don't even know what you are talking about!!! He really is a super nice and approachable professor. He smiles all the time and answers your questions and replies to your email, but that really doesn't change how bad this class is.	10 Homework\n1~2 weekly quizzes you never know when they'll post\nAttendance but no one pays attention\nProject voted by students who have no idea what they are doing\nMidterm/Final over zoom with camera on	12	1	13703	4079
83384	April 19, 2021	Echoing the most recent review (from January 2020), this course lives up to its reputation and is a ton of work, but is very rewarding. The workload is still the same 6 homeworks involving written and programming, with the last 5 programming projects done in groups of three. Averages on the hw are regularly around 50/100, and they are a serious time commitment. The rubrics (especially for the early hws) are very difficult and you need really robust error checking to get a good grade. Get a good group and start the homework early, or your projects will not work. The kernel development can be very confusing, and even if you know what to do, you will run into random quirks in the kernel code that takes forever to debug. In general debugging is very difficult. \nSo the course is definitely very difficult. I took it during a relatively light semester, had a good group with one member, in particular, carrying a lot of the work, and this class still made this semester pretty stressful. The first homework which is individual involves writing a shell program, and I would say is as hard as the harder AP labs (maybe slightly easier than lab 7?), and the next five get way way harder (though you have a group). I also agree with the 2020 review that I don't think Jason's class is that much harder than Jae's, but Jae seems to give you a little more guidance in how to write the kernel code for the hw. Jason's lectures are sometimes very high-level, but for some of the later hws, he definitely shows in class the parts of the kernel code you need to understand to do the hw. Understanding the kernel code is just hard.\nBut overall, this course also makes you learn so much and makes you really understand how your computer works. If you are an upperclassmen CS major who still feels like you don't understand how computers actually work and did decently well in AP, I really think you should try to take this class (either this section or Jae's). You will learn a ton and become a much better programmer, both from doing lots of low-level programming stuff and from how much better you understand how computers work. If you struggled in AP, though, this class will be very challenging and you should take a few more programming intensive upper-level courses before taking this one. But if you're a CS major who actually wants to have a decent grasp of how a computer works (which as a CS major hopefully you should!) take OS before you graduate.	1 midterm, 1 final (during online school, midterm was programming based over github)\n6 homeworks, each with 5-6 written questions and a hard programming project (many many hours)	6	0	45	2384
83393	April 20, 2021	There is absolutely no reason you should take this course unless you want to have the most miserable semester of your life.	Insane. Could be 15 credits on its own.\n4 insane homeworks.\nMidterm and final are easier than the HWs, but still hard.\nExpect to spend AT LEAST 60 hours per homework.	39	3	2142	4903
83397	April 20, 2021	Hands down one of the best CS profs I've had. He's very nice, his lectures are very straightforward, he answers piazza posts very quickly, and explains the concepts very well.\nIf you're not a fan of theoretical math and enjoy more plug and chug kinda math, then yeah this class will be a bit more difficult but as someone who struggled my way through Multi, I was not expecting to take this class and get As on all the assignments.\nI also liked how tethered this class was to AI / ML, (especially the labs) and it felt like I was learning practical math that I'd actually use someday.	6 HWs\n6 Labs\n1 Midterm 1 Final	10	5	13639	3992
83413	April 22, 2021	Just want to mention, with overwhelming bad reviews, the first two reviews (which happen when everything is in person) are overwhelmingly good. I actually take this course due to those reviews.\nI do think Professor Papadimitriou is nice and knowledgable, and I don't know what happen to the course for this online version. \nJust want to point to the reviews for in-person course so that people can have their own judgement.	See other reviews.	12	20	13703	4079
83487	April 29, 2021	Please stay away from this class! Henning seems like a nice guy but his classroom delivery is horrible and it is very difficulty to keep up with his lectures. You would be going through a lot of facts about computer networking but it's almost impossible to understand (or even memorize) them all. The homework is very time consuming and uninteresting. Exams are impossible (but I think this is due to the fact that the exams are changed to open book format due to the COVID situation; the professor is making the exams a lot harder than usual to make up for making them open book).	5 homework which take up 50% of final grade. A lot of them seems to be questions which he personally designs and many of us don't understand what he's saying at all. We need to ask for clarifications over and over again until the day before the ddl.\n20% midterm and 30% final	13	0	350	4902
83416	April 22, 2021	Not only is Rocco the best educator I have come across at Columbia, he is also downright hilarious. I would consider taking a course simply because it is taught by Prof. Servedio. The TA's were also very helpful and solid peeps.\nWhether you are interested in learning theory or not, the course really makes you go back and forth between intuition and math, translating one into the other - this is really valuable for anyone in a technical field and is also just super interested in my opinion. \nRocco makes complex theorems accessible and sets p-sets in such a way that they seem impossible until you have one little creative idea that seems obvious in hindsight and manage to put that down as an expression. I haven't taken many technical courses that have felt like they needed a good amount of creativity like this course did. \nAt the end of the course, I know a fair amount more about learning theory, but I think the course has taught me more about the process of problem solving and deconstructing more complicated ideas (and bounding things!).	5 psets, 1 midterm, 1 exam. The psets are challenging but not overly long - if the deadline is looming the OH's should set you on the right track. Not for the mathematically fainthearted (but not brutal either).	3	0	1724	2287
83419	April 22, 2021	This was the most enjoyable class of the semester for me this past spring. Professor Gravano was extra organized for everything (lecture notes, exam expectations, project specs, etc.), the content was very interesting, and the projects were really fun!	3 Python projects with a partner (all very clear, doable, and cool)	16	0	375	4956
83424	April 23, 2021	If you're going to take an intro to AI class, Dr Salleb-Aouissi is the one to take it with. Her presentation of materials is concise and she usually goes over each concept twice, and they build on top of each other. She's a clear lecturer and her slides are pretty in-depth. She's always available for help outside the classroom as well, as are the TAs. Some TAs are hit or miss as they're undergrads.	5-10hrs/week, mostly on the coding assignments. If you're a CS major, they're medium-hard, otherwise I think you'll spend a whole lot more time than that on them. The conceptual homeworks are a breeze if you attend the lectures.	1	5	13076	26
83428	April 24, 2021	One of the most rewarding courses I've taken at Columbia. If you're interested in Robotics and have some background in linear algebra and probability, you'll learn a lot about robotic algorithms and insight into how they work in the real world.\nThe class covers topics ranging from Bug Algorithms, Localization, path planning, etc. to more details on the kinematics of robot motions, etc.\nDear is master class in lecturing and the TAs are very helpful as well. Would highly recommend it!	Depends on the week. 5 assignments and a final. Assignments varied in difficulty, around 10 hours a week spent on both. I would recommend starting them early as they can be tricky at times and require understanding of the material	6	1	13639	2403
83430	April 24, 2021	Do not expect any empathy or understanding from Prof. Verma if you make even a small mistake--I got a 0 on a homework worth 10% of my final grade because I misread something and tried to turn it in literally 10 minutes late. The homeworks take forever to do, and the exams are pretty challenging. That being said, he is a good lecturer. However, it is not very applied--we go through a lot of proofs of random things, and code algorithms from scratch, so if you're looking for that do not take this class.	4 homeworks which each took me at least 12 hours, 2 exams	1	2	13496	1921
83440	April 25, 2021	Xi Chen is a gem in the CS department. He not only makes occasionally-dense proofs comprehensible, but he motivates them such that you actually want to follow along and hear what he has to say. CS Theory was this dreaded class, but it ended up being one of my favorites this semester. Maybe it helped that his general attitude was very understanding, e.g. "I know this doesn't make a lot of sense but it hopefully will in 5 minutes," said in a way that was in fact understanding and not condescending/outright false. He is understanding just as a person also (accepted HW submitted past late deadline, but don't push your luck).\nThe material is not the easiest of course, but, as with many logic/theory things, if you read the book, pay attention in class, and treat the whole thing as sort of a game, things should be OK.	5 HWs, 1 dropped, 20% (~3-8 hours, reasonable difficulty)\n1 midterm, 40% (reasonable)\n1 final, non-cumulative, 40% (a bit harder)\nMy advice is, get perfect scores on the HW and study hard for the midterm, as its material is easier and is non-cumulative.	6	0	12932	234
83441	April 25, 2021	Ok I know this class was a bit contentious and it wasn't perfect but I actually liked it???? I think 90% of this had to do with Prof Ross's Australian accent. I cannot confidently say I would have the same feeling if Prof Ross did not have an accent. But I thought his lectures were clear and he had a good command of the material. I thought the homeworks helped to enforce the lectures and they always reflected what was taught in lecture, there were never any surprises except for when we had to use formulas in the textbook but Prof Ross made it clear that was the case. The TAs were kinda bad tbh, there was one standout in my opinion and the rest were hit or miss. As long as you stay on top of lecture and homeworks, you'll be fine. I learned a lot of really relevant skills - before this class I didn't know how tf to route db calls through a web app but that's literally what you do for the front end portion of the project and that's also literally how web apps are built!!! Pretty cool. The only downside was yeah if you don't have prior experience with flask + html (I did not) then you're going to be looking up a lot of stuff if you choose to do the front end portion of the project. But it's worth it because now I feel like I have an infinitely larger appreciation for how this stuff actually works. Prof Ross is not the most approachable professor ever but he is helpful if you go to his office hours for questions or chat him on Piazza.	4 homeworks, pretty long\nProject with 4 components, generously graded (majority would get like ~95% according to courseworks)\nMidterm, open book, 75 min to complete\nFinal, open book, 24 hours to complete ... and you need the hours lol	0	0	47	664
83495	April 30, 2021	I thought Professor Stein was a pretty solid professor for this class (and probably the best option based on what I've heard about other Algos sections this spring). The workload was reasonable, the lecture slides were very clear, and the grades (seemed to be) reasonably curved.\nHowever, maybe it's just me, but I found myself pretty irritated with various aspects of this course. Some homework/exam assignment problems were nearly undoable. The lecture recording audio quality was horrible (up until it was fixed during the last couple of lectures). And last (and definitely) the least, the TAs. At best, they were unhelpful; at worst, they were troublesome. The midterm solutions file they posted was literal chicken scratch containing incorrect solutions, and I found their grading to be all over the place. I genuinely hope other students in the class had a better experience than I did with them - it wouldn't be hard to beat at all.	Not much, but expect hard problem sets.	10	0	1342	4079
83442	April 25, 2021	Professor Rubenstein is an extremely intelligent guy who tries and usually succeeds to explain concepts well. His slides are very helpful, and for the most part the course's material is logical enough to compensate for his scatterbrainedness. Do I wish he were a little less repetitive? Sure. Are you going to get a better fundies experience? Probably not. Is the material very fair? Yes, except for that one MIPS programming assignment (if you know, you know). \nNot much to add here from the previous reviews. He is rightly famous for his problems, but they're a bit like a hibachi experience: interesting and worthwhile on the first visit, but essentially all the same. (My metaphor is lacking, you say? Good. So are Rubenstein's.) This sameness should work to your advantage: do the homeworks THOROUGHLY even if they're only 10% of your grade, do all the previous midterms and finals, and you should be good to go. Many classes don't reward time and dedication. This one does. My purest joy this finals season was finding the "trick" in one of his problems and getting a third of my points in ten minutes.\nGO TO YOUR P-CREDIT. THAT'S 30% FREE POINTS.	10% HW (leniently graded but high payoff to thoroughness)\n30% midterm (fair)\n60% final (also fair)\n------------------------\nHW+MT+Final = Score\nThere are weekly P-credits. Your final raw grade is as such:\n100P + (1-P)*Score, 0<0.3\nIn other words, your P-credit cannot hurt you, only help you. A good P-credit can boost your raw grade one or even two notches. On the downside the average curves to a B-.	3	0	2427	4251
83450	April 27, 2021	I came from a stats background with a CS background, so I don't think this course's difficulty for me resulted from a lack of preparation. \nThat said, I found the difficulty of this class to often be absurd, and that's coming from a student with above a 4.0. The problem sets are interesting but I found them to be so difficult that doing well on them was mostly a matter of having time to go to office hours for the solutions. Moreover, they are extremely time consuming, and I would argue excessively so for a 3 credit class.\nThe midterm was not too bad, but Verma corrected that mistake with the final which was quite literally the hardest exam I've ever taken in my life. With that said, the class is curved so on net I guess that doesn't matter much. \nTo end on a good note, lectures are good and I feel I learned a lot, even with some prior background in ML. Verma is a very good instructor when it comes to lecturing and explaining proofs and concepts. The only knock I have on the lecture component of the class is that we didn't get to HMMs which were the part of the class I was most looking forward to.	4 problem sets very time consuming (I don't think 20 hours or more is uncommon)\nMidterm and final both very hard, but also don't require too much studying if you know the content well	3	0	13496	1921
83461	April 28, 2021	Don't take this course.\nThe grading is asinine. The final project is 40% of your grade and the class average was a 73. The highest was an 83. So only like one team was able to get an A, and that was if they did really well on their other assignments.  We met multiple times with the professor to get expectations and feedback on our project. He gave us positive encouragement and we thought we were doing great. Nope. He docked a ton of points because we didn't include things he never mentioned. The "detailed" grading rubric was worthless apparently. The entire class was caught off guard. We're collecting signatures to email the dean about it now.\nI'm currently going to end up with a B+, which is bs because our team worked our ass off on this project. The professor reiterated there's no curve.\nAlso the class is severely disorganized for a project management class. About 25% of the quizzes we took had a question with a wrong answer, so we had to mass email him about it. The guidelines for the written report said it needed to be 3-7 pages, but then a week before it was due he said it's expected to be 10-15 pages. The professor seems like a nice guy but was all over the place.	The semester is over and I honestly can't tell you what the expected workload is. Just don't take the class.	2	1	13463	7201
83462	April 28, 2021	"I'm a really big fan."\n - Satan	Hell	4	0	45	2384
83463	April 28, 2021	Overall, I wouldnâ€™t recommend unless you have a deep math and stats background. Prof Verma is a great lecturer and explains concepts very clearly. However, the exams and homeworks are so incredibly difficult and way beyond the scope of what is covered in lecture. The homeworks take exorbitant amounts of time and are nearly impossible to complete without attending office hours regularly.	Very high	4	0	13496	1921
83464	April 28, 2021	I think Edwards is generally a good teacher. His office hours are really helpful and his HW assignments and exams are reasonable (most questions are basically the same as the HW questions except for one or two. The slides are super helpful and it was a good class to take over Zoom because I was able to rewatch a bunch of his lectures if I was ever confused. He's a pretty good lecturer, except that on Zoom he lets and encourages people to make random show-offy comments with inside CS jokes that are distracting, annoying, wastes time, and makes everyone who doesn't get them feel dumb for not knowing the conventions of some obscure language. We get it, Matthew Ottomano, you know Haskell.\nIn terms of the group project, it's very tricky, and you don't really get taught the material you need to do it until after you had to do it, and even once we learned the theoretical part of what we were doing, it was really hard to translate that to what we were implementing. Basically, you're very much on your own for figuring out to add features to your language beyond a basic C like language you're given as a starting point. For our group it wasn't too bad, but it's mostly because one of the people in our group clearly understood everything way better than the rest of us did and did a ton of the work. I'm not saying the rest of the group were slackers, everyone tried hard and put in a lot of hours, but we'd struggle to pair program a feature for hours and then the other person in our group would have just fixed it and also miraculously added a bunch of other features by the next time we talked. That said, the group you are with is super important. I don't have great tips about how to find a good group. Someone who you think is super smart is not necessarily the best teammate. It helps if you've worked together before and understand their workflow and work ethic. It's pretty cool to have a finished product by the end, but I don't even know how much of it I understand beyond the features I implemented. Actually even those I feel like I kind of stumbled around in the dark in making them, so I don't know if I actually understand them either.\nFinally, the TAs were not great in the class. One was fired apparently half way through the semester, some didn't seem to know Ocaml or really how to help with the project. I think it was partially because Edwards hadn't taught the class in a while, so he didn't have a super solid group of TAs that had taken his version, which I understand, but was kind of frustrating. \nOverall, this wasn't the worst class, and I would generally recommend taking it with Edwards. Your group will be the main determining factor on your experience taking the class, though.	3 HW assignments (short and manageable), 1 Final, build a compiler (this will definately take up the most of your time). We originally had another HW and a midterm, but they were removed to make the timeline more manageable.	4	0	1637	3105
83465	April 28, 2021	I think Ferguson's other reviews sum up his class pretty well. He is a very nice guy. I have a learning disability and he reached in the very beginning the semester about it, which meant a lot because I feel like I usually have to fight to get the accommodations I'm supposed to get (It's surprising the hoops you have to jump through with some teachers to get the extra time accommodations for tests that DS has already decided you need).\nThat said his homework will take you forever. They aren't even that hard, just very tedious. There will be a bunch of typos. TAs and the Prof will give you different answers to a clarification question. Questions are often answered in one long Piazza thread instead of separate posts, which makes it annoying to search for. The lecturers are pretty boring and often have only 10 minutes of useful content. OH and the informal recitations with the Professor are basically mandatory. \nI also haven't gotten my grade back yet, but according to everyone I've talked to, even the TAs, most people get a grade in the A range... I just don't know if the time I had to sink into the class just to get it all completed (not even well lol) was worth it.	4 Programming Assignments (some written questions too, huge time suck), 1 Week long take home midterm and a timed camera on Courseworks midterm, 1 week long take home final	4	0	6653	NA
83592	May 15, 2021	Would recommend, but not for the faint of heart. Perhaps the most difficult class in the cs department. I took this during covid so I had the time to devote to this class to get a decent grade but under normal circumstances this class would probably kill your social life. Gives you good fundamentals to attack deep learning, although arguably a lot of the content is useless for that if thatâ€™s what you want to get into. Also for the class competition everyone uses dl techniques so be prepared for that. The homework is hard but very doable if you have the ma background, you just have to understand what the problem is asking. Verma is a good lecturer but not very approachable imo.\nThis class requires high skill in math and programming. If you donâ€™t have that, reconsider. If you do, get ready to lose your social life, although if you are good at math and programming you probably didnâ€™t have one to begin with.	4 assaignments, very wordy but somewhat simple solutions	0	1	13496	1921
83475	April 29, 2021	OMG NO! AVOID!!!!\nIf getting a B is your goal, this is your class.\nSo supposedly this class has good grading. This is SO WRONG. Final project takes up 40% of the grade. He never gave out any detailed rubrics or samples (although we repeatedly asked), and gave groups grades from 63 to 83. Mean is 73. Yes the mean is B-, and he basically said 'everyone had a good semester, B range is a good score'. \nGroups tried hard (working together for days on end) to prep for final project, and he was picking bones from eggs to artificially lower grades. Barely anyone got an A due to the ridiculous grading of final project. Impossible to get an A not because people didn't try hard, but bcs he didn't want us to. \nWhat a joke! A prof that shows up late to classes, doesn't prepare for his course giving out B grades to his hardworking students saying it's a great score for them. Even strict, tenured professors give out much better grades than him. He doesn't deserve to teach at Columbia. Please get rid of this man.\nAfter all, the CS department doesn't need a mind-reading class.	Lots of meaningless and busy work - reading (1-3 hours), quizzes (half an hour), discussion posts (1-3 hours, needs to be long and citing outside sources); final project - prepare to work with your teammates for days on end and to try to figure out what he actually wants. Learned nothing from this class and got the worst grade I've gotten at Columbia.	2	1	13463	7201
83477	April 29, 2021	OS with Jason Nieh is the most painful yet rewarding studying experience I've ever had in university. It is also one of the few moments when I feel Columbia is worth its tuition fee. AP turned to out be a very easy course for me and I grew so arrogant that I thought the rumors out there about the insane workload of OS are just rumors. But these "rumors" are real. THE WORK IS INSANE.\nNieh's lectures are pretty clear, but they are not easy to follow if you don't read the textbooks or kernel codes in advance. I didn't do the readings for some lectures and I had no idea what he was talking about after he went to "out handy dandy source code." I agree with the last review that he did try to talk about things at both high and low levels. Most of the kernel codes he walked us through did help with the homework.\nThe Homeworks are just everything they say. Homework 1 and 2 are easy. Homework 1 is a simple shell and some assembly, the number of hours I spent was similar to Lab 7 in AP. Homework 2 is adding a system call and it is basically used to familiarize us with kernel programming. But HW3-6 are crazy. Each of them easily took more than 40+ hours. Textbooks didn't help. Google didn't help. Reading documents didn't help. Lectures didn't help much. The only thing that helped was tracing thousands of lines of Linux kernel source codes. Debugging was very difficult in the kernel. Every time I triggered a deadlock, my heart would freeze together with the system.\nI seldom went to office hours for other classes but I did this about twice a week for OS. Xuheng Li is one of the cleverest and most careful TAs ever! However, the grading of homework will only ruthlessly use a script to test a bunch of if not all the corner cases and deduct a lot of points. The average grade for HW3-6 is around 50%.\nA final word about the comparison between Nieh and Jae: they are both great teachers but their styles are different. Based on my experience taking AP and visiting his OS website, his lectures and homework instructions seem to be more hands-on. His OS section also covers some advanced user-space C programming, which is not touched in Nieh's section. I guess taking OS with Jae will have more work to do but the process could be potentially smoother.	6 Homework assignments. The first two are OK, but 3-6 are insane. HW2-6 all require kernel programming, but this semester we didn't do use Android.\nMidterm & Final: very difficult. Averages are both ~45%.\nSuggestion: take this class in a 4-course semester. If you are a CS major, the other 3 courses had better not be something like ML or Algo	4	0	45	2384
83481	April 29, 2021	Someone posted this on Columbia Confessions last semester and it was the most accurate depiction of my experience in the class, so I thought I would share it here as well for future students:\n"Itâ€™s 2035. You receive an email titled â€œCOMS4111 Final.â€ After spending 3 hours figuring out how to install a Python 3 emulator, you finally manage to open the Jupyter Notebook. Question 1 has 27 parts. The instructions have been removed in order to shorten the exam length. You get another email from Ferguson saying heâ€™s holding office hours 3 minutes before his wedding. A single tear rolls down your cheek. â€œJust like the industry,â€ you whisper."\nLet me give you a quick high school style literary analysis of this passage to help those thinking about taking the class understand better. The author uses hyperbole when they write "2035" as a reference to how late many of the assignments, grades, etc. are released despite the teaching staff claiming they will be released the next day. The author then goes on to evoke the pain of setup in this class: "spending 3 hours figuring out how to install a Python 3 emulator," as much of your time will be spent fighting with your computer to just get the software you have to use connected and running. The assignments are very long with many parts, and the instructions are very confusing, a point alluded to in the metaphor that the instructions are almost as if they have been "removed". As the author illustrates, office hours do happen at random times and you have to be ready to hop on the call at any time of day, and possibly you too will get the chance to hear about his girlfriend. The author then begins to conclude this masterpiece by emphasizing the visceral emotions one feels through the imagery of a teardrop. This effect is compounded by the author's choice to use the second person throughout the passage. Finally, you are left reminded of Ferguson's constant belief that the undefined aspects of the assignments and acceptance of most solutions as long as they work are "just like in industry". By using such evocative imagery, the author, dare I say the artist, is able to capture not just arbitrary details, but the human experience of taking Ferguson's class.  \nAll in all, it was a decent but very chaotic and time-consuming class.	4 HW Assignments (different depending on programming vs non-programming track. I feel like programming was a bit more work intensive, but not sure). Take home midterm and final. Also timed midterm. The timed final was canceled.	2	0	6653	664
83482	April 29, 2021	Don't listen to the haters. This class was fantastic. It was a bit disorganized sometimes, to be fair, but that ended up affecting my experience barely marginally.  If you're paying attention in class, you will learn so much.  Papa goes through a ton of material, but it's all very meaningful; we covered some really cool topics like game theory and quantum computing.  Papa is a living legend and you can tell.  He's an expert on these areas to the nth degree and knows how to teach it effectively and kindly.  Definitely an amazing teacher.  The TAs were honestly very good.  Prompt with Piazza questions, and as accommodating as possible.  Take this class if you want to put in a bit of work, but want to get a lot out of it as well.	1 pset a week, could take around 6 hours to complete.  BUT they actually help you understand the material and are enriching.  1 midterm, 1 final, and we had a project as well which was actually pretty fun.	8	17	13703	4079
83483	April 29, 2021	Great class.  Some issues with the curriculum: we spent way too long on things like DFAs, NFAs, and regexes, which are covered pretty fully in CST, which is a prerequisite for this class, so that was a bit of a waste of time.  We also spent a bit too long on covering code generation, which became repetitive, so we did have to rush a bit at the end.  But codegen is really important for the project, so it shouldn't be ignored, but spending ~5 classes on MicroC codegen was a bit much.\nEdwards is a great lecturer.  He's very funny and presents the material in a way that makes it very conducive to picking it up rapidly (or wickedly fast, as he would say).  His lectures were actually a joy to go to.\nThe best part of this class imo is the project, though.  One of the most rewarding pieces of work I've done at Columbia.  It really is a great synthesis of all the course material, and juts is a lot of fun to work on.  Start work early, and work consistently.  It will be a great time.	3 HW assignments, took 1-3 hours (not bad).\nMidterm cancelled for Spring 2021.\nFinal: 2 hours, taken at a time of your choice in a 24 hour window.  Heavily reliant on the honor code, which probably means a lot of people cheated, sadly (just speculating).\nProject: design a language and build a fully functional compiler for it in OCaml.  Ton of work, and hard to quantify just how much, but it's the work that is very much worth doing.	2	5	1637	3105
83484	April 29, 2021	To keep it short, Dear is a fantastic lecturer, has very clean slides, is very responsive and helpful, and had problem sets/an exam which were very doable in the scope of what was taught. The topics were very interesting, and the material is also applicable beyond just robotics, with use cases in areas like protein folding. The problem sets were due after two weeks, and always covered material from previous lectures, so there was never a lag between what the hw covered and what was taught. The final exam was basically a hw over a 24 hour period, and was worth 25% of the grade. I personally appreciated this--a rough night of sleep before the final won't be the end of the world. Also, from a personal experience, Dear was exceptionally understanding as a professor. Overall, this is a great class I highly recommend to anyone!	5 hws and 1 final exam	4	1	13639	2403
83496	April 30, 2021	Stephen Edwards is objectively an outstanding professor who made the online year a little better for me. I took both of his classes, and I thought he adopted to the online format very well (he makes great use of Zoom's chat feature for questions). He is incredibly organized, cares a lot about his classes and his students, and has some outstanding TAs (Ben Flin and Hans Montero were amazing). Not to mention, he is one of the only Professors in the CS department who actually tries to get to know undergraduates in his classes! I really appreciated this and feel like I actually know him now.\nOh, and did I mention that Prof. Edwards is absolutely hilarious? I think the quotes above will suffice, but his slides have great memes, his Facebook might be the most entertaining of any Professor's, and he is incredibly witty. If you enjoyed Donald Ferguson's snarky humor, Professor Edwards is for you; if you have a thin skin, you might want to stay away, since he will absolutely sass you back. I, personally, think it is wonderful, and I think most people do as well.\nAs for the actual classes, Parallel Functional Programming is an introduction to programming in Haskell. The first half is sequential Haskell and the second half is parallel Haskell. Haskell is nothing like other programming languages you have been exposed to (unless you have taken PLT and are used to OCaml), and it probably does warrant an entire course since it forces you to think in an entirely new way. There are 5 HW assignments and a medium-workload final project that you spend the last month or so on and do in groups of 2. I'd absolutely recommend this to anyone looking for a chill class, even if they aren't on the systems track (Edwards has said this is similar to a 41xx class).\nProgramming Languages and Translators is an introduction to Compilers, and for many students, functional programming with OCaml. I was at the advantage of having taken PFP beforehand so this wasn't a huge jump for me, but it is for many. You also learn some theory. There are 3 light-ish HW asignments, a final, and a very heavy group project that you do in teams of 3-5. Pick a good group!\nI believe both classes were curved to a B+, so it is very possible to do well. I cannot recommend Prof. Edwards any more than I already have; seriously, take a class with this man! If for nothing else, the memes are worth it.	PFP: 5 reasonable HWs, a medium final project in groups of 2\nPLT: 3 HWs, a final exam, a heavy final project in groups of 3-5\nNothing too bad	2	2	1637	3105
83497	April 30, 2021	As someone who had no programming experience before college, I was worried about being weeded out by AP ever since I got into Columbia. Despite its difficulty, Iâ€™m pleased to say that AP with Jae has only reaffirmed my passion for CS.\nJae is fantastic. He cut out the C++ content and labs 8-10, which made the course far more manageable. His lectures were clear and I never felt lost. And even though he puts on a serious face in class, heâ€™s actually really cool and hilarious if you get to know him at the Hackathon. All the TAs in Spring 2021 were extremely patient and helpful, which was assuring given that the TAs in earlier CS classes were often hit or miss.\nThe course is still a rigorous step up from the toy programming in Data Structures. After all, pointers, memory allocation, and network programming are naturally tougher topics. However, AP isnâ€™t the weeder that it was (and probably still is) known for. Itâ€™s true that the labs are longer, but Jae also gives plenty of hints during class, so you should always have some kind of entry point for each project. In addition, the specs are so detailed that you can guarantee yourself a perfect score every time.\nI took the class when the exams were still online. Theyâ€™re still the hardest part of the class, but I noticed that they were more similar to the labs than a lot of the sample paper exams were. This is probably why Jae always said youâ€™d get the most out of the labs if you did them all by yourself, and I would agree with his assessment. Yes, it sucks to stay up until 3am figuring out where your program is going wrong. But once you debug the error, your brain will be tuned to avoid repeating the same mistake in the future. You just canâ€™t achieve the same effect if you rely on the TAs to fix everything for you. If you donâ€™t go through that process yourself, youâ€™re going to struggle on the exams.\nAs for grading, I thought Jae had one of the most forgiving curves ever. For a "weeder" course, itâ€™s difficult to fail; the C- cutoff this semester was 12.456. It seems that the only way youâ€™ll fail is if you cheat or barely put in any effort.\nTL;DR: Itâ€™s a great class and thereâ€™s nothing to be scared of. Donâ€™t cheat, start the labs early, and youâ€™ll likely be fine.	HW0 + Labs 1-7 (35%)\nMidterm 1 (20%)\nMidterm 2 (20%)\nFinal Exam (25%)\nSee the slides from Jaeâ€™s first lecture for more about the grading and how the dropped lab is handled.	24	1	3509	4758
83498	April 30, 2021	In short, Computational Learning Theory has been my absolute favorite class at Columbia, and Rocco is the single best instructor I have had. This course is only taught once in a blue moon, and I strongly encourage you to take it if it is offered, regardless of your track.\nThis is not easy material. I'd say it is most similar in nature to Analysis of Algorithms, but it is definitely conceptually harder. The class is math/proof based; you will not write a single line of code, and some proofs take a few classes to walk through. Five problem sets (with five questions each) comprise 70% of your grade, and these are incredibly difficult, but also very rewarding to solve. Averages are typically in the 60s; the class is curved. If you try to look for resources online that might provide additional background, you will just find a research paper that Rocco wrote a few years ago.\nI could not imagine having another instructor guiding us through the material, let alone in such an intuitive and humorous way. Rocco's teaching style is to provide intuition behind an idea before digging into the math, and I find that this worked very well for me. Not to mention his incredibly intelligent and witty jokes that kept me paying attention even if the proof got a little dry! Plus, I do not know of any other Professor has a poster of The Hobbit on his wall or gives us exam questions about applying Machine Learning to Herman Melville novels (you will soon discover that Rocco loves Herman Melville). His TAs were excellent as well, and would monitor the chat for questions.\nRocco deserves his gold nugget and position as CS department chair. I will readily take any other course he offers. I'm heaping all of this praise onto Rocco despite getting a B+ in the class, which should tell you just how highly I think of him; I also know that I am not the only one with this opinion :)	5 difficult problem sets (70%) - 20+ hours each, but very rewarding to solve\nMidterm (10%, I wish it counted a bit more)\nFinal (20%)	3	0	1724	2287
83507	May 02, 2021	Ok first I took this during a COVID semester. With that being said, I personally don't think Edwards taught. He kinda just read off his old slides and circled some things. I also think we spent way too long on the wrong material and then suddenly material in the middle-back half of the semester was essential to the final project. It was hard to start parts of the final project early since we didn't know a lot of the material needed to actually build our language.	3 short homeworks that look easy but you can actually do quite poorly on them if you're not careful \nmidterm cancelled due to covid \nfinal exam \nfinal project (this is the big semester long build your own language project)	3	1	1637	3105
83520	May 03, 2021	Sahu sells this class as a mixture of hands-on, practical experience using Amazon Web Services, as well as the general theory behind cloud computing and distributed systems. During the semester, we were assigned 3 pretty meaty assignments involving AWS and its associated services. You can work with a partner on these, which I would recommend, but still expect to get bogged down in weird little bugs due to the alien set up of AWS and lackluster documentation. But these projects are pretty cool on their own. You get to build a recommendation bot, an image storage site, and a machine learning app, so there's a wide exposure to the different services that AWS offers. On top of this, there is a final project due around finals time, which was definitely stressful. There's also 2 pretty reasonable but time-consuming quizzes and weekly readings on abstruse technical topics that are borderline indecipherable to a newbie (mapreduce, google file systemâ€¦). While this class is a lot of work, no one's trying to trick you, and you'll probably get a good grade as long as you don't slack off.\nAs for the content, this class could open up a lot of opportunities for anyone interested in web development/cloud. AWS is an in-demand skill, and Sahu is not shy about sharing his experiences of students telling him how they got internship offers because of his class. The theoretical stuff was hard to understand but still worthwhile, and I definitely want to experiment with Hadoop/spark and Kafka more in the future. \nMy major gripe with the course is that it was somewhat disorganized, probably due to the shortened, online semester because of COVID. The deadlines for the assignments and project often got pushed around. The lectures themselves are sometimes unclear and meandering, and I was often left wondering how any of it was relevant to our homework. There wasn't as much direction for the final project as I would have wanted, especially since there were necessary topics (frontend development and authentication) that weren't covered extensively during recitations. There are also no credits for this class, so you'll probably have to spend some cash out of pocket for your AWS account. \nOverall though, if you have time for it and want to get experience in the cloud, I would definitely recommend this course.	on the heavy side, especially if you're new to AWS or general web development. 3 projects, 2 easy but long quizzes, weekly papers to read that you will be tested on, final group project.	1	1	10198	7022
83536	May 04, 2021	I didn't know Hagrid's calendar moves at a different rate than us mortals. When Hagrid says he will upload homework or post your grades at a certain time, expect that to take maybe about ten times longer because us mortals' calendars somehow move at a faster speed than Hagrid's.	.	4	0	3409	4
83541	May 05, 2021	One of the most disorganized courses I've taken at Columbia!\nThe professor provides an entire plan for the semester in the first lecture, but you can expect him to not follow it at all. Few examples of this:\n- He gave a distribution of the grades, and then during the lecture, he felt that he needs to add some more difficulty to the course. So he decided to add few research paper readings every week, and said it will carry 5% of the grade. But he never released the new split, and after a few weeks, he got bored and stopped giving questions on those research papers (Eventually none of those answers were corrected and those submissions carried 0 weight in the grade).\n- For the first assignment, he added an extra credit task. For the following assignments, nothing was released. When the grades for the 2nd assignment were released, one team had gotten 105/100 points, even though there was no extra credit component. On asking the TAs, they told us that one team had approached the Prof separately and asked him for an additional task, so he gave only them the extra credit. Other people in the course were never informed about this task, nor given any opportunity to get any such extra credits. After a lot of complaints by the students, he released the extra credit portion of the assignment for all the students and asked them to submit it 1 week after the finals. This is certainly not practical because students are busy with the final project work at that time, and everyone deletes all resources used for an assignment after the demo to avoid being charged by AWS.\n- For the project demo, there was no proper schedule followed, and he kept running late. Eventually, the last few teams for the day had to come back again the next day and present, having no regard for the students schedules.\nThe lectures too are dull, with Professor Sahu being a really poor lecturer, didn't attend a single lecture after one point of time. The guest lectures in the course are good.\nMoving away from the poorly managed course, which are due to flaws of the Professor, there is a lot to learn for people who have never used AWS services before. If you have experience working in AWS, then this would be useless, as it doesn't really teach Cloud Computing or Big Data concepts, rather just how to implement projects on AWS. So I would still recommend this to students who have never used AWS before, as it would definitely be useful in the future. The grading is also lenient, and it is easy to get an A. But don't expect any sort of transparency from the Professor, and be prepared to get really annoyed by his behavior.	3 Programming Assignments (35%) - 1 month for each assignment, takes quite some time if you are new to AWS, but not a lot otherwise\n2 Quizzes (25%) - Midterm and Final, open book open notes and allowed to Google, so don't need to explicitly prepare. But the time is really less and it's almost impossible to complete the paper in the scheduled time.\nProject (40%) - Done in a team of 4, workload depends on your team and project difficulty	1	0	10198	7022
83548	May 07, 2021	Positive things:\n- There is no doubt that Professor Edwards is very knowledgeable about his field and really cares about helping students who are reaching out to him and want to learn from him.\n- He holds 167468294 office hours a week, so take advantage of them. \n- He responds to emails in light speed.\nAreas of improvement:\n- If you're going to constantly run over the end of class time, you might as well ask the CS Department to make your class 2 hours long, so people have better expectations. Although that would require Edwards to deal with bureaucracy, which I'm pretty sure he won't bother with. It's much easier to fuck with student schedules for him, but it irritates the fuck out of every student.\n- Set a deadline for grading for your TAs, man. It's not that hard. \n- Please get TAs that actually know OCaml... \nNegative things inherent to the course:\n- Pick a good team or you'll get fucked. The project is monstrous and you can't do it alone. You need good teammates to decide on the project features together and implement them together.\n- I understand that Edwards tries to teach a lot, which is why we have individual assignments, midterm (normally, it was canceled this sem), final, a monster project, a ~250 page final paper on the project... but man, this is a lot of work. If you're not ready to put in the hours, don't take this class.\n- Docker and OCaml can be very frustrating, but they will uncover new areas of software development for you.\nAdvice:\n- Test everything. He won't accept anything that's not tested.\n- Start the project early.\n- Edwards is snarky, don't take it to heart.\n- If the assigned TA is useless, stop wasting your time meeting with them immediately.\n- Trust Edwards in that when he's giving project advice, he's thinking the best for you. He's also not out to get you in the exams.	a lot.	2	0	1637	3105
83549	May 07, 2021	If you have any prior programming experience at all skip this class. The entire course content could be learned in max one weekend. Stopped attending lecture after the 2nd or 3rd class - they're incredibly dry and focus on random minute details. Projects are generally easy and the quizzes are okay. As for the prof. - he seems nice enough in class but he's not really a nice person if you talk to him outside of lecture (YMMV). Overall I took this course to add Python to my skillset as a CS major but this class is really directed towards those with literally no programming experience at all. You also won't really learn much Python either as he spends a LOT of time going over pretty arbritrary aspects of Python (like 90% of the course is just formatting stuff).	Light. Quizzes aren't that easy toward the end of the semester though.	0	1	11572	6732
83550	May 07, 2021	Prof Stein is a great lecturer and I often enjoyed attending class/watching the recordings. The audio quality of the lectures became quite poor in the middle of the semester, which made it difficult to follow along to what he was saying. However, he did fix this after a few weeks when students brought this to his attention on piazza. \nThe TAs arenâ€™t the best... Iâ€™m convinced theyâ€™re either careless or donâ€™t fully understand the material. There were a lot of complaints about the ways TAs graded the homeworks/exams. \nThe exams are also quite difficult. The midterm and final both only had around 4-5 main questions, with each question either requiring a nontrivial proof, algorithm or both. If you donâ€™t study, I feel like itâ€™d probably be hard to get anything right, since there are no â€œeasy pointsâ€ or simple questions. You also really need to know your stuff and be prepared for everything, because anything from the semester could pop up on the exams. I spent almost half the time on the exams just digesting the questions before actually starting to write down anything. Not because the questions are poorly written, but because they require a lot of thought.\nThe class was curved very generously and I did learn a good amount. Overall I enjoyed the class and would recommend taking it with Prof Stein if youâ€™re looking to study algorithms more.	Medium	5	0	1342	4079
83555	May 09, 2021	I had no background in computer science whatsoever, and I found this course pretty difficult. I liked Professor Bauer, but I feel like because many students in the class were already familiar with a lot of the material, he moved too quickly. \nEach project took many hours, and I did not know how to do parts of them, despite attending every class. I also got points taken off for things that were not specified on the assignment descriptions but were apparently programming conventions(?) that I was not aware of. Just because your code does exactly what it's supposed to do does not mean you will get full credit.\nThe grade cut-offs were generous, though, and I ended up doing alright. I think you only needed like an 80% for a B+ and like 65 for a B. \nIt's not a bad class, but it wasn't as easy as I expected based on other reviews. So just be aware of that if that'll also be the first computer science class for you!	4 take-home projects (24%)\n4 group projects (20%)\n4 fairly short quizzes (26%)\nFinal exam (30%)	1	0	11572	6732
83559	May 09, 2021	I took both discrete math and computer science theory with him. He's the best. An awesome professor. I'm going to graduate this year and after experiencing a ton of CS professors, the previous reviewer has to be kidding me. I hope Columbia continues to bring him back. He's WAY better than the regular professor who teaches Discrete *coughs* Ansaf *coughs*. I've taken a class with Ansaf and it's truly my worst Columbia experience. The previous reviewer seems to have an issue because Robert mainly teaches at a small college (he sounds elitist to me). LOL great researchers does not mean great teachers. Robert is actually one of the best professors I've had at Columbia. He posts lectures beforehand to accommodate those in different timezones (since at that time in 2020 recordings took 24 hours to be posted instead of right away like now in 2021), and also to allow students have a head start on the HW since the summer schedule is condensed. He's available during office hours and the TAs were great. He even accommodated students during the exams for those in different time zones. His grading was generous, AND his teaching was great. He definitely does NOT just read off the notes. The notes are literally him minimizing the students' work: instead of having students take notes during class, he provides enough notes that lets you just focus on the lecture, and then use the notes to study for the exams or a guide for the hw. He also fixed the typos of the notes and re-uploaded them :/ Like really the previous reviewer just comes off as an elitist and everything he said was wrong. His lectures were sufficient enough that I did not have to resort to the textbook or any other online resource, which says a lot, and I am by no means a math genius. \nTake him.	Not heavy at all.	5	0	12959	234
83616	May 21, 2021	The course is insightful and covers good ground in terms of operating systems and how they work - This course is great for any CS student who isn't sure of what the OS does and how. The course gets into the weeds of the Linux kernel which depending on your point of view can be good or something that will haunt you for the rest of your days.\nThere are very good reasons why you should take this course but be sure of your reasons and make sure you have the time to dedicate to this course because it is time-consuming and mentally draining in some ways.\nThe rest of this review can kind of be summarized in -"Workload is hell be ready for the pain going in"\nPSA: If you're a masters student who already understands OS well enough and isn't from the software systems track and doesn't really need to enhance their C/linux kernel programming - DO NOT TAKE THIS COURSE (unless you like to suffer in which case nothing better really)\nHours upon hours are spent staring at the Linux kernel and going one level deeper till you've opened up 70 tabs and you've forgotten where you've come from who you are and why you even exist. \nThe first homework has really strict grading but is otherwise easy, aside from that though the rest of the Homeworks are a pain although they do broaden your horizons I would have been happier to not deal with them\nOffice Hours are a must if you hope to survive and are not already a kernel GOD and luckily we had a good bunch of TAs who understood the material and were mostly willing to point you in something of a direction(god help your souls if you gets a bad bunch of TAs which is unlikely).\nIf you get a bad team you will get torched and the 40+ hours that it usually takes per homework could easily turn into double that (I lucked into a good team but I saw the fate of others)\nThe finals and midterms due to the COVID semester were open book/note and coding based and quite related to the homework and not so much linked to the theoretical lecture content.\nI think it will go back to whatever it was earlier after COVID	I'm too lazy to look it up exactly but the other reviews have it right (It's hell any way you shape it)	1	0	45	2384
83618	May 22, 2021	I found this class incredibly elitist. Professor Cannon constantly made jokes/comments about how special/smarter-than-everyone-else Columbia students are. He also dropped his air of kindness and approachability to snap at students in lectures who asked something he didn't like. I'm guessing from the positive reviews that many students enjoy getting their egos stroked for attending a top school, but it just screams of insecurity. He even compared Columbia to San Jose State once just to flex how much "smarter" his students are... I have no idea why he felt the need to make fun of an institution with far fewer resources that makes higher education more successful. He's nice enough but seems caught up in prestige and unable to see the enormous privilege he himself holds.\nIn addition, the class was average at best at introducing java. Cannon assigned large portions of a textbook to explain many topics that could be distilled much more efficiently through slides/lectures. This class was a review for me, but I could see how difficult it must have been for someone new to the material to try to sort through the readings to find the important information. \nOverall, this class is straight forward and some of the TA's are incredible. It's not the worst thing you could take, but there is so much room for improvement.	Not bad. The late work policy- 120 hours of grace time to be used throughout the semester- is generous.	2	20	515	3807
83625	May 25, 2021	I took this course with Prof Dear but this review is more about the course than the professor.\nCOMS 4701 is very much "plug-and-chug" and leaves very little room for self-discovery. If this does not match your learning style, you will probably feel like you're wasting your time. Because there is so much hand-holding involved, it's easy to score well without doing all that much work. That said, I think this course is a great introductory course for non-majors or people just starting CS.\nMaterial--very broad overview of AI and high-level discussions of concepts. To get a sense of what the book is like, you can just check out the Wikipedia page on "Artificial Intelligence" or any of the topics on the syllabus. You will not find much more depth in 4701.\nQuizzes--the quizzes are mostly multiple choice and it's all open book. Extra study time generally is not rewarded as there's not that much depth involved. Also, expect some wrong multiple choice answers to be adversarial in nature so be prepared to second guess your response all the time.\nHomework--About 75-80% of the code is written all ready, and the remaining code is not difficult to implement. Most of it was translating pseudocode into python. The short answer responses were also not terribly interesting. "Is this implementation more efficient than the other", "Is this guaranteed to find a solution", etc.\nGrading--There is a curve, but it's probably not necessary since everyone is scoring in the 80s and 90s. The grading rubric is well defined and expectations for each assignment/quiz are clear. \nI would recommend this course to people without a background in CS or math. The professor is very knowledgeable and the TA's are helpful. Or, if you want an easy A, go for it.	Weekly quizzes\nWeekly homeworks\nFinal	2	8	13639	26
83635	May 28, 2021	This guy is a really bad teacher on two levels. First, his communication skills are lacking and it is unclear why he says the things that he does. And if you ask questions, he becomes irritated and implies that your question is stupid. Which leads me into point number two: I'm not sure why Professor Paine is teaching undergrads if his attitude is so horrible. You would think that he is God's gift to humanity, based upon his ego and dismissal of any semblance of intellectual curiosity. \nStay far away. I got an A in his class, but it was the hardest A of my life because I had to learn from someone who clearly did not want or care to teach well. You're better off taking the class with a real professor that you can actually get to know and get advice from. The only saving grace of this class is that you grow closer to your classmates, because it is a hell of a journey -- and not in the good way.	8/10 - Total quantity is manageable, but you're going to need to draw some excellent inferences in order to figure out what the hell is going on. And don't even think about asking questions, because if you can't figure it out on your own, you're heavily implied to be an idiot.	2	0	13610	NA
83637	May 28, 2021	Many of the reviews so far are unfair and lack perspective. \nIf you're into thinking, actually understanding why, and experiencing what it is like to work as a software engineer, Professor Ferguson's class is the one to take. \nYes, the instructions are vague. Do you think your manager at work will give you a step-by-step outline of what to do? If you're at an elite organization that solves tough problems in the world (honestly doesn't that sound nicer than being a coding monkey???) then your manager will say, here is the exciting problem - solve it. Your will need to then reach out to people at your organization, do research online, use your brain. Yes, if you're new at a project and your boss is good, you can reach out to your boss AFTER you exhausted the other avenues. Otherwise, why does your boss need you over someone else if they always need to hand-hold you ever step of the way? Professor Ferguson stands in the middle where he provides helper code, provides recorded "how-to" examples to get you started, and is always there to help, whenever you ask. I've actually never seen a professor make himself so available to his students. Your manager probably won't even give you as much time! \nIf you're working on something important and novel after school, often there is no one "right" answer. Prof. Ferguson involves some such questions on his homework. Yet, instead of being excited, I saw many students get flustered and not know what to do when they are asked to think for themselves. For example, he asked students to create an ER diagram on some data. Students asked him questions such as "is there a one-to-many relationship for x and y data?" That is a coding monkey question! Ferguson pushes students to up-level their thinking to that of a best-in-class engineer. For example, the best engineers out there say, "based on what we are trying to achieve and what data we have, here is my recommendation on how we organize it."\nThere are many other points on why Prof. Ferguson is one of the top professors I've ever taken, but I'll leave you with one more. Many professors tell you to memorize some rule, you memorize it, you answer on the test, and then you forget. Professor Ferguson asks you questions where you end up understanding the why and internalize the why. For example, everyone who has taken a databases class knows the different types of data storage, such as a star schema. However, do you actually know how to take some data that is not pristine, wrangle it into a star schema, and then query it? In what cases would you use a star schema over another layout? What data should actually be on what table? How do you take the data from Third Normal Form to a Star Schema? I bet if you didn't take Ferguson's class then you will need your hand held when you start working as you wouldn't actually know the answers.	As much as AP	3	0	6653	664
\.


--
-- Data for Name: teaches_course; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.teaches_course (prof_id, course_id) FROM stdin;
37	NA
39	663
40	NA
42	1622
44	22
45	2384
46	NA
47	664
4213	26
50	27
51	4902
178	NA
350	2401
37	1622
50	238
40	397
375	664
45	1622
37	2006
515	2906
39	2634
595	3807
47	397
595	1622
802	605
50	639
856	NA
515	1138
350	4758
1028	861
802	885
42	995
1261	1335
1342	NA
178	1138
1442	664
1472	2384
1474	1616
515	861
1586	NA
1588	2634
42	26
1621	234
1636	1921
1637	3105
515	397
856	2384
595	1967
1671	2008
1671	1622
1724	462
1586	1335
1749	3992
1749	861
1472	2401
1777	238
1724	2287
1812	2386
1442	1622
515	3807
47	2387
37	2403
1891	3807
350	2485
1957	4903
1972	2598
44	NA
1777	2746
2060	2767
1891	2598
2089	2830
1621	2867
1474	2869
2140	2943
2142	26
1621	2970
1972	885
1891	2906
50	4251
1891	3105
2427	NA
2480	397
802	1748
2508	1622
2550	234
2508	26
2762	3992
1342	4079
1671	2906
1671	3807
2911	4251
2941	2006
2427	4902
40	4901
1671	4758
2508	4
42	2906
3184	2598
51	1967
2508	2906
350	2384
1671	4
2508	2008
3332	4
1472	4758
3355	4899
1891	4900
2089	4902
3366	4907
375	4956
3409	4957
3409	3807
3429	4251
2089	3105
3448	2384
3451	5002
3453	4902
1957	5041
3509	4758
2427	4251
350	5167
4996	NA
2142	4903
1891	234
3409	2906
4205	5366
4212	5392
4227	4079
9496	5519
40	5544
4214	2384
1777	5150
4210	4902
4207	5638
4996	4901
10192	397
4221	4251
4206	2906
3409	1622
4057	4957
2941	4079
10197	5794
3184	5890
11132	5519
10722	2906
10729	5902
2762	5922
4221	6026
2480	2634
46	6038
10729	4903
515	6079
1957	6152
1637	4251
10725	2906
11575	397
4205	26
11574	6362
10725	1616
4210	NA
12599	6079
11575	NA
12619	234
11579	4902
2480	6676
12727	26
2941	234
9471	6706
4226	6719
515	6732
3429	5392
2941	462
4057	1921
3509	2384
1777	6779
12932	4079
12959	397
3409	4
13004	234
10198	NA
1724	NA
1028	6815
1028	NA
4226	26
11579	6810
13070	6811
13076	26
11580	6844
12599	6857
3509	6869
13116	1921
11572	4
2941	6886
2427	27
13070	4079
4057	1967
12959	234
12932	462
1957	27
47	6973
13004	4079
3409	2006
3409	7002
13292	664
515	7068
13076	397
515	7002
10198	7022
13348	7097
11579	7099
13298	397
6653	7102
1724	7145
2060	2634
2941	NA
13463	7201
11572	6732
13519	7246
13116	7247
4221	27
13496	1921
13549	663
515	NA
6653	6732
13463	7300
13004	2867
13610	4251
13639	26
13519	462
13703	4079
11572	7450
13639	397
350	7406
39	7468
11572	4903
13791	3105
13519	234
13801	2386
13810	4903
4057	7068
1891	4
13610	6732
6653	664
515	7329
515	1654
1957	NA
13639	3992
13070	NA
13953	663
515	995
42	NA
13968	7656
14008	7068
14026	2403
350	4902
14137	7765
47	NA
13639	2403
12932	234
6653	NA
13610	NA
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (email, name) FROM stdin;
\.


--
-- Name: course_in_dept course_in_dept_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_in_dept
    ADD CONSTRAINT course_in_dept_pkey PRIMARY KEY (dept_id, course_id);


--
-- Name: courses courses_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.courses
    ADD CONSTRAINT courses_pkey PRIMARY KEY (course_id);


--
-- Name: departments departments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.departments
    ADD CONSTRAINT departments_pkey PRIMARY KEY (dept_id);


--
-- Name: prof_teaches_in prof_teaches_in_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.prof_teaches_in
    ADD CONSTRAINT prof_teaches_in_pkey PRIMARY KEY (prof_id, dept_id);


--
-- Name: professors professors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.professors
    ADD CONSTRAINT professors_pkey PRIMARY KEY (prof_id);


--
-- Name: reacts reacts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reacts
    ADD CONSTRAINT reacts_pkey PRIMARY KEY (email, review_id);


--
-- Name: reviews reviews_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_pkey PRIMARY KEY (review_id);


--
-- Name: teaches_course teaches_course_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches_course
    ADD CONSTRAINT teaches_course_pkey PRIMARY KEY (prof_id, course_id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (email);


--
-- Name: course_in_dept course_in_dept_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_in_dept
    ADD CONSTRAINT course_in_dept_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(course_id);


--
-- Name: course_in_dept course_in_dept_dept_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course_in_dept
    ADD CONSTRAINT course_in_dept_dept_id_fkey FOREIGN KEY (dept_id) REFERENCES public.departments(dept_id);


--
-- Name: prof_teaches_in prof_teaches_in_dept_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.prof_teaches_in
    ADD CONSTRAINT prof_teaches_in_dept_id_fkey FOREIGN KEY (dept_id) REFERENCES public.departments(dept_id);


--
-- Name: prof_teaches_in prof_teaches_in_prof_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.prof_teaches_in
    ADD CONSTRAINT prof_teaches_in_prof_id_fkey FOREIGN KEY (prof_id) REFERENCES public.professors(prof_id);


--
-- Name: reacts reacts_email_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reacts
    ADD CONSTRAINT reacts_email_fkey FOREIGN KEY (email) REFERENCES public.users(email);


--
-- Name: reacts reacts_review_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reacts
    ADD CONSTRAINT reacts_review_id_fkey FOREIGN KEY (review_id) REFERENCES public.reviews(review_id);


--
-- Name: reviews reviews_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(course_id);


--
-- Name: reviews reviews_prof_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reviews
    ADD CONSTRAINT reviews_prof_id_fkey FOREIGN KEY (prof_id) REFERENCES public.professors(prof_id);


--
-- Name: teaches_course teaches_course_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches_course
    ADD CONSTRAINT teaches_course_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.courses(course_id);


--
-- Name: teaches_course teaches_course_prof_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.teaches_course
    ADD CONSTRAINT teaches_course_prof_id_fkey FOREIGN KEY (prof_id) REFERENCES public.professors(prof_id);


--
-- PostgreSQL database dump complete
--

